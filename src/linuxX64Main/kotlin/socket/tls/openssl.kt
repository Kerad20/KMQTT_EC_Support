@file:kotlinx.cinterop.InteropStubs
@file:Suppress("UNUSED_VARIABLE", "UNUSED_EXPRESSION")

package openssl

import cnames.structs.ASN1_ITEM_st
import cnames.structs.ASN1_TEMPLATE_st
import cnames.structs.ASN1_TLC_st
import cnames.structs.ASN1_VALUE_st
import cnames.structs.AUTHORITY_KEYID_st
import cnames.structs.DIST_POINT_st
import cnames.structs.DSA_SIG_st
import cnames.structs.ECDSA_SIG_st
import cnames.structs.ISSUING_DIST_POINT_st
import cnames.structs.NAME_CONSTRAINTS_st
import cnames.structs.PKCS12_MAC_DATA_st
import cnames.structs.PKCS12_SAFEBAG_st
import cnames.structs.PKCS12_st
import cnames.structs.X509_POLICY_CACHE_st
import cnames.structs.X509_POLICY_LEVEL_st
import cnames.structs.X509_POLICY_NODE_st
import cnames.structs.X509_POLICY_TREE_st
import cnames.structs.X509_VERIFY_PARAM_st
import cnames.structs.X509_crl_info_st
import cnames.structs.X509_crl_st
import cnames.structs.X509_extension_st
import cnames.structs.X509_name_entry_st
import cnames.structs.X509_name_st
import cnames.structs.X509_pubkey_st
import cnames.structs.X509_req_info_st
import cnames.structs.X509_req_st
import cnames.structs.X509_sig_st
import cnames.structs.asn1_object_st
import cnames.structs.asn1_pctx_st
import cnames.structs.asn1_sctx_st
import cnames.structs.async_job_st
import cnames.structs.async_wait_ctx_st
import cnames.structs.bignum_ctx
import cnames.structs.bignum_st
import cnames.structs.bio_addr_st
import cnames.structs.bio_addrinfo_st
import cnames.structs.bio_method_st
import cnames.structs.bio_st
import cnames.structs.bn_blinding_st
import cnames.structs.bn_gencb_st
import cnames.structs.bn_mont_ctx_st
import cnames.structs.bn_recp_ctx_st
import cnames.structs.comp_ctx_st
import cnames.structs.comp_method_st
import cnames.structs.conf_st
import cnames.structs.ct_policy_eval_ctx_st
import cnames.structs.ctlog_st
import cnames.structs.ctlog_store_st
import cnames.structs.dh_method
import cnames.structs.dh_st
import cnames.structs.dsa_method
import cnames.structs.dsa_st
import cnames.structs.ec_group_st
import cnames.structs.ec_key_method_st
import cnames.structs.ec_key_st
import cnames.structs.ec_method_st
import cnames.structs.ec_parameters_st
import cnames.structs.ec_point_st
import cnames.structs.ecpk_parameters_st
import cnames.structs.engine_st
import cnames.structs.evp_Encode_Ctx_st
import cnames.structs.evp_cipher_ctx_st
import cnames.structs.evp_cipher_st
import cnames.structs.evp_md_ctx_st
import cnames.structs.evp_md_st
import cnames.structs.evp_pkey_asn1_method_st
import cnames.structs.evp_pkey_ctx_st
import cnames.structs.evp_pkey_method_st
import cnames.structs.evp_pkey_st
import cnames.structs.hmac_ctx_st
import cnames.structs.lhash_node_st
import cnames.structs.lhash_st
import cnames.structs.lhash_st_SSL_SESSION
import cnames.structs.ocsp_req_ctx_st
import cnames.structs.ocsp_responder_id_st
import cnames.structs.ocsp_response_st
import cnames.structs.ossl_init_settings_st
import cnames.structs.ossl_store_info_st
import cnames.structs.ossl_store_search_st
import cnames.structs.pkcs12_bag_st
import cnames.structs.pkcs8_priv_key_info_st
import cnames.structs.rand_drbg_st
import cnames.structs.rand_meth_st
import cnames.structs.rsa_meth_st
import cnames.structs.rsa_st
import cnames.structs.sct_ctx_st
import cnames.structs.sct_st
import cnames.structs.ssl_cipher_st
import cnames.structs.ssl_comp_st
import cnames.structs.ssl_conf_ctx_st
import cnames.structs.ssl_ctx_st
import cnames.structs.ssl_dane_st
import cnames.structs.ssl_method_st
import cnames.structs.ssl_session_st
import cnames.structs.ssl_st
import cnames.structs.stack_st
import cnames.structs.stack_st_ASN1_GENERALSTRING
import cnames.structs.stack_st_ASN1_INTEGER
import cnames.structs.stack_st_ASN1_OBJECT
import cnames.structs.stack_st_ASN1_STRING_TABLE
import cnames.structs.stack_st_ASN1_TYPE
import cnames.structs.stack_st_ASN1_UTF8STRING
import cnames.structs.stack_st_BIO
import cnames.structs.stack_st_CTLOG
import cnames.structs.stack_st_OPENSSL_BLOCK
import cnames.structs.stack_st_OPENSSL_CSTRING
import cnames.structs.stack_st_OPENSSL_STRING
import cnames.structs.stack_st_PKCS12_SAFEBAG
import cnames.structs.stack_st_PKCS7
import cnames.structs.stack_st_PKCS7_RECIP_INFO
import cnames.structs.stack_st_PKCS7_SIGNER_INFO
import cnames.structs.stack_st_POLICYQUALINFO
import cnames.structs.stack_st_SCT
import cnames.structs.stack_st_SRTP_PROTECTION_PROFILE
import cnames.structs.stack_st_SSL_CIPHER
import cnames.structs.stack_st_SSL_COMP
import cnames.structs.stack_st_X509
import cnames.structs.stack_st_X509_ALGOR
import cnames.structs.stack_st_X509_ATTRIBUTE
import cnames.structs.stack_st_X509_CRL
import cnames.structs.stack_st_X509_EXTENSION
import cnames.structs.stack_st_X509_INFO
import cnames.structs.stack_st_X509_LOOKUP
import cnames.structs.stack_st_X509_NAME
import cnames.structs.stack_st_X509_NAME_ENTRY
import cnames.structs.stack_st_X509_OBJECT
import cnames.structs.stack_st_X509_POLICY_NODE
import cnames.structs.stack_st_X509_REVOKED
import cnames.structs.stack_st_X509_TRUST
import cnames.structs.stack_st_X509_VERIFY_PARAM
import cnames.structs.stack_st_void
import cnames.structs.tls_sigalgs_st
import cnames.structs.ui_method_st
import cnames.structs.ui_st
import cnames.structs.v3_ext_ctx
import cnames.structs.x509_attributes_st
import cnames.structs.x509_cert_aux_st
import cnames.structs.x509_cinf_st
import cnames.structs.x509_crl_method_st
import cnames.structs.x509_lookup_method_st
import cnames.structs.x509_lookup_st
import cnames.structs.x509_object_st
import cnames.structs.x509_revoked_st
import cnames.structs.x509_sig_info_st
import cnames.structs.x509_st
import cnames.structs.x509_store_ctx_st
import cnames.structs.x509_store_st
import kotlinx.cinterop.*
import kotlinx.cinterop.internal.CCall
import kotlinx.cinterop.internal.CStruct
import platform.posix.*

// NOTE THIS FILE IS AUTO-GENERATED

@CStruct("struct { int p0; int p1; void* p2; long p3; }")
class asn1_string_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(24, 8)

    var length: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var type: Int
        get() = memberAt<IntVar>(4).value
        set(value) {
            memberAt<IntVar>(4).value = value
        }

    var data: CPointer<UByteVar>?
        get() = memberAt<CPointerVar<UByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<UByteVar>>(8).value = value
        }

    var flags: Long
        get() = memberAt<LongVar>(16).value
        set(value) {
            memberAt<LongVar>(16).value = value
        }
}

@CStruct("struct { unsigned long p0; void* p1; unsigned long p2; unsigned long p3; }")
class buf_mem_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var length: size_t
        get() = memberAt<size_tVar>(0).value
        set(value) {
            memberAt<size_tVar>(0).value = value
        }

    var data: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(8).value = value
        }

    var max: size_t
        get() = memberAt<size_tVar>(16).value
        set(value) {
            memberAt<size_tVar>(16).value = value
        }

    var flags: ULong
        get() = memberAt<ULongVar>(24).value
        set(value) {
            memberAt<ULongVar>(24).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class X509_algor_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var algorithm: CPointer<ASN1_OBJECT>?
        get() = memberAt<CPointerVar<ASN1_OBJECT>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OBJECT>>(0).value = value
        }

    var parameter: CPointer<ASN1_TYPE>?
        get() = memberAt<CPointerVar<ASN1_TYPE>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_TYPE>>(8).value = value
        }
}

@CStruct("struct { int p0; union { void* p0; int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; } p1; }")
class asn1_type_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var type: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    val value: anonymousStruct1
        get() = memberAt(8)
}

@CStruct("union { void* p0; int p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; void* p8; void* p9; void* p10; void* p11; void* p12; void* p13; void* p14; void* p15; void* p16; void* p17; void* p18; void* p19; void* p20; }")
class anonymousStruct1(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var ptr: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(0).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(0).value = value
        }

    var boolean: ASN1_BOOLEAN
        get() = memberAt<ASN1_BOOLEANVar>(0).value
        set(value) {
            memberAt<ASN1_BOOLEANVar>(0).value = value
        }

    var asn1_string: CPointer<ASN1_STRING>?
        get() = memberAt<CPointerVar<ASN1_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_STRING>>(0).value = value
        }

    var `object`: CPointer<ASN1_OBJECT>?
        get() = memberAt<CPointerVar<ASN1_OBJECT>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OBJECT>>(0).value = value
        }

    var integer: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var enumerated: CPointer<ASN1_ENUMERATED>?
        get() = memberAt<CPointerVar<ASN1_ENUMERATED>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_ENUMERATED>>(0).value = value
        }

    var bit_string: CPointer<ASN1_BIT_STRING>?
        get() = memberAt<CPointerVar<ASN1_BIT_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_BIT_STRING>>(0).value = value
        }

    var octet_string: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value = value
        }

    var printablestring: CPointer<ASN1_PRINTABLESTRING>?
        get() = memberAt<CPointerVar<ASN1_PRINTABLESTRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_PRINTABLESTRING>>(0).value = value
        }

    var t61string: CPointer<ASN1_T61STRING>?
        get() = memberAt<CPointerVar<ASN1_T61STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_T61STRING>>(0).value = value
        }

    var ia5string: CPointer<ASN1_IA5STRING>?
        get() = memberAt<CPointerVar<ASN1_IA5STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_IA5STRING>>(0).value = value
        }

    var generalstring: CPointer<ASN1_GENERALSTRING>?
        get() = memberAt<CPointerVar<ASN1_GENERALSTRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_GENERALSTRING>>(0).value = value
        }

    var bmpstring: CPointer<ASN1_BMPSTRING>?
        get() = memberAt<CPointerVar<ASN1_BMPSTRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_BMPSTRING>>(0).value = value
        }

    var universalstring: CPointer<ASN1_UNIVERSALSTRING>?
        get() = memberAt<CPointerVar<ASN1_UNIVERSALSTRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_UNIVERSALSTRING>>(0).value = value
        }

    var utctime: CPointer<ASN1_UTCTIME>?
        get() = memberAt<CPointerVar<ASN1_UTCTIME>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_UTCTIME>>(0).value = value
        }

    var generalizedtime: CPointer<ASN1_GENERALIZEDTIME>?
        get() = memberAt<CPointerVar<ASN1_GENERALIZEDTIME>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_GENERALIZEDTIME>>(0).value = value
        }

    var visiblestring: CPointer<ASN1_VISIBLESTRING>?
        get() = memberAt<CPointerVar<ASN1_VISIBLESTRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_VISIBLESTRING>>(0).value = value
        }

    var utf8string: CPointer<ASN1_UTF8STRING>?
        get() = memberAt<CPointerVar<ASN1_UTF8STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_UTF8STRING>>(0).value = value
        }

    var set: CPointer<ASN1_STRING>?
        get() = memberAt<CPointerVar<ASN1_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_STRING>>(0).value = value
        }

    var sequence: CPointer<ASN1_STRING>?
        get() = memberAt<CPointerVar<ASN1_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_STRING>>(0).value = value
        }

    var asn1_value: CPointer<ASN1_VALUE>?
        get() = memberAt<CPointerVar<ASN1_VALUE>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_VALUE>>(0).value = value
        }
}

@CStruct("struct { void* p0; }")
class crypto_ex_data_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var sk: CPointer<stack_st_void>?
        get() = memberAt<CPointerVar<stack_st_void>>(0).value
        set(value) {
            memberAt<CPointerVar<stack_st_void>>(0).value = value
        }
}

@CStruct("struct { int p0; }")
class CRYPTO_dynlock(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(4, 4)

    var dummy: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }
}

@CStruct("struct { int p0; }")
class crypto_threadid_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(4, 4)

    var dummy: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }
}

@CStruct("union { void* p0; }")
class BIO_sock_info_u(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var addr: CPointer<BIO_ADDR>?
        get() = memberAt<CPointerVar<BIO_ADDR>>(0).value
        set(value) {
            memberAt<CPointerVar<BIO_ADDR>>(0).value = value
        }
}

@CStruct("struct { void* p0; long p1; int p2; }")
class ASN1_ENCODING_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(24, 8)

    var enc: CPointer<UByteVar>?
        get() = memberAt<CPointerVar<UByteVar>>(0).value
        set(value) {
            memberAt<CPointerVar<UByteVar>>(0).value = value
        }

    var len: Long
        get() = memberAt<LongVar>(8).value
        set(value) {
            memberAt<LongVar>(8).value = value
        }

    var modified: Int
        get() = memberAt<IntVar>(16).value
        set(value) {
            memberAt<IntVar>(16).value = value
        }
}

@CStruct("struct { int p0; long p1; long p2; unsigned long p3; unsigned long p4; }")
class asn1_string_table_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(40, 8)

    var nid: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var minsize: Long
        get() = memberAt<LongVar>(8).value
        set(value) {
            memberAt<LongVar>(8).value = value
        }

    var maxsize: Long
        get() = memberAt<LongVar>(16).value
        set(value) {
            memberAt<LongVar>(16).value = value
        }

    var mask: ULong
        get() = memberAt<ULongVar>(24).value
        set(value) {
            memberAt<ULongVar>(24).value = value
        }

    var flags: ULong
        get() = memberAt<ULongVar>(32).value
        set(value) {
            memberAt<ULongVar>(32).value = value
        }
}

@CStruct("struct { int p0; void* p1; void* p2; }")
class BIT_STRING_BITNAME_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(24, 8)

    var bitnum: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var lname: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(8).value = value
        }

    var sname: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(16).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(16).value = value
        }
}

@CStruct("struct { int p0; int p1; void* p2; void* p3; }")
class obj_name_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(24, 8)

    var type: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var alias: Int
        get() = memberAt<IntVar>(4).value
        set(value) {
            memberAt<IntVar>(4).value = value
        }

    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(8).value = value
        }

    var data: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(16).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(16).value = value
        }
}

@CStruct("struct { void* p0; void* p1; unsigned long p2; unsigned int p3; }")
class EVP_CTRL_TLS1_1_MULTIBLOCK_PARAM(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var out: CPointer<UByteVar>?
        get() = memberAt<CPointerVar<UByteVar>>(0).value
        set(value) {
            memberAt<CPointerVar<UByteVar>>(0).value = value
        }

    var inp: CPointer<UByteVar>?
        get() = memberAt<CPointerVar<UByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<UByteVar>>(8).value = value
        }

    var len: size_t
        get() = memberAt<size_tVar>(16).value
        set(value) {
            memberAt<size_tVar>(16).value = value
        }

    var interleave: UInt
        get() = memberAt<UIntVar>(24).value
        set(value) {
            memberAt<UIntVar>(24).value = value
        }
}

@CStruct("struct { void* p0; unsigned char p1[16]; }")
class evp_cipher_info_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(24, 8)

    var cipher: CPointer<EVP_CIPHER>?
        get() = memberAt<CPointerVar<EVP_CIPHER>>(0).value
        set(value) {
            memberAt<CPointerVar<EVP_CIPHER>>(0).value = value
        }

    val iv: CArrayPointer<UByteVar>
        get() = arrayMemberAt(8)
}

@CStruct("struct { int p0; void* p1; }")
class EC_builtin_curve(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var nid: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var comment: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(8).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class rsa_pss_params_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(40, 8)

    var hashAlgorithm: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(0).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(0).value = value
        }

    var maskGenAlgorithm: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(8).value = value
        }

    var saltLength: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(16).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(16).value = value
        }

    var trailerField: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(24).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(24).value = value
        }

    var maskHash: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(32).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(32).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; }")
class rsa_oaep_params_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var hashFunc: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(0).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(0).value = value
        }

    var maskGenFunc: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(8).value = value
        }

    var pSourceFunc: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(16).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(16).value = value
        }

    var maskHash: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(24).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(24).value = value
        }
}

@CStruct("struct { unsigned int p0; unsigned int p1; unsigned int p2; unsigned int p3; unsigned int p4; unsigned int p5; unsigned int p6; unsigned int p7[16]; unsigned int p8; }")
class SHAstate_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(96, 4)

    var h0: UInt
        get() = memberAt<UIntVar>(0).value
        set(value) {
            memberAt<UIntVar>(0).value = value
        }

    var h1: UInt
        get() = memberAt<UIntVar>(4).value
        set(value) {
            memberAt<UIntVar>(4).value = value
        }

    var h2: UInt
        get() = memberAt<UIntVar>(8).value
        set(value) {
            memberAt<UIntVar>(8).value = value
        }

    var h3: UInt
        get() = memberAt<UIntVar>(12).value
        set(value) {
            memberAt<UIntVar>(12).value = value
        }

    var h4: UInt
        get() = memberAt<UIntVar>(16).value
        set(value) {
            memberAt<UIntVar>(16).value = value
        }

    var Nl: UInt
        get() = memberAt<UIntVar>(20).value
        set(value) {
            memberAt<UIntVar>(20).value = value
        }

    var Nh: UInt
        get() = memberAt<UIntVar>(24).value
        set(value) {
            memberAt<UIntVar>(24).value = value
        }

    val data: CArrayPointer<UIntVar>
        get() = arrayMemberAt(28)

    var num: UInt
        get() = memberAt<UIntVar>(92).value
        set(value) {
            memberAt<UIntVar>(92).value = value
        }
}

@CStruct("struct { unsigned int p0[8]; unsigned int p1; unsigned int p2; unsigned int p3[16]; unsigned int p4; unsigned int p5; }")
class SHA256state_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(112, 4)

    val h: CArrayPointer<UIntVar>
        get() = arrayMemberAt(0)

    var Nl: UInt
        get() = memberAt<UIntVar>(32).value
        set(value) {
            memberAt<UIntVar>(32).value = value
        }

    var Nh: UInt
        get() = memberAt<UIntVar>(36).value
        set(value) {
            memberAt<UIntVar>(36).value = value
        }

    val data: CArrayPointer<UIntVar>
        get() = arrayMemberAt(40)

    var num: UInt
        get() = memberAt<UIntVar>(104).value
        set(value) {
            memberAt<UIntVar>(104).value = value
        }

    var md_len: UInt
        get() = memberAt<UIntVar>(108).value
        set(value) {
            memberAt<UIntVar>(108).value = value
        }
}

@CStruct("struct { unsigned long long p0[8]; unsigned long long p1; unsigned long long p2; union { unsigned long long p0[16]; unsigned char p1[128]; } p3; unsigned int p4; unsigned int p5; }")
class SHA512state_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(216, 8)

    val h: CArrayPointer<ULongVar>
        get() = arrayMemberAt(0)

    var Nl: ULong
        get() = memberAt<ULongVar>(64).value
        set(value) {
            memberAt<ULongVar>(64).value = value
        }

    var Nh: ULong
        get() = memberAt<ULongVar>(72).value
        set(value) {
            memberAt<ULongVar>(72).value = value
        }

    val u: anonymousStruct2
        get() = memberAt(80)

    var num: UInt
        get() = memberAt<UIntVar>(208).value
        set(value) {
            memberAt<UIntVar>(208).value = value
        }

    var md_len: UInt
        get() = memberAt<UIntVar>(212).value
        set(value) {
            memberAt<UIntVar>(212).value = value
        }
}

@CStruct("union { unsigned long long p0[16]; unsigned char p1[128]; }")
class anonymousStruct2(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(128, 8)

    val d: CArrayPointer<ULongVar>
        get() = arrayMemberAt(0)

    val p: CArrayPointer<UByteVar>
        get() = arrayMemberAt(0)
}

@CStruct("struct { void* p0; void* p1; }")
class X509_val_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var notBefore: CPointer<ASN1_TIME>?
        get() = memberAt<CPointerVar<ASN1_TIME>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_TIME>>(0).value = value
        }

    var notAfter: CPointer<ASN1_TIME>?
        get() = memberAt<CPointerVar<ASN1_TIME>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_TIME>>(8).value = value
        }
}

@CStruct("struct { int p0; int p1; void* p2; void* p3; int p4; void* p5; }")
class x509_trust_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(40, 8)

    var trust: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var flags: Int
        get() = memberAt<IntVar>(4).value
        set(value) {
            memberAt<IntVar>(4).value = value
        }

    var check_trust: CPointer<CFunction<(CPointer<x509_trust_st>?, CPointer<X509>?, Int) -> Int>>?
        get() = memberAt<CPointerVar<CFunction<(CPointer<x509_trust_st>?, CPointer<X509>?, Int) -> Int>>>(8).value
        set(value) {
            memberAt<CPointerVar<CFunction<(CPointer<x509_trust_st>?, CPointer<X509>?, Int) -> Int>>>(8).value = value
        }

    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(16).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(16).value = value
        }

    var arg1: Int
        get() = memberAt<IntVar>(24).value
        set(value) {
            memberAt<IntVar>(24).value = value
        }

    var arg2: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(32).value
        set(value) {
            memberAt<COpaquePointerVar>(32).value = value
        }
}

@CStruct("struct { int p0; void* p1; void* p2; void* p3; int p4; void* p5; int p6; struct { void* p0; unsigned char p1[16]; } p7; }")
class private_key_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(80, 8)

    var version: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }

    var enc_algor: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(8).value = value
        }

    var enc_pkey: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(16).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(16).value = value
        }

    var dec_pkey: CPointer<EVP_PKEY>?
        get() = memberAt<CPointerVar<EVP_PKEY>>(24).value
        set(value) {
            memberAt<CPointerVar<EVP_PKEY>>(24).value = value
        }

    var key_length: Int
        get() = memberAt<IntVar>(32).value
        set(value) {
            memberAt<IntVar>(32).value = value
        }

    var key_data: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(40).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(40).value = value
        }

    var key_free: Int
        get() = memberAt<IntVar>(48).value
        set(value) {
            memberAt<IntVar>(48).value = value
        }

    val cipher: EVP_CIPHER_INFO
        get() = memberAt(56)
}

@CStruct("struct { void* p0; void* p1; void* p2; struct { void* p0; unsigned char p1[16]; } p3; int p4; void* p5; }")
class X509_info_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(64, 8)

    var x509: CPointer<X509>?
        get() = memberAt<CPointerVar<X509>>(0).value
        set(value) {
            memberAt<CPointerVar<X509>>(0).value = value
        }

    var crl: CPointer<X509_CRL>?
        get() = memberAt<CPointerVar<X509_CRL>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_CRL>>(8).value = value
        }

    var x_pkey: CPointer<X509_PKEY>?
        get() = memberAt<CPointerVar<X509_PKEY>>(16).value
        set(value) {
            memberAt<CPointerVar<X509_PKEY>>(16).value = value
        }

    val enc_cipher: EVP_CIPHER_INFO
        get() = memberAt(24)

    var enc_len: Int
        get() = memberAt<IntVar>(48).value
        set(value) {
            memberAt<IntVar>(48).value = value
        }

    var enc_data: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(56).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(56).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class Netscape_spkac_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var pubkey: CPointer<X509_PUBKEY>?
        get() = memberAt<CPointerVar<X509_PUBKEY>>(0).value
        set(value) {
            memberAt<CPointerVar<X509_PUBKEY>>(0).value = value
        }

    var challenge: CPointer<ASN1_IA5STRING>?
        get() = memberAt<CPointerVar<ASN1_IA5STRING>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_IA5STRING>>(8).value = value
        }
}

@CStruct("struct { void* p0; struct { void* p0; void* p1; } p1; void* p2; }")
class Netscape_spki_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var spkac: CPointer<NETSCAPE_SPKAC>?
        get() = memberAt<CPointerVar<NETSCAPE_SPKAC>>(0).value
        set(value) {
            memberAt<CPointerVar<NETSCAPE_SPKAC>>(0).value = value
        }

    val sig_algor: X509_ALGOR
        get() = memberAt(8)

    var signature: CPointer<ASN1_BIT_STRING>?
        get() = memberAt<CPointerVar<ASN1_BIT_STRING>>(24).value
        set(value) {
            memberAt<CPointerVar<ASN1_BIT_STRING>>(24).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class Netscape_certificate_sequence(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var type: CPointer<ASN1_OBJECT>?
        get() = memberAt<CPointerVar<ASN1_OBJECT>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OBJECT>>(0).value = value
        }

    var certs: CPointer<stack_st_X509>?
        get() = memberAt<CPointerVar<stack_st_X509>>(8).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509>>(8).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class PBEPARAM_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var salt: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value = value
        }

    var iter: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(8).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class PBE2PARAM_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var keyfunc: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(0).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(0).value = value
        }

    var encryption: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(8).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; }")
class PBKDF2PARAM_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var salt: CPointer<ASN1_TYPE>?
        get() = memberAt<CPointerVar<ASN1_TYPE>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_TYPE>>(0).value = value
        }

    var iter: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(8).value = value
        }

    var keylength: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(16).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(16).value = value
        }

    var prf: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(24).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(24).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class SCRYPT_PARAMS_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(40, 8)

    var salt: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value = value
        }

    var costParameter: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(8).value = value
        }

    var blockSize: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(16).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(16).value = value
        }

    var parallelizationParameter: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(24).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(24).value = value
        }

    var keyLength: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(32).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(32).value = value
        }
}

@CStruct("struct { union { void* p0; unsigned long p1; int p2; } p0; }")
class lhash_st_OPENSSL_STRING(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    val dummy: lh_OPENSSL_STRING_dummy
        get() = memberAt(0)
}

@CStruct("union { void* p0; unsigned long p1; int p2; }")
class lh_OPENSSL_STRING_dummy(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var d1: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(0).value
        set(value) {
            memberAt<COpaquePointerVar>(0).value = value
        }

    var d2: ULong
        get() = memberAt<ULongVar>(0).value
        set(value) {
            memberAt<ULongVar>(0).value = value
        }

    var d3: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }
}

@CStruct("struct { union { void* p0; unsigned long p1; int p2; } p0; }")
class lhash_st_OPENSSL_CSTRING(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    val dummy: lh_OPENSSL_CSTRING_dummy
        get() = memberAt(0)
}

@CStruct("union { void* p0; unsigned long p1; int p2; }")
class lh_OPENSSL_CSTRING_dummy(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var d1: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(0).value
        set(value) {
            memberAt<COpaquePointerVar>(0).value = value
        }

    var d2: ULong
        get() = memberAt<ULongVar>(0).value
        set(value) {
            memberAt<ULongVar>(0).value = value
        }

    var d3: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class pkcs7_issuer_and_serial_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var issuer: CPointer<X509_NAME>?
        get() = memberAt<CPointerVar<X509_NAME>>(0).value
        set(value) {
            memberAt<CPointerVar<X509_NAME>>(0).value = value
        }

    var serial: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(8).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(8).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class pkcs7_signer_info_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(64, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var issuer_and_serial: CPointer<PKCS7_ISSUER_AND_SERIAL>?
        get() = memberAt<CPointerVar<PKCS7_ISSUER_AND_SERIAL>>(8).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ISSUER_AND_SERIAL>>(8).value = value
        }

    var digest_alg: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(16).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(16).value = value
        }

    var auth_attr: CPointer<stack_st_X509_ATTRIBUTE>?
        get() = memberAt<CPointerVar<stack_st_X509_ATTRIBUTE>>(24).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509_ATTRIBUTE>>(24).value = value
        }

    var digest_enc_alg: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(32).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(32).value = value
        }

    var enc_digest: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(40).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(40).value = value
        }

    var unauth_attr: CPointer<stack_st_X509_ATTRIBUTE>?
        get() = memberAt<CPointerVar<stack_st_X509_ATTRIBUTE>>(48).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509_ATTRIBUTE>>(48).value = value
        }

    var pkey: CPointer<EVP_PKEY>?
        get() = memberAt<CPointerVar<EVP_PKEY>>(56).value
        set(value) {
            memberAt<CPointerVar<EVP_PKEY>>(56).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; }")
class pkcs7_recip_info_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(40, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var issuer_and_serial: CPointer<PKCS7_ISSUER_AND_SERIAL>?
        get() = memberAt<CPointerVar<PKCS7_ISSUER_AND_SERIAL>>(8).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ISSUER_AND_SERIAL>>(8).value = value
        }

    var key_enc_algor: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(16).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(16).value = value
        }

    var enc_key: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(24).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(24).value = value
        }

    var cert: CPointer<X509>?
        get() = memberAt<CPointerVar<X509>>(32).value
        set(value) {
            memberAt<CPointerVar<X509>>(32).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; }")
class pkcs7_signed_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(48, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var md_algs: CPointer<stack_st_X509_ALGOR>?
        get() = memberAt<CPointerVar<stack_st_X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509_ALGOR>>(8).value = value
        }

    var cert: CPointer<stack_st_X509>?
        get() = memberAt<CPointerVar<stack_st_X509>>(16).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509>>(16).value = value
        }

    var crl: CPointer<stack_st_X509_CRL>?
        get() = memberAt<CPointerVar<stack_st_X509_CRL>>(24).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509_CRL>>(24).value = value
        }

    var signer_info: CPointer<stack_st_PKCS7_SIGNER_INFO>?
        get() = memberAt<CPointerVar<stack_st_PKCS7_SIGNER_INFO>>(32).value
        set(value) {
            memberAt<CPointerVar<stack_st_PKCS7_SIGNER_INFO>>(32).value = value
        }

    var contents: CPointer<pkcs7_st>?
        get() = memberAt<CPointerVar<pkcs7_st>>(40).value
        set(value) {
            memberAt<CPointerVar<pkcs7_st>>(40).value = value
        }
}

@CStruct("struct { void* p0; long p1; int p2; int p3; void* p4; union { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; } p5; }")
class pkcs7_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(40, 8)

    var asn1: CPointer<UByteVar>?
        get() = memberAt<CPointerVar<UByteVar>>(0).value
        set(value) {
            memberAt<CPointerVar<UByteVar>>(0).value = value
        }

    var length: Long
        get() = memberAt<LongVar>(8).value
        set(value) {
            memberAt<LongVar>(8).value = value
        }

    var state: Int
        get() = memberAt<IntVar>(16).value
        set(value) {
            memberAt<IntVar>(16).value = value
        }

    var detached: Int
        get() = memberAt<IntVar>(20).value
        set(value) {
            memberAt<IntVar>(20).value = value
        }

    var type: CPointer<ASN1_OBJECT>?
        get() = memberAt<CPointerVar<ASN1_OBJECT>>(24).value
        set(value) {
            memberAt<CPointerVar<ASN1_OBJECT>>(24).value = value
        }

    val d: anonymousStruct3
        get() = memberAt(32)
}

@CStruct("union { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; void* p7; }")
class anonymousStruct3(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var ptr: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(0).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(0).value = value
        }

    var data: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(0).value = value
        }

    var sign: CPointer<PKCS7_SIGNED>?
        get() = memberAt<CPointerVar<PKCS7_SIGNED>>(0).value
        set(value) {
            memberAt<CPointerVar<PKCS7_SIGNED>>(0).value = value
        }

    var enveloped: CPointer<PKCS7_ENVELOPE>?
        get() = memberAt<CPointerVar<PKCS7_ENVELOPE>>(0).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ENVELOPE>>(0).value = value
        }

    var signed_and_enveloped: CPointer<PKCS7_SIGN_ENVELOPE>?
        get() = memberAt<CPointerVar<PKCS7_SIGN_ENVELOPE>>(0).value
        set(value) {
            memberAt<CPointerVar<PKCS7_SIGN_ENVELOPE>>(0).value = value
        }

    var digest: CPointer<PKCS7_DIGEST>?
        get() = memberAt<CPointerVar<PKCS7_DIGEST>>(0).value
        set(value) {
            memberAt<CPointerVar<PKCS7_DIGEST>>(0).value = value
        }

    var encrypted: CPointer<PKCS7_ENCRYPT>?
        get() = memberAt<CPointerVar<PKCS7_ENCRYPT>>(0).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ENCRYPT>>(0).value = value
        }

    var other: CPointer<ASN1_TYPE>?
        get() = memberAt<CPointerVar<ASN1_TYPE>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_TYPE>>(0).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; }")
class pkcs7_enveloped_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(24, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var recipientinfo: CPointer<stack_st_PKCS7_RECIP_INFO>?
        get() = memberAt<CPointerVar<stack_st_PKCS7_RECIP_INFO>>(8).value
        set(value) {
            memberAt<CPointerVar<stack_st_PKCS7_RECIP_INFO>>(8).value = value
        }

    var enc_data: CPointer<PKCS7_ENC_CONTENT>?
        get() = memberAt<CPointerVar<PKCS7_ENC_CONTENT>>(16).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ENC_CONTENT>>(16).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; }")
class pkcs7_enc_content_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var content_type: CPointer<ASN1_OBJECT>?
        get() = memberAt<CPointerVar<ASN1_OBJECT>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_OBJECT>>(0).value = value
        }

    var algorithm: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(8).value = value
        }

    var enc_data: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(16).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(16).value = value
        }

    var cipher: CPointer<EVP_CIPHER>?
        get() = memberAt<CPointerVar<EVP_CIPHER>>(24).value
        set(value) {
            memberAt<CPointerVar<EVP_CIPHER>>(24).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; void* p4; void* p5; void* p6; }")
class pkcs7_signedandenveloped_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(56, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var md_algs: CPointer<stack_st_X509_ALGOR>?
        get() = memberAt<CPointerVar<stack_st_X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509_ALGOR>>(8).value = value
        }

    var cert: CPointer<stack_st_X509>?
        get() = memberAt<CPointerVar<stack_st_X509>>(16).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509>>(16).value = value
        }

    var crl: CPointer<stack_st_X509_CRL>?
        get() = memberAt<CPointerVar<stack_st_X509_CRL>>(24).value
        set(value) {
            memberAt<CPointerVar<stack_st_X509_CRL>>(24).value = value
        }

    var signer_info: CPointer<stack_st_PKCS7_SIGNER_INFO>?
        get() = memberAt<CPointerVar<stack_st_PKCS7_SIGNER_INFO>>(32).value
        set(value) {
            memberAt<CPointerVar<stack_st_PKCS7_SIGNER_INFO>>(32).value = value
        }

    var enc_data: CPointer<PKCS7_ENC_CONTENT>?
        get() = memberAt<CPointerVar<PKCS7_ENC_CONTENT>>(40).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ENC_CONTENT>>(40).value = value
        }

    var recipientinfo: CPointer<stack_st_PKCS7_RECIP_INFO>?
        get() = memberAt<CPointerVar<stack_st_PKCS7_RECIP_INFO>>(48).value
        set(value) {
            memberAt<CPointerVar<stack_st_PKCS7_RECIP_INFO>>(48).value = value
        }
}

@CStruct("struct { void* p0; void* p1; void* p2; void* p3; }")
class pkcs7_digest_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(32, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var md: CPointer<X509_ALGOR>?
        get() = memberAt<CPointerVar<X509_ALGOR>>(8).value
        set(value) {
            memberAt<CPointerVar<X509_ALGOR>>(8).value = value
        }

    var contents: CPointer<pkcs7_st>?
        get() = memberAt<CPointerVar<pkcs7_st>>(16).value
        set(value) {
            memberAt<CPointerVar<pkcs7_st>>(16).value = value
        }

    var digest: CPointer<ASN1_OCTET_STRING>?
        get() = memberAt<CPointerVar<ASN1_OCTET_STRING>>(24).value
        set(value) {
            memberAt<CPointerVar<ASN1_OCTET_STRING>>(24).value = value
        }
}

@CStruct("struct { void* p0; void* p1; }")
class pkcs7_encrypted_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var version: CPointer<ASN1_INTEGER>?
        get() = memberAt<CPointerVar<ASN1_INTEGER>>(0).value
        set(value) {
            memberAt<CPointerVar<ASN1_INTEGER>>(0).value = value
        }

    var enc_data: CPointer<PKCS7_ENC_CONTENT>?
        get() = memberAt<CPointerVar<PKCS7_ENC_CONTENT>>(8).value
        set(value) {
            memberAt<CPointerVar<PKCS7_ENC_CONTENT>>(8).value = value
        }
}

@CStruct("struct { unsigned short p0; void* p1; }")
class tls_session_ticket_ext_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var length: UShort
        get() = memberAt<UShortVar>(0).value
        set(value) {
            memberAt<UShortVar>(0).value = value
        }

    var data: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(8).value
        set(value) {
            memberAt<COpaquePointerVar>(8).value = value
        }
}

@CStruct("struct { void* p0; unsigned long p1; }")
class srtp_protection_profile_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var name: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(0).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(0).value = value
        }

    var id: ULong
        get() = memberAt<ULongVar>(8).value
        set(value) {
            memberAt<ULongVar>(8).value = value
        }
}

@CStruct("struct { int p0[16]; unsigned long p1[16]; void* p2[16]; int p3[16]; void* p4[16]; int p5[16]; int p6; int p7; }")
class err_state_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(584, 8)

    val err_flags: CArrayPointer<IntVar>
        get() = arrayMemberAt(0)

    val err_buffer: CArrayPointer<ULongVar>
        get() = arrayMemberAt(64)

    val err_data: CArrayPointer<CPointerVar<ByteVar>>
        get() = arrayMemberAt(192)

    val err_data_flags: CArrayPointer<IntVar>
        get() = arrayMemberAt(320)

    val err_file: CArrayPointer<CPointerVar<ByteVar>>
        get() = arrayMemberAt(384)

    val err_line: CArrayPointer<IntVar>
        get() = arrayMemberAt(512)

    var top: Int
        get() = memberAt<IntVar>(576).value
        set(value) {
            memberAt<IntVar>(576).value = value
        }

    var bottom: Int
        get() = memberAt<IntVar>(580).value
        set(value) {
            memberAt<IntVar>(580).value = value
        }
}

@CStruct("struct { unsigned long p0; void* p1; }")
class ERR_string_data_st(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(16, 8)

    var error: ULong
        get() = memberAt<ULongVar>(0).value
        set(value) {
            memberAt<ULongVar>(0).value = value
        }

    var string: CPointer<ByteVar>?
        get() = memberAt<CPointerVar<ByteVar>>(8).value
        set(value) {
            memberAt<CPointerVar<ByteVar>>(8).value = value
        }
}

@CStruct("struct { union { void* p0; unsigned long p1; int p2; } p0; }")
class lhash_st_ERR_STRING_DATA(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    val dummy: lh_ERR_STRING_DATA_dummy
        get() = memberAt(0)
}

@CStruct("union { void* p0; unsigned long p1; int p2; }")
class lh_ERR_STRING_DATA_dummy(rawPtr: NativePtr) : CStructVar(rawPtr) {

    companion object : Type(8, 8)

    var d1: COpaquePointer?
        get() = memberAt<COpaquePointerVar>(0).value
        set(value) {
            memberAt<COpaquePointerVar>(0).value = value
        }

    var d2: ULong
        get() = memberAt<ULongVar>(0).value
        set(value) {
            memberAt<ULongVar>(0).value = value
        }

    var d3: Int
        get() = memberAt<IntVar>(0).value
        set(value) {
            memberAt<IntVar>(0).value = value
        }
}

enum class BIO_hostserv_priorities(override val value: UInt) : CEnum {
    BIO_PARSE_PRIO_HOST(0u),
    BIO_PARSE_PRIO_SERV(1u),
    ;

    companion object {

        fun byValue(value: UInt) = BIO_hostserv_priorities.values().find { it.value == value }!!
    }

    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())

        var value: BIO_hostserv_priorities
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) {
                this.reinterpret<UIntVar>().value = value.value
            }
    }
}

enum class BIO_lookup_type(override val value: UInt) : CEnum {
    BIO_LOOKUP_CLIENT(0u),
    BIO_LOOKUP_SERVER(1u),
    ;

    companion object {

        fun byValue(value: UInt) = BIO_lookup_type.values().find { it.value == value }!!
    }

    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())

        var value: BIO_lookup_type
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) {
                this.reinterpret<UIntVar>().value = value.value
            }
    }
}

enum class BIO_sock_info_type(override val value: UInt) : CEnum {
    BIO_SOCK_INFO_ADDRESS(0u),
    ;

    companion object {

        fun byValue(value: UInt) = BIO_sock_info_type.values().find { it.value == value }!!
    }

    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())

        var value: BIO_sock_info_type
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) {
                this.reinterpret<UIntVar>().value = value.value
            }
    }
}

enum class sct_source_t(override val value: UInt) : CEnum {
    SCT_SOURCE_UNKNOWN(0u),
    SCT_SOURCE_TLS_EXTENSION(1u),
    SCT_SOURCE_X509V3_EXTENSION(2u),
    SCT_SOURCE_OCSP_STAPLED_RESPONSE(3u),
    ;

    companion object {

        fun byValue(value: UInt) = sct_source_t.values().find { it.value == value }!!
    }

    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())

        var value: sct_source_t
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) {
                this.reinterpret<UIntVar>().value = value.value
            }
    }
}

enum class sct_validation_status_t(override val value: UInt) : CEnum {
    SCT_VALIDATION_STATUS_NOT_SET(0u),
    SCT_VALIDATION_STATUS_UNKNOWN_LOG(1u),
    SCT_VALIDATION_STATUS_VALID(2u),
    SCT_VALIDATION_STATUS_INVALID(3u),
    SCT_VALIDATION_STATUS_UNVERIFIED(4u),
    SCT_VALIDATION_STATUS_UNKNOWN_VERSION(5u),
    ;

    companion object {

        fun byValue(value: UInt) = sct_validation_status_t.values().find { it.value == value }!!
    }

    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())

        var value: sct_validation_status_t
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) {
                this.reinterpret<UIntVar>().value = value.value
            }
    }
}

enum class OSSL_HANDSHAKE_STATE(override val value: UInt) : CEnum {
    TLS_ST_BEFORE(0u),
    TLS_ST_OK(1u),
    DTLS_ST_CR_HELLO_VERIFY_REQUEST(2u),
    TLS_ST_CR_SRVR_HELLO(3u),
    TLS_ST_CR_CERT(4u),
    TLS_ST_CR_CERT_STATUS(5u),
    TLS_ST_CR_KEY_EXCH(6u),
    TLS_ST_CR_CERT_REQ(7u),
    TLS_ST_CR_SRVR_DONE(8u),
    TLS_ST_CR_SESSION_TICKET(9u),
    TLS_ST_CR_CHANGE(10u),
    TLS_ST_CR_FINISHED(11u),
    TLS_ST_CW_CLNT_HELLO(12u),
    TLS_ST_CW_CERT(13u),
    TLS_ST_CW_KEY_EXCH(14u),
    TLS_ST_CW_CERT_VRFY(15u),
    TLS_ST_CW_CHANGE(16u),
    TLS_ST_CW_NEXT_PROTO(17u),
    TLS_ST_CW_FINISHED(18u),
    TLS_ST_SW_HELLO_REQ(19u),
    TLS_ST_SR_CLNT_HELLO(20u),
    DTLS_ST_SW_HELLO_VERIFY_REQUEST(21u),
    TLS_ST_SW_SRVR_HELLO(22u),
    TLS_ST_SW_CERT(23u),
    TLS_ST_SW_KEY_EXCH(24u),
    TLS_ST_SW_CERT_REQ(25u),
    TLS_ST_SW_SRVR_DONE(26u),
    TLS_ST_SR_CERT(27u),
    TLS_ST_SR_KEY_EXCH(28u),
    TLS_ST_SR_CERT_VRFY(29u),
    TLS_ST_SR_NEXT_PROTO(30u),
    TLS_ST_SR_CHANGE(31u),
    TLS_ST_SR_FINISHED(32u),
    TLS_ST_SW_SESSION_TICKET(33u),
    TLS_ST_SW_CERT_STATUS(34u),
    TLS_ST_SW_CHANGE(35u),
    TLS_ST_SW_FINISHED(36u),
    TLS_ST_SW_ENCRYPTED_EXTENSIONS(37u),
    TLS_ST_CR_ENCRYPTED_EXTENSIONS(38u),
    TLS_ST_CR_CERT_VRFY(39u),
    TLS_ST_SW_CERT_VRFY(40u),
    TLS_ST_CR_HELLO_REQ(41u),
    TLS_ST_SW_KEY_UPDATE(42u),
    TLS_ST_CW_KEY_UPDATE(43u),
    TLS_ST_SR_KEY_UPDATE(44u),
    TLS_ST_CR_KEY_UPDATE(45u),
    TLS_ST_EARLY_DATA(46u),
    TLS_ST_PENDING_EARLY_DATA_END(47u),
    TLS_ST_CW_END_OF_EARLY_DATA(48u),
    TLS_ST_SR_END_OF_EARLY_DATA(49u),
    ;

    companion object {

        fun byValue(value: UInt) = OSSL_HANDSHAKE_STATE.values().find { it.value == value }!!
    }

    class Var(rawPtr: NativePtr) : CEnumVar(rawPtr) {
        companion object : Type(UIntVar.size.toInt())

        var value: OSSL_HANDSHAKE_STATE
            get() = byValue(this.reinterpret<UIntVar>().value)
            set(value) {
                this.reinterpret<UIntVar>().value = value.value
            }
    }
}

@CCall("knifunptr_openssl0_OPENSSL_sk_num")
external fun OPENSSL_sk_num(arg0: CValuesRef<OPENSSL_STACK>?): Int

@CCall("knifunptr_openssl1_OPENSSL_sk_value")
external fun OPENSSL_sk_value(arg0: CValuesRef<OPENSSL_STACK>?, arg1: Int): COpaquePointer?

@CCall("knifunptr_openssl2_OPENSSL_sk_set")
external fun OPENSSL_sk_set(st: CValuesRef<OPENSSL_STACK>?, i: Int, data: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl3_OPENSSL_sk_new")
external fun OPENSSL_sk_new(cmp: OPENSSL_sk_compfunc?): CPointer<OPENSSL_STACK>?

@CCall("knifunptr_openssl4_OPENSSL_sk_new_null")
external fun OPENSSL_sk_new_null(): CPointer<OPENSSL_STACK>?

@CCall("knifunptr_openssl5_OPENSSL_sk_new_reserve")
external fun OPENSSL_sk_new_reserve(c: OPENSSL_sk_compfunc?, n: Int): CPointer<OPENSSL_STACK>?

@CCall("knifunptr_openssl6_OPENSSL_sk_reserve")
external fun OPENSSL_sk_reserve(st: CValuesRef<OPENSSL_STACK>?, n: Int): Int

@CCall("knifunptr_openssl7_OPENSSL_sk_free")
external fun OPENSSL_sk_free(arg0: CValuesRef<OPENSSL_STACK>?): Unit

@CCall("knifunptr_openssl8_OPENSSL_sk_pop_free")
external fun OPENSSL_sk_pop_free(
    st: CValuesRef<OPENSSL_STACK>?,
    func: CPointer<CFunction<(COpaquePointer?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl9_OPENSSL_sk_deep_copy")
external fun OPENSSL_sk_deep_copy(
    arg0: CValuesRef<OPENSSL_STACK>?,
    c: OPENSSL_sk_copyfunc?,
    f: OPENSSL_sk_freefunc?
): CPointer<OPENSSL_STACK>?

@CCall("knifunptr_openssl10_OPENSSL_sk_insert")
external fun OPENSSL_sk_insert(sk: CValuesRef<OPENSSL_STACK>?, data: CValuesRef<*>?, where: Int): Int

@CCall("knifunptr_openssl11_OPENSSL_sk_delete")
external fun OPENSSL_sk_delete(st: CValuesRef<OPENSSL_STACK>?, loc: Int): COpaquePointer?

@CCall("knifunptr_openssl12_OPENSSL_sk_delete_ptr")
external fun OPENSSL_sk_delete_ptr(st: CValuesRef<OPENSSL_STACK>?, p: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl13_OPENSSL_sk_find")
external fun OPENSSL_sk_find(st: CValuesRef<OPENSSL_STACK>?, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl14_OPENSSL_sk_find_ex")
external fun OPENSSL_sk_find_ex(st: CValuesRef<OPENSSL_STACK>?, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl15_OPENSSL_sk_push")
external fun OPENSSL_sk_push(st: CValuesRef<OPENSSL_STACK>?, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl16_OPENSSL_sk_unshift")
external fun OPENSSL_sk_unshift(st: CValuesRef<OPENSSL_STACK>?, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl17_OPENSSL_sk_shift")
external fun OPENSSL_sk_shift(st: CValuesRef<OPENSSL_STACK>?): COpaquePointer?

@CCall("knifunptr_openssl18_OPENSSL_sk_pop")
external fun OPENSSL_sk_pop(st: CValuesRef<OPENSSL_STACK>?): COpaquePointer?

@CCall("knifunptr_openssl19_OPENSSL_sk_zero")
external fun OPENSSL_sk_zero(st: CValuesRef<OPENSSL_STACK>?): Unit

@CCall("knifunptr_openssl20_OPENSSL_sk_set_cmp_func")
external fun OPENSSL_sk_set_cmp_func(sk: CValuesRef<OPENSSL_STACK>?, cmp: OPENSSL_sk_compfunc?): OPENSSL_sk_compfunc?

@CCall("knifunptr_openssl21_OPENSSL_sk_dup")
external fun OPENSSL_sk_dup(st: CValuesRef<OPENSSL_STACK>?): CPointer<OPENSSL_STACK>?

@CCall("knifunptr_openssl22_OPENSSL_sk_sort")
external fun OPENSSL_sk_sort(st: CValuesRef<OPENSSL_STACK>?): Unit

@CCall("knifunptr_openssl23_OPENSSL_sk_is_sorted")
external fun OPENSSL_sk_is_sorted(st: CValuesRef<OPENSSL_STACK>?): Int

@CCall("knifunptr_openssl24_sk_OPENSSL_STRING_num")
external fun sk_OPENSSL_STRING_num(sk: CValuesRef<stack_st_OPENSSL_STRING>?): Int

@CCall("knifunptr_openssl25_sk_OPENSSL_STRING_value")
external fun sk_OPENSSL_STRING_value(sk: CValuesRef<stack_st_OPENSSL_STRING>?, idx: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl26_sk_OPENSSL_STRING_new")
external fun sk_OPENSSL_STRING_new(compare: sk_OPENSSL_STRING_compfunc?): CPointer<stack_st_OPENSSL_STRING>?

@CCall("knifunptr_openssl27_sk_OPENSSL_STRING_new_null")
external fun sk_OPENSSL_STRING_new_null(): CPointer<stack_st_OPENSSL_STRING>?

@CCall("knifunptr_openssl28_sk_OPENSSL_STRING_new_reserve")
external fun sk_OPENSSL_STRING_new_reserve(
    compare: sk_OPENSSL_STRING_compfunc?,
    n: Int
): CPointer<stack_st_OPENSSL_STRING>?

@CCall("knifunptr_openssl29_sk_OPENSSL_STRING_reserve")
external fun sk_OPENSSL_STRING_reserve(sk: CValuesRef<stack_st_OPENSSL_STRING>?, n: Int): Int

@CCall("knifunptr_openssl30_sk_OPENSSL_STRING_free")
external fun sk_OPENSSL_STRING_free(sk: CValuesRef<stack_st_OPENSSL_STRING>?): Unit

@CCall("knifunptr_openssl31_sk_OPENSSL_STRING_zero")
external fun sk_OPENSSL_STRING_zero(sk: CValuesRef<stack_st_OPENSSL_STRING>?): Unit

@CCall("knifunptr_openssl32_sk_OPENSSL_STRING_delete")
external fun sk_OPENSSL_STRING_delete(sk: CValuesRef<stack_st_OPENSSL_STRING>?, i: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl33_sk_OPENSSL_STRING_delete_ptr")
external fun sk_OPENSSL_STRING_delete_ptr(
    sk: CValuesRef<stack_st_OPENSSL_STRING>?,
    ptr: CValuesRef<ByteVar>?
): CPointer<ByteVar>?

@CCall("knifunptr_openssl34_sk_OPENSSL_STRING_push")
external fun sk_OPENSSL_STRING_push(sk: CValuesRef<stack_st_OPENSSL_STRING>?, ptr: CValuesRef<ByteVar>?): Int

@CCall("knifunptr_openssl35_sk_OPENSSL_STRING_unshift")
external fun sk_OPENSSL_STRING_unshift(sk: CValuesRef<stack_st_OPENSSL_STRING>?, ptr: CValuesRef<ByteVar>?): Int

@CCall("knifunptr_openssl36_sk_OPENSSL_STRING_pop")
external fun sk_OPENSSL_STRING_pop(sk: CValuesRef<stack_st_OPENSSL_STRING>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl37_sk_OPENSSL_STRING_shift")
external fun sk_OPENSSL_STRING_shift(sk: CValuesRef<stack_st_OPENSSL_STRING>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl38_sk_OPENSSL_STRING_pop_free")
external fun sk_OPENSSL_STRING_pop_free(
    sk: CValuesRef<stack_st_OPENSSL_STRING>?,
    freefunc: sk_OPENSSL_STRING_freefunc?
): Unit

@CCall("knifunptr_openssl39_sk_OPENSSL_STRING_insert")
external fun sk_OPENSSL_STRING_insert(
    sk: CValuesRef<stack_st_OPENSSL_STRING>?,
    ptr: CValuesRef<ByteVar>?,
    idx: Int
): Int

@CCall("knifunptr_openssl40_sk_OPENSSL_STRING_set")
external fun sk_OPENSSL_STRING_set(
    sk: CValuesRef<stack_st_OPENSSL_STRING>?,
    idx: Int,
    ptr: CValuesRef<ByteVar>?
): CPointer<ByteVar>?

@CCall("knifunptr_openssl41_sk_OPENSSL_STRING_find")
external fun sk_OPENSSL_STRING_find(sk: CValuesRef<stack_st_OPENSSL_STRING>?, ptr: CValuesRef<ByteVar>?): Int

@CCall("knifunptr_openssl42_sk_OPENSSL_STRING_find_ex")
external fun sk_OPENSSL_STRING_find_ex(sk: CValuesRef<stack_st_OPENSSL_STRING>?, ptr: CValuesRef<ByteVar>?): Int

@CCall("knifunptr_openssl43_sk_OPENSSL_STRING_sort")
external fun sk_OPENSSL_STRING_sort(sk: CValuesRef<stack_st_OPENSSL_STRING>?): Unit

@CCall("knifunptr_openssl44_sk_OPENSSL_STRING_is_sorted")
external fun sk_OPENSSL_STRING_is_sorted(sk: CValuesRef<stack_st_OPENSSL_STRING>?): Int

@CCall("knifunptr_openssl45_sk_OPENSSL_STRING_dup")
external fun sk_OPENSSL_STRING_dup(sk: CValuesRef<stack_st_OPENSSL_STRING>?): CPointer<stack_st_OPENSSL_STRING>?

@CCall("knifunptr_openssl46_sk_OPENSSL_STRING_deep_copy")
external fun sk_OPENSSL_STRING_deep_copy(
    sk: CValuesRef<stack_st_OPENSSL_STRING>?,
    copyfunc: sk_OPENSSL_STRING_copyfunc?,
    freefunc: sk_OPENSSL_STRING_freefunc?
): CPointer<stack_st_OPENSSL_STRING>?

@CCall("knifunptr_openssl47_sk_OPENSSL_STRING_set_cmp_func")
external fun sk_OPENSSL_STRING_set_cmp_func(
    sk: CValuesRef<stack_st_OPENSSL_STRING>?,
    compare: sk_OPENSSL_STRING_compfunc?
): sk_OPENSSL_STRING_compfunc?

@CCall("knifunptr_openssl48_sk_OPENSSL_CSTRING_num")
external fun sk_OPENSSL_CSTRING_num(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): Int

@CCall("knifunptr_openssl49_sk_OPENSSL_CSTRING_value")
external fun sk_OPENSSL_CSTRING_value(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, idx: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl50_sk_OPENSSL_CSTRING_new")
external fun sk_OPENSSL_CSTRING_new(compare: sk_OPENSSL_CSTRING_compfunc?): CPointer<stack_st_OPENSSL_CSTRING>?

@CCall("knifunptr_openssl51_sk_OPENSSL_CSTRING_new_null")
external fun sk_OPENSSL_CSTRING_new_null(): CPointer<stack_st_OPENSSL_CSTRING>?

@CCall("knifunptr_openssl52_sk_OPENSSL_CSTRING_new_reserve")
external fun sk_OPENSSL_CSTRING_new_reserve(
    compare: sk_OPENSSL_CSTRING_compfunc?,
    n: Int
): CPointer<stack_st_OPENSSL_CSTRING>?

@CCall("knifunptr_openssl53_sk_OPENSSL_CSTRING_reserve")
external fun sk_OPENSSL_CSTRING_reserve(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, n: Int): Int

@CCall("knifunptr_openssl54_sk_OPENSSL_CSTRING_free")
external fun sk_OPENSSL_CSTRING_free(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): Unit

@CCall("knifunptr_openssl55_sk_OPENSSL_CSTRING_zero")
external fun sk_OPENSSL_CSTRING_zero(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): Unit

@CCall("knifunptr_openssl56_sk_OPENSSL_CSTRING_delete")
external fun sk_OPENSSL_CSTRING_delete(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, i: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl57_sk_OPENSSL_CSTRING_delete_ptr")
external fun sk_OPENSSL_CSTRING_delete_ptr(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, @CCall.CString ptr: String?): CPointer<ByteVar>?

@CCall("knifunptr_openssl58_sk_OPENSSL_CSTRING_push")
external fun sk_OPENSSL_CSTRING_push(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, @CCall.CString ptr: String?): Int

@CCall("knifunptr_openssl59_sk_OPENSSL_CSTRING_unshift")
external fun sk_OPENSSL_CSTRING_unshift(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, @CCall.CString ptr: String?): Int

@CCall("knifunptr_openssl60_sk_OPENSSL_CSTRING_pop")
external fun sk_OPENSSL_CSTRING_pop(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl61_sk_OPENSSL_CSTRING_shift")
external fun sk_OPENSSL_CSTRING_shift(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl62_sk_OPENSSL_CSTRING_pop_free")
external fun sk_OPENSSL_CSTRING_pop_free(
    sk: CValuesRef<stack_st_OPENSSL_CSTRING>?,
    freefunc: sk_OPENSSL_CSTRING_freefunc?
): Unit

@CCall("knifunptr_openssl63_sk_OPENSSL_CSTRING_insert")
external fun sk_OPENSSL_CSTRING_insert(
    sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, @CCall.CString ptr: String?,
    idx: Int
): Int

@CCall("knifunptr_openssl64_sk_OPENSSL_CSTRING_set")
external fun sk_OPENSSL_CSTRING_set(
    sk: CValuesRef<stack_st_OPENSSL_CSTRING>?,
    idx: Int, @CCall.CString ptr: String?
): CPointer<ByteVar>?

@CCall("knifunptr_openssl65_sk_OPENSSL_CSTRING_find")
external fun sk_OPENSSL_CSTRING_find(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, @CCall.CString ptr: String?): Int

@CCall("knifunptr_openssl66_sk_OPENSSL_CSTRING_find_ex")
external fun sk_OPENSSL_CSTRING_find_ex(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?, @CCall.CString ptr: String?): Int

@CCall("knifunptr_openssl67_sk_OPENSSL_CSTRING_sort")
external fun sk_OPENSSL_CSTRING_sort(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): Unit

@CCall("knifunptr_openssl68_sk_OPENSSL_CSTRING_is_sorted")
external fun sk_OPENSSL_CSTRING_is_sorted(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): Int

@CCall("knifunptr_openssl69_sk_OPENSSL_CSTRING_dup")
external fun sk_OPENSSL_CSTRING_dup(sk: CValuesRef<stack_st_OPENSSL_CSTRING>?): CPointer<stack_st_OPENSSL_CSTRING>?

@CCall("knifunptr_openssl70_sk_OPENSSL_CSTRING_deep_copy")
external fun sk_OPENSSL_CSTRING_deep_copy(
    sk: CValuesRef<stack_st_OPENSSL_CSTRING>?,
    copyfunc: sk_OPENSSL_CSTRING_copyfunc?,
    freefunc: sk_OPENSSL_CSTRING_freefunc?
): CPointer<stack_st_OPENSSL_CSTRING>?

@CCall("knifunptr_openssl71_sk_OPENSSL_CSTRING_set_cmp_func")
external fun sk_OPENSSL_CSTRING_set_cmp_func(
    sk: CValuesRef<stack_st_OPENSSL_CSTRING>?,
    compare: sk_OPENSSL_CSTRING_compfunc?
): sk_OPENSSL_CSTRING_compfunc?

@CCall("knifunptr_openssl72_sk_OPENSSL_BLOCK_num")
external fun sk_OPENSSL_BLOCK_num(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): Int

@CCall("knifunptr_openssl73_sk_OPENSSL_BLOCK_value")
external fun sk_OPENSSL_BLOCK_value(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl74_sk_OPENSSL_BLOCK_new")
external fun sk_OPENSSL_BLOCK_new(compare: sk_OPENSSL_BLOCK_compfunc?): CPointer<stack_st_OPENSSL_BLOCK>?

@CCall("knifunptr_openssl75_sk_OPENSSL_BLOCK_new_null")
external fun sk_OPENSSL_BLOCK_new_null(): CPointer<stack_st_OPENSSL_BLOCK>?

@CCall("knifunptr_openssl76_sk_OPENSSL_BLOCK_new_reserve")
external fun sk_OPENSSL_BLOCK_new_reserve(
    compare: sk_OPENSSL_BLOCK_compfunc?,
    n: Int
): CPointer<stack_st_OPENSSL_BLOCK>?

@CCall("knifunptr_openssl77_sk_OPENSSL_BLOCK_reserve")
external fun sk_OPENSSL_BLOCK_reserve(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, n: Int): Int

@CCall("knifunptr_openssl78_sk_OPENSSL_BLOCK_free")
external fun sk_OPENSSL_BLOCK_free(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): Unit

@CCall("knifunptr_openssl79_sk_OPENSSL_BLOCK_zero")
external fun sk_OPENSSL_BLOCK_zero(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): Unit

@CCall("knifunptr_openssl80_sk_OPENSSL_BLOCK_delete")
external fun sk_OPENSSL_BLOCK_delete(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, i: Int): COpaquePointer?

@CCall("knifunptr_openssl81_sk_OPENSSL_BLOCK_delete_ptr")
external fun sk_OPENSSL_BLOCK_delete_ptr(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, ptr: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl82_sk_OPENSSL_BLOCK_push")
external fun sk_OPENSSL_BLOCK_push(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl83_sk_OPENSSL_BLOCK_unshift")
external fun sk_OPENSSL_BLOCK_unshift(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl84_sk_OPENSSL_BLOCK_pop")
external fun sk_OPENSSL_BLOCK_pop(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): COpaquePointer?

@CCall("knifunptr_openssl85_sk_OPENSSL_BLOCK_shift")
external fun sk_OPENSSL_BLOCK_shift(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): COpaquePointer?

@CCall("knifunptr_openssl86_sk_OPENSSL_BLOCK_pop_free")
external fun sk_OPENSSL_BLOCK_pop_free(
    sk: CValuesRef<stack_st_OPENSSL_BLOCK>?,
    freefunc: sk_OPENSSL_BLOCK_freefunc?
): Unit

@CCall("knifunptr_openssl87_sk_OPENSSL_BLOCK_insert")
external fun sk_OPENSSL_BLOCK_insert(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, ptr: CValuesRef<*>?, idx: Int): Int

@CCall("knifunptr_openssl88_sk_OPENSSL_BLOCK_set")
external fun sk_OPENSSL_BLOCK_set(
    sk: CValuesRef<stack_st_OPENSSL_BLOCK>?,
    idx: Int,
    ptr: CValuesRef<*>?
): COpaquePointer?

@CCall("knifunptr_openssl89_sk_OPENSSL_BLOCK_find")
external fun sk_OPENSSL_BLOCK_find(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl90_sk_OPENSSL_BLOCK_find_ex")
external fun sk_OPENSSL_BLOCK_find_ex(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl91_sk_OPENSSL_BLOCK_sort")
external fun sk_OPENSSL_BLOCK_sort(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): Unit

@CCall("knifunptr_openssl92_sk_OPENSSL_BLOCK_is_sorted")
external fun sk_OPENSSL_BLOCK_is_sorted(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): Int

@CCall("knifunptr_openssl93_sk_OPENSSL_BLOCK_dup")
external fun sk_OPENSSL_BLOCK_dup(sk: CValuesRef<stack_st_OPENSSL_BLOCK>?): CPointer<stack_st_OPENSSL_BLOCK>?

@CCall("knifunptr_openssl94_sk_OPENSSL_BLOCK_deep_copy")
external fun sk_OPENSSL_BLOCK_deep_copy(
    sk: CValuesRef<stack_st_OPENSSL_BLOCK>?,
    copyfunc: sk_OPENSSL_BLOCK_copyfunc?,
    freefunc: sk_OPENSSL_BLOCK_freefunc?
): CPointer<stack_st_OPENSSL_BLOCK>?

@CCall("knifunptr_openssl95_sk_OPENSSL_BLOCK_set_cmp_func")
external fun sk_OPENSSL_BLOCK_set_cmp_func(
    sk: CValuesRef<stack_st_OPENSSL_BLOCK>?,
    compare: sk_OPENSSL_BLOCK_compfunc?
): sk_OPENSSL_BLOCK_compfunc?

@CCall("knifunptr_openssl96_ERR_load_CRYPTO_strings")
external fun ERR_load_CRYPTO_strings(): Int

@CCall("knifunptr_openssl97_CRYPTO_THREAD_lock_new")
external fun CRYPTO_THREAD_lock_new(): COpaquePointer?

@CCall("knifunptr_openssl98_CRYPTO_THREAD_read_lock")
external fun CRYPTO_THREAD_read_lock(lock: CValuesRef<*>?): Int

@CCall("knifunptr_openssl99_CRYPTO_THREAD_write_lock")
external fun CRYPTO_THREAD_write_lock(lock: CValuesRef<*>?): Int

@CCall("knifunptr_openssl100_CRYPTO_THREAD_unlock")
external fun CRYPTO_THREAD_unlock(lock: CValuesRef<*>?): Int

@CCall("knifunptr_openssl101_CRYPTO_THREAD_lock_free")
external fun CRYPTO_THREAD_lock_free(lock: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl102_CRYPTO_atomic_add")
external fun CRYPTO_atomic_add(
    `val`: CValuesRef<IntVar>?,
    amount: Int,
    ret: CValuesRef<IntVar>?,
    lock: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl103_sk_void_num")
external fun sk_void_num(sk: CValuesRef<stack_st_void>?): Int

@CCall("knifunptr_openssl104_sk_void_value")
external fun sk_void_value(sk: CValuesRef<stack_st_void>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl105_sk_void_new")
external fun sk_void_new(compare: sk_void_compfunc?): CPointer<stack_st_void>?

@CCall("knifunptr_openssl106_sk_void_new_null")
external fun sk_void_new_null(): CPointer<stack_st_void>?

@CCall("knifunptr_openssl107_sk_void_new_reserve")
external fun sk_void_new_reserve(compare: sk_void_compfunc?, n: Int): CPointer<stack_st_void>?

@CCall("knifunptr_openssl108_sk_void_reserve")
external fun sk_void_reserve(sk: CValuesRef<stack_st_void>?, n: Int): Int

@CCall("knifunptr_openssl109_sk_void_free")
external fun sk_void_free(sk: CValuesRef<stack_st_void>?): Unit

@CCall("knifunptr_openssl110_sk_void_zero")
external fun sk_void_zero(sk: CValuesRef<stack_st_void>?): Unit

@CCall("knifunptr_openssl111_sk_void_delete")
external fun sk_void_delete(sk: CValuesRef<stack_st_void>?, i: Int): COpaquePointer?

@CCall("knifunptr_openssl112_sk_void_delete_ptr")
external fun sk_void_delete_ptr(sk: CValuesRef<stack_st_void>?, ptr: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl113_sk_void_push")
external fun sk_void_push(sk: CValuesRef<stack_st_void>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl114_sk_void_unshift")
external fun sk_void_unshift(sk: CValuesRef<stack_st_void>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl115_sk_void_pop")
external fun sk_void_pop(sk: CValuesRef<stack_st_void>?): COpaquePointer?

@CCall("knifunptr_openssl116_sk_void_shift")
external fun sk_void_shift(sk: CValuesRef<stack_st_void>?): COpaquePointer?

@CCall("knifunptr_openssl117_sk_void_pop_free")
external fun sk_void_pop_free(sk: CValuesRef<stack_st_void>?, freefunc: sk_void_freefunc?): Unit

@CCall("knifunptr_openssl118_sk_void_insert")
external fun sk_void_insert(sk: CValuesRef<stack_st_void>?, ptr: CValuesRef<*>?, idx: Int): Int

@CCall("knifunptr_openssl119_sk_void_set")
external fun sk_void_set(sk: CValuesRef<stack_st_void>?, idx: Int, ptr: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl120_sk_void_find")
external fun sk_void_find(sk: CValuesRef<stack_st_void>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl121_sk_void_find_ex")
external fun sk_void_find_ex(sk: CValuesRef<stack_st_void>?, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl122_sk_void_sort")
external fun sk_void_sort(sk: CValuesRef<stack_st_void>?): Unit

@CCall("knifunptr_openssl123_sk_void_is_sorted")
external fun sk_void_is_sorted(sk: CValuesRef<stack_st_void>?): Int

@CCall("knifunptr_openssl124_sk_void_dup")
external fun sk_void_dup(sk: CValuesRef<stack_st_void>?): CPointer<stack_st_void>?

@CCall("knifunptr_openssl125_sk_void_deep_copy")
external fun sk_void_deep_copy(
    sk: CValuesRef<stack_st_void>?,
    copyfunc: sk_void_copyfunc?,
    freefunc: sk_void_freefunc?
): CPointer<stack_st_void>?

@CCall("knifunptr_openssl126_sk_void_set_cmp_func")
external fun sk_void_set_cmp_func(sk: CValuesRef<stack_st_void>?, compare: sk_void_compfunc?): sk_void_compfunc?

@CCall("knifunptr_openssl127_CRYPTO_mem_ctrl")
external fun CRYPTO_mem_ctrl(mode: Int): Int

@CCall("knifunptr_openssl128_OPENSSL_strlcpy")
external fun OPENSSL_strlcpy(dst: CValuesRef<ByteVar>?, @CCall.CString src: String?, siz: size_t): size_t

@CCall("knifunptr_openssl129_OPENSSL_strlcat")
external fun OPENSSL_strlcat(dst: CValuesRef<ByteVar>?, @CCall.CString src: String?, siz: size_t): size_t

@CCall("knifunptr_openssl130_OPENSSL_strnlen")
external fun OPENSSL_strnlen(@CCall.CString str: String?, maxlen: size_t): size_t

@CCall("knifunptr_openssl131_OPENSSL_buf2hexstr")
external fun OPENSSL_buf2hexstr(buffer: CValuesRef<UByteVar>?, len: Long): CPointer<ByteVar>?

@CCall("knifunptr_openssl132_OPENSSL_hexstr2buf")
external fun OPENSSL_hexstr2buf(@CCall.CString str: String?, len: CValuesRef<LongVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl133_OPENSSL_hexchar2int")
external fun OPENSSL_hexchar2int(c: UByte): Int

@CCall("knifunptr_openssl134_OpenSSL_version_num")
external fun OpenSSL_version_num(): ULong

@CCall("knifunptr_openssl135_OpenSSL_version")
external fun OpenSSL_version(type: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl136_OPENSSL_issetugid")
external fun OPENSSL_issetugid(): Int

@CCall("knifunptr_openssl137_CRYPTO_get_ex_new_index")
external fun CRYPTO_get_ex_new_index(
    class_index: Int,
    argl: Long,
    argp: CValuesRef<*>?,
    new_func: CPointer<CRYPTO_EX_new>?,
    dup_func: CPointer<CRYPTO_EX_dup>?,
    free_func: CPointer<CRYPTO_EX_free>?
): Int

@CCall("knifunptr_openssl138_CRYPTO_free_ex_index")
external fun CRYPTO_free_ex_index(class_index: Int, idx: Int): Int

@CCall("knifunptr_openssl139_CRYPTO_new_ex_data")
external fun CRYPTO_new_ex_data(class_index: Int, obj: CValuesRef<*>?, ad: CValuesRef<CRYPTO_EX_DATA>?): Int

@CCall("knifunptr_openssl140_CRYPTO_dup_ex_data")
external fun CRYPTO_dup_ex_data(
    class_index: Int,
    to: CValuesRef<CRYPTO_EX_DATA>?,
    from: CValuesRef<CRYPTO_EX_DATA>?
): Int

@CCall("knifunptr_openssl141_CRYPTO_free_ex_data")
external fun CRYPTO_free_ex_data(class_index: Int, obj: CValuesRef<*>?, ad: CValuesRef<CRYPTO_EX_DATA>?): Unit

@CCall("knifunptr_openssl142_CRYPTO_set_ex_data")
external fun CRYPTO_set_ex_data(ad: CValuesRef<CRYPTO_EX_DATA>?, idx: Int, `val`: CValuesRef<*>?): Int

@CCall("knifunptr_openssl143_CRYPTO_get_ex_data")
external fun CRYPTO_get_ex_data(ad: CValuesRef<CRYPTO_EX_DATA>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl144_CRYPTO_set_mem_functions")
external fun CRYPTO_set_mem_functions(
    m: CPointer<CFunction<(size_t, CPointer<ByteVar>?, Int) -> COpaquePointer?>>?,
    r: CPointer<CFunction<(COpaquePointer?, size_t, CPointer<ByteVar>?, Int) -> COpaquePointer?>>?,
    f: CPointer<CFunction<(COpaquePointer?, CPointer<ByteVar>?, Int) -> Unit>>?
): Int

@CCall("knifunptr_openssl145_CRYPTO_set_mem_debug")
external fun CRYPTO_set_mem_debug(flag: Int): Int

@CCall("knifunptr_openssl146_CRYPTO_get_mem_functions")
external fun CRYPTO_get_mem_functions(
    m: CValuesRef<CPointerVar<CFunction<(size_t, CPointer<ByteVar>?, Int) -> COpaquePointer?>>>?,
    r: CValuesRef<CPointerVar<CFunction<(COpaquePointer?, size_t, CPointer<ByteVar>?, Int) -> COpaquePointer?>>>?,
    f: CValuesRef<CPointerVar<CFunction<(COpaquePointer?, CPointer<ByteVar>?, Int) -> Unit>>>?
): Unit

@CCall("knifunptr_openssl147_CRYPTO_malloc")
external fun CRYPTO_malloc(num: size_t, @CCall.CString file: String?, line: Int): COpaquePointer?

@CCall("knifunptr_openssl148_CRYPTO_zalloc")
external fun CRYPTO_zalloc(num: size_t, @CCall.CString file: String?, line: Int): COpaquePointer?

@CCall("knifunptr_openssl149_CRYPTO_memdup")
external fun CRYPTO_memdup(str: CValuesRef<*>?, siz: size_t, @CCall.CString file: String?, line: Int): COpaquePointer?

@CCall("knifunptr_openssl150_CRYPTO_strdup")
external fun CRYPTO_strdup(@CCall.CString str: String?, @CCall.CString file: String?, line: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl151_CRYPTO_strndup")
external fun CRYPTO_strndup(
    @CCall.CString str: String?, s: size_t, @CCall.CString file: String?,
    line: Int
): CPointer<ByteVar>?

@CCall("knifunptr_openssl152_CRYPTO_free")
external fun CRYPTO_free(ptr: CValuesRef<*>?, @CCall.CString file: String?, line: Int): Unit

@CCall("knifunptr_openssl153_CRYPTO_clear_free")
external fun CRYPTO_clear_free(ptr: CValuesRef<*>?, num: size_t, @CCall.CString file: String?, line: Int): Unit

@CCall("knifunptr_openssl154_CRYPTO_realloc")
external fun CRYPTO_realloc(addr: CValuesRef<*>?, num: size_t, @CCall.CString file: String?, line: Int): COpaquePointer?

@CCall("knifunptr_openssl155_CRYPTO_clear_realloc")
external fun CRYPTO_clear_realloc(
    addr: CValuesRef<*>?,
    old_num: size_t,
    num: size_t, @CCall.CString file: String?,
    line: Int
): COpaquePointer?

@CCall("knifunptr_openssl156_CRYPTO_secure_malloc_init")
external fun CRYPTO_secure_malloc_init(sz: size_t, minsize: Int): Int

@CCall("knifunptr_openssl157_CRYPTO_secure_malloc_done")
external fun CRYPTO_secure_malloc_done(): Int

@CCall("knifunptr_openssl158_CRYPTO_secure_malloc")
external fun CRYPTO_secure_malloc(num: size_t, @CCall.CString file: String?, line: Int): COpaquePointer?

@CCall("knifunptr_openssl159_CRYPTO_secure_zalloc")
external fun CRYPTO_secure_zalloc(num: size_t, @CCall.CString file: String?, line: Int): COpaquePointer?

@CCall("knifunptr_openssl160_CRYPTO_secure_free")
external fun CRYPTO_secure_free(ptr: CValuesRef<*>?, @CCall.CString file: String?, line: Int): Unit

@CCall("knifunptr_openssl161_CRYPTO_secure_clear_free")
external fun CRYPTO_secure_clear_free(ptr: CValuesRef<*>?, num: size_t, @CCall.CString file: String?, line: Int): Unit

@CCall("knifunptr_openssl162_CRYPTO_secure_allocated")
external fun CRYPTO_secure_allocated(ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl163_CRYPTO_secure_malloc_initialized")
external fun CRYPTO_secure_malloc_initialized(): Int

@CCall("knifunptr_openssl164_CRYPTO_secure_actual_size")
external fun CRYPTO_secure_actual_size(ptr: CValuesRef<*>?): size_t

@CCall("knifunptr_openssl165_CRYPTO_secure_used")
external fun CRYPTO_secure_used(): size_t

@CCall("knifunptr_openssl166_OPENSSL_cleanse")
external fun OPENSSL_cleanse(ptr: CValuesRef<*>?, len: size_t): Unit

@CCall("knifunptr_openssl167_OPENSSL_die")
external fun OPENSSL_die(@CCall.CString assertion: String?, @CCall.CString file: String?, line: Int): Unit

@CCall("knifunptr_openssl168_OPENSSL_isservice")
external fun OPENSSL_isservice(): Int

@CCall("knifunptr_openssl169_FIPS_mode")
external fun FIPS_mode(): Int

@CCall("knifunptr_openssl170_FIPS_mode_set")
external fun FIPS_mode_set(r: Int): Int

@CCall("knifunptr_openssl171_OPENSSL_init")
external fun OPENSSL_init(): Unit

@CCall("knifunptr_openssl172_OPENSSL_fork_prepare")
external fun OPENSSL_fork_prepare(): Unit

@CCall("knifunptr_openssl173_OPENSSL_fork_parent")
external fun OPENSSL_fork_parent(): Unit

@CCall("knifunptr_openssl174_OPENSSL_fork_child")
external fun OPENSSL_fork_child(): Unit

@CCall("knifunptr_openssl175_OPENSSL_gmtime")
external fun OPENSSL_gmtime(timer: CValuesRef<time_tVar>?, result: CValuesRef<tm>?): CPointer<tm>?

@CCall("knifunptr_openssl176_OPENSSL_gmtime_adj")
external fun OPENSSL_gmtime_adj(tm: CValuesRef<tm>?, offset_day: Int, offset_sec: Long): Int

@CCall("knifunptr_openssl177_OPENSSL_gmtime_diff")
external fun OPENSSL_gmtime_diff(
    pday: CValuesRef<IntVar>?,
    psec: CValuesRef<IntVar>?,
    from: CValuesRef<tm>?,
    to: CValuesRef<tm>?
): Int

@CCall("knifunptr_openssl178_CRYPTO_memcmp")
external fun CRYPTO_memcmp(in_a: CValuesRef<*>?, in_b: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl179_OPENSSL_cleanup")
external fun OPENSSL_cleanup(): Unit

@CCall("knifunptr_openssl180_OPENSSL_init_crypto")
external fun OPENSSL_init_crypto(opts: uint64_t, settings: CValuesRef<OPENSSL_INIT_SETTINGS>?): Int

@CCall("knifunptr_openssl181_OPENSSL_atexit")
external fun OPENSSL_atexit(handler: CPointer<CFunction<() -> Unit>>?): Int

@CCall("knifunptr_openssl182_OPENSSL_thread_stop")
external fun OPENSSL_thread_stop(): Unit

@CCall("knifunptr_openssl183_OPENSSL_INIT_new")
external fun OPENSSL_INIT_new(): CPointer<OPENSSL_INIT_SETTINGS>?

@CCall("knifunptr_openssl184_OPENSSL_INIT_set_config_filename")
external fun OPENSSL_INIT_set_config_filename(settings: CValuesRef<OPENSSL_INIT_SETTINGS>?, @CCall.CString config_filename: String?): Int

@CCall("knifunptr_openssl185_OPENSSL_INIT_set_config_file_flags")
external fun OPENSSL_INIT_set_config_file_flags(settings: CValuesRef<OPENSSL_INIT_SETTINGS>?, flags: ULong): Unit

@CCall("knifunptr_openssl186_OPENSSL_INIT_set_config_appname")
external fun OPENSSL_INIT_set_config_appname(settings: CValuesRef<OPENSSL_INIT_SETTINGS>?, @CCall.CString config_appname: String?): Int

@CCall("knifunptr_openssl187_OPENSSL_INIT_free")
external fun OPENSSL_INIT_free(settings: CValuesRef<OPENSSL_INIT_SETTINGS>?): Unit

@CCall("knifunptr_openssl188_CRYPTO_THREAD_run_once")
external fun CRYPTO_THREAD_run_once(once: CValuesRef<CRYPTO_ONCEVar>?, init: CPointer<CFunction<() -> Unit>>?): Int

@CCall("knifunptr_openssl189_CRYPTO_THREAD_init_local")
external fun CRYPTO_THREAD_init_local(
    key: CValuesRef<CRYPTO_THREAD_LOCALVar>?,
    cleanup: CPointer<CFunction<(COpaquePointer?) -> Unit>>?
): Int

@CCall("knifunptr_openssl190_CRYPTO_THREAD_get_local")
external fun CRYPTO_THREAD_get_local(key: CValuesRef<CRYPTO_THREAD_LOCALVar>?): COpaquePointer?

@CCall("knifunptr_openssl191_CRYPTO_THREAD_set_local")
external fun CRYPTO_THREAD_set_local(key: CValuesRef<CRYPTO_THREAD_LOCALVar>?, `val`: CValuesRef<*>?): Int

@CCall("knifunptr_openssl192_CRYPTO_THREAD_cleanup_local")
external fun CRYPTO_THREAD_cleanup_local(key: CValuesRef<CRYPTO_THREAD_LOCALVar>?): Int

@CCall("knifunptr_openssl193_CRYPTO_THREAD_get_current_id")
external fun CRYPTO_THREAD_get_current_id(): CRYPTO_THREAD_ID

@CCall("knifunptr_openssl194_CRYPTO_THREAD_compare_id")
external fun CRYPTO_THREAD_compare_id(a: CRYPTO_THREAD_ID, b: CRYPTO_THREAD_ID): Int

@CCall("knifunptr_openssl195_ERR_load_COMP_strings")
external fun ERR_load_COMP_strings(): Int

@CCall("knifunptr_openssl196_COMP_CTX_new")
external fun COMP_CTX_new(meth: CValuesRef<COMP_METHOD>?): CPointer<COMP_CTX>?

@CCall("knifunptr_openssl197_COMP_CTX_get_method")
external fun COMP_CTX_get_method(ctx: CValuesRef<COMP_CTX>?): CPointer<COMP_METHOD>?

@CCall("knifunptr_openssl198_COMP_CTX_get_type")
external fun COMP_CTX_get_type(comp: CValuesRef<COMP_CTX>?): Int

@CCall("knifunptr_openssl199_COMP_get_type")
external fun COMP_get_type(meth: CValuesRef<COMP_METHOD>?): Int

@CCall("knifunptr_openssl200_COMP_get_name")
external fun COMP_get_name(meth: CValuesRef<COMP_METHOD>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl201_COMP_CTX_free")
external fun COMP_CTX_free(ctx: CValuesRef<COMP_CTX>?): Unit

@CCall("knifunptr_openssl202_COMP_compress_block")
external fun COMP_compress_block(
    ctx: CValuesRef<COMP_CTX>?,
    out: CValuesRef<UByteVar>?,
    olen: Int,
    `in`: CValuesRef<UByteVar>?,
    ilen: Int
): Int

@CCall("knifunptr_openssl203_COMP_expand_block")
external fun COMP_expand_block(
    ctx: CValuesRef<COMP_CTX>?,
    out: CValuesRef<UByteVar>?,
    olen: Int,
    `in`: CValuesRef<UByteVar>?,
    ilen: Int
): Int

@CCall("knifunptr_openssl204_COMP_zlib")
external fun COMP_zlib(): CPointer<COMP_METHOD>?

@CCall("knifunptr_openssl205_ERR_load_BIO_strings")
external fun ERR_load_BIO_strings(): Int

@CCall("knifunptr_openssl206_BIO_get_new_index")
external fun BIO_get_new_index(): Int

@CCall("knifunptr_openssl207_BIO_set_flags")
external fun BIO_set_flags(b: CValuesRef<BIO>?, flags: Int): Unit

@CCall("knifunptr_openssl208_BIO_test_flags")
external fun BIO_test_flags(b: CValuesRef<BIO>?, flags: Int): Int

@CCall("knifunptr_openssl209_BIO_clear_flags")
external fun BIO_clear_flags(b: CValuesRef<BIO>?, flags: Int): Unit

@CCall("knifunptr_openssl210_BIO_get_callback")
external fun BIO_get_callback(b: CValuesRef<BIO>?): BIO_callback_fn?

@CCall("knifunptr_openssl211_BIO_set_callback")
external fun BIO_set_callback(b: CValuesRef<BIO>?, callback: BIO_callback_fn?): Unit

@CCall("knifunptr_openssl212_BIO_get_callback_ex")
external fun BIO_get_callback_ex(b: CValuesRef<BIO>?): BIO_callback_fn_ex?

@CCall("knifunptr_openssl213_BIO_set_callback_ex")
external fun BIO_set_callback_ex(b: CValuesRef<BIO>?, callback: BIO_callback_fn_ex?): Unit

@CCall("knifunptr_openssl214_BIO_get_callback_arg")
external fun BIO_get_callback_arg(b: CValuesRef<BIO>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl215_BIO_set_callback_arg")
external fun BIO_set_callback_arg(b: CValuesRef<BIO>?, arg: CValuesRef<ByteVar>?): Unit

@CCall("knifunptr_openssl216_BIO_method_name")
external fun BIO_method_name(b: CValuesRef<BIO>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl217_BIO_method_type")
external fun BIO_method_type(b: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl218_sk_BIO_num")
external fun sk_BIO_num(sk: CValuesRef<stack_st_BIO>?): Int

@CCall("knifunptr_openssl219_sk_BIO_value")
external fun sk_BIO_value(sk: CValuesRef<stack_st_BIO>?, idx: Int): CPointer<BIO>?

@CCall("knifunptr_openssl220_sk_BIO_new")
external fun sk_BIO_new(compare: sk_BIO_compfunc?): CPointer<stack_st_BIO>?

@CCall("knifunptr_openssl221_sk_BIO_new_null")
external fun sk_BIO_new_null(): CPointer<stack_st_BIO>?

@CCall("knifunptr_openssl222_sk_BIO_new_reserve")
external fun sk_BIO_new_reserve(compare: sk_BIO_compfunc?, n: Int): CPointer<stack_st_BIO>?

@CCall("knifunptr_openssl223_sk_BIO_reserve")
external fun sk_BIO_reserve(sk: CValuesRef<stack_st_BIO>?, n: Int): Int

@CCall("knifunptr_openssl224_sk_BIO_free")
external fun sk_BIO_free(sk: CValuesRef<stack_st_BIO>?): Unit

@CCall("knifunptr_openssl225_sk_BIO_zero")
external fun sk_BIO_zero(sk: CValuesRef<stack_st_BIO>?): Unit

@CCall("knifunptr_openssl226_sk_BIO_delete")
external fun sk_BIO_delete(sk: CValuesRef<stack_st_BIO>?, i: Int): CPointer<BIO>?

@CCall("knifunptr_openssl227_sk_BIO_delete_ptr")
external fun sk_BIO_delete_ptr(sk: CValuesRef<stack_st_BIO>?, ptr: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl228_sk_BIO_push")
external fun sk_BIO_push(sk: CValuesRef<stack_st_BIO>?, ptr: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl229_sk_BIO_unshift")
external fun sk_BIO_unshift(sk: CValuesRef<stack_st_BIO>?, ptr: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl230_sk_BIO_pop")
external fun sk_BIO_pop(sk: CValuesRef<stack_st_BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl231_sk_BIO_shift")
external fun sk_BIO_shift(sk: CValuesRef<stack_st_BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl232_sk_BIO_pop_free")
external fun sk_BIO_pop_free(sk: CValuesRef<stack_st_BIO>?, freefunc: sk_BIO_freefunc?): Unit

@CCall("knifunptr_openssl233_sk_BIO_insert")
external fun sk_BIO_insert(sk: CValuesRef<stack_st_BIO>?, ptr: CValuesRef<BIO>?, idx: Int): Int

@CCall("knifunptr_openssl234_sk_BIO_set")
external fun sk_BIO_set(sk: CValuesRef<stack_st_BIO>?, idx: Int, ptr: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl235_sk_BIO_find")
external fun sk_BIO_find(sk: CValuesRef<stack_st_BIO>?, ptr: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl236_sk_BIO_find_ex")
external fun sk_BIO_find_ex(sk: CValuesRef<stack_st_BIO>?, ptr: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl237_sk_BIO_sort")
external fun sk_BIO_sort(sk: CValuesRef<stack_st_BIO>?): Unit

@CCall("knifunptr_openssl238_sk_BIO_is_sorted")
external fun sk_BIO_is_sorted(sk: CValuesRef<stack_st_BIO>?): Int

@CCall("knifunptr_openssl239_sk_BIO_dup")
external fun sk_BIO_dup(sk: CValuesRef<stack_st_BIO>?): CPointer<stack_st_BIO>?

@CCall("knifunptr_openssl240_sk_BIO_deep_copy")
external fun sk_BIO_deep_copy(
    sk: CValuesRef<stack_st_BIO>?,
    copyfunc: sk_BIO_copyfunc?,
    freefunc: sk_BIO_freefunc?
): CPointer<stack_st_BIO>?

@CCall("knifunptr_openssl241_sk_BIO_set_cmp_func")
external fun sk_BIO_set_cmp_func(sk: CValuesRef<stack_st_BIO>?, compare: sk_BIO_compfunc?): sk_BIO_compfunc?

@CCall("knifunptr_openssl242_BIO_ctrl_pending")
external fun BIO_ctrl_pending(b: CValuesRef<BIO>?): size_t

@CCall("knifunptr_openssl243_BIO_ctrl_wpending")
external fun BIO_ctrl_wpending(b: CValuesRef<BIO>?): size_t

@CCall("knifunptr_openssl244_BIO_ctrl_get_write_guarantee")
external fun BIO_ctrl_get_write_guarantee(b: CValuesRef<BIO>?): size_t

@CCall("knifunptr_openssl245_BIO_ctrl_get_read_request")
external fun BIO_ctrl_get_read_request(b: CValuesRef<BIO>?): size_t

@CCall("knifunptr_openssl246_BIO_ctrl_reset_read_request")
external fun BIO_ctrl_reset_read_request(b: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl247_BIO_set_ex_data")
external fun BIO_set_ex_data(bio: CValuesRef<BIO>?, idx: Int, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl248_BIO_get_ex_data")
external fun BIO_get_ex_data(bio: CValuesRef<BIO>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl249_BIO_number_read")
external fun BIO_number_read(bio: CValuesRef<BIO>?): uint64_t

@CCall("knifunptr_openssl250_BIO_number_written")
external fun BIO_number_written(bio: CValuesRef<BIO>?): uint64_t

@CCall("knifunptr_openssl251_BIO_asn1_set_prefix")
external fun BIO_asn1_set_prefix(
    b: CValuesRef<BIO>?,
    prefix: CPointer<asn1_ps_func>?,
    prefix_free: CPointer<asn1_ps_func>?
): Int

@CCall("knifunptr_openssl252_BIO_asn1_get_prefix")
external fun BIO_asn1_get_prefix(
    b: CValuesRef<BIO>?,
    pprefix: CValuesRef<CPointerVar<asn1_ps_func>>?,
    pprefix_free: CValuesRef<CPointerVar<asn1_ps_func>>?
): Int

@CCall("knifunptr_openssl253_BIO_asn1_set_suffix")
external fun BIO_asn1_set_suffix(
    b: CValuesRef<BIO>?,
    suffix: CPointer<asn1_ps_func>?,
    suffix_free: CPointer<asn1_ps_func>?
): Int

@CCall("knifunptr_openssl254_BIO_asn1_get_suffix")
external fun BIO_asn1_get_suffix(
    b: CValuesRef<BIO>?,
    psuffix: CValuesRef<CPointerVar<asn1_ps_func>>?,
    psuffix_free: CValuesRef<CPointerVar<asn1_ps_func>>?
): Int

@CCall("knifunptr_openssl255_BIO_s_file")
external fun BIO_s_file(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl256_BIO_new_file")
external fun BIO_new_file(@CCall.CString filename: String?, @CCall.CString mode: String?): CPointer<BIO>?

@CCall("knifunptr_openssl257_BIO_new_fp")
external fun BIO_new_fp(stream: CValuesRef<FILE>?, close_flag: Int): CPointer<BIO>?

@CCall("knifunptr_openssl258_BIO_new")
external fun BIO_new(type: CValuesRef<BIO_METHOD>?): CPointer<BIO>?

@CCall("knifunptr_openssl259_BIO_free")
external fun BIO_free(a: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl260_BIO_set_data")
external fun BIO_set_data(a: CValuesRef<BIO>?, ptr: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl261_BIO_get_data")
external fun BIO_get_data(a: CValuesRef<BIO>?): COpaquePointer?

@CCall("knifunptr_openssl262_BIO_set_init")
external fun BIO_set_init(a: CValuesRef<BIO>?, init: Int): Unit

@CCall("knifunptr_openssl263_BIO_get_init")
external fun BIO_get_init(a: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl264_BIO_set_shutdown")
external fun BIO_set_shutdown(a: CValuesRef<BIO>?, shut: Int): Unit

@CCall("knifunptr_openssl265_BIO_get_shutdown")
external fun BIO_get_shutdown(a: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl266_BIO_vfree")
external fun BIO_vfree(a: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl267_BIO_up_ref")
external fun BIO_up_ref(a: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl268_BIO_read")
external fun BIO_read(b: CValuesRef<BIO>?, data: CValuesRef<*>?, dlen: Int): Int

@CCall("knifunptr_openssl269_BIO_read_ex")
external fun BIO_read_ex(
    b: CValuesRef<BIO>?,
    data: CValuesRef<*>?,
    dlen: size_t,
    readbytes: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl270_BIO_gets")
external fun BIO_gets(bp: CValuesRef<BIO>?, buf: CValuesRef<ByteVar>?, size: Int): Int

@CCall("knifunptr_openssl271_BIO_write")
external fun BIO_write(b: CValuesRef<BIO>?, data: CValuesRef<*>?, dlen: Int): Int

@CCall("knifunptr_openssl272_BIO_write_ex")
external fun BIO_write_ex(b: CValuesRef<BIO>?, data: CValuesRef<*>?, dlen: size_t, written: CValuesRef<size_tVar>?): Int

@CCall("knifunptr_openssl273_BIO_puts")
external fun BIO_puts(bp: CValuesRef<BIO>?, @CCall.CString buf: String?): Int

@CCall("knifunptr_openssl274_BIO_indent")
external fun BIO_indent(b: CValuesRef<BIO>?, indent: Int, max: Int): Int

@CCall("knifunptr_openssl275_BIO_ctrl")
external fun BIO_ctrl(bp: CValuesRef<BIO>?, cmd: Int, larg: Long, parg: CValuesRef<*>?): Long

@CCall("knifunptr_openssl276_BIO_callback_ctrl")
external fun BIO_callback_ctrl(b: CValuesRef<BIO>?, cmd: Int, fp: CPointer<BIO_info_cb>?): Long

@CCall("knifunptr_openssl277_BIO_ptr_ctrl")
external fun BIO_ptr_ctrl(bp: CValuesRef<BIO>?, cmd: Int, larg: Long): COpaquePointer?

@CCall("knifunptr_openssl278_BIO_int_ctrl")
external fun BIO_int_ctrl(bp: CValuesRef<BIO>?, cmd: Int, larg: Long, iarg: Int): Long

@CCall("knifunptr_openssl279_BIO_push")
external fun BIO_push(b: CValuesRef<BIO>?, append: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl280_BIO_pop")
external fun BIO_pop(b: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl281_BIO_free_all")
external fun BIO_free_all(a: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl282_BIO_find_type")
external fun BIO_find_type(b: CValuesRef<BIO>?, bio_type: Int): CPointer<BIO>?

@CCall("knifunptr_openssl283_BIO_next")
external fun BIO_next(b: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl284_BIO_set_next")
external fun BIO_set_next(b: CValuesRef<BIO>?, next: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl285_BIO_get_retry_BIO")
external fun BIO_get_retry_BIO(bio: CValuesRef<BIO>?, reason: CValuesRef<IntVar>?): CPointer<BIO>?

@CCall("knifunptr_openssl286_BIO_get_retry_reason")
external fun BIO_get_retry_reason(bio: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl287_BIO_set_retry_reason")
external fun BIO_set_retry_reason(bio: CValuesRef<BIO>?, reason: Int): Unit

@CCall("knifunptr_openssl288_BIO_dup_chain")
external fun BIO_dup_chain(`in`: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl289_BIO_nread0")
external fun BIO_nread0(bio: CValuesRef<BIO>?, buf: CValuesRef<CPointerVar<ByteVar>>?): Int

@CCall("knifunptr_openssl290_BIO_nread")
external fun BIO_nread(bio: CValuesRef<BIO>?, buf: CValuesRef<CPointerVar<ByteVar>>?, num: Int): Int

@CCall("knifunptr_openssl291_BIO_nwrite0")
external fun BIO_nwrite0(bio: CValuesRef<BIO>?, buf: CValuesRef<CPointerVar<ByteVar>>?): Int

@CCall("knifunptr_openssl292_BIO_nwrite")
external fun BIO_nwrite(bio: CValuesRef<BIO>?, buf: CValuesRef<CPointerVar<ByteVar>>?, num: Int): Int

@CCall("knifunptr_openssl293_BIO_debug_callback")
external fun BIO_debug_callback(
    bio: CValuesRef<BIO>?,
    cmd: Int, @CCall.CString argp: String?,
    argi: Int,
    argl: Long,
    ret: Long
): Long

@CCall("knifunptr_openssl294_BIO_s_mem")
external fun BIO_s_mem(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl295_BIO_s_secmem")
external fun BIO_s_secmem(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl296_BIO_new_mem_buf")
external fun BIO_new_mem_buf(buf: CValuesRef<*>?, len: Int): CPointer<BIO>?

@CCall("knifunptr_openssl297_BIO_s_socket")
external fun BIO_s_socket(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl298_BIO_s_connect")
external fun BIO_s_connect(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl299_BIO_s_accept")
external fun BIO_s_accept(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl300_BIO_s_fd")
external fun BIO_s_fd(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl301_BIO_s_log")
external fun BIO_s_log(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl302_BIO_s_bio")
external fun BIO_s_bio(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl303_BIO_s_null")
external fun BIO_s_null(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl304_BIO_f_null")
external fun BIO_f_null(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl305_BIO_f_buffer")
external fun BIO_f_buffer(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl306_BIO_f_linebuffer")
external fun BIO_f_linebuffer(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl307_BIO_f_nbio_test")
external fun BIO_f_nbio_test(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl308_BIO_s_datagram")
external fun BIO_s_datagram(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl309_BIO_dgram_non_fatal_error")
external fun BIO_dgram_non_fatal_error(error: Int): Int

@CCall("knifunptr_openssl310_BIO_new_dgram")
external fun BIO_new_dgram(fd: Int, close_flag: Int): CPointer<BIO>?

@CCall("knifunptr_openssl311_BIO_sock_should_retry")
external fun BIO_sock_should_retry(i: Int): Int

@CCall("knifunptr_openssl312_BIO_sock_non_fatal_error")
external fun BIO_sock_non_fatal_error(error: Int): Int

@CCall("knifunptr_openssl313_BIO_fd_should_retry")
external fun BIO_fd_should_retry(i: Int): Int

@CCall("knifunptr_openssl314_BIO_fd_non_fatal_error")
external fun BIO_fd_non_fatal_error(error: Int): Int

@CCall("knifunptr_openssl315_BIO_dump_cb")
external fun BIO_dump_cb(
    cb: CPointer<CFunction<(COpaquePointer?, size_t, COpaquePointer?) -> Int>>?,
    u: CValuesRef<*>?, @CCall.CString s: String?,
    len: Int
): Int

@CCall("knifunptr_openssl316_BIO_dump_indent_cb")
external fun BIO_dump_indent_cb(
    cb: CPointer<CFunction<(COpaquePointer?, size_t, COpaquePointer?) -> Int>>?,
    u: CValuesRef<*>?, @CCall.CString s: String?,
    len: Int,
    indent: Int
): Int

@CCall("knifunptr_openssl317_BIO_dump")
external fun BIO_dump(b: CValuesRef<BIO>?, @CCall.CString bytes: String?, len: Int): Int

@CCall("knifunptr_openssl318_BIO_dump_indent")
external fun BIO_dump_indent(b: CValuesRef<BIO>?, @CCall.CString bytes: String?, len: Int, indent: Int): Int

@CCall("knifunptr_openssl319_BIO_dump_fp")
external fun BIO_dump_fp(fp: CValuesRef<FILE>?, @CCall.CString s: String?, len: Int): Int

@CCall("knifunptr_openssl320_BIO_dump_indent_fp")
external fun BIO_dump_indent_fp(fp: CValuesRef<FILE>?, @CCall.CString s: String?, len: Int, indent: Int): Int

@CCall("knifunptr_openssl321_BIO_hex_string")
external fun BIO_hex_string(
    out: CValuesRef<BIO>?,
    indent: Int,
    width: Int,
    data: CValuesRef<UByteVar>?,
    datalen: Int
): Int

@CCall("knifunptr_openssl322_BIO_ADDR_new")
external fun BIO_ADDR_new(): CPointer<BIO_ADDR>?

@CCall("knifunptr_openssl323_BIO_ADDR_rawmake")
external fun BIO_ADDR_rawmake(
    ap: CValuesRef<BIO_ADDR>?,
    family: Int,
    where: CValuesRef<*>?,
    wherelen: size_t,
    port: UShort
): Int

@CCall("knifunptr_openssl324_BIO_ADDR_free")
external fun BIO_ADDR_free(arg0: CValuesRef<BIO_ADDR>?): Unit

@CCall("knifunptr_openssl325_BIO_ADDR_clear")
external fun BIO_ADDR_clear(ap: CValuesRef<BIO_ADDR>?): Unit

@CCall("knifunptr_openssl326_BIO_ADDR_family")
external fun BIO_ADDR_family(ap: CValuesRef<BIO_ADDR>?): Int

@CCall("knifunptr_openssl327_BIO_ADDR_rawaddress")
external fun BIO_ADDR_rawaddress(ap: CValuesRef<BIO_ADDR>?, p: CValuesRef<*>?, l: CValuesRef<size_tVar>?): Int

@CCall("knifunptr_openssl328_BIO_ADDR_rawport")
external fun BIO_ADDR_rawport(ap: CValuesRef<BIO_ADDR>?): UShort

@CCall("knifunptr_openssl329_BIO_ADDR_hostname_string")
external fun BIO_ADDR_hostname_string(ap: CValuesRef<BIO_ADDR>?, numeric: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl330_BIO_ADDR_service_string")
external fun BIO_ADDR_service_string(ap: CValuesRef<BIO_ADDR>?, numeric: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl331_BIO_ADDR_path_string")
external fun BIO_ADDR_path_string(ap: CValuesRef<BIO_ADDR>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl332_BIO_ADDRINFO_next")
external fun BIO_ADDRINFO_next(bai: CValuesRef<BIO_ADDRINFO>?): CPointer<BIO_ADDRINFO>?

@CCall("knifunptr_openssl333_BIO_ADDRINFO_family")
external fun BIO_ADDRINFO_family(bai: CValuesRef<BIO_ADDRINFO>?): Int

@CCall("knifunptr_openssl334_BIO_ADDRINFO_socktype")
external fun BIO_ADDRINFO_socktype(bai: CValuesRef<BIO_ADDRINFO>?): Int

@CCall("knifunptr_openssl335_BIO_ADDRINFO_protocol")
external fun BIO_ADDRINFO_protocol(bai: CValuesRef<BIO_ADDRINFO>?): Int

@CCall("knifunptr_openssl336_BIO_ADDRINFO_address")
external fun BIO_ADDRINFO_address(bai: CValuesRef<BIO_ADDRINFO>?): CPointer<BIO_ADDR>?

@CCall("knifunptr_openssl337_BIO_ADDRINFO_free")
external fun BIO_ADDRINFO_free(bai: CValuesRef<BIO_ADDRINFO>?): Unit

@CCall("knifunptr_openssl338_BIO_parse_hostserv")
external fun BIO_parse_hostserv(
    @CCall.CString hostserv: String?, host: CValuesRef<CPointerVar<ByteVar>>?,
    service: CValuesRef<CPointerVar<ByteVar>>?,
    hostserv_prio: BIO_hostserv_priorities
): Int

@CCall("knifunptr_openssl339_BIO_lookup")
external fun BIO_lookup(
    @CCall.CString host: String?, @CCall.CString service: String?, lookup_type: BIO_lookup_type,
    family: Int,
    socktype: Int,
    res: CValuesRef<CPointerVar<BIO_ADDRINFO>>?
): Int

@CCall("knifunptr_openssl340_BIO_lookup_ex")
external fun BIO_lookup_ex(
    @CCall.CString host: String?, @CCall.CString service: String?, lookup_type: Int,
    family: Int,
    socktype: Int,
    protocol: Int,
    res: CValuesRef<CPointerVar<BIO_ADDRINFO>>?
): Int

@CCall("knifunptr_openssl341_BIO_sock_error")
external fun BIO_sock_error(sock: Int): Int

@CCall("knifunptr_openssl342_BIO_socket_ioctl")
external fun BIO_socket_ioctl(fd: Int, type: Long, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl343_BIO_socket_nbio")
external fun BIO_socket_nbio(fd: Int, mode: Int): Int

@CCall("knifunptr_openssl344_BIO_sock_init")
external fun BIO_sock_init(): Int

@CCall("knifunptr_openssl345_BIO_set_tcp_ndelay")
external fun BIO_set_tcp_ndelay(sock: Int, turn_on: Int): Int

@CCall("knifunptr_openssl346_BIO_gethostbyname")
external fun BIO_gethostbyname(@CCall.CString name: String?): CPointer<hostent>?

@CCall("knifunptr_openssl347_BIO_get_port")
external fun BIO_get_port(@CCall.CString str: String?, port_ptr: CValuesRef<UShortVar>?): Int

@CCall("knifunptr_openssl348_BIO_get_host_ip")
external fun BIO_get_host_ip(@CCall.CString str: String?, ip: CValuesRef<UByteVar>?): Int

@CCall("knifunptr_openssl349_BIO_get_accept_socket")
external fun BIO_get_accept_socket(host_port: CValuesRef<ByteVar>?, mode: Int): Int

@CCall("knifunptr_openssl350_BIO_accept")
external fun BIO_accept(sock: Int, ip_port: CValuesRef<CPointerVar<ByteVar>>?): Int

@CCall("knifunptr_openssl351_BIO_sock_info")
external fun BIO_sock_info(sock: Int, type: BIO_sock_info_type, info: CValuesRef<BIO_sock_info_u>?): Int

@CCall("knifunptr_openssl352_BIO_socket")
external fun BIO_socket(domain: Int, socktype: Int, protocol: Int, options: Int): Int

@CCall("knifunptr_openssl353_BIO_connect")
external fun BIO_connect(sock: Int, addr: CValuesRef<BIO_ADDR>?, options: Int): Int

@CCall("knifunptr_openssl354_BIO_bind")
external fun BIO_bind(sock: Int, addr: CValuesRef<BIO_ADDR>?, options: Int): Int

@CCall("knifunptr_openssl355_BIO_listen")
external fun BIO_listen(sock: Int, addr: CValuesRef<BIO_ADDR>?, options: Int): Int

@CCall("knifunptr_openssl356_BIO_accept_ex")
external fun BIO_accept_ex(accept_sock: Int, addr: CValuesRef<BIO_ADDR>?, options: Int): Int

@CCall("knifunptr_openssl357_BIO_closesocket")
external fun BIO_closesocket(sock: Int): Int

@CCall("knifunptr_openssl358_BIO_new_socket")
external fun BIO_new_socket(sock: Int, close_flag: Int): CPointer<BIO>?

@CCall("knifunptr_openssl359_BIO_new_connect")
external fun BIO_new_connect(@CCall.CString host_port: String?): CPointer<BIO>?

@CCall("knifunptr_openssl360_BIO_new_accept")
external fun BIO_new_accept(@CCall.CString host_port: String?): CPointer<BIO>?

@CCall("knifunptr_openssl361_BIO_new_fd")
external fun BIO_new_fd(fd: Int, close_flag: Int): CPointer<BIO>?

@CCall("knifunptr_openssl362_BIO_new_bio_pair")
external fun BIO_new_bio_pair(
    bio1: CValuesRef<CPointerVar<BIO>>?,
    writebuf1: size_t,
    bio2: CValuesRef<CPointerVar<BIO>>?,
    writebuf2: size_t
): Int

@CCall("knifunptr_openssl363_BIO_copy_next_retry")
external fun BIO_copy_next_retry(b: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl364_BIO_printf")
external fun BIO_printf(bio: CValuesRef<BIO>?, @CCall.CString format: String?, vararg variadicArguments: Any?): Int

@CCall("knifunptr_openssl365_BIO_vprintf")
external fun BIO_vprintf(bio: CValuesRef<BIO>?, @CCall.CString format: String?, args: va_list?): Int

@CCall("knifunptr_openssl366_BIO_snprintf")
external fun BIO_snprintf(
    buf: CValuesRef<ByteVar>?,
    n: size_t, @CCall.CString format: String?,
    vararg variadicArguments: Any?
): Int

@CCall("knifunptr_openssl367_BIO_vsnprintf")
external fun BIO_vsnprintf(buf: CValuesRef<ByteVar>?, n: size_t, @CCall.CString format: String?, args: va_list?): Int

@CCall("knifunptr_openssl368_BIO_meth_new")
external fun BIO_meth_new(type: Int, @CCall.CString name: String?): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl369_BIO_meth_free")
external fun BIO_meth_free(biom: CValuesRef<BIO_METHOD>?): Unit

@CCall("knifunptr_openssl370_BIO_meth_get_write")
external fun BIO_meth_get_write(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, Int) -> Int>>?

@CCall("knifunptr_openssl371_BIO_meth_get_write_ex")
external fun BIO_meth_get_write_ex(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, size_t, CPointer<size_tVar>?) -> Int>>?

@CCall("knifunptr_openssl372_BIO_meth_set_write")
external fun BIO_meth_set_write(
    biom: CValuesRef<BIO_METHOD>?,
    write: CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl373_BIO_meth_set_write_ex")
external fun BIO_meth_set_write_ex(
    biom: CValuesRef<BIO_METHOD>?,
    bwrite: CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, size_t, CPointer<size_tVar>?) -> Int>>?
): Int

@CCall("knifunptr_openssl374_BIO_meth_get_read")
external fun BIO_meth_get_read(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, Int) -> Int>>?

@CCall("knifunptr_openssl375_BIO_meth_get_read_ex")
external fun BIO_meth_get_read_ex(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, size_t, CPointer<size_tVar>?) -> Int>>?

@CCall("knifunptr_openssl376_BIO_meth_set_read")
external fun BIO_meth_set_read(
    biom: CValuesRef<BIO_METHOD>?,
    read: CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl377_BIO_meth_set_read_ex")
external fun BIO_meth_set_read_ex(
    biom: CValuesRef<BIO_METHOD>?,
    bread: CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, size_t, CPointer<size_tVar>?) -> Int>>?
): Int

@CCall("knifunptr_openssl378_BIO_meth_get_puts")
external fun BIO_meth_get_puts(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?) -> Int>>?

@CCall("knifunptr_openssl379_BIO_meth_set_puts")
external fun BIO_meth_set_puts(
    biom: CValuesRef<BIO_METHOD>?,
    puts: CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?) -> Int>>?
): Int

@CCall("knifunptr_openssl380_BIO_meth_get_gets")
external fun BIO_meth_get_gets(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, Int) -> Int>>?

@CCall("knifunptr_openssl381_BIO_meth_set_gets")
external fun BIO_meth_set_gets(
    biom: CValuesRef<BIO_METHOD>?,
    gets: CPointer<CFunction<(CPointer<BIO>?, CPointer<ByteVar>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl382_BIO_meth_get_ctrl")
external fun BIO_meth_get_ctrl(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, Int, Long, COpaquePointer?) -> Long>>?

@CCall("knifunptr_openssl383_BIO_meth_set_ctrl")
external fun BIO_meth_set_ctrl(
    biom: CValuesRef<BIO_METHOD>?,
    ctrl: CPointer<CFunction<(CPointer<BIO>?, Int, Long, COpaquePointer?) -> Long>>?
): Int

@CCall("knifunptr_openssl384_BIO_meth_get_create")
external fun BIO_meth_get_create(bion: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?) -> Int>>?

@CCall("knifunptr_openssl385_BIO_meth_set_create")
external fun BIO_meth_set_create(
    biom: CValuesRef<BIO_METHOD>?,
    create: CPointer<CFunction<(CPointer<BIO>?) -> Int>>?
): Int

@CCall("knifunptr_openssl386_BIO_meth_get_destroy")
external fun BIO_meth_get_destroy(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?) -> Int>>?

@CCall("knifunptr_openssl387_BIO_meth_set_destroy")
external fun BIO_meth_set_destroy(
    biom: CValuesRef<BIO_METHOD>?,
    destroy: CPointer<CFunction<(CPointer<BIO>?) -> Int>>?
): Int

@CCall("knifunptr_openssl388_BIO_meth_get_callback_ctrl")
external fun BIO_meth_get_callback_ctrl(biom: CValuesRef<BIO_METHOD>?): CPointer<CFunction<(CPointer<BIO>?, Int, CPointer<BIO_info_cb>?) -> Long>>?

@CCall("knifunptr_openssl389_BIO_meth_set_callback_ctrl")
external fun BIO_meth_set_callback_ctrl(
    biom: CValuesRef<BIO_METHOD>?,
    callback_ctrl: CPointer<CFunction<(CPointer<BIO>?, Int, CPointer<BIO_info_cb>?) -> Long>>?
): Int

@CCall("knifunptr_openssl390_ERR_load_BUF_strings")
external fun ERR_load_BUF_strings(): Int

@CCall("knifunptr_openssl391_BUF_MEM_new")
external fun BUF_MEM_new(): CPointer<BUF_MEM>?

@CCall("knifunptr_openssl392_BUF_MEM_new_ex")
external fun BUF_MEM_new_ex(flags: ULong): CPointer<BUF_MEM>?

@CCall("knifunptr_openssl393_BUF_MEM_free")
external fun BUF_MEM_free(a: CValuesRef<BUF_MEM>?): Unit

@CCall("knifunptr_openssl394_BUF_MEM_grow")
external fun BUF_MEM_grow(str: CValuesRef<BUF_MEM>?, len: size_t): size_t

@CCall("knifunptr_openssl395_BUF_MEM_grow_clean")
external fun BUF_MEM_grow_clean(str: CValuesRef<BUF_MEM>?, len: size_t): size_t

@CCall("knifunptr_openssl396_BUF_reverse")
external fun BUF_reverse(out: CValuesRef<UByteVar>?, `in`: CValuesRef<UByteVar>?, siz: size_t): Unit

@CCall("knifunptr_openssl397_ERR_load_EVP_strings")
external fun ERR_load_EVP_strings(): Int

@CCall("knifunptr_openssl398_ERR_load_ASN1_strings")
external fun ERR_load_ASN1_strings(): Int

@CCall("knifunptr_openssl399_ERR_load_BN_strings")
external fun ERR_load_BN_strings(): Int

@CCall("knifunptr_openssl400_BN_set_flags")
external fun BN_set_flags(b: CValuesRef<BIGNUM>?, n: Int): Unit

@CCall("knifunptr_openssl401_BN_get_flags")
external fun BN_get_flags(b: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl402_BN_with_flags")
external fun BN_with_flags(dest: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?, flags: Int): Unit

@CCall("knifunptr_openssl403_BN_GENCB_call")
external fun BN_GENCB_call(cb: CValuesRef<BN_GENCB>?, a: Int, b: Int): Int

@CCall("knifunptr_openssl404_BN_GENCB_new")
external fun BN_GENCB_new(): CPointer<BN_GENCB>?

@CCall("knifunptr_openssl405_BN_GENCB_free")
external fun BN_GENCB_free(cb: CValuesRef<BN_GENCB>?): Unit

@CCall("knifunptr_openssl406_BN_GENCB_set_old")
external fun BN_GENCB_set_old(
    gencb: CValuesRef<BN_GENCB>?,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    cb_arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl407_BN_GENCB_set")
external fun BN_GENCB_set(
    gencb: CValuesRef<BN_GENCB>?,
    callback: CPointer<CFunction<(Int, Int, CPointer<BN_GENCB>?) -> Int>>?,
    cb_arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl408_BN_GENCB_get_arg")
external fun BN_GENCB_get_arg(cb: CValuesRef<BN_GENCB>?): COpaquePointer?

@CCall("knifunptr_openssl409_BN_abs_is_word")
external fun BN_abs_is_word(a: CValuesRef<BIGNUM>?, w: ULong): Int

@CCall("knifunptr_openssl410_BN_is_zero")
external fun BN_is_zero(a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl411_BN_is_one")
external fun BN_is_one(a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl412_BN_is_word")
external fun BN_is_word(a: CValuesRef<BIGNUM>?, w: ULong): Int

@CCall("knifunptr_openssl413_BN_is_odd")
external fun BN_is_odd(a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl414_BN_zero_ex")
external fun BN_zero_ex(a: CValuesRef<BIGNUM>?): Unit

@CCall("knifunptr_openssl415_BN_value_one")
external fun BN_value_one(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl416_BN_options")
external fun BN_options(): CPointer<ByteVar>?

@CCall("knifunptr_openssl417_BN_CTX_new")
external fun BN_CTX_new(): CPointer<BN_CTX>?

@CCall("knifunptr_openssl418_BN_CTX_secure_new")
external fun BN_CTX_secure_new(): CPointer<BN_CTX>?

@CCall("knifunptr_openssl419_BN_CTX_free")
external fun BN_CTX_free(c: CValuesRef<BN_CTX>?): Unit

@CCall("knifunptr_openssl420_BN_CTX_start")
external fun BN_CTX_start(ctx: CValuesRef<BN_CTX>?): Unit

@CCall("knifunptr_openssl421_BN_CTX_get")
external fun BN_CTX_get(ctx: CValuesRef<BN_CTX>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl422_BN_CTX_end")
external fun BN_CTX_end(ctx: CValuesRef<BN_CTX>?): Unit

@CCall("knifunptr_openssl423_BN_rand")
external fun BN_rand(rnd: CValuesRef<BIGNUM>?, bits: Int, top: Int, bottom: Int): Int

@CCall("knifunptr_openssl424_BN_priv_rand")
external fun BN_priv_rand(rnd: CValuesRef<BIGNUM>?, bits: Int, top: Int, bottom: Int): Int

@CCall("knifunptr_openssl425_BN_rand_range")
external fun BN_rand_range(rnd: CValuesRef<BIGNUM>?, range: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl426_BN_priv_rand_range")
external fun BN_priv_rand_range(rnd: CValuesRef<BIGNUM>?, range: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl427_BN_pseudo_rand")
external fun BN_pseudo_rand(rnd: CValuesRef<BIGNUM>?, bits: Int, top: Int, bottom: Int): Int

@CCall("knifunptr_openssl428_BN_pseudo_rand_range")
external fun BN_pseudo_rand_range(rnd: CValuesRef<BIGNUM>?, range: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl429_BN_num_bits")
external fun BN_num_bits(a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl430_BN_num_bits_word")
external fun BN_num_bits_word(l: ULong): Int

@CCall("knifunptr_openssl431_BN_security_bits")
external fun BN_security_bits(L: Int, N: Int): Int

@CCall("knifunptr_openssl432_BN_new")
external fun BN_new(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl433_BN_secure_new")
external fun BN_secure_new(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl434_BN_clear_free")
external fun BN_clear_free(a: CValuesRef<BIGNUM>?): Unit

@CCall("knifunptr_openssl435_BN_copy")
external fun BN_copy(a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl436_BN_swap")
external fun BN_swap(a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Unit

@CCall("knifunptr_openssl437_BN_bin2bn")
external fun BN_bin2bn(s: CValuesRef<UByteVar>?, len: Int, ret: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl438_BN_bn2bin")
external fun BN_bn2bin(a: CValuesRef<BIGNUM>?, to: CValuesRef<UByteVar>?): Int

@CCall("knifunptr_openssl439_BN_bn2binpad")
external fun BN_bn2binpad(a: CValuesRef<BIGNUM>?, to: CValuesRef<UByteVar>?, tolen: Int): Int

@CCall("knifunptr_openssl440_BN_lebin2bn")
external fun BN_lebin2bn(s: CValuesRef<UByteVar>?, len: Int, ret: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl441_BN_bn2lebinpad")
external fun BN_bn2lebinpad(a: CValuesRef<BIGNUM>?, to: CValuesRef<UByteVar>?, tolen: Int): Int

@CCall("knifunptr_openssl442_BN_mpi2bn")
external fun BN_mpi2bn(s: CValuesRef<UByteVar>?, len: Int, ret: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl443_BN_bn2mpi")
external fun BN_bn2mpi(a: CValuesRef<BIGNUM>?, to: CValuesRef<UByteVar>?): Int

@CCall("knifunptr_openssl444_BN_sub")
external fun BN_sub(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl445_BN_usub")
external fun BN_usub(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl446_BN_uadd")
external fun BN_uadd(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl447_BN_add")
external fun BN_add(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl448_BN_mul")
external fun BN_mul(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl449_BN_sqr")
external fun BN_sqr(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl450_BN_set_negative")
external fun BN_set_negative(b: CValuesRef<BIGNUM>?, n: Int): Unit

@CCall("knifunptr_openssl451_BN_is_negative")
external fun BN_is_negative(b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl452_BN_div")
external fun BN_div(
    dv: CValuesRef<BIGNUM>?,
    rem: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    d: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl453_BN_nnmod")
external fun BN_nnmod(
    r: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    d: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl454_BN_mod_add")
external fun BN_mod_add(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl455_BN_mod_add_quick")
external fun BN_mod_add_quick(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl456_BN_mod_sub")
external fun BN_mod_sub(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl457_BN_mod_sub_quick")
external fun BN_mod_sub_quick(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl458_BN_mod_mul")
external fun BN_mod_mul(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl459_BN_mod_sqr")
external fun BN_mod_sqr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl460_BN_mod_lshift1")
external fun BN_mod_lshift1(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl461_BN_mod_lshift1_quick")
external fun BN_mod_lshift1_quick(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, m: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl462_BN_mod_lshift")
external fun BN_mod_lshift(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    n: Int,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl463_BN_mod_lshift_quick")
external fun BN_mod_lshift_quick(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, n: Int, m: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl464_BN_mod_word")
external fun BN_mod_word(a: CValuesRef<BIGNUM>?, w: ULong): ULong

@CCall("knifunptr_openssl465_BN_div_word")
external fun BN_div_word(a: CValuesRef<BIGNUM>?, w: ULong): ULong

@CCall("knifunptr_openssl466_BN_mul_word")
external fun BN_mul_word(a: CValuesRef<BIGNUM>?, w: ULong): Int

@CCall("knifunptr_openssl467_BN_add_word")
external fun BN_add_word(a: CValuesRef<BIGNUM>?, w: ULong): Int

@CCall("knifunptr_openssl468_BN_sub_word")
external fun BN_sub_word(a: CValuesRef<BIGNUM>?, w: ULong): Int

@CCall("knifunptr_openssl469_BN_set_word")
external fun BN_set_word(a: CValuesRef<BIGNUM>?, w: ULong): Int

@CCall("knifunptr_openssl470_BN_get_word")
external fun BN_get_word(a: CValuesRef<BIGNUM>?): ULong

@CCall("knifunptr_openssl471_BN_cmp")
external fun BN_cmp(a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl472_BN_free")
external fun BN_free(a: CValuesRef<BIGNUM>?): Unit

@CCall("knifunptr_openssl473_BN_is_bit_set")
external fun BN_is_bit_set(a: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl474_BN_lshift")
external fun BN_lshift(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl475_BN_lshift1")
external fun BN_lshift1(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl476_BN_exp")
external fun BN_exp(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl477_BN_mod_exp")
external fun BN_mod_exp(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl478_BN_mod_exp_mont")
external fun BN_mod_exp_mont(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    m_ctx: CValuesRef<BN_MONT_CTX>?
): Int

@CCall("knifunptr_openssl479_BN_mod_exp_mont_consttime")
external fun BN_mod_exp_mont_consttime(
    rr: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    in_mont: CValuesRef<BN_MONT_CTX>?
): Int

@CCall("knifunptr_openssl480_BN_mod_exp_mont_word")
external fun BN_mod_exp_mont_word(
    r: CValuesRef<BIGNUM>?,
    a: ULong,
    p: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    m_ctx: CValuesRef<BN_MONT_CTX>?
): Int

@CCall("knifunptr_openssl481_BN_mod_exp2_mont")
external fun BN_mod_exp2_mont(
    r: CValuesRef<BIGNUM>?,
    a1: CValuesRef<BIGNUM>?,
    p1: CValuesRef<BIGNUM>?,
    a2: CValuesRef<BIGNUM>?,
    p2: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    m_ctx: CValuesRef<BN_MONT_CTX>?
): Int

@CCall("knifunptr_openssl482_BN_mod_exp_simple")
external fun BN_mod_exp_simple(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl483_BN_mask_bits")
external fun BN_mask_bits(a: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl484_BN_print_fp")
external fun BN_print_fp(fp: CValuesRef<FILE>?, a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl485_BN_print")
external fun BN_print(bio: CValuesRef<BIO>?, a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl486_BN_reciprocal")
external fun BN_reciprocal(r: CValuesRef<BIGNUM>?, m: CValuesRef<BIGNUM>?, len: Int, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl487_BN_rshift")
external fun BN_rshift(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl488_BN_rshift1")
external fun BN_rshift1(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl489_BN_clear")
external fun BN_clear(a: CValuesRef<BIGNUM>?): Unit

@CCall("knifunptr_openssl490_BN_dup")
external fun BN_dup(a: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl491_BN_ucmp")
external fun BN_ucmp(a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl492_BN_set_bit")
external fun BN_set_bit(a: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl493_BN_clear_bit")
external fun BN_clear_bit(a: CValuesRef<BIGNUM>?, n: Int): Int

@CCall("knifunptr_openssl494_BN_bn2hex")
external fun BN_bn2hex(a: CValuesRef<BIGNUM>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl495_BN_bn2dec")
external fun BN_bn2dec(a: CValuesRef<BIGNUM>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl496_BN_hex2bn")
external fun BN_hex2bn(a: CValuesRef<CPointerVar<BIGNUM>>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl497_BN_dec2bn")
external fun BN_dec2bn(a: CValuesRef<CPointerVar<BIGNUM>>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl498_BN_asc2bn")
external fun BN_asc2bn(a: CValuesRef<CPointerVar<BIGNUM>>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl499_BN_gcd")
external fun BN_gcd(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl500_BN_kronecker")
external fun BN_kronecker(a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl501_BN_mod_inverse")
external fun BN_mod_inverse(
    ret: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    n: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): CPointer<BIGNUM>?

@CCall("knifunptr_openssl502_BN_mod_sqrt")
external fun BN_mod_sqrt(
    ret: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    n: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): CPointer<BIGNUM>?

@CCall("knifunptr_openssl503_BN_consttime_swap")
external fun BN_consttime_swap(swap: ULong, a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?, nwords: Int): Unit

@CCall("knifunptr_openssl504_BN_generate_prime")
external fun BN_generate_prime(
    ret: CValuesRef<BIGNUM>?,
    bits: Int,
    safe: Int,
    add: CValuesRef<BIGNUM>?,
    rem: CValuesRef<BIGNUM>?,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    cb_arg: CValuesRef<*>?
): CPointer<BIGNUM>?

@CCall("knifunptr_openssl505_BN_is_prime")
external fun BN_is_prime(
    p: CValuesRef<BIGNUM>?,
    nchecks: Int,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    ctx: CValuesRef<BN_CTX>?,
    cb_arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl506_BN_is_prime_fasttest")
external fun BN_is_prime_fasttest(
    p: CValuesRef<BIGNUM>?,
    nchecks: Int,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    ctx: CValuesRef<BN_CTX>?,
    cb_arg: CValuesRef<*>?,
    do_trial_division: Int
): Int

@CCall("knifunptr_openssl507_BN_generate_prime_ex")
external fun BN_generate_prime_ex(
    ret: CValuesRef<BIGNUM>?,
    bits: Int,
    safe: Int,
    add: CValuesRef<BIGNUM>?,
    rem: CValuesRef<BIGNUM>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl508_BN_is_prime_ex")
external fun BN_is_prime_ex(
    p: CValuesRef<BIGNUM>?,
    nchecks: Int,
    ctx: CValuesRef<BN_CTX>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl509_BN_is_prime_fasttest_ex")
external fun BN_is_prime_fasttest_ex(
    p: CValuesRef<BIGNUM>?,
    nchecks: Int,
    ctx: CValuesRef<BN_CTX>?,
    do_trial_division: Int,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl510_BN_X931_generate_Xpq")
external fun BN_X931_generate_Xpq(
    Xp: CValuesRef<BIGNUM>?,
    Xq: CValuesRef<BIGNUM>?,
    nbits: Int,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl511_BN_X931_derive_prime_ex")
external fun BN_X931_derive_prime_ex(
    p: CValuesRef<BIGNUM>?,
    p1: CValuesRef<BIGNUM>?,
    p2: CValuesRef<BIGNUM>?,
    Xp: CValuesRef<BIGNUM>?,
    Xp1: CValuesRef<BIGNUM>?,
    Xp2: CValuesRef<BIGNUM>?,
    e: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl512_BN_X931_generate_prime_ex")
external fun BN_X931_generate_prime_ex(
    p: CValuesRef<BIGNUM>?,
    p1: CValuesRef<BIGNUM>?,
    p2: CValuesRef<BIGNUM>?,
    Xp1: CValuesRef<BIGNUM>?,
    Xp2: CValuesRef<BIGNUM>?,
    Xp: CValuesRef<BIGNUM>?,
    e: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl513_BN_MONT_CTX_new")
external fun BN_MONT_CTX_new(): CPointer<BN_MONT_CTX>?

@CCall("knifunptr_openssl514_BN_mod_mul_montgomery")
external fun BN_mod_mul_montgomery(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    mont: CValuesRef<BN_MONT_CTX>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl515_BN_to_montgomery")
external fun BN_to_montgomery(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    mont: CValuesRef<BN_MONT_CTX>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl516_BN_from_montgomery")
external fun BN_from_montgomery(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    mont: CValuesRef<BN_MONT_CTX>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl517_BN_MONT_CTX_free")
external fun BN_MONT_CTX_free(mont: CValuesRef<BN_MONT_CTX>?): Unit

@CCall("knifunptr_openssl518_BN_MONT_CTX_set")
external fun BN_MONT_CTX_set(mont: CValuesRef<BN_MONT_CTX>?, mod: CValuesRef<BIGNUM>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl519_BN_MONT_CTX_copy")
external fun BN_MONT_CTX_copy(to: CValuesRef<BN_MONT_CTX>?, from: CValuesRef<BN_MONT_CTX>?): CPointer<BN_MONT_CTX>?

@CCall("knifunptr_openssl520_BN_MONT_CTX_set_locked")
external fun BN_MONT_CTX_set_locked(
    pmont: CValuesRef<CPointerVar<BN_MONT_CTX>>?,
    lock: CValuesRef<*>?,
    mod: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): CPointer<BN_MONT_CTX>?

@CCall("knifunptr_openssl521_BN_BLINDING_new")
external fun BN_BLINDING_new(
    A: CValuesRef<BIGNUM>?,
    Ai: CValuesRef<BIGNUM>?,
    mod: CValuesRef<BIGNUM>?
): CPointer<BN_BLINDING>?

@CCall("knifunptr_openssl522_BN_BLINDING_free")
external fun BN_BLINDING_free(b: CValuesRef<BN_BLINDING>?): Unit

@CCall("knifunptr_openssl523_BN_BLINDING_update")
external fun BN_BLINDING_update(b: CValuesRef<BN_BLINDING>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl524_BN_BLINDING_convert")
external fun BN_BLINDING_convert(n: CValuesRef<BIGNUM>?, b: CValuesRef<BN_BLINDING>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl525_BN_BLINDING_invert")
external fun BN_BLINDING_invert(n: CValuesRef<BIGNUM>?, b: CValuesRef<BN_BLINDING>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl526_BN_BLINDING_convert_ex")
external fun BN_BLINDING_convert_ex(
    n: CValuesRef<BIGNUM>?,
    r: CValuesRef<BIGNUM>?,
    b: CValuesRef<BN_BLINDING>?,
    arg3: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl527_BN_BLINDING_invert_ex")
external fun BN_BLINDING_invert_ex(
    n: CValuesRef<BIGNUM>?,
    r: CValuesRef<BIGNUM>?,
    b: CValuesRef<BN_BLINDING>?,
    arg3: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl528_BN_BLINDING_is_current_thread")
external fun BN_BLINDING_is_current_thread(b: CValuesRef<BN_BLINDING>?): Int

@CCall("knifunptr_openssl529_BN_BLINDING_set_current_thread")
external fun BN_BLINDING_set_current_thread(b: CValuesRef<BN_BLINDING>?): Unit

@CCall("knifunptr_openssl530_BN_BLINDING_lock")
external fun BN_BLINDING_lock(b: CValuesRef<BN_BLINDING>?): Int

@CCall("knifunptr_openssl531_BN_BLINDING_unlock")
external fun BN_BLINDING_unlock(b: CValuesRef<BN_BLINDING>?): Int

@CCall("knifunptr_openssl532_BN_BLINDING_get_flags")
external fun BN_BLINDING_get_flags(arg0: CValuesRef<BN_BLINDING>?): ULong

@CCall("knifunptr_openssl533_BN_BLINDING_set_flags")
external fun BN_BLINDING_set_flags(arg0: CValuesRef<BN_BLINDING>?, arg1: ULong): Unit

@CCall("knifunptr_openssl534_BN_BLINDING_create_param")
external fun BN_BLINDING_create_param(
    b: CValuesRef<BN_BLINDING>?,
    e: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?,
    bn_mod_exp: CPointer<CFunction<(CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?,
    m_ctx: CValuesRef<BN_MONT_CTX>?
): CPointer<BN_BLINDING>?

@CCall("knifunptr_openssl535_BN_set_params")
external fun BN_set_params(mul: Int, high: Int, low: Int, mont: Int): Unit

@CCall("knifunptr_openssl536_BN_get_params")
external fun BN_get_params(which: Int): Int

@CCall("knifunptr_openssl537_BN_RECP_CTX_new")
external fun BN_RECP_CTX_new(): CPointer<BN_RECP_CTX>?

@CCall("knifunptr_openssl538_BN_RECP_CTX_free")
external fun BN_RECP_CTX_free(recp: CValuesRef<BN_RECP_CTX>?): Unit

@CCall("knifunptr_openssl539_BN_RECP_CTX_set")
external fun BN_RECP_CTX_set(recp: CValuesRef<BN_RECP_CTX>?, rdiv: CValuesRef<BIGNUM>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl540_BN_mod_mul_reciprocal")
external fun BN_mod_mul_reciprocal(
    r: CValuesRef<BIGNUM>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    recp: CValuesRef<BN_RECP_CTX>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl541_BN_mod_exp_recp")
external fun BN_mod_exp_recp(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl542_BN_div_recp")
external fun BN_div_recp(
    dv: CValuesRef<BIGNUM>?,
    rem: CValuesRef<BIGNUM>?,
    m: CValuesRef<BIGNUM>?,
    recp: CValuesRef<BN_RECP_CTX>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl543_BN_GF2m_add")
external fun BN_GF2m_add(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, b: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl544_BN_GF2m_mod")
external fun BN_GF2m_mod(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, p: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl545_BN_GF2m_mod_mul")
external fun BN_GF2m_mod_mul(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl546_BN_GF2m_mod_sqr")
external fun BN_GF2m_mod_sqr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl547_BN_GF2m_mod_inv")
external fun BN_GF2m_mod_inv(
    r: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl548_BN_GF2m_mod_div")
external fun BN_GF2m_mod_div(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl549_BN_GF2m_mod_exp")
external fun BN_GF2m_mod_exp(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl550_BN_GF2m_mod_sqrt")
external fun BN_GF2m_mod_sqrt(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl551_BN_GF2m_mod_solve_quad")
external fun BN_GF2m_mod_solve_quad(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl552_BN_GF2m_mod_arr")
external fun BN_GF2m_mod_arr(r: CValuesRef<BIGNUM>?, a: CValuesRef<BIGNUM>?, p: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl553_BN_GF2m_mod_mul_arr")
external fun BN_GF2m_mod_mul_arr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl554_BN_GF2m_mod_sqr_arr")
external fun BN_GF2m_mod_sqr_arr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl555_BN_GF2m_mod_inv_arr")
external fun BN_GF2m_mod_inv_arr(
    r: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl556_BN_GF2m_mod_div_arr")
external fun BN_GF2m_mod_div_arr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl557_BN_GF2m_mod_exp_arr")
external fun BN_GF2m_mod_exp_arr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl558_BN_GF2m_mod_sqrt_arr")
external fun BN_GF2m_mod_sqrt_arr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl559_BN_GF2m_mod_solve_quad_arr")
external fun BN_GF2m_mod_solve_quad_arr(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<IntVar>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl560_BN_GF2m_poly2arr")
external fun BN_GF2m_poly2arr(a: CValuesRef<BIGNUM>?, p: CValuesRef<IntVar>?, max: Int): Int

@CCall("knifunptr_openssl561_BN_GF2m_arr2poly")
external fun BN_GF2m_arr2poly(p: CValuesRef<IntVar>?, a: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl562_BN_nist_mod_192")
external fun BN_nist_mod_192(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl563_BN_nist_mod_224")
external fun BN_nist_mod_224(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl564_BN_nist_mod_256")
external fun BN_nist_mod_256(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl565_BN_nist_mod_384")
external fun BN_nist_mod_384(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl566_BN_nist_mod_521")
external fun BN_nist_mod_521(
    r: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    p: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl567_BN_get0_nist_prime_192")
external fun BN_get0_nist_prime_192(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl568_BN_get0_nist_prime_224")
external fun BN_get0_nist_prime_224(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl569_BN_get0_nist_prime_256")
external fun BN_get0_nist_prime_256(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl570_BN_get0_nist_prime_384")
external fun BN_get0_nist_prime_384(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl571_BN_get0_nist_prime_521")
external fun BN_get0_nist_prime_521(): CPointer<BIGNUM>?

@CCall("knifunptr_openssl572_BN_nist_mod_func")
external fun BN_nist_mod_func(p: CValuesRef<BIGNUM>?): CPointer<CFunction<(CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?) -> Int>>?

@CCall("knifunptr_openssl573_BN_generate_dsa_nonce")
external fun BN_generate_dsa_nonce(
    out: CValuesRef<BIGNUM>?,
    range: CValuesRef<BIGNUM>?,
    priv: CValuesRef<BIGNUM>?,
    message: CValuesRef<UByteVar>?,
    message_len: size_t,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl574_BN_get_rfc2409_prime_768")
external fun BN_get_rfc2409_prime_768(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl575_BN_get_rfc2409_prime_1024")
external fun BN_get_rfc2409_prime_1024(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl576_BN_get_rfc3526_prime_1536")
external fun BN_get_rfc3526_prime_1536(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl577_BN_get_rfc3526_prime_2048")
external fun BN_get_rfc3526_prime_2048(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl578_BN_get_rfc3526_prime_3072")
external fun BN_get_rfc3526_prime_3072(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl579_BN_get_rfc3526_prime_4096")
external fun BN_get_rfc3526_prime_4096(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl580_BN_get_rfc3526_prime_6144")
external fun BN_get_rfc3526_prime_6144(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl581_BN_get_rfc3526_prime_8192")
external fun BN_get_rfc3526_prime_8192(bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl582_BN_bntest_rand")
external fun BN_bntest_rand(rnd: CValuesRef<BIGNUM>?, bits: Int, top: Int, bottom: Int): Int

@CCall("knifunptr_openssl583_sk_X509_ALGOR_num")
external fun sk_X509_ALGOR_num(sk: CValuesRef<stack_st_X509_ALGOR>?): Int

@CCall("knifunptr_openssl584_sk_X509_ALGOR_value")
external fun sk_X509_ALGOR_value(sk: CValuesRef<stack_st_X509_ALGOR>?, idx: Int): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl585_sk_X509_ALGOR_new")
external fun sk_X509_ALGOR_new(compare: sk_X509_ALGOR_compfunc?): CPointer<stack_st_X509_ALGOR>?

@CCall("knifunptr_openssl586_sk_X509_ALGOR_new_null")
external fun sk_X509_ALGOR_new_null(): CPointer<stack_st_X509_ALGOR>?

@CCall("knifunptr_openssl587_sk_X509_ALGOR_new_reserve")
external fun sk_X509_ALGOR_new_reserve(compare: sk_X509_ALGOR_compfunc?, n: Int): CPointer<stack_st_X509_ALGOR>?

@CCall("knifunptr_openssl588_sk_X509_ALGOR_reserve")
external fun sk_X509_ALGOR_reserve(sk: CValuesRef<stack_st_X509_ALGOR>?, n: Int): Int

@CCall("knifunptr_openssl589_sk_X509_ALGOR_free")
external fun sk_X509_ALGOR_free(sk: CValuesRef<stack_st_X509_ALGOR>?): Unit

@CCall("knifunptr_openssl590_sk_X509_ALGOR_zero")
external fun sk_X509_ALGOR_zero(sk: CValuesRef<stack_st_X509_ALGOR>?): Unit

@CCall("knifunptr_openssl591_sk_X509_ALGOR_delete")
external fun sk_X509_ALGOR_delete(sk: CValuesRef<stack_st_X509_ALGOR>?, i: Int): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl592_sk_X509_ALGOR_delete_ptr")
external fun sk_X509_ALGOR_delete_ptr(
    sk: CValuesRef<stack_st_X509_ALGOR>?,
    ptr: CValuesRef<X509_ALGOR>?
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl593_sk_X509_ALGOR_push")
external fun sk_X509_ALGOR_push(sk: CValuesRef<stack_st_X509_ALGOR>?, ptr: CValuesRef<X509_ALGOR>?): Int

@CCall("knifunptr_openssl594_sk_X509_ALGOR_unshift")
external fun sk_X509_ALGOR_unshift(sk: CValuesRef<stack_st_X509_ALGOR>?, ptr: CValuesRef<X509_ALGOR>?): Int

@CCall("knifunptr_openssl595_sk_X509_ALGOR_pop")
external fun sk_X509_ALGOR_pop(sk: CValuesRef<stack_st_X509_ALGOR>?): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl596_sk_X509_ALGOR_shift")
external fun sk_X509_ALGOR_shift(sk: CValuesRef<stack_st_X509_ALGOR>?): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl597_sk_X509_ALGOR_pop_free")
external fun sk_X509_ALGOR_pop_free(sk: CValuesRef<stack_st_X509_ALGOR>?, freefunc: sk_X509_ALGOR_freefunc?): Unit

@CCall("knifunptr_openssl598_sk_X509_ALGOR_insert")
external fun sk_X509_ALGOR_insert(sk: CValuesRef<stack_st_X509_ALGOR>?, ptr: CValuesRef<X509_ALGOR>?, idx: Int): Int

@CCall("knifunptr_openssl599_sk_X509_ALGOR_set")
external fun sk_X509_ALGOR_set(
    sk: CValuesRef<stack_st_X509_ALGOR>?,
    idx: Int,
    ptr: CValuesRef<X509_ALGOR>?
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl600_sk_X509_ALGOR_find")
external fun sk_X509_ALGOR_find(sk: CValuesRef<stack_st_X509_ALGOR>?, ptr: CValuesRef<X509_ALGOR>?): Int

@CCall("knifunptr_openssl601_sk_X509_ALGOR_find_ex")
external fun sk_X509_ALGOR_find_ex(sk: CValuesRef<stack_st_X509_ALGOR>?, ptr: CValuesRef<X509_ALGOR>?): Int

@CCall("knifunptr_openssl602_sk_X509_ALGOR_sort")
external fun sk_X509_ALGOR_sort(sk: CValuesRef<stack_st_X509_ALGOR>?): Unit

@CCall("knifunptr_openssl603_sk_X509_ALGOR_is_sorted")
external fun sk_X509_ALGOR_is_sorted(sk: CValuesRef<stack_st_X509_ALGOR>?): Int

@CCall("knifunptr_openssl604_sk_X509_ALGOR_dup")
external fun sk_X509_ALGOR_dup(sk: CValuesRef<stack_st_X509_ALGOR>?): CPointer<stack_st_X509_ALGOR>?

@CCall("knifunptr_openssl605_sk_X509_ALGOR_deep_copy")
external fun sk_X509_ALGOR_deep_copy(
    sk: CValuesRef<stack_st_X509_ALGOR>?,
    copyfunc: sk_X509_ALGOR_copyfunc?,
    freefunc: sk_X509_ALGOR_freefunc?
): CPointer<stack_st_X509_ALGOR>?

@CCall("knifunptr_openssl606_sk_X509_ALGOR_set_cmp_func")
external fun sk_X509_ALGOR_set_cmp_func(
    sk: CValuesRef<stack_st_X509_ALGOR>?,
    compare: sk_X509_ALGOR_compfunc?
): sk_X509_ALGOR_compfunc?

@CCall("knifunptr_openssl607_sk_ASN1_STRING_TABLE_num")
external fun sk_ASN1_STRING_TABLE_num(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): Int

@CCall("knifunptr_openssl608_sk_ASN1_STRING_TABLE_value")
external fun sk_ASN1_STRING_TABLE_value(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    idx: Int
): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl609_sk_ASN1_STRING_TABLE_new")
external fun sk_ASN1_STRING_TABLE_new(compare: sk_ASN1_STRING_TABLE_compfunc?): CPointer<stack_st_ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl610_sk_ASN1_STRING_TABLE_new_null")
external fun sk_ASN1_STRING_TABLE_new_null(): CPointer<stack_st_ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl611_sk_ASN1_STRING_TABLE_new_reserve")
external fun sk_ASN1_STRING_TABLE_new_reserve(
    compare: sk_ASN1_STRING_TABLE_compfunc?,
    n: Int
): CPointer<stack_st_ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl612_sk_ASN1_STRING_TABLE_reserve")
external fun sk_ASN1_STRING_TABLE_reserve(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?, n: Int): Int

@CCall("knifunptr_openssl613_sk_ASN1_STRING_TABLE_free")
external fun sk_ASN1_STRING_TABLE_free(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): Unit

@CCall("knifunptr_openssl614_sk_ASN1_STRING_TABLE_zero")
external fun sk_ASN1_STRING_TABLE_zero(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): Unit

@CCall("knifunptr_openssl615_sk_ASN1_STRING_TABLE_delete")
external fun sk_ASN1_STRING_TABLE_delete(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    i: Int
): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl616_sk_ASN1_STRING_TABLE_delete_ptr")
external fun sk_ASN1_STRING_TABLE_delete_ptr(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    ptr: CValuesRef<ASN1_STRING_TABLE>?
): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl617_sk_ASN1_STRING_TABLE_push")
external fun sk_ASN1_STRING_TABLE_push(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    ptr: CValuesRef<ASN1_STRING_TABLE>?
): Int

@CCall("knifunptr_openssl618_sk_ASN1_STRING_TABLE_unshift")
external fun sk_ASN1_STRING_TABLE_unshift(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    ptr: CValuesRef<ASN1_STRING_TABLE>?
): Int

@CCall("knifunptr_openssl619_sk_ASN1_STRING_TABLE_pop")
external fun sk_ASN1_STRING_TABLE_pop(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl620_sk_ASN1_STRING_TABLE_shift")
external fun sk_ASN1_STRING_TABLE_shift(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl621_sk_ASN1_STRING_TABLE_pop_free")
external fun sk_ASN1_STRING_TABLE_pop_free(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    freefunc: sk_ASN1_STRING_TABLE_freefunc?
): Unit

@CCall("knifunptr_openssl622_sk_ASN1_STRING_TABLE_insert")
external fun sk_ASN1_STRING_TABLE_insert(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    ptr: CValuesRef<ASN1_STRING_TABLE>?,
    idx: Int
): Int

@CCall("knifunptr_openssl623_sk_ASN1_STRING_TABLE_set")
external fun sk_ASN1_STRING_TABLE_set(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    idx: Int,
    ptr: CValuesRef<ASN1_STRING_TABLE>?
): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl624_sk_ASN1_STRING_TABLE_find")
external fun sk_ASN1_STRING_TABLE_find(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    ptr: CValuesRef<ASN1_STRING_TABLE>?
): Int

@CCall("knifunptr_openssl625_sk_ASN1_STRING_TABLE_find_ex")
external fun sk_ASN1_STRING_TABLE_find_ex(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    ptr: CValuesRef<ASN1_STRING_TABLE>?
): Int

@CCall("knifunptr_openssl626_sk_ASN1_STRING_TABLE_sort")
external fun sk_ASN1_STRING_TABLE_sort(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): Unit

@CCall("knifunptr_openssl627_sk_ASN1_STRING_TABLE_is_sorted")
external fun sk_ASN1_STRING_TABLE_is_sorted(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): Int

@CCall("knifunptr_openssl628_sk_ASN1_STRING_TABLE_dup")
external fun sk_ASN1_STRING_TABLE_dup(sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?): CPointer<stack_st_ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl629_sk_ASN1_STRING_TABLE_deep_copy")
external fun sk_ASN1_STRING_TABLE_deep_copy(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    copyfunc: sk_ASN1_STRING_TABLE_copyfunc?,
    freefunc: sk_ASN1_STRING_TABLE_freefunc?
): CPointer<stack_st_ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl630_sk_ASN1_STRING_TABLE_set_cmp_func")
external fun sk_ASN1_STRING_TABLE_set_cmp_func(
    sk: CValuesRef<stack_st_ASN1_STRING_TABLE>?,
    compare: sk_ASN1_STRING_TABLE_compfunc?
): sk_ASN1_STRING_TABLE_compfunc?

@CCall("knifunptr_openssl631_sk_ASN1_INTEGER_num")
external fun sk_ASN1_INTEGER_num(sk: CValuesRef<stack_st_ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl632_sk_ASN1_INTEGER_value")
external fun sk_ASN1_INTEGER_value(sk: CValuesRef<stack_st_ASN1_INTEGER>?, idx: Int): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl633_sk_ASN1_INTEGER_new")
external fun sk_ASN1_INTEGER_new(compare: sk_ASN1_INTEGER_compfunc?): CPointer<stack_st_ASN1_INTEGER>?

@CCall("knifunptr_openssl634_sk_ASN1_INTEGER_new_null")
external fun sk_ASN1_INTEGER_new_null(): CPointer<stack_st_ASN1_INTEGER>?

@CCall("knifunptr_openssl635_sk_ASN1_INTEGER_new_reserve")
external fun sk_ASN1_INTEGER_new_reserve(compare: sk_ASN1_INTEGER_compfunc?, n: Int): CPointer<stack_st_ASN1_INTEGER>?

@CCall("knifunptr_openssl636_sk_ASN1_INTEGER_reserve")
external fun sk_ASN1_INTEGER_reserve(sk: CValuesRef<stack_st_ASN1_INTEGER>?, n: Int): Int

@CCall("knifunptr_openssl637_sk_ASN1_INTEGER_free")
external fun sk_ASN1_INTEGER_free(sk: CValuesRef<stack_st_ASN1_INTEGER>?): Unit

@CCall("knifunptr_openssl638_sk_ASN1_INTEGER_zero")
external fun sk_ASN1_INTEGER_zero(sk: CValuesRef<stack_st_ASN1_INTEGER>?): Unit

@CCall("knifunptr_openssl639_sk_ASN1_INTEGER_delete")
external fun sk_ASN1_INTEGER_delete(sk: CValuesRef<stack_st_ASN1_INTEGER>?, i: Int): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl640_sk_ASN1_INTEGER_delete_ptr")
external fun sk_ASN1_INTEGER_delete_ptr(
    sk: CValuesRef<stack_st_ASN1_INTEGER>?,
    ptr: CValuesRef<ASN1_INTEGER>?
): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl641_sk_ASN1_INTEGER_push")
external fun sk_ASN1_INTEGER_push(sk: CValuesRef<stack_st_ASN1_INTEGER>?, ptr: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl642_sk_ASN1_INTEGER_unshift")
external fun sk_ASN1_INTEGER_unshift(sk: CValuesRef<stack_st_ASN1_INTEGER>?, ptr: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl643_sk_ASN1_INTEGER_pop")
external fun sk_ASN1_INTEGER_pop(sk: CValuesRef<stack_st_ASN1_INTEGER>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl644_sk_ASN1_INTEGER_shift")
external fun sk_ASN1_INTEGER_shift(sk: CValuesRef<stack_st_ASN1_INTEGER>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl645_sk_ASN1_INTEGER_pop_free")
external fun sk_ASN1_INTEGER_pop_free(sk: CValuesRef<stack_st_ASN1_INTEGER>?, freefunc: sk_ASN1_INTEGER_freefunc?): Unit

@CCall("knifunptr_openssl646_sk_ASN1_INTEGER_insert")
external fun sk_ASN1_INTEGER_insert(
    sk: CValuesRef<stack_st_ASN1_INTEGER>?,
    ptr: CValuesRef<ASN1_INTEGER>?,
    idx: Int
): Int

@CCall("knifunptr_openssl647_sk_ASN1_INTEGER_set")
external fun sk_ASN1_INTEGER_set(
    sk: CValuesRef<stack_st_ASN1_INTEGER>?,
    idx: Int,
    ptr: CValuesRef<ASN1_INTEGER>?
): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl648_sk_ASN1_INTEGER_find")
external fun sk_ASN1_INTEGER_find(sk: CValuesRef<stack_st_ASN1_INTEGER>?, ptr: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl649_sk_ASN1_INTEGER_find_ex")
external fun sk_ASN1_INTEGER_find_ex(sk: CValuesRef<stack_st_ASN1_INTEGER>?, ptr: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl650_sk_ASN1_INTEGER_sort")
external fun sk_ASN1_INTEGER_sort(sk: CValuesRef<stack_st_ASN1_INTEGER>?): Unit

@CCall("knifunptr_openssl651_sk_ASN1_INTEGER_is_sorted")
external fun sk_ASN1_INTEGER_is_sorted(sk: CValuesRef<stack_st_ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl652_sk_ASN1_INTEGER_dup")
external fun sk_ASN1_INTEGER_dup(sk: CValuesRef<stack_st_ASN1_INTEGER>?): CPointer<stack_st_ASN1_INTEGER>?

@CCall("knifunptr_openssl653_sk_ASN1_INTEGER_deep_copy")
external fun sk_ASN1_INTEGER_deep_copy(
    sk: CValuesRef<stack_st_ASN1_INTEGER>?,
    copyfunc: sk_ASN1_INTEGER_copyfunc?,
    freefunc: sk_ASN1_INTEGER_freefunc?
): CPointer<stack_st_ASN1_INTEGER>?

@CCall("knifunptr_openssl654_sk_ASN1_INTEGER_set_cmp_func")
external fun sk_ASN1_INTEGER_set_cmp_func(
    sk: CValuesRef<stack_st_ASN1_INTEGER>?,
    compare: sk_ASN1_INTEGER_compfunc?
): sk_ASN1_INTEGER_compfunc?

@CCall("knifunptr_openssl655_sk_ASN1_GENERALSTRING_num")
external fun sk_ASN1_GENERALSTRING_num(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): Int

@CCall("knifunptr_openssl656_sk_ASN1_GENERALSTRING_value")
external fun sk_ASN1_GENERALSTRING_value(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    idx: Int
): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl657_sk_ASN1_GENERALSTRING_new")
external fun sk_ASN1_GENERALSTRING_new(compare: sk_ASN1_GENERALSTRING_compfunc?): CPointer<stack_st_ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl658_sk_ASN1_GENERALSTRING_new_null")
external fun sk_ASN1_GENERALSTRING_new_null(): CPointer<stack_st_ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl659_sk_ASN1_GENERALSTRING_new_reserve")
external fun sk_ASN1_GENERALSTRING_new_reserve(
    compare: sk_ASN1_GENERALSTRING_compfunc?,
    n: Int
): CPointer<stack_st_ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl660_sk_ASN1_GENERALSTRING_reserve")
external fun sk_ASN1_GENERALSTRING_reserve(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?, n: Int): Int

@CCall("knifunptr_openssl661_sk_ASN1_GENERALSTRING_free")
external fun sk_ASN1_GENERALSTRING_free(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): Unit

@CCall("knifunptr_openssl662_sk_ASN1_GENERALSTRING_zero")
external fun sk_ASN1_GENERALSTRING_zero(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): Unit

@CCall("knifunptr_openssl663_sk_ASN1_GENERALSTRING_delete")
external fun sk_ASN1_GENERALSTRING_delete(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    i: Int
): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl664_sk_ASN1_GENERALSTRING_delete_ptr")
external fun sk_ASN1_GENERALSTRING_delete_ptr(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    ptr: CValuesRef<ASN1_GENERALSTRING>?
): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl665_sk_ASN1_GENERALSTRING_push")
external fun sk_ASN1_GENERALSTRING_push(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    ptr: CValuesRef<ASN1_GENERALSTRING>?
): Int

@CCall("knifunptr_openssl666_sk_ASN1_GENERALSTRING_unshift")
external fun sk_ASN1_GENERALSTRING_unshift(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    ptr: CValuesRef<ASN1_GENERALSTRING>?
): Int

@CCall("knifunptr_openssl667_sk_ASN1_GENERALSTRING_pop")
external fun sk_ASN1_GENERALSTRING_pop(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl668_sk_ASN1_GENERALSTRING_shift")
external fun sk_ASN1_GENERALSTRING_shift(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl669_sk_ASN1_GENERALSTRING_pop_free")
external fun sk_ASN1_GENERALSTRING_pop_free(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    freefunc: sk_ASN1_GENERALSTRING_freefunc?
): Unit

@CCall("knifunptr_openssl670_sk_ASN1_GENERALSTRING_insert")
external fun sk_ASN1_GENERALSTRING_insert(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    ptr: CValuesRef<ASN1_GENERALSTRING>?,
    idx: Int
): Int

@CCall("knifunptr_openssl671_sk_ASN1_GENERALSTRING_set")
external fun sk_ASN1_GENERALSTRING_set(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    idx: Int,
    ptr: CValuesRef<ASN1_GENERALSTRING>?
): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl672_sk_ASN1_GENERALSTRING_find")
external fun sk_ASN1_GENERALSTRING_find(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    ptr: CValuesRef<ASN1_GENERALSTRING>?
): Int

@CCall("knifunptr_openssl673_sk_ASN1_GENERALSTRING_find_ex")
external fun sk_ASN1_GENERALSTRING_find_ex(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    ptr: CValuesRef<ASN1_GENERALSTRING>?
): Int

@CCall("knifunptr_openssl674_sk_ASN1_GENERALSTRING_sort")
external fun sk_ASN1_GENERALSTRING_sort(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): Unit

@CCall("knifunptr_openssl675_sk_ASN1_GENERALSTRING_is_sorted")
external fun sk_ASN1_GENERALSTRING_is_sorted(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): Int

@CCall("knifunptr_openssl676_sk_ASN1_GENERALSTRING_dup")
external fun sk_ASN1_GENERALSTRING_dup(sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?): CPointer<stack_st_ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl677_sk_ASN1_GENERALSTRING_deep_copy")
external fun sk_ASN1_GENERALSTRING_deep_copy(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    copyfunc: sk_ASN1_GENERALSTRING_copyfunc?,
    freefunc: sk_ASN1_GENERALSTRING_freefunc?
): CPointer<stack_st_ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl678_sk_ASN1_GENERALSTRING_set_cmp_func")
external fun sk_ASN1_GENERALSTRING_set_cmp_func(
    sk: CValuesRef<stack_st_ASN1_GENERALSTRING>?,
    compare: sk_ASN1_GENERALSTRING_compfunc?
): sk_ASN1_GENERALSTRING_compfunc?

@CCall("knifunptr_openssl679_sk_ASN1_UTF8STRING_num")
external fun sk_ASN1_UTF8STRING_num(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): Int

@CCall("knifunptr_openssl680_sk_ASN1_UTF8STRING_value")
external fun sk_ASN1_UTF8STRING_value(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?, idx: Int): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl681_sk_ASN1_UTF8STRING_new")
external fun sk_ASN1_UTF8STRING_new(compare: sk_ASN1_UTF8STRING_compfunc?): CPointer<stack_st_ASN1_UTF8STRING>?

@CCall("knifunptr_openssl682_sk_ASN1_UTF8STRING_new_null")
external fun sk_ASN1_UTF8STRING_new_null(): CPointer<stack_st_ASN1_UTF8STRING>?

@CCall("knifunptr_openssl683_sk_ASN1_UTF8STRING_new_reserve")
external fun sk_ASN1_UTF8STRING_new_reserve(
    compare: sk_ASN1_UTF8STRING_compfunc?,
    n: Int
): CPointer<stack_st_ASN1_UTF8STRING>?

@CCall("knifunptr_openssl684_sk_ASN1_UTF8STRING_reserve")
external fun sk_ASN1_UTF8STRING_reserve(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?, n: Int): Int

@CCall("knifunptr_openssl685_sk_ASN1_UTF8STRING_free")
external fun sk_ASN1_UTF8STRING_free(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): Unit

@CCall("knifunptr_openssl686_sk_ASN1_UTF8STRING_zero")
external fun sk_ASN1_UTF8STRING_zero(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): Unit

@CCall("knifunptr_openssl687_sk_ASN1_UTF8STRING_delete")
external fun sk_ASN1_UTF8STRING_delete(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?, i: Int): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl688_sk_ASN1_UTF8STRING_delete_ptr")
external fun sk_ASN1_UTF8STRING_delete_ptr(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    ptr: CValuesRef<ASN1_UTF8STRING>?
): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl689_sk_ASN1_UTF8STRING_push")
external fun sk_ASN1_UTF8STRING_push(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?, ptr: CValuesRef<ASN1_UTF8STRING>?): Int

@CCall("knifunptr_openssl690_sk_ASN1_UTF8STRING_unshift")
external fun sk_ASN1_UTF8STRING_unshift(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    ptr: CValuesRef<ASN1_UTF8STRING>?
): Int

@CCall("knifunptr_openssl691_sk_ASN1_UTF8STRING_pop")
external fun sk_ASN1_UTF8STRING_pop(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl692_sk_ASN1_UTF8STRING_shift")
external fun sk_ASN1_UTF8STRING_shift(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl693_sk_ASN1_UTF8STRING_pop_free")
external fun sk_ASN1_UTF8STRING_pop_free(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    freefunc: sk_ASN1_UTF8STRING_freefunc?
): Unit

@CCall("knifunptr_openssl694_sk_ASN1_UTF8STRING_insert")
external fun sk_ASN1_UTF8STRING_insert(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    ptr: CValuesRef<ASN1_UTF8STRING>?,
    idx: Int
): Int

@CCall("knifunptr_openssl695_sk_ASN1_UTF8STRING_set")
external fun sk_ASN1_UTF8STRING_set(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    idx: Int,
    ptr: CValuesRef<ASN1_UTF8STRING>?
): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl696_sk_ASN1_UTF8STRING_find")
external fun sk_ASN1_UTF8STRING_find(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?, ptr: CValuesRef<ASN1_UTF8STRING>?): Int

@CCall("knifunptr_openssl697_sk_ASN1_UTF8STRING_find_ex")
external fun sk_ASN1_UTF8STRING_find_ex(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    ptr: CValuesRef<ASN1_UTF8STRING>?
): Int

@CCall("knifunptr_openssl698_sk_ASN1_UTF8STRING_sort")
external fun sk_ASN1_UTF8STRING_sort(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): Unit

@CCall("knifunptr_openssl699_sk_ASN1_UTF8STRING_is_sorted")
external fun sk_ASN1_UTF8STRING_is_sorted(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): Int

@CCall("knifunptr_openssl700_sk_ASN1_UTF8STRING_dup")
external fun sk_ASN1_UTF8STRING_dup(sk: CValuesRef<stack_st_ASN1_UTF8STRING>?): CPointer<stack_st_ASN1_UTF8STRING>?

@CCall("knifunptr_openssl701_sk_ASN1_UTF8STRING_deep_copy")
external fun sk_ASN1_UTF8STRING_deep_copy(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    copyfunc: sk_ASN1_UTF8STRING_copyfunc?,
    freefunc: sk_ASN1_UTF8STRING_freefunc?
): CPointer<stack_st_ASN1_UTF8STRING>?

@CCall("knifunptr_openssl702_sk_ASN1_UTF8STRING_set_cmp_func")
external fun sk_ASN1_UTF8STRING_set_cmp_func(
    sk: CValuesRef<stack_st_ASN1_UTF8STRING>?,
    compare: sk_ASN1_UTF8STRING_compfunc?
): sk_ASN1_UTF8STRING_compfunc?

@CCall("knifunptr_openssl703_sk_ASN1_TYPE_num")
external fun sk_ASN1_TYPE_num(sk: CValuesRef<stack_st_ASN1_TYPE>?): Int

@CCall("knifunptr_openssl704_sk_ASN1_TYPE_value")
external fun sk_ASN1_TYPE_value(sk: CValuesRef<stack_st_ASN1_TYPE>?, idx: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl705_sk_ASN1_TYPE_new")
external fun sk_ASN1_TYPE_new(compare: sk_ASN1_TYPE_compfunc?): CPointer<stack_st_ASN1_TYPE>?

@CCall("knifunptr_openssl706_sk_ASN1_TYPE_new_null")
external fun sk_ASN1_TYPE_new_null(): CPointer<stack_st_ASN1_TYPE>?

@CCall("knifunptr_openssl707_sk_ASN1_TYPE_new_reserve")
external fun sk_ASN1_TYPE_new_reserve(compare: sk_ASN1_TYPE_compfunc?, n: Int): CPointer<stack_st_ASN1_TYPE>?

@CCall("knifunptr_openssl708_sk_ASN1_TYPE_reserve")
external fun sk_ASN1_TYPE_reserve(sk: CValuesRef<stack_st_ASN1_TYPE>?, n: Int): Int

@CCall("knifunptr_openssl709_sk_ASN1_TYPE_free")
external fun sk_ASN1_TYPE_free(sk: CValuesRef<stack_st_ASN1_TYPE>?): Unit

@CCall("knifunptr_openssl710_sk_ASN1_TYPE_zero")
external fun sk_ASN1_TYPE_zero(sk: CValuesRef<stack_st_ASN1_TYPE>?): Unit

@CCall("knifunptr_openssl711_sk_ASN1_TYPE_delete")
external fun sk_ASN1_TYPE_delete(sk: CValuesRef<stack_st_ASN1_TYPE>?, i: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl712_sk_ASN1_TYPE_delete_ptr")
external fun sk_ASN1_TYPE_delete_ptr(
    sk: CValuesRef<stack_st_ASN1_TYPE>?,
    ptr: CValuesRef<ASN1_TYPE>?
): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl713_sk_ASN1_TYPE_push")
external fun sk_ASN1_TYPE_push(sk: CValuesRef<stack_st_ASN1_TYPE>?, ptr: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl714_sk_ASN1_TYPE_unshift")
external fun sk_ASN1_TYPE_unshift(sk: CValuesRef<stack_st_ASN1_TYPE>?, ptr: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl715_sk_ASN1_TYPE_pop")
external fun sk_ASN1_TYPE_pop(sk: CValuesRef<stack_st_ASN1_TYPE>?): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl716_sk_ASN1_TYPE_shift")
external fun sk_ASN1_TYPE_shift(sk: CValuesRef<stack_st_ASN1_TYPE>?): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl717_sk_ASN1_TYPE_pop_free")
external fun sk_ASN1_TYPE_pop_free(sk: CValuesRef<stack_st_ASN1_TYPE>?, freefunc: sk_ASN1_TYPE_freefunc?): Unit

@CCall("knifunptr_openssl718_sk_ASN1_TYPE_insert")
external fun sk_ASN1_TYPE_insert(sk: CValuesRef<stack_st_ASN1_TYPE>?, ptr: CValuesRef<ASN1_TYPE>?, idx: Int): Int

@CCall("knifunptr_openssl719_sk_ASN1_TYPE_set")
external fun sk_ASN1_TYPE_set(
    sk: CValuesRef<stack_st_ASN1_TYPE>?,
    idx: Int,
    ptr: CValuesRef<ASN1_TYPE>?
): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl720_sk_ASN1_TYPE_find")
external fun sk_ASN1_TYPE_find(sk: CValuesRef<stack_st_ASN1_TYPE>?, ptr: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl721_sk_ASN1_TYPE_find_ex")
external fun sk_ASN1_TYPE_find_ex(sk: CValuesRef<stack_st_ASN1_TYPE>?, ptr: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl722_sk_ASN1_TYPE_sort")
external fun sk_ASN1_TYPE_sort(sk: CValuesRef<stack_st_ASN1_TYPE>?): Unit

@CCall("knifunptr_openssl723_sk_ASN1_TYPE_is_sorted")
external fun sk_ASN1_TYPE_is_sorted(sk: CValuesRef<stack_st_ASN1_TYPE>?): Int

@CCall("knifunptr_openssl724_sk_ASN1_TYPE_dup")
external fun sk_ASN1_TYPE_dup(sk: CValuesRef<stack_st_ASN1_TYPE>?): CPointer<stack_st_ASN1_TYPE>?

@CCall("knifunptr_openssl725_sk_ASN1_TYPE_deep_copy")
external fun sk_ASN1_TYPE_deep_copy(
    sk: CValuesRef<stack_st_ASN1_TYPE>?,
    copyfunc: sk_ASN1_TYPE_copyfunc?,
    freefunc: sk_ASN1_TYPE_freefunc?
): CPointer<stack_st_ASN1_TYPE>?

@CCall("knifunptr_openssl726_sk_ASN1_TYPE_set_cmp_func")
external fun sk_ASN1_TYPE_set_cmp_func(
    sk: CValuesRef<stack_st_ASN1_TYPE>?,
    compare: sk_ASN1_TYPE_compfunc?
): sk_ASN1_TYPE_compfunc?

@CCall("knifunptr_openssl727_d2i_ASN1_SEQUENCE_ANY")
external fun d2i_ASN1_SEQUENCE_ANY(
    a: CValuesRef<CPointerVar<ASN1_SEQUENCE_ANY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_SEQUENCE_ANY>?

@CCall("knifunptr_openssl728_i2d_ASN1_SEQUENCE_ANY")
external fun i2d_ASN1_SEQUENCE_ANY(a: CValuesRef<ASN1_SEQUENCE_ANY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl729_d2i_ASN1_SET_ANY")
external fun d2i_ASN1_SET_ANY(
    a: CValuesRef<CPointerVar<ASN1_SEQUENCE_ANY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_SEQUENCE_ANY>?

@CCall("knifunptr_openssl730_i2d_ASN1_SET_ANY")
external fun i2d_ASN1_SET_ANY(a: CValuesRef<ASN1_SEQUENCE_ANY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl731_ASN1_TYPE_new")
external fun ASN1_TYPE_new(): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl732_ASN1_TYPE_free")
external fun ASN1_TYPE_free(a: CValuesRef<ASN1_TYPE>?): Unit

@CCall("knifunptr_openssl733_d2i_ASN1_TYPE")
external fun d2i_ASN1_TYPE(
    a: CValuesRef<CPointerVar<ASN1_TYPE>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl734_i2d_ASN1_TYPE")
external fun i2d_ASN1_TYPE(a: CValuesRef<ASN1_TYPE>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl735_ASN1_TYPE_get")
external fun ASN1_TYPE_get(a: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl736_ASN1_TYPE_set")
external fun ASN1_TYPE_set(a: CValuesRef<ASN1_TYPE>?, type: Int, value: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl737_ASN1_TYPE_set1")
external fun ASN1_TYPE_set1(a: CValuesRef<ASN1_TYPE>?, type: Int, value: CValuesRef<*>?): Int

@CCall("knifunptr_openssl738_ASN1_TYPE_cmp")
external fun ASN1_TYPE_cmp(a: CValuesRef<ASN1_TYPE>?, b: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl739_ASN1_TYPE_pack_sequence")
external fun ASN1_TYPE_pack_sequence(
    it: CValuesRef<ASN1_ITEM>?,
    s: CValuesRef<*>?,
    t: CValuesRef<CPointerVar<ASN1_TYPE>>?
): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl740_ASN1_TYPE_unpack_sequence")
external fun ASN1_TYPE_unpack_sequence(it: CValuesRef<ASN1_ITEM>?, t: CValuesRef<ASN1_TYPE>?): COpaquePointer?

@CCall("knifunptr_openssl741_ASN1_OBJECT_new")
external fun ASN1_OBJECT_new(): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl742_ASN1_OBJECT_free")
external fun ASN1_OBJECT_free(a: CValuesRef<ASN1_OBJECT>?): Unit

@CCall("knifunptr_openssl743_i2d_ASN1_OBJECT")
external fun i2d_ASN1_OBJECT(a: CValuesRef<ASN1_OBJECT>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl744_d2i_ASN1_OBJECT")
external fun d2i_ASN1_OBJECT(
    a: CValuesRef<CPointerVar<ASN1_OBJECT>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl745_sk_ASN1_OBJECT_num")
external fun sk_ASN1_OBJECT_num(sk: CValuesRef<stack_st_ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl746_sk_ASN1_OBJECT_value")
external fun sk_ASN1_OBJECT_value(sk: CValuesRef<stack_st_ASN1_OBJECT>?, idx: Int): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl747_sk_ASN1_OBJECT_new")
external fun sk_ASN1_OBJECT_new(compare: sk_ASN1_OBJECT_compfunc?): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl748_sk_ASN1_OBJECT_new_null")
external fun sk_ASN1_OBJECT_new_null(): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl749_sk_ASN1_OBJECT_new_reserve")
external fun sk_ASN1_OBJECT_new_reserve(compare: sk_ASN1_OBJECT_compfunc?, n: Int): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl750_sk_ASN1_OBJECT_reserve")
external fun sk_ASN1_OBJECT_reserve(sk: CValuesRef<stack_st_ASN1_OBJECT>?, n: Int): Int

@CCall("knifunptr_openssl751_sk_ASN1_OBJECT_free")
external fun sk_ASN1_OBJECT_free(sk: CValuesRef<stack_st_ASN1_OBJECT>?): Unit

@CCall("knifunptr_openssl752_sk_ASN1_OBJECT_zero")
external fun sk_ASN1_OBJECT_zero(sk: CValuesRef<stack_st_ASN1_OBJECT>?): Unit

@CCall("knifunptr_openssl753_sk_ASN1_OBJECT_delete")
external fun sk_ASN1_OBJECT_delete(sk: CValuesRef<stack_st_ASN1_OBJECT>?, i: Int): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl754_sk_ASN1_OBJECT_delete_ptr")
external fun sk_ASN1_OBJECT_delete_ptr(
    sk: CValuesRef<stack_st_ASN1_OBJECT>?,
    ptr: CValuesRef<ASN1_OBJECT>?
): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl755_sk_ASN1_OBJECT_push")
external fun sk_ASN1_OBJECT_push(sk: CValuesRef<stack_st_ASN1_OBJECT>?, ptr: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl756_sk_ASN1_OBJECT_unshift")
external fun sk_ASN1_OBJECT_unshift(sk: CValuesRef<stack_st_ASN1_OBJECT>?, ptr: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl757_sk_ASN1_OBJECT_pop")
external fun sk_ASN1_OBJECT_pop(sk: CValuesRef<stack_st_ASN1_OBJECT>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl758_sk_ASN1_OBJECT_shift")
external fun sk_ASN1_OBJECT_shift(sk: CValuesRef<stack_st_ASN1_OBJECT>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl759_sk_ASN1_OBJECT_pop_free")
external fun sk_ASN1_OBJECT_pop_free(sk: CValuesRef<stack_st_ASN1_OBJECT>?, freefunc: sk_ASN1_OBJECT_freefunc?): Unit

@CCall("knifunptr_openssl760_sk_ASN1_OBJECT_insert")
external fun sk_ASN1_OBJECT_insert(sk: CValuesRef<stack_st_ASN1_OBJECT>?, ptr: CValuesRef<ASN1_OBJECT>?, idx: Int): Int

@CCall("knifunptr_openssl761_sk_ASN1_OBJECT_set")
external fun sk_ASN1_OBJECT_set(
    sk: CValuesRef<stack_st_ASN1_OBJECT>?,
    idx: Int,
    ptr: CValuesRef<ASN1_OBJECT>?
): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl762_sk_ASN1_OBJECT_find")
external fun sk_ASN1_OBJECT_find(sk: CValuesRef<stack_st_ASN1_OBJECT>?, ptr: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl763_sk_ASN1_OBJECT_find_ex")
external fun sk_ASN1_OBJECT_find_ex(sk: CValuesRef<stack_st_ASN1_OBJECT>?, ptr: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl764_sk_ASN1_OBJECT_sort")
external fun sk_ASN1_OBJECT_sort(sk: CValuesRef<stack_st_ASN1_OBJECT>?): Unit

@CCall("knifunptr_openssl765_sk_ASN1_OBJECT_is_sorted")
external fun sk_ASN1_OBJECT_is_sorted(sk: CValuesRef<stack_st_ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl766_sk_ASN1_OBJECT_dup")
external fun sk_ASN1_OBJECT_dup(sk: CValuesRef<stack_st_ASN1_OBJECT>?): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl767_sk_ASN1_OBJECT_deep_copy")
external fun sk_ASN1_OBJECT_deep_copy(
    sk: CValuesRef<stack_st_ASN1_OBJECT>?,
    copyfunc: sk_ASN1_OBJECT_copyfunc?,
    freefunc: sk_ASN1_OBJECT_freefunc?
): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl768_sk_ASN1_OBJECT_set_cmp_func")
external fun sk_ASN1_OBJECT_set_cmp_func(
    sk: CValuesRef<stack_st_ASN1_OBJECT>?,
    compare: sk_ASN1_OBJECT_compfunc?
): sk_ASN1_OBJECT_compfunc?

@CCall("knifunptr_openssl769_ASN1_STRING_new")
external fun ASN1_STRING_new(): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl770_ASN1_STRING_free")
external fun ASN1_STRING_free(a: CValuesRef<ASN1_STRING>?): Unit

@CCall("knifunptr_openssl771_ASN1_STRING_clear_free")
external fun ASN1_STRING_clear_free(a: CValuesRef<ASN1_STRING>?): Unit

@CCall("knifunptr_openssl772_ASN1_STRING_copy")
external fun ASN1_STRING_copy(dst: CValuesRef<ASN1_STRING>?, str: CValuesRef<ASN1_STRING>?): Int

@CCall("knifunptr_openssl773_ASN1_STRING_dup")
external fun ASN1_STRING_dup(a: CValuesRef<ASN1_STRING>?): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl774_ASN1_STRING_type_new")
external fun ASN1_STRING_type_new(type: Int): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl775_ASN1_STRING_cmp")
external fun ASN1_STRING_cmp(a: CValuesRef<ASN1_STRING>?, b: CValuesRef<ASN1_STRING>?): Int

@CCall("knifunptr_openssl776_ASN1_STRING_set")
external fun ASN1_STRING_set(str: CValuesRef<ASN1_STRING>?, data: CValuesRef<*>?, len: Int): Int

@CCall("knifunptr_openssl777_ASN1_STRING_set0")
external fun ASN1_STRING_set0(str: CValuesRef<ASN1_STRING>?, data: CValuesRef<*>?, len: Int): Unit

@CCall("knifunptr_openssl778_ASN1_STRING_length")
external fun ASN1_STRING_length(x: CValuesRef<ASN1_STRING>?): Int

@CCall("knifunptr_openssl779_ASN1_STRING_length_set")
external fun ASN1_STRING_length_set(x: CValuesRef<ASN1_STRING>?, n: Int): Unit

@CCall("knifunptr_openssl780_ASN1_STRING_type")
external fun ASN1_STRING_type(x: CValuesRef<ASN1_STRING>?): Int

@CCall("knifunptr_openssl781_ASN1_STRING_data")
external fun ASN1_STRING_data(x: CValuesRef<ASN1_STRING>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl782_ASN1_STRING_get0_data")
external fun ASN1_STRING_get0_data(x: CValuesRef<ASN1_STRING>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl783_ASN1_BIT_STRING_new")
external fun ASN1_BIT_STRING_new(): CPointer<ASN1_BIT_STRING>?

@CCall("knifunptr_openssl784_ASN1_BIT_STRING_free")
external fun ASN1_BIT_STRING_free(a: CValuesRef<ASN1_BIT_STRING>?): Unit

@CCall("knifunptr_openssl785_d2i_ASN1_BIT_STRING")
external fun d2i_ASN1_BIT_STRING(
    a: CValuesRef<CPointerVar<ASN1_BIT_STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_BIT_STRING>?

@CCall("knifunptr_openssl786_i2d_ASN1_BIT_STRING")
external fun i2d_ASN1_BIT_STRING(a: CValuesRef<ASN1_BIT_STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl787_ASN1_BIT_STRING_set")
external fun ASN1_BIT_STRING_set(a: CValuesRef<ASN1_BIT_STRING>?, d: CValuesRef<UByteVar>?, length: Int): Int

@CCall("knifunptr_openssl788_ASN1_BIT_STRING_set_bit")
external fun ASN1_BIT_STRING_set_bit(a: CValuesRef<ASN1_BIT_STRING>?, n: Int, value: Int): Int

@CCall("knifunptr_openssl789_ASN1_BIT_STRING_get_bit")
external fun ASN1_BIT_STRING_get_bit(a: CValuesRef<ASN1_BIT_STRING>?, n: Int): Int

@CCall("knifunptr_openssl790_ASN1_BIT_STRING_check")
external fun ASN1_BIT_STRING_check(a: CValuesRef<ASN1_BIT_STRING>?, flags: CValuesRef<UByteVar>?, flags_len: Int): Int

@CCall("knifunptr_openssl791_ASN1_BIT_STRING_name_print")
external fun ASN1_BIT_STRING_name_print(
    out: CValuesRef<BIO>?,
    bs: CValuesRef<ASN1_BIT_STRING>?,
    tbl: CValuesRef<BIT_STRING_BITNAME>?,
    indent: Int
): Int

@CCall("knifunptr_openssl792_ASN1_BIT_STRING_num_asc")
external fun ASN1_BIT_STRING_num_asc(@CCall.CString name: String?, tbl: CValuesRef<BIT_STRING_BITNAME>?): Int

@CCall("knifunptr_openssl793_ASN1_BIT_STRING_set_asc")
external fun ASN1_BIT_STRING_set_asc(
    bs: CValuesRef<ASN1_BIT_STRING>?, @CCall.CString name: String?,
    value: Int,
    tbl: CValuesRef<BIT_STRING_BITNAME>?
): Int

@CCall("knifunptr_openssl794_ASN1_INTEGER_new")
external fun ASN1_INTEGER_new(): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl795_ASN1_INTEGER_free")
external fun ASN1_INTEGER_free(a: CValuesRef<ASN1_INTEGER>?): Unit

@CCall("knifunptr_openssl796_d2i_ASN1_INTEGER")
external fun d2i_ASN1_INTEGER(
    a: CValuesRef<CPointerVar<ASN1_INTEGER>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl797_i2d_ASN1_INTEGER")
external fun i2d_ASN1_INTEGER(a: CValuesRef<ASN1_INTEGER>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl798_d2i_ASN1_UINTEGER")
external fun d2i_ASN1_UINTEGER(
    a: CValuesRef<CPointerVar<ASN1_INTEGER>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl799_ASN1_INTEGER_dup")
external fun ASN1_INTEGER_dup(x: CValuesRef<ASN1_INTEGER>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl800_ASN1_INTEGER_cmp")
external fun ASN1_INTEGER_cmp(x: CValuesRef<ASN1_INTEGER>?, y: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl801_ASN1_ENUMERATED_new")
external fun ASN1_ENUMERATED_new(): CPointer<ASN1_ENUMERATED>?

@CCall("knifunptr_openssl802_ASN1_ENUMERATED_free")
external fun ASN1_ENUMERATED_free(a: CValuesRef<ASN1_ENUMERATED>?): Unit

@CCall("knifunptr_openssl803_d2i_ASN1_ENUMERATED")
external fun d2i_ASN1_ENUMERATED(
    a: CValuesRef<CPointerVar<ASN1_ENUMERATED>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_ENUMERATED>?

@CCall("knifunptr_openssl804_i2d_ASN1_ENUMERATED")
external fun i2d_ASN1_ENUMERATED(a: CValuesRef<ASN1_ENUMERATED>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl805_ASN1_UTCTIME_check")
external fun ASN1_UTCTIME_check(a: CValuesRef<ASN1_UTCTIME>?): Int

@CCall("knifunptr_openssl806_ASN1_UTCTIME_set")
external fun ASN1_UTCTIME_set(s: CValuesRef<ASN1_UTCTIME>?, t: time_t): CPointer<ASN1_UTCTIME>?

@CCall("knifunptr_openssl807_ASN1_UTCTIME_adj")
external fun ASN1_UTCTIME_adj(
    s: CValuesRef<ASN1_UTCTIME>?,
    t: time_t,
    offset_day: Int,
    offset_sec: Long
): CPointer<ASN1_UTCTIME>?

@CCall("knifunptr_openssl808_ASN1_UTCTIME_set_string")
external fun ASN1_UTCTIME_set_string(s: CValuesRef<ASN1_UTCTIME>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl809_ASN1_UTCTIME_cmp_time_t")
external fun ASN1_UTCTIME_cmp_time_t(s: CValuesRef<ASN1_UTCTIME>?, t: time_t): Int

@CCall("knifunptr_openssl810_ASN1_GENERALIZEDTIME_check")
external fun ASN1_GENERALIZEDTIME_check(a: CValuesRef<ASN1_GENERALIZEDTIME>?): Int

@CCall("knifunptr_openssl811_ASN1_GENERALIZEDTIME_set")
external fun ASN1_GENERALIZEDTIME_set(s: CValuesRef<ASN1_GENERALIZEDTIME>?, t: time_t): CPointer<ASN1_GENERALIZEDTIME>?

@CCall("knifunptr_openssl812_ASN1_GENERALIZEDTIME_adj")
external fun ASN1_GENERALIZEDTIME_adj(
    s: CValuesRef<ASN1_GENERALIZEDTIME>?,
    t: time_t,
    offset_day: Int,
    offset_sec: Long
): CPointer<ASN1_GENERALIZEDTIME>?

@CCall("knifunptr_openssl813_ASN1_GENERALIZEDTIME_set_string")
external fun ASN1_GENERALIZEDTIME_set_string(s: CValuesRef<ASN1_GENERALIZEDTIME>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl814_ASN1_TIME_diff")
external fun ASN1_TIME_diff(
    pday: CValuesRef<IntVar>?,
    psec: CValuesRef<IntVar>?,
    from: CValuesRef<ASN1_TIME>?,
    to: CValuesRef<ASN1_TIME>?
): Int

@CCall("knifunptr_openssl815_ASN1_OCTET_STRING_new")
external fun ASN1_OCTET_STRING_new(): CPointer<ASN1_OCTET_STRING>?

@CCall("knifunptr_openssl816_ASN1_OCTET_STRING_free")
external fun ASN1_OCTET_STRING_free(a: CValuesRef<ASN1_OCTET_STRING>?): Unit

@CCall("knifunptr_openssl817_d2i_ASN1_OCTET_STRING")
external fun d2i_ASN1_OCTET_STRING(
    a: CValuesRef<CPointerVar<ASN1_OCTET_STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_OCTET_STRING>?

@CCall("knifunptr_openssl818_i2d_ASN1_OCTET_STRING")
external fun i2d_ASN1_OCTET_STRING(a: CValuesRef<ASN1_OCTET_STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl819_ASN1_OCTET_STRING_dup")
external fun ASN1_OCTET_STRING_dup(a: CValuesRef<ASN1_OCTET_STRING>?): CPointer<ASN1_OCTET_STRING>?

@CCall("knifunptr_openssl820_ASN1_OCTET_STRING_cmp")
external fun ASN1_OCTET_STRING_cmp(a: CValuesRef<ASN1_OCTET_STRING>?, b: CValuesRef<ASN1_OCTET_STRING>?): Int

@CCall("knifunptr_openssl821_ASN1_OCTET_STRING_set")
external fun ASN1_OCTET_STRING_set(str: CValuesRef<ASN1_OCTET_STRING>?, data: CValuesRef<UByteVar>?, len: Int): Int

@CCall("knifunptr_openssl822_ASN1_VISIBLESTRING_new")
external fun ASN1_VISIBLESTRING_new(): CPointer<ASN1_VISIBLESTRING>?

@CCall("knifunptr_openssl823_ASN1_VISIBLESTRING_free")
external fun ASN1_VISIBLESTRING_free(a: CValuesRef<ASN1_VISIBLESTRING>?): Unit

@CCall("knifunptr_openssl824_d2i_ASN1_VISIBLESTRING")
external fun d2i_ASN1_VISIBLESTRING(
    a: CValuesRef<CPointerVar<ASN1_VISIBLESTRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_VISIBLESTRING>?

@CCall("knifunptr_openssl825_i2d_ASN1_VISIBLESTRING")
external fun i2d_ASN1_VISIBLESTRING(a: CValuesRef<ASN1_VISIBLESTRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl826_ASN1_UNIVERSALSTRING_new")
external fun ASN1_UNIVERSALSTRING_new(): CPointer<ASN1_UNIVERSALSTRING>?

@CCall("knifunptr_openssl827_ASN1_UNIVERSALSTRING_free")
external fun ASN1_UNIVERSALSTRING_free(a: CValuesRef<ASN1_UNIVERSALSTRING>?): Unit

@CCall("knifunptr_openssl828_d2i_ASN1_UNIVERSALSTRING")
external fun d2i_ASN1_UNIVERSALSTRING(
    a: CValuesRef<CPointerVar<ASN1_UNIVERSALSTRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_UNIVERSALSTRING>?

@CCall("knifunptr_openssl829_i2d_ASN1_UNIVERSALSTRING")
external fun i2d_ASN1_UNIVERSALSTRING(
    a: CValuesRef<ASN1_UNIVERSALSTRING>?,
    out: CValuesRef<CPointerVar<UByteVar>>?
): Int

@CCall("knifunptr_openssl830_ASN1_UTF8STRING_new")
external fun ASN1_UTF8STRING_new(): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl831_ASN1_UTF8STRING_free")
external fun ASN1_UTF8STRING_free(a: CValuesRef<ASN1_UTF8STRING>?): Unit

@CCall("knifunptr_openssl832_d2i_ASN1_UTF8STRING")
external fun d2i_ASN1_UTF8STRING(
    a: CValuesRef<CPointerVar<ASN1_UTF8STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_UTF8STRING>?

@CCall("knifunptr_openssl833_i2d_ASN1_UTF8STRING")
external fun i2d_ASN1_UTF8STRING(a: CValuesRef<ASN1_UTF8STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl834_ASN1_NULL_new")
external fun ASN1_NULL_new(): CPointer<ASN1_NULLVar>?

@CCall("knifunptr_openssl835_ASN1_NULL_free")
external fun ASN1_NULL_free(a: CValuesRef<ASN1_NULLVar>?): Unit

@CCall("knifunptr_openssl836_d2i_ASN1_NULL")
external fun d2i_ASN1_NULL(
    a: CValuesRef<CPointerVar<ASN1_NULLVar>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_NULLVar>?

@CCall("knifunptr_openssl837_i2d_ASN1_NULL")
external fun i2d_ASN1_NULL(a: CValuesRef<ASN1_NULLVar>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl838_ASN1_BMPSTRING_new")
external fun ASN1_BMPSTRING_new(): CPointer<ASN1_BMPSTRING>?

@CCall("knifunptr_openssl839_ASN1_BMPSTRING_free")
external fun ASN1_BMPSTRING_free(a: CValuesRef<ASN1_BMPSTRING>?): Unit

@CCall("knifunptr_openssl840_d2i_ASN1_BMPSTRING")
external fun d2i_ASN1_BMPSTRING(
    a: CValuesRef<CPointerVar<ASN1_BMPSTRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_BMPSTRING>?

@CCall("knifunptr_openssl841_i2d_ASN1_BMPSTRING")
external fun i2d_ASN1_BMPSTRING(a: CValuesRef<ASN1_BMPSTRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl842_UTF8_getc")
external fun UTF8_getc(str: CValuesRef<UByteVar>?, len: Int, `val`: CValuesRef<ULongVar>?): Int

@CCall("knifunptr_openssl843_UTF8_putc")
external fun UTF8_putc(str: CValuesRef<UByteVar>?, len: Int, value: ULong): Int

@CCall("knifunptr_openssl844_ASN1_PRINTABLE_new")
external fun ASN1_PRINTABLE_new(): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl845_ASN1_PRINTABLE_free")
external fun ASN1_PRINTABLE_free(a: CValuesRef<ASN1_STRING>?): Unit

@CCall("knifunptr_openssl846_d2i_ASN1_PRINTABLE")
external fun d2i_ASN1_PRINTABLE(
    a: CValuesRef<CPointerVar<ASN1_STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl847_i2d_ASN1_PRINTABLE")
external fun i2d_ASN1_PRINTABLE(a: CValuesRef<ASN1_STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl848_DIRECTORYSTRING_new")
external fun DIRECTORYSTRING_new(): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl849_DIRECTORYSTRING_free")
external fun DIRECTORYSTRING_free(a: CValuesRef<ASN1_STRING>?): Unit

@CCall("knifunptr_openssl850_d2i_DIRECTORYSTRING")
external fun d2i_DIRECTORYSTRING(
    a: CValuesRef<CPointerVar<ASN1_STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl851_i2d_DIRECTORYSTRING")
external fun i2d_DIRECTORYSTRING(a: CValuesRef<ASN1_STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl852_DISPLAYTEXT_new")
external fun DISPLAYTEXT_new(): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl853_DISPLAYTEXT_free")
external fun DISPLAYTEXT_free(a: CValuesRef<ASN1_STRING>?): Unit

@CCall("knifunptr_openssl854_d2i_DISPLAYTEXT")
external fun d2i_DISPLAYTEXT(
    a: CValuesRef<CPointerVar<ASN1_STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl855_i2d_DISPLAYTEXT")
external fun i2d_DISPLAYTEXT(a: CValuesRef<ASN1_STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl856_ASN1_PRINTABLESTRING_new")
external fun ASN1_PRINTABLESTRING_new(): CPointer<ASN1_PRINTABLESTRING>?

@CCall("knifunptr_openssl857_ASN1_PRINTABLESTRING_free")
external fun ASN1_PRINTABLESTRING_free(a: CValuesRef<ASN1_PRINTABLESTRING>?): Unit

@CCall("knifunptr_openssl858_d2i_ASN1_PRINTABLESTRING")
external fun d2i_ASN1_PRINTABLESTRING(
    a: CValuesRef<CPointerVar<ASN1_PRINTABLESTRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_PRINTABLESTRING>?

@CCall("knifunptr_openssl859_i2d_ASN1_PRINTABLESTRING")
external fun i2d_ASN1_PRINTABLESTRING(
    a: CValuesRef<ASN1_PRINTABLESTRING>?,
    out: CValuesRef<CPointerVar<UByteVar>>?
): Int

@CCall("knifunptr_openssl860_ASN1_T61STRING_new")
external fun ASN1_T61STRING_new(): CPointer<ASN1_T61STRING>?

@CCall("knifunptr_openssl861_ASN1_T61STRING_free")
external fun ASN1_T61STRING_free(a: CValuesRef<ASN1_T61STRING>?): Unit

@CCall("knifunptr_openssl862_d2i_ASN1_T61STRING")
external fun d2i_ASN1_T61STRING(
    a: CValuesRef<CPointerVar<ASN1_T61STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_T61STRING>?

@CCall("knifunptr_openssl863_i2d_ASN1_T61STRING")
external fun i2d_ASN1_T61STRING(a: CValuesRef<ASN1_T61STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl864_ASN1_IA5STRING_new")
external fun ASN1_IA5STRING_new(): CPointer<ASN1_IA5STRING>?

@CCall("knifunptr_openssl865_ASN1_IA5STRING_free")
external fun ASN1_IA5STRING_free(a: CValuesRef<ASN1_IA5STRING>?): Unit

@CCall("knifunptr_openssl866_d2i_ASN1_IA5STRING")
external fun d2i_ASN1_IA5STRING(
    a: CValuesRef<CPointerVar<ASN1_IA5STRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_IA5STRING>?

@CCall("knifunptr_openssl867_i2d_ASN1_IA5STRING")
external fun i2d_ASN1_IA5STRING(a: CValuesRef<ASN1_IA5STRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl868_ASN1_GENERALSTRING_new")
external fun ASN1_GENERALSTRING_new(): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl869_ASN1_GENERALSTRING_free")
external fun ASN1_GENERALSTRING_free(a: CValuesRef<ASN1_GENERALSTRING>?): Unit

@CCall("knifunptr_openssl870_d2i_ASN1_GENERALSTRING")
external fun d2i_ASN1_GENERALSTRING(
    a: CValuesRef<CPointerVar<ASN1_GENERALSTRING>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_GENERALSTRING>?

@CCall("knifunptr_openssl871_i2d_ASN1_GENERALSTRING")
external fun i2d_ASN1_GENERALSTRING(a: CValuesRef<ASN1_GENERALSTRING>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl872_ASN1_UTCTIME_new")
external fun ASN1_UTCTIME_new(): CPointer<ASN1_UTCTIME>?

@CCall("knifunptr_openssl873_ASN1_UTCTIME_free")
external fun ASN1_UTCTIME_free(a: CValuesRef<ASN1_UTCTIME>?): Unit

@CCall("knifunptr_openssl874_d2i_ASN1_UTCTIME")
external fun d2i_ASN1_UTCTIME(
    a: CValuesRef<CPointerVar<ASN1_UTCTIME>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_UTCTIME>?

@CCall("knifunptr_openssl875_i2d_ASN1_UTCTIME")
external fun i2d_ASN1_UTCTIME(a: CValuesRef<ASN1_UTCTIME>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl876_ASN1_GENERALIZEDTIME_new")
external fun ASN1_GENERALIZEDTIME_new(): CPointer<ASN1_GENERALIZEDTIME>?

@CCall("knifunptr_openssl877_ASN1_GENERALIZEDTIME_free")
external fun ASN1_GENERALIZEDTIME_free(a: CValuesRef<ASN1_GENERALIZEDTIME>?): Unit

@CCall("knifunptr_openssl878_d2i_ASN1_GENERALIZEDTIME")
external fun d2i_ASN1_GENERALIZEDTIME(
    a: CValuesRef<CPointerVar<ASN1_GENERALIZEDTIME>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_GENERALIZEDTIME>?

@CCall("knifunptr_openssl879_i2d_ASN1_GENERALIZEDTIME")
external fun i2d_ASN1_GENERALIZEDTIME(
    a: CValuesRef<ASN1_GENERALIZEDTIME>?,
    out: CValuesRef<CPointerVar<UByteVar>>?
): Int

@CCall("knifunptr_openssl880_ASN1_TIME_new")
external fun ASN1_TIME_new(): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl881_ASN1_TIME_free")
external fun ASN1_TIME_free(a: CValuesRef<ASN1_TIME>?): Unit

@CCall("knifunptr_openssl882_d2i_ASN1_TIME")
external fun d2i_ASN1_TIME(
    a: CValuesRef<CPointerVar<ASN1_TIME>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl883_i2d_ASN1_TIME")
external fun i2d_ASN1_TIME(a: CValuesRef<ASN1_TIME>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl884_ASN1_TIME_set")
external fun ASN1_TIME_set(s: CValuesRef<ASN1_TIME>?, t: time_t): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl885_ASN1_TIME_adj")
external fun ASN1_TIME_adj(
    s: CValuesRef<ASN1_TIME>?,
    t: time_t,
    offset_day: Int,
    offset_sec: Long
): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl886_ASN1_TIME_check")
external fun ASN1_TIME_check(t: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl887_ASN1_TIME_to_generalizedtime")
external fun ASN1_TIME_to_generalizedtime(
    t: CValuesRef<ASN1_TIME>?,
    out: CValuesRef<CPointerVar<ASN1_GENERALIZEDTIME>>?
): CPointer<ASN1_GENERALIZEDTIME>?

@CCall("knifunptr_openssl888_ASN1_TIME_set_string")
external fun ASN1_TIME_set_string(s: CValuesRef<ASN1_TIME>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl889_ASN1_TIME_set_string_X509")
external fun ASN1_TIME_set_string_X509(s: CValuesRef<ASN1_TIME>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl890_ASN1_TIME_to_tm")
external fun ASN1_TIME_to_tm(s: CValuesRef<ASN1_TIME>?, tm: CValuesRef<tm>?): Int

@CCall("knifunptr_openssl891_ASN1_TIME_normalize")
external fun ASN1_TIME_normalize(s: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl892_ASN1_TIME_cmp_time_t")
external fun ASN1_TIME_cmp_time_t(s: CValuesRef<ASN1_TIME>?, t: time_t): Int

@CCall("knifunptr_openssl893_ASN1_TIME_compare")
external fun ASN1_TIME_compare(a: CValuesRef<ASN1_TIME>?, b: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl894_i2a_ASN1_INTEGER")
external fun i2a_ASN1_INTEGER(bp: CValuesRef<BIO>?, a: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl895_a2i_ASN1_INTEGER")
external fun a2i_ASN1_INTEGER(
    bp: CValuesRef<BIO>?,
    bs: CValuesRef<ASN1_INTEGER>?,
    buf: CValuesRef<ByteVar>?,
    size: Int
): Int

@CCall("knifunptr_openssl896_i2a_ASN1_ENUMERATED")
external fun i2a_ASN1_ENUMERATED(bp: CValuesRef<BIO>?, a: CValuesRef<ASN1_ENUMERATED>?): Int

@CCall("knifunptr_openssl897_a2i_ASN1_ENUMERATED")
external fun a2i_ASN1_ENUMERATED(
    bp: CValuesRef<BIO>?,
    bs: CValuesRef<ASN1_ENUMERATED>?,
    buf: CValuesRef<ByteVar>?,
    size: Int
): Int

@CCall("knifunptr_openssl898_i2a_ASN1_OBJECT")
external fun i2a_ASN1_OBJECT(bp: CValuesRef<BIO>?, a: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl899_a2i_ASN1_STRING")
external fun a2i_ASN1_STRING(
    bp: CValuesRef<BIO>?,
    bs: CValuesRef<ASN1_STRING>?,
    buf: CValuesRef<ByteVar>?,
    size: Int
): Int

@CCall("knifunptr_openssl900_i2a_ASN1_STRING")
external fun i2a_ASN1_STRING(bp: CValuesRef<BIO>?, a: CValuesRef<ASN1_STRING>?, type: Int): Int

@CCall("knifunptr_openssl901_i2t_ASN1_OBJECT")
external fun i2t_ASN1_OBJECT(buf: CValuesRef<ByteVar>?, buf_len: Int, a: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl902_a2d_ASN1_OBJECT")
external fun a2d_ASN1_OBJECT(out: CValuesRef<UByteVar>?, olen: Int, @CCall.CString buf: String?, num: Int): Int

@CCall("knifunptr_openssl903_ASN1_OBJECT_create")
external fun ASN1_OBJECT_create(
    nid: Int,
    data: CValuesRef<UByteVar>?,
    len: Int, @CCall.CString sn: String?, @CCall.CString ln: String?
): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl904_ASN1_INTEGER_get_int64")
external fun ASN1_INTEGER_get_int64(pr: CValuesRef<int64_tVar>?, a: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl905_ASN1_INTEGER_set_int64")
external fun ASN1_INTEGER_set_int64(a: CValuesRef<ASN1_INTEGER>?, r: int64_t): Int

@CCall("knifunptr_openssl906_ASN1_INTEGER_get_uint64")
external fun ASN1_INTEGER_get_uint64(pr: CValuesRef<uint64_tVar>?, a: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl907_ASN1_INTEGER_set_uint64")
external fun ASN1_INTEGER_set_uint64(a: CValuesRef<ASN1_INTEGER>?, r: uint64_t): Int

@CCall("knifunptr_openssl908_ASN1_INTEGER_set")
external fun ASN1_INTEGER_set(a: CValuesRef<ASN1_INTEGER>?, v: Long): Int

@CCall("knifunptr_openssl909_ASN1_INTEGER_get")
external fun ASN1_INTEGER_get(a: CValuesRef<ASN1_INTEGER>?): Long

@CCall("knifunptr_openssl910_BN_to_ASN1_INTEGER")
external fun BN_to_ASN1_INTEGER(bn: CValuesRef<BIGNUM>?, ai: CValuesRef<ASN1_INTEGER>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl911_ASN1_INTEGER_to_BN")
external fun ASN1_INTEGER_to_BN(ai: CValuesRef<ASN1_INTEGER>?, bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl912_ASN1_ENUMERATED_get_int64")
external fun ASN1_ENUMERATED_get_int64(pr: CValuesRef<int64_tVar>?, a: CValuesRef<ASN1_ENUMERATED>?): Int

@CCall("knifunptr_openssl913_ASN1_ENUMERATED_set_int64")
external fun ASN1_ENUMERATED_set_int64(a: CValuesRef<ASN1_ENUMERATED>?, r: int64_t): Int

@CCall("knifunptr_openssl914_ASN1_ENUMERATED_set")
external fun ASN1_ENUMERATED_set(a: CValuesRef<ASN1_ENUMERATED>?, v: Long): Int

@CCall("knifunptr_openssl915_ASN1_ENUMERATED_get")
external fun ASN1_ENUMERATED_get(a: CValuesRef<ASN1_ENUMERATED>?): Long

@CCall("knifunptr_openssl916_BN_to_ASN1_ENUMERATED")
external fun BN_to_ASN1_ENUMERATED(
    bn: CValuesRef<BIGNUM>?,
    ai: CValuesRef<ASN1_ENUMERATED>?
): CPointer<ASN1_ENUMERATED>?

@CCall("knifunptr_openssl917_ASN1_ENUMERATED_to_BN")
external fun ASN1_ENUMERATED_to_BN(ai: CValuesRef<ASN1_ENUMERATED>?, bn: CValuesRef<BIGNUM>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl918_ASN1_PRINTABLE_type")
external fun ASN1_PRINTABLE_type(s: CValuesRef<UByteVar>?, max: Int): Int

@CCall("knifunptr_openssl919_ASN1_tag2bit")
external fun ASN1_tag2bit(tag: Int): ULong

@CCall("knifunptr_openssl920_ASN1_get_object")
external fun ASN1_get_object(
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    plength: CValuesRef<LongVar>?,
    ptag: CValuesRef<IntVar>?,
    pclass: CValuesRef<IntVar>?,
    omax: Long
): Int

@CCall("knifunptr_openssl921_ASN1_check_infinite_end")
external fun ASN1_check_infinite_end(p: CValuesRef<CPointerVar<UByteVar>>?, len: Long): Int

@CCall("knifunptr_openssl922_ASN1_const_check_infinite_end")
external fun ASN1_const_check_infinite_end(p: CValuesRef<CPointerVar<UByteVar>>?, len: Long): Int

@CCall("knifunptr_openssl923_ASN1_put_object")
external fun ASN1_put_object(
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    constructed: Int,
    length: Int,
    tag: Int,
    xclass: Int
): Unit

@CCall("knifunptr_openssl924_ASN1_put_eoc")
external fun ASN1_put_eoc(pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl925_ASN1_object_size")
external fun ASN1_object_size(constructed: Int, length: Int, tag: Int): Int

@CCall("knifunptr_openssl926_ASN1_dup")
external fun ASN1_dup(i2d: CPointer<i2d_of_void>?, d2i: CPointer<d2i_of_void>?, x: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl927_ASN1_item_dup")
external fun ASN1_item_dup(it: CValuesRef<ASN1_ITEM>?, x: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl928_ASN1_d2i_fp")
external fun ASN1_d2i_fp(
    xnew: CPointer<CFunction<() -> COpaquePointer?>>?,
    d2i: CPointer<d2i_of_void>?,
    `in`: CValuesRef<FILE>?,
    x: CValuesRef<COpaquePointerVar>?
): COpaquePointer?

@CCall("knifunptr_openssl929_ASN1_item_d2i_fp")
external fun ASN1_item_d2i_fp(it: CValuesRef<ASN1_ITEM>?, `in`: CValuesRef<FILE>?, x: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl930_ASN1_i2d_fp")
external fun ASN1_i2d_fp(i2d: CPointer<i2d_of_void>?, out: CValuesRef<FILE>?, x: CValuesRef<*>?): Int

@CCall("knifunptr_openssl931_ASN1_item_i2d_fp")
external fun ASN1_item_i2d_fp(it: CValuesRef<ASN1_ITEM>?, out: CValuesRef<FILE>?, x: CValuesRef<*>?): Int

@CCall("knifunptr_openssl932_ASN1_STRING_print_ex_fp")
external fun ASN1_STRING_print_ex_fp(fp: CValuesRef<FILE>?, str: CValuesRef<ASN1_STRING>?, flags: ULong): Int

@CCall("knifunptr_openssl933_ASN1_STRING_to_UTF8")
external fun ASN1_STRING_to_UTF8(out: CValuesRef<CPointerVar<UByteVar>>?, `in`: CValuesRef<ASN1_STRING>?): Int

@CCall("knifunptr_openssl934_ASN1_d2i_bio")
external fun ASN1_d2i_bio(
    xnew: CPointer<CFunction<() -> COpaquePointer?>>?,
    d2i: CPointer<d2i_of_void>?,
    `in`: CValuesRef<BIO>?,
    x: CValuesRef<COpaquePointerVar>?
): COpaquePointer?

@CCall("knifunptr_openssl935_ASN1_item_d2i_bio")
external fun ASN1_item_d2i_bio(it: CValuesRef<ASN1_ITEM>?, `in`: CValuesRef<BIO>?, x: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl936_ASN1_i2d_bio")
external fun ASN1_i2d_bio(i2d: CPointer<i2d_of_void>?, out: CValuesRef<BIO>?, x: CValuesRef<UByteVar>?): Int

@CCall("knifunptr_openssl937_ASN1_item_i2d_bio")
external fun ASN1_item_i2d_bio(it: CValuesRef<ASN1_ITEM>?, out: CValuesRef<BIO>?, x: CValuesRef<*>?): Int

@CCall("knifunptr_openssl938_ASN1_UTCTIME_print")
external fun ASN1_UTCTIME_print(fp: CValuesRef<BIO>?, a: CValuesRef<ASN1_UTCTIME>?): Int

@CCall("knifunptr_openssl939_ASN1_GENERALIZEDTIME_print")
external fun ASN1_GENERALIZEDTIME_print(fp: CValuesRef<BIO>?, a: CValuesRef<ASN1_GENERALIZEDTIME>?): Int

@CCall("knifunptr_openssl940_ASN1_TIME_print")
external fun ASN1_TIME_print(fp: CValuesRef<BIO>?, a: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl941_ASN1_STRING_print")
external fun ASN1_STRING_print(bp: CValuesRef<BIO>?, v: CValuesRef<ASN1_STRING>?): Int

@CCall("knifunptr_openssl942_ASN1_STRING_print_ex")
external fun ASN1_STRING_print_ex(out: CValuesRef<BIO>?, str: CValuesRef<ASN1_STRING>?, flags: ULong): Int

@CCall("knifunptr_openssl943_ASN1_buf_print")
external fun ASN1_buf_print(bp: CValuesRef<BIO>?, buf: CValuesRef<UByteVar>?, buflen: size_t, off: Int): Int

@CCall("knifunptr_openssl944_ASN1_bn_print")
external fun ASN1_bn_print(
    bp: CValuesRef<BIO>?, @CCall.CString number: String?,
    num: CValuesRef<BIGNUM>?,
    buf: CValuesRef<UByteVar>?,
    off: Int
): Int

@CCall("knifunptr_openssl945_ASN1_parse")
external fun ASN1_parse(bp: CValuesRef<BIO>?, pp: CValuesRef<UByteVar>?, len: Long, indent: Int): Int

@CCall("knifunptr_openssl946_ASN1_parse_dump")
external fun ASN1_parse_dump(bp: CValuesRef<BIO>?, pp: CValuesRef<UByteVar>?, len: Long, indent: Int, dump: Int): Int

@CCall("knifunptr_openssl947_ASN1_tag2str")
external fun ASN1_tag2str(tag: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl948_ASN1_UNIVERSALSTRING_to_string")
external fun ASN1_UNIVERSALSTRING_to_string(s: CValuesRef<ASN1_UNIVERSALSTRING>?): Int

@CCall("knifunptr_openssl949_ASN1_TYPE_set_octetstring")
external fun ASN1_TYPE_set_octetstring(a: CValuesRef<ASN1_TYPE>?, data: CValuesRef<UByteVar>?, len: Int): Int

@CCall("knifunptr_openssl950_ASN1_TYPE_get_octetstring")
external fun ASN1_TYPE_get_octetstring(a: CValuesRef<ASN1_TYPE>?, data: CValuesRef<UByteVar>?, max_len: Int): Int

@CCall("knifunptr_openssl951_ASN1_TYPE_set_int_octetstring")
external fun ASN1_TYPE_set_int_octetstring(
    a: CValuesRef<ASN1_TYPE>?,
    num: Long,
    data: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl952_ASN1_TYPE_get_int_octetstring")
external fun ASN1_TYPE_get_int_octetstring(
    a: CValuesRef<ASN1_TYPE>?,
    num: CValuesRef<LongVar>?,
    data: CValuesRef<UByteVar>?,
    max_len: Int
): Int

@CCall("knifunptr_openssl953_ASN1_item_unpack")
external fun ASN1_item_unpack(oct: CValuesRef<ASN1_STRING>?, it: CValuesRef<ASN1_ITEM>?): COpaquePointer?

@CCall("knifunptr_openssl954_ASN1_item_pack")
external fun ASN1_item_pack(
    obj: CValuesRef<*>?,
    it: CValuesRef<ASN1_ITEM>?,
    oct: CValuesRef<CPointerVar<ASN1_OCTET_STRING>>?
): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl955_ASN1_STRING_set_default_mask")
external fun ASN1_STRING_set_default_mask(mask: ULong): Unit

@CCall("knifunptr_openssl956_ASN1_STRING_set_default_mask_asc")
external fun ASN1_STRING_set_default_mask_asc(@CCall.CString p: String?): Int

@CCall("knifunptr_openssl957_ASN1_STRING_get_default_mask")
external fun ASN1_STRING_get_default_mask(): ULong

@CCall("knifunptr_openssl958_ASN1_mbstring_copy")
external fun ASN1_mbstring_copy(
    out: CValuesRef<CPointerVar<ASN1_STRING>>?,
    `in`: CValuesRef<UByteVar>?,
    len: Int,
    inform: Int,
    mask: ULong
): Int

@CCall("knifunptr_openssl959_ASN1_mbstring_ncopy")
external fun ASN1_mbstring_ncopy(
    out: CValuesRef<CPointerVar<ASN1_STRING>>?,
    `in`: CValuesRef<UByteVar>?,
    len: Int,
    inform: Int,
    mask: ULong,
    minsize: Long,
    maxsize: Long
): Int

@CCall("knifunptr_openssl960_ASN1_STRING_set_by_NID")
external fun ASN1_STRING_set_by_NID(
    out: CValuesRef<CPointerVar<ASN1_STRING>>?,
    `in`: CValuesRef<UByteVar>?,
    inlen: Int,
    inform: Int,
    nid: Int
): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl961_ASN1_STRING_TABLE_get")
external fun ASN1_STRING_TABLE_get(nid: Int): CPointer<ASN1_STRING_TABLE>?

@CCall("knifunptr_openssl962_ASN1_STRING_TABLE_add")
external fun ASN1_STRING_TABLE_add(arg0: Int, arg1: Long, arg2: Long, arg3: ULong, arg4: ULong): Int

@CCall("knifunptr_openssl963_ASN1_STRING_TABLE_cleanup")
external fun ASN1_STRING_TABLE_cleanup(): Unit

@CCall("knifunptr_openssl964_ASN1_item_new")
external fun ASN1_item_new(it: CValuesRef<ASN1_ITEM>?): CPointer<ASN1_VALUE>?

@CCall("knifunptr_openssl965_ASN1_item_free")
external fun ASN1_item_free(`val`: CValuesRef<ASN1_VALUE>?, it: CValuesRef<ASN1_ITEM>?): Unit

@CCall("knifunptr_openssl966_ASN1_item_d2i")
external fun ASN1_item_d2i(
    `val`: CValuesRef<CPointerVar<ASN1_VALUE>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long,
    it: CValuesRef<ASN1_ITEM>?
): CPointer<ASN1_VALUE>?

@CCall("knifunptr_openssl967_ASN1_item_i2d")
external fun ASN1_item_i2d(
    `val`: CValuesRef<ASN1_VALUE>?,
    out: CValuesRef<CPointerVar<UByteVar>>?,
    it: CValuesRef<ASN1_ITEM>?
): Int

@CCall("knifunptr_openssl968_ASN1_item_ndef_i2d")
external fun ASN1_item_ndef_i2d(
    `val`: CValuesRef<ASN1_VALUE>?,
    out: CValuesRef<CPointerVar<UByteVar>>?,
    it: CValuesRef<ASN1_ITEM>?
): Int

@CCall("knifunptr_openssl969_ASN1_add_oid_module")
external fun ASN1_add_oid_module(): Unit

@CCall("knifunptr_openssl970_ASN1_add_stable_module")
external fun ASN1_add_stable_module(): Unit

@CCall("knifunptr_openssl971_ASN1_generate_nconf")
external fun ASN1_generate_nconf(@CCall.CString str: String?, nconf: CValuesRef<CONF>?): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl972_ASN1_generate_v3")
external fun ASN1_generate_v3(@CCall.CString str: String?, cnf: CValuesRef<X509V3_CTX>?): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl973_ASN1_str2mask")
external fun ASN1_str2mask(@CCall.CString str: String?, pmask: CValuesRef<ULongVar>?): Int

@CCall("knifunptr_openssl974_ASN1_item_print")
external fun ASN1_item_print(
    out: CValuesRef<BIO>?,
    ifld: CValuesRef<ASN1_VALUE>?,
    indent: Int,
    it: CValuesRef<ASN1_ITEM>?,
    pctx: CValuesRef<ASN1_PCTX>?
): Int

@CCall("knifunptr_openssl975_ASN1_PCTX_new")
external fun ASN1_PCTX_new(): CPointer<ASN1_PCTX>?

@CCall("knifunptr_openssl976_ASN1_PCTX_free")
external fun ASN1_PCTX_free(p: CValuesRef<ASN1_PCTX>?): Unit

@CCall("knifunptr_openssl977_ASN1_PCTX_get_flags")
external fun ASN1_PCTX_get_flags(p: CValuesRef<ASN1_PCTX>?): ULong

@CCall("knifunptr_openssl978_ASN1_PCTX_set_flags")
external fun ASN1_PCTX_set_flags(p: CValuesRef<ASN1_PCTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl979_ASN1_PCTX_get_nm_flags")
external fun ASN1_PCTX_get_nm_flags(p: CValuesRef<ASN1_PCTX>?): ULong

@CCall("knifunptr_openssl980_ASN1_PCTX_set_nm_flags")
external fun ASN1_PCTX_set_nm_flags(p: CValuesRef<ASN1_PCTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl981_ASN1_PCTX_get_cert_flags")
external fun ASN1_PCTX_get_cert_flags(p: CValuesRef<ASN1_PCTX>?): ULong

@CCall("knifunptr_openssl982_ASN1_PCTX_set_cert_flags")
external fun ASN1_PCTX_set_cert_flags(p: CValuesRef<ASN1_PCTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl983_ASN1_PCTX_get_oid_flags")
external fun ASN1_PCTX_get_oid_flags(p: CValuesRef<ASN1_PCTX>?): ULong

@CCall("knifunptr_openssl984_ASN1_PCTX_set_oid_flags")
external fun ASN1_PCTX_set_oid_flags(p: CValuesRef<ASN1_PCTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl985_ASN1_PCTX_get_str_flags")
external fun ASN1_PCTX_get_str_flags(p: CValuesRef<ASN1_PCTX>?): ULong

@CCall("knifunptr_openssl986_ASN1_PCTX_set_str_flags")
external fun ASN1_PCTX_set_str_flags(p: CValuesRef<ASN1_PCTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl987_ASN1_SCTX_new")
external fun ASN1_SCTX_new(scan_cb: CPointer<CFunction<(CPointer<ASN1_SCTX>?) -> Int>>?): CPointer<ASN1_SCTX>?

@CCall("knifunptr_openssl988_ASN1_SCTX_free")
external fun ASN1_SCTX_free(p: CValuesRef<ASN1_SCTX>?): Unit

@CCall("knifunptr_openssl989_ASN1_SCTX_get_item")
external fun ASN1_SCTX_get_item(p: CValuesRef<ASN1_SCTX>?): CPointer<ASN1_ITEM>?

@CCall("knifunptr_openssl990_ASN1_SCTX_get_template")
external fun ASN1_SCTX_get_template(p: CValuesRef<ASN1_SCTX>?): CPointer<ASN1_TEMPLATE>?

@CCall("knifunptr_openssl991_ASN1_SCTX_get_flags")
external fun ASN1_SCTX_get_flags(p: CValuesRef<ASN1_SCTX>?): ULong

@CCall("knifunptr_openssl992_ASN1_SCTX_set_app_data")
external fun ASN1_SCTX_set_app_data(p: CValuesRef<ASN1_SCTX>?, data: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl993_ASN1_SCTX_get_app_data")
external fun ASN1_SCTX_get_app_data(p: CValuesRef<ASN1_SCTX>?): COpaquePointer?

@CCall("knifunptr_openssl994_BIO_f_asn1")
external fun BIO_f_asn1(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl995_BIO_new_NDEF")
external fun BIO_new_NDEF(
    out: CValuesRef<BIO>?,
    `val`: CValuesRef<ASN1_VALUE>?,
    it: CValuesRef<ASN1_ITEM>?
): CPointer<BIO>?

@CCall("knifunptr_openssl996_i2d_ASN1_bio_stream")
external fun i2d_ASN1_bio_stream(
    out: CValuesRef<BIO>?,
    `val`: CValuesRef<ASN1_VALUE>?,
    `in`: CValuesRef<BIO>?,
    flags: Int,
    it: CValuesRef<ASN1_ITEM>?
): Int

@CCall("knifunptr_openssl997_PEM_write_bio_ASN1_stream")
external fun PEM_write_bio_ASN1_stream(
    out: CValuesRef<BIO>?,
    `val`: CValuesRef<ASN1_VALUE>?,
    `in`: CValuesRef<BIO>?,
    flags: Int, @CCall.CString hdr: String?,
    it: CValuesRef<ASN1_ITEM>?
): Int

@CCall("knifunptr_openssl998_SMIME_write_ASN1")
external fun SMIME_write_ASN1(
    bio: CValuesRef<BIO>?,
    `val`: CValuesRef<ASN1_VALUE>?,
    data: CValuesRef<BIO>?,
    flags: Int,
    ctype_nid: Int,
    econt_nid: Int,
    mdalgs: CValuesRef<stack_st_X509_ALGOR>?,
    it: CValuesRef<ASN1_ITEM>?
): Int

@CCall("knifunptr_openssl999_SMIME_read_ASN1")
external fun SMIME_read_ASN1(
    bio: CValuesRef<BIO>?,
    bcont: CValuesRef<CPointerVar<BIO>>?,
    it: CValuesRef<ASN1_ITEM>?
): CPointer<ASN1_VALUE>?

@CCall("knifunptr_openssl1000_SMIME_crlf_copy")
external fun SMIME_crlf_copy(`in`: CValuesRef<BIO>?, out: CValuesRef<BIO>?, flags: Int): Int

@CCall("knifunptr_openssl1001_SMIME_text")
external fun SMIME_text(`in`: CValuesRef<BIO>?, out: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl1002_ASN1_ITEM_lookup")
external fun ASN1_ITEM_lookup(@CCall.CString name: String?): CPointer<ASN1_ITEM>?

@CCall("knifunptr_openssl1003_ASN1_ITEM_get")
external fun ASN1_ITEM_get(i: size_t): CPointer<ASN1_ITEM>?

@CCall("knifunptr_openssl1004_ERR_load_OBJ_strings")
external fun ERR_load_OBJ_strings(): Int

@CCall("knifunptr_openssl1005_OBJ_NAME_init")
external fun OBJ_NAME_init(): Int

@CCall("knifunptr_openssl1006_OBJ_NAME_new_index")
external fun OBJ_NAME_new_index(
    hash_func: CPointer<CFunction<(CPointer<ByteVar>?) -> ULong>>?,
    cmp_func: CPointer<CFunction<(CPointer<ByteVar>?, CPointer<ByteVar>?) -> Int>>?,
    free_func: CPointer<CFunction<(CPointer<ByteVar>?, Int, CPointer<ByteVar>?) -> Unit>>?
): Int

@CCall("knifunptr_openssl1007_OBJ_NAME_get")
external fun OBJ_NAME_get(@CCall.CString name: String?, type: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl1008_OBJ_NAME_add")
external fun OBJ_NAME_add(@CCall.CString name: String?, type: Int, @CCall.CString data: String?): Int

@CCall("knifunptr_openssl1009_OBJ_NAME_remove")
external fun OBJ_NAME_remove(@CCall.CString name: String?, type: Int): Int

@CCall("knifunptr_openssl1010_OBJ_NAME_cleanup")
external fun OBJ_NAME_cleanup(type: Int): Unit

@CCall("knifunptr_openssl1011_OBJ_NAME_do_all")
external fun OBJ_NAME_do_all(
    type: Int,
    fn: CPointer<CFunction<(CPointer<OBJ_NAME>?, COpaquePointer?) -> Unit>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl1012_OBJ_NAME_do_all_sorted")
external fun OBJ_NAME_do_all_sorted(
    type: Int,
    fn: CPointer<CFunction<(CPointer<OBJ_NAME>?, COpaquePointer?) -> Unit>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl1013_OBJ_dup")
external fun OBJ_dup(o: CValuesRef<ASN1_OBJECT>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl1014_OBJ_nid2obj")
external fun OBJ_nid2obj(n: Int): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl1015_OBJ_nid2ln")
external fun OBJ_nid2ln(n: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl1016_OBJ_nid2sn")
external fun OBJ_nid2sn(n: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl1017_OBJ_obj2nid")
external fun OBJ_obj2nid(o: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl1018_OBJ_txt2obj")
external fun OBJ_txt2obj(@CCall.CString s: String?, no_name: Int): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl1019_OBJ_obj2txt")
external fun OBJ_obj2txt(buf: CValuesRef<ByteVar>?, buf_len: Int, a: CValuesRef<ASN1_OBJECT>?, no_name: Int): Int

@CCall("knifunptr_openssl1020_OBJ_txt2nid")
external fun OBJ_txt2nid(@CCall.CString s: String?): Int

@CCall("knifunptr_openssl1021_OBJ_ln2nid")
external fun OBJ_ln2nid(@CCall.CString s: String?): Int

@CCall("knifunptr_openssl1022_OBJ_sn2nid")
external fun OBJ_sn2nid(@CCall.CString s: String?): Int

@CCall("knifunptr_openssl1023_OBJ_cmp")
external fun OBJ_cmp(a: CValuesRef<ASN1_OBJECT>?, b: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl1024_OBJ_bsearch_")
external fun OBJ_bsearch_(
    key: CValuesRef<*>?,
    base: CValuesRef<*>?,
    num: Int,
    size: Int,
    cmp: CPointer<CFunction<(COpaquePointer?, COpaquePointer?) -> Int>>?
): COpaquePointer?

@CCall("knifunptr_openssl1025_OBJ_bsearch_ex_")
external fun OBJ_bsearch_ex_(
    key: CValuesRef<*>?,
    base: CValuesRef<*>?,
    num: Int,
    size: Int,
    cmp: CPointer<CFunction<(COpaquePointer?, COpaquePointer?) -> Int>>?,
    flags: Int
): COpaquePointer?

@CCall("knifunptr_openssl1026_OBJ_new_nid")
external fun OBJ_new_nid(num: Int): Int

@CCall("knifunptr_openssl1027_OBJ_add_object")
external fun OBJ_add_object(obj: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl1028_OBJ_create")
external fun OBJ_create(@CCall.CString oid: String?, @CCall.CString sn: String?, @CCall.CString ln: String?): Int

@CCall("knifunptr_openssl1029_OBJ_create_objects")
external fun OBJ_create_objects(`in`: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl1030_OBJ_length")
external fun OBJ_length(obj: CValuesRef<ASN1_OBJECT>?): size_t

@CCall("knifunptr_openssl1031_OBJ_get0_data")
external fun OBJ_get0_data(obj: CValuesRef<ASN1_OBJECT>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1032_OBJ_find_sigid_algs")
external fun OBJ_find_sigid_algs(signid: Int, pdig_nid: CValuesRef<IntVar>?, ppkey_nid: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1033_OBJ_find_sigid_by_algs")
external fun OBJ_find_sigid_by_algs(psignid: CValuesRef<IntVar>?, dig_nid: Int, pkey_nid: Int): Int

@CCall("knifunptr_openssl1034_OBJ_add_sigid")
external fun OBJ_add_sigid(signid: Int, dig_id: Int, pkey_id: Int): Int

@CCall("knifunptr_openssl1035_OBJ_sigid_free")
external fun OBJ_sigid_free(): Unit

@CCall("knifunptr_openssl1036_EVP_MD_meth_new")
external fun EVP_MD_meth_new(md_type: Int, pkey_type: Int): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1037_EVP_MD_meth_dup")
external fun EVP_MD_meth_dup(md: CValuesRef<EVP_MD>?): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1038_EVP_MD_meth_free")
external fun EVP_MD_meth_free(md: CValuesRef<EVP_MD>?): Unit

@CCall("knifunptr_openssl1039_EVP_MD_meth_set_input_blocksize")
external fun EVP_MD_meth_set_input_blocksize(md: CValuesRef<EVP_MD>?, blocksize: Int): Int

@CCall("knifunptr_openssl1040_EVP_MD_meth_set_result_size")
external fun EVP_MD_meth_set_result_size(md: CValuesRef<EVP_MD>?, resultsize: Int): Int

@CCall("knifunptr_openssl1041_EVP_MD_meth_set_app_datasize")
external fun EVP_MD_meth_set_app_datasize(md: CValuesRef<EVP_MD>?, datasize: Int): Int

@CCall("knifunptr_openssl1042_EVP_MD_meth_set_flags")
external fun EVP_MD_meth_set_flags(md: CValuesRef<EVP_MD>?, flags: ULong): Int

@CCall("knifunptr_openssl1043_EVP_MD_meth_set_init")
external fun EVP_MD_meth_set_init(
    md: CValuesRef<EVP_MD>?,
    init: CPointer<CFunction<(CPointer<EVP_MD_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1044_EVP_MD_meth_set_update")
external fun EVP_MD_meth_set_update(
    md: CValuesRef<EVP_MD>?,
    update: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, COpaquePointer?, size_t) -> Int>>?
): Int

@CCall("knifunptr_openssl1045_EVP_MD_meth_set_final")
external fun EVP_MD_meth_set_final(
    md: CValuesRef<EVP_MD>?,
    final: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, CPointer<UByteVar>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1046_EVP_MD_meth_set_copy")
external fun EVP_MD_meth_set_copy(
    md: CValuesRef<EVP_MD>?,
    copy: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1047_EVP_MD_meth_set_cleanup")
external fun EVP_MD_meth_set_cleanup(
    md: CValuesRef<EVP_MD>?,
    cleanup: CPointer<CFunction<(CPointer<EVP_MD_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1048_EVP_MD_meth_set_ctrl")
external fun EVP_MD_meth_set_ctrl(
    md: CValuesRef<EVP_MD>?,
    ctrl: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, Int, Int, COpaquePointer?) -> Int>>?
): Int

@CCall("knifunptr_openssl1049_EVP_MD_meth_get_input_blocksize")
external fun EVP_MD_meth_get_input_blocksize(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1050_EVP_MD_meth_get_result_size")
external fun EVP_MD_meth_get_result_size(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1051_EVP_MD_meth_get_app_datasize")
external fun EVP_MD_meth_get_app_datasize(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1052_EVP_MD_meth_get_flags")
external fun EVP_MD_meth_get_flags(md: CValuesRef<EVP_MD>?): ULong

@CCall("knifunptr_openssl1053_EVP_MD_meth_get_init")
external fun EVP_MD_meth_get_init(md: CValuesRef<EVP_MD>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1054_EVP_MD_meth_get_update")
external fun EVP_MD_meth_get_update(md: CValuesRef<EVP_MD>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?, COpaquePointer?, size_t) -> Int>>?

@CCall("knifunptr_openssl1055_EVP_MD_meth_get_final")
external fun EVP_MD_meth_get_final(md: CValuesRef<EVP_MD>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?, CPointer<UByteVar>?) -> Int>>?

@CCall("knifunptr_openssl1056_EVP_MD_meth_get_copy")
external fun EVP_MD_meth_get_copy(md: CValuesRef<EVP_MD>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1057_EVP_MD_meth_get_cleanup")
external fun EVP_MD_meth_get_cleanup(md: CValuesRef<EVP_MD>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1058_EVP_MD_meth_get_ctrl")
external fun EVP_MD_meth_get_ctrl(md: CValuesRef<EVP_MD>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?, Int, Int, COpaquePointer?) -> Int>>?

@CCall("knifunptr_openssl1059_EVP_CIPHER_meth_new")
external fun EVP_CIPHER_meth_new(cipher_type: Int, block_size: Int, key_len: Int): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1060_EVP_CIPHER_meth_dup")
external fun EVP_CIPHER_meth_dup(cipher: CValuesRef<EVP_CIPHER>?): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1061_EVP_CIPHER_meth_free")
external fun EVP_CIPHER_meth_free(cipher: CValuesRef<EVP_CIPHER>?): Unit

@CCall("knifunptr_openssl1062_EVP_CIPHER_meth_set_iv_length")
external fun EVP_CIPHER_meth_set_iv_length(cipher: CValuesRef<EVP_CIPHER>?, iv_len: Int): Int

@CCall("knifunptr_openssl1063_EVP_CIPHER_meth_set_flags")
external fun EVP_CIPHER_meth_set_flags(cipher: CValuesRef<EVP_CIPHER>?, flags: ULong): Int

@CCall("knifunptr_openssl1064_EVP_CIPHER_meth_set_impl_ctx_size")
external fun EVP_CIPHER_meth_set_impl_ctx_size(cipher: CValuesRef<EVP_CIPHER>?, ctx_size: Int): Int

@CCall("knifunptr_openssl1065_EVP_CIPHER_meth_set_init")
external fun EVP_CIPHER_meth_set_init(
    cipher: CValuesRef<EVP_CIPHER>?,
    init: CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<UByteVar>?, CPointer<UByteVar>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl1066_EVP_CIPHER_meth_set_do_cipher")
external fun EVP_CIPHER_meth_set_do_cipher(
    cipher: CValuesRef<EVP_CIPHER>?,
    do_cipher: CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<UByteVar>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Int

@CCall("knifunptr_openssl1067_EVP_CIPHER_meth_set_cleanup")
external fun EVP_CIPHER_meth_set_cleanup(
    cipher: CValuesRef<EVP_CIPHER>?,
    cleanup: CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1068_EVP_CIPHER_meth_set_set_asn1_params")
external fun EVP_CIPHER_meth_set_set_asn1_params(
    cipher: CValuesRef<EVP_CIPHER>?,
    set_asn1_parameters: CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<ASN1_TYPE>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1069_EVP_CIPHER_meth_set_get_asn1_params")
external fun EVP_CIPHER_meth_set_get_asn1_params(
    cipher: CValuesRef<EVP_CIPHER>?,
    get_asn1_parameters: CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<ASN1_TYPE>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1070_EVP_CIPHER_meth_set_ctrl")
external fun EVP_CIPHER_meth_set_ctrl(
    cipher: CValuesRef<EVP_CIPHER>?,
    ctrl: CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, Int, Int, COpaquePointer?) -> Int>>?
): Int

@CCall("knifunptr_openssl1071_EVP_CIPHER_meth_get_init")
external fun EVP_CIPHER_meth_get_init(cipher: CValuesRef<EVP_CIPHER>?): CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<UByteVar>?, CPointer<UByteVar>?, Int) -> Int>>?

@CCall("knifunptr_openssl1072_EVP_CIPHER_meth_get_do_cipher")
external fun EVP_CIPHER_meth_get_do_cipher(cipher: CValuesRef<EVP_CIPHER>?): CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<UByteVar>?, CPointer<UByteVar>?, size_t) -> Int>>?

@CCall("knifunptr_openssl1073_EVP_CIPHER_meth_get_cleanup")
external fun EVP_CIPHER_meth_get_cleanup(cipher: CValuesRef<EVP_CIPHER>?): CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1074_EVP_CIPHER_meth_get_set_asn1_params")
external fun EVP_CIPHER_meth_get_set_asn1_params(cipher: CValuesRef<EVP_CIPHER>?): CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<ASN1_TYPE>?) -> Int>>?

@CCall("knifunptr_openssl1075_EVP_CIPHER_meth_get_get_asn1_params")
external fun EVP_CIPHER_meth_get_get_asn1_params(cipher: CValuesRef<EVP_CIPHER>?): CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<ASN1_TYPE>?) -> Int>>?

@CCall("knifunptr_openssl1076_EVP_CIPHER_meth_get_ctrl")
external fun EVP_CIPHER_meth_get_ctrl(cipher: CValuesRef<EVP_CIPHER>?): CPointer<CFunction<(CPointer<EVP_CIPHER_CTX>?, Int, Int, COpaquePointer?) -> Int>>?

@CCall("knifunptr_openssl1077_EVP_MD_type")
external fun EVP_MD_type(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1078_EVP_MD_pkey_type")
external fun EVP_MD_pkey_type(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1079_EVP_MD_size")
external fun EVP_MD_size(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1080_EVP_MD_block_size")
external fun EVP_MD_block_size(md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1081_EVP_MD_flags")
external fun EVP_MD_flags(md: CValuesRef<EVP_MD>?): ULong

@CCall("knifunptr_openssl1082_EVP_MD_CTX_md")
external fun EVP_MD_CTX_md(ctx: CValuesRef<EVP_MD_CTX>?): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1083_EVP_MD_CTX_update_fn")
external fun EVP_MD_CTX_update_fn(ctx: CValuesRef<EVP_MD_CTX>?): CPointer<CFunction<(CPointer<EVP_MD_CTX>?, COpaquePointer?, size_t) -> Int>>?

@CCall("knifunptr_openssl1084_EVP_MD_CTX_set_update_fn")
external fun EVP_MD_CTX_set_update_fn(
    ctx: CValuesRef<EVP_MD_CTX>?,
    update: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, COpaquePointer?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1085_EVP_MD_CTX_pkey_ctx")
external fun EVP_MD_CTX_pkey_ctx(ctx: CValuesRef<EVP_MD_CTX>?): CPointer<EVP_PKEY_CTX>?

@CCall("knifunptr_openssl1086_EVP_MD_CTX_set_pkey_ctx")
external fun EVP_MD_CTX_set_pkey_ctx(ctx: CValuesRef<EVP_MD_CTX>?, pctx: CValuesRef<EVP_PKEY_CTX>?): Unit

@CCall("knifunptr_openssl1087_EVP_MD_CTX_md_data")
external fun EVP_MD_CTX_md_data(ctx: CValuesRef<EVP_MD_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl1088_EVP_CIPHER_nid")
external fun EVP_CIPHER_nid(cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1089_EVP_CIPHER_block_size")
external fun EVP_CIPHER_block_size(cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1090_EVP_CIPHER_impl_ctx_size")
external fun EVP_CIPHER_impl_ctx_size(cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1091_EVP_CIPHER_key_length")
external fun EVP_CIPHER_key_length(cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1092_EVP_CIPHER_iv_length")
external fun EVP_CIPHER_iv_length(cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1093_EVP_CIPHER_flags")
external fun EVP_CIPHER_flags(cipher: CValuesRef<EVP_CIPHER>?): ULong

@CCall("knifunptr_openssl1094_EVP_CIPHER_CTX_cipher")
external fun EVP_CIPHER_CTX_cipher(ctx: CValuesRef<EVP_CIPHER_CTX>?): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1095_EVP_CIPHER_CTX_encrypting")
external fun EVP_CIPHER_CTX_encrypting(ctx: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1096_EVP_CIPHER_CTX_nid")
external fun EVP_CIPHER_CTX_nid(ctx: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1097_EVP_CIPHER_CTX_block_size")
external fun EVP_CIPHER_CTX_block_size(ctx: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1098_EVP_CIPHER_CTX_key_length")
external fun EVP_CIPHER_CTX_key_length(ctx: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1099_EVP_CIPHER_CTX_iv_length")
external fun EVP_CIPHER_CTX_iv_length(ctx: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1100_EVP_CIPHER_CTX_iv")
external fun EVP_CIPHER_CTX_iv(ctx: CValuesRef<EVP_CIPHER_CTX>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1101_EVP_CIPHER_CTX_original_iv")
external fun EVP_CIPHER_CTX_original_iv(ctx: CValuesRef<EVP_CIPHER_CTX>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1102_EVP_CIPHER_CTX_iv_noconst")
external fun EVP_CIPHER_CTX_iv_noconst(ctx: CValuesRef<EVP_CIPHER_CTX>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1103_EVP_CIPHER_CTX_buf_noconst")
external fun EVP_CIPHER_CTX_buf_noconst(ctx: CValuesRef<EVP_CIPHER_CTX>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1104_EVP_CIPHER_CTX_num")
external fun EVP_CIPHER_CTX_num(ctx: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1105_EVP_CIPHER_CTX_set_num")
external fun EVP_CIPHER_CTX_set_num(ctx: CValuesRef<EVP_CIPHER_CTX>?, num: Int): Unit

@CCall("knifunptr_openssl1106_EVP_CIPHER_CTX_copy")
external fun EVP_CIPHER_CTX_copy(out: CValuesRef<EVP_CIPHER_CTX>?, `in`: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1107_EVP_CIPHER_CTX_get_app_data")
external fun EVP_CIPHER_CTX_get_app_data(ctx: CValuesRef<EVP_CIPHER_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl1108_EVP_CIPHER_CTX_set_app_data")
external fun EVP_CIPHER_CTX_set_app_data(ctx: CValuesRef<EVP_CIPHER_CTX>?, data: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl1109_EVP_CIPHER_CTX_get_cipher_data")
external fun EVP_CIPHER_CTX_get_cipher_data(ctx: CValuesRef<EVP_CIPHER_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl1110_EVP_CIPHER_CTX_set_cipher_data")
external fun EVP_CIPHER_CTX_set_cipher_data(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher_data: CValuesRef<*>?
): COpaquePointer?

@CCall("knifunptr_openssl1111_EVP_Cipher")
external fun EVP_Cipher(
    c: CValuesRef<EVP_CIPHER_CTX>?,
    out: CValuesRef<UByteVar>?,
    `in`: CValuesRef<UByteVar>?,
    inl: UInt
): Int

@CCall("knifunptr_openssl1112_EVP_MD_CTX_ctrl")
external fun EVP_MD_CTX_ctrl(ctx: CValuesRef<EVP_MD_CTX>?, cmd: Int, p1: Int, p2: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1113_EVP_MD_CTX_new")
external fun EVP_MD_CTX_new(): CPointer<EVP_MD_CTX>?

@CCall("knifunptr_openssl1114_EVP_MD_CTX_reset")
external fun EVP_MD_CTX_reset(ctx: CValuesRef<EVP_MD_CTX>?): Int

@CCall("knifunptr_openssl1115_EVP_MD_CTX_free")
external fun EVP_MD_CTX_free(ctx: CValuesRef<EVP_MD_CTX>?): Unit

@CCall("knifunptr_openssl1116_EVP_MD_CTX_copy_ex")
external fun EVP_MD_CTX_copy_ex(out: CValuesRef<EVP_MD_CTX>?, `in`: CValuesRef<EVP_MD_CTX>?): Int

@CCall("knifunptr_openssl1117_EVP_MD_CTX_set_flags")
external fun EVP_MD_CTX_set_flags(ctx: CValuesRef<EVP_MD_CTX>?, flags: Int): Unit

@CCall("knifunptr_openssl1118_EVP_MD_CTX_clear_flags")
external fun EVP_MD_CTX_clear_flags(ctx: CValuesRef<EVP_MD_CTX>?, flags: Int): Unit

@CCall("knifunptr_openssl1119_EVP_MD_CTX_test_flags")
external fun EVP_MD_CTX_test_flags(ctx: CValuesRef<EVP_MD_CTX>?, flags: Int): Int

@CCall("knifunptr_openssl1120_EVP_DigestInit_ex")
external fun EVP_DigestInit_ex(ctx: CValuesRef<EVP_MD_CTX>?, type: CValuesRef<EVP_MD>?, impl: CValuesRef<ENGINE>?): Int

@CCall("knifunptr_openssl1121_EVP_DigestUpdate")
external fun EVP_DigestUpdate(ctx: CValuesRef<EVP_MD_CTX>?, d: CValuesRef<*>?, cnt: size_t): Int

@CCall("knifunptr_openssl1122_EVP_DigestFinal_ex")
external fun EVP_DigestFinal_ex(ctx: CValuesRef<EVP_MD_CTX>?, md: CValuesRef<UByteVar>?, s: CValuesRef<UIntVar>?): Int

@CCall("knifunptr_openssl1123_EVP_Digest")
external fun EVP_Digest(
    data: CValuesRef<*>?,
    count: size_t,
    md: CValuesRef<UByteVar>?,
    size: CValuesRef<UIntVar>?,
    type: CValuesRef<EVP_MD>?,
    impl: CValuesRef<ENGINE>?
): Int

@CCall("knifunptr_openssl1124_EVP_MD_CTX_copy")
external fun EVP_MD_CTX_copy(out: CValuesRef<EVP_MD_CTX>?, `in`: CValuesRef<EVP_MD_CTX>?): Int

@CCall("knifunptr_openssl1125_EVP_DigestInit")
external fun EVP_DigestInit(ctx: CValuesRef<EVP_MD_CTX>?, type: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1126_EVP_DigestFinal")
external fun EVP_DigestFinal(ctx: CValuesRef<EVP_MD_CTX>?, md: CValuesRef<UByteVar>?, s: CValuesRef<UIntVar>?): Int

@CCall("knifunptr_openssl1127_EVP_DigestFinalXOF")
external fun EVP_DigestFinalXOF(ctx: CValuesRef<EVP_MD_CTX>?, md: CValuesRef<UByteVar>?, len: size_t): Int

@CCall("knifunptr_openssl1128_EVP_read_pw_string")
external fun EVP_read_pw_string(
    buf: CValuesRef<ByteVar>?,
    length: Int, @CCall.CString prompt: String?,
    verify: Int
): Int

@CCall("knifunptr_openssl1129_EVP_read_pw_string_min")
external fun EVP_read_pw_string_min(
    buf: CValuesRef<ByteVar>?,
    minlen: Int,
    maxlen: Int, @CCall.CString prompt: String?,
    verify: Int
): Int

@CCall("knifunptr_openssl1130_EVP_set_pw_prompt")
external fun EVP_set_pw_prompt(@CCall.CString prompt: String?): Unit

@CCall("knifunptr_openssl1131_EVP_get_pw_prompt")
external fun EVP_get_pw_prompt(): CPointer<ByteVar>?

@CCall("knifunptr_openssl1132_EVP_BytesToKey")
external fun EVP_BytesToKey(
    type: CValuesRef<EVP_CIPHER>?,
    md: CValuesRef<EVP_MD>?,
    salt: CValuesRef<UByteVar>?,
    data: CValuesRef<UByteVar>?,
    datal: Int,
    count: Int,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1133_EVP_CIPHER_CTX_set_flags")
external fun EVP_CIPHER_CTX_set_flags(ctx: CValuesRef<EVP_CIPHER_CTX>?, flags: Int): Unit

@CCall("knifunptr_openssl1134_EVP_CIPHER_CTX_clear_flags")
external fun EVP_CIPHER_CTX_clear_flags(ctx: CValuesRef<EVP_CIPHER_CTX>?, flags: Int): Unit

@CCall("knifunptr_openssl1135_EVP_CIPHER_CTX_test_flags")
external fun EVP_CIPHER_CTX_test_flags(ctx: CValuesRef<EVP_CIPHER_CTX>?, flags: Int): Int

@CCall("knifunptr_openssl1136_EVP_EncryptInit")
external fun EVP_EncryptInit(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1137_EVP_EncryptInit_ex")
external fun EVP_EncryptInit_ex(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    impl: CValuesRef<ENGINE>?,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1138_EVP_EncryptUpdate")
external fun EVP_EncryptUpdate(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?,
    `in`: CValuesRef<UByteVar>?,
    inl: Int
): Int

@CCall("knifunptr_openssl1139_EVP_EncryptFinal_ex")
external fun EVP_EncryptFinal_ex(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1140_EVP_EncryptFinal")
external fun EVP_EncryptFinal(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1141_EVP_DecryptInit")
external fun EVP_DecryptInit(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1142_EVP_DecryptInit_ex")
external fun EVP_DecryptInit_ex(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    impl: CValuesRef<ENGINE>?,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1143_EVP_DecryptUpdate")
external fun EVP_DecryptUpdate(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?,
    `in`: CValuesRef<UByteVar>?,
    inl: Int
): Int

@CCall("knifunptr_openssl1144_EVP_DecryptFinal")
external fun EVP_DecryptFinal(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    outm: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1145_EVP_DecryptFinal_ex")
external fun EVP_DecryptFinal_ex(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    outm: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1146_EVP_CipherInit")
external fun EVP_CipherInit(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?,
    enc: Int
): Int

@CCall("knifunptr_openssl1147_EVP_CipherInit_ex")
external fun EVP_CipherInit_ex(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    impl: CValuesRef<ENGINE>?,
    key: CValuesRef<UByteVar>?,
    iv: CValuesRef<UByteVar>?,
    enc: Int
): Int

@CCall("knifunptr_openssl1148_EVP_CipherUpdate")
external fun EVP_CipherUpdate(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?,
    `in`: CValuesRef<UByteVar>?,
    inl: Int
): Int

@CCall("knifunptr_openssl1149_EVP_CipherFinal")
external fun EVP_CipherFinal(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    outm: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1150_EVP_CipherFinal_ex")
external fun EVP_CipherFinal_ex(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    outm: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1151_EVP_SignFinal")
external fun EVP_SignFinal(
    ctx: CValuesRef<EVP_MD_CTX>?,
    md: CValuesRef<UByteVar>?,
    s: CValuesRef<UIntVar>?,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1152_EVP_DigestSign")
external fun EVP_DigestSign(
    ctx: CValuesRef<EVP_MD_CTX>?,
    sigret: CValuesRef<UByteVar>?,
    siglen: CValuesRef<size_tVar>?,
    tbs: CValuesRef<UByteVar>?,
    tbslen: size_t
): Int

@CCall("knifunptr_openssl1153_EVP_VerifyFinal")
external fun EVP_VerifyFinal(
    ctx: CValuesRef<EVP_MD_CTX>?,
    sigbuf: CValuesRef<UByteVar>?,
    siglen: UInt,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1154_EVP_DigestVerify")
external fun EVP_DigestVerify(
    ctx: CValuesRef<EVP_MD_CTX>?,
    sigret: CValuesRef<UByteVar>?,
    siglen: size_t,
    tbs: CValuesRef<UByteVar>?,
    tbslen: size_t
): Int

@CCall("knifunptr_openssl1155_EVP_DigestSignInit")
external fun EVP_DigestSignInit(
    ctx: CValuesRef<EVP_MD_CTX>?,
    pctx: CValuesRef<CPointerVar<EVP_PKEY_CTX>>?,
    type: CValuesRef<EVP_MD>?,
    e: CValuesRef<ENGINE>?,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1156_EVP_DigestSignFinal")
external fun EVP_DigestSignFinal(
    ctx: CValuesRef<EVP_MD_CTX>?,
    sigret: CValuesRef<UByteVar>?,
    siglen: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl1157_EVP_DigestVerifyInit")
external fun EVP_DigestVerifyInit(
    ctx: CValuesRef<EVP_MD_CTX>?,
    pctx: CValuesRef<CPointerVar<EVP_PKEY_CTX>>?,
    type: CValuesRef<EVP_MD>?,
    e: CValuesRef<ENGINE>?,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1158_EVP_DigestVerifyFinal")
external fun EVP_DigestVerifyFinal(ctx: CValuesRef<EVP_MD_CTX>?, sig: CValuesRef<UByteVar>?, siglen: size_t): Int

@CCall("knifunptr_openssl1159_EVP_OpenInit")
external fun EVP_OpenInit(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    type: CValuesRef<EVP_CIPHER>?,
    ek: CValuesRef<UByteVar>?,
    ekl: Int,
    iv: CValuesRef<UByteVar>?,
    priv: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1160_EVP_OpenFinal")
external fun EVP_OpenFinal(ctx: CValuesRef<EVP_CIPHER_CTX>?, out: CValuesRef<UByteVar>?, outl: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1161_EVP_SealInit")
external fun EVP_SealInit(
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    type: CValuesRef<EVP_CIPHER>?,
    ek: CValuesRef<CPointerVar<UByteVar>>?,
    ekl: CValuesRef<IntVar>?,
    iv: CValuesRef<UByteVar>?,
    pubk: CValuesRef<CPointerVar<EVP_PKEY>>?,
    npubk: Int
): Int

@CCall("knifunptr_openssl1162_EVP_SealFinal")
external fun EVP_SealFinal(ctx: CValuesRef<EVP_CIPHER_CTX>?, out: CValuesRef<UByteVar>?, outl: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1163_EVP_ENCODE_CTX_new")
external fun EVP_ENCODE_CTX_new(): CPointer<EVP_ENCODE_CTX>?

@CCall("knifunptr_openssl1164_EVP_ENCODE_CTX_free")
external fun EVP_ENCODE_CTX_free(ctx: CValuesRef<EVP_ENCODE_CTX>?): Unit

@CCall("knifunptr_openssl1165_EVP_ENCODE_CTX_copy")
external fun EVP_ENCODE_CTX_copy(dctx: CValuesRef<EVP_ENCODE_CTX>?, sctx: CValuesRef<EVP_ENCODE_CTX>?): Int

@CCall("knifunptr_openssl1166_EVP_ENCODE_CTX_num")
external fun EVP_ENCODE_CTX_num(ctx: CValuesRef<EVP_ENCODE_CTX>?): Int

@CCall("knifunptr_openssl1167_EVP_EncodeInit")
external fun EVP_EncodeInit(ctx: CValuesRef<EVP_ENCODE_CTX>?): Unit

@CCall("knifunptr_openssl1168_EVP_EncodeUpdate")
external fun EVP_EncodeUpdate(
    ctx: CValuesRef<EVP_ENCODE_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?,
    `in`: CValuesRef<UByteVar>?,
    inl: Int
): Int

@CCall("knifunptr_openssl1169_EVP_EncodeFinal")
external fun EVP_EncodeFinal(
    ctx: CValuesRef<EVP_ENCODE_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Unit

@CCall("knifunptr_openssl1170_EVP_EncodeBlock")
external fun EVP_EncodeBlock(t: CValuesRef<UByteVar>?, f: CValuesRef<UByteVar>?, n: Int): Int

@CCall("knifunptr_openssl1171_EVP_DecodeInit")
external fun EVP_DecodeInit(ctx: CValuesRef<EVP_ENCODE_CTX>?): Unit

@CCall("knifunptr_openssl1172_EVP_DecodeUpdate")
external fun EVP_DecodeUpdate(
    ctx: CValuesRef<EVP_ENCODE_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?,
    `in`: CValuesRef<UByteVar>?,
    inl: Int
): Int

@CCall("knifunptr_openssl1173_EVP_DecodeFinal")
external fun EVP_DecodeFinal(
    ctx: CValuesRef<EVP_ENCODE_CTX>?,
    out: CValuesRef<UByteVar>?,
    outl: CValuesRef<IntVar>?
): Int

@CCall("knifunptr_openssl1174_EVP_DecodeBlock")
external fun EVP_DecodeBlock(t: CValuesRef<UByteVar>?, f: CValuesRef<UByteVar>?, n: Int): Int

@CCall("knifunptr_openssl1175_EVP_CIPHER_CTX_new")
external fun EVP_CIPHER_CTX_new(): CPointer<EVP_CIPHER_CTX>?

@CCall("knifunptr_openssl1176_EVP_CIPHER_CTX_reset")
external fun EVP_CIPHER_CTX_reset(c: CValuesRef<EVP_CIPHER_CTX>?): Int

@CCall("knifunptr_openssl1177_EVP_CIPHER_CTX_free")
external fun EVP_CIPHER_CTX_free(c: CValuesRef<EVP_CIPHER_CTX>?): Unit

@CCall("knifunptr_openssl1178_EVP_CIPHER_CTX_set_key_length")
external fun EVP_CIPHER_CTX_set_key_length(x: CValuesRef<EVP_CIPHER_CTX>?, keylen: Int): Int

@CCall("knifunptr_openssl1179_EVP_CIPHER_CTX_set_padding")
external fun EVP_CIPHER_CTX_set_padding(c: CValuesRef<EVP_CIPHER_CTX>?, pad: Int): Int

@CCall("knifunptr_openssl1180_EVP_CIPHER_CTX_ctrl")
external fun EVP_CIPHER_CTX_ctrl(ctx: CValuesRef<EVP_CIPHER_CTX>?, type: Int, arg: Int, ptr: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1181_EVP_CIPHER_CTX_rand_key")
external fun EVP_CIPHER_CTX_rand_key(ctx: CValuesRef<EVP_CIPHER_CTX>?, key: CValuesRef<UByteVar>?): Int

@CCall("knifunptr_openssl1182_BIO_f_md")
external fun BIO_f_md(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl1183_BIO_f_base64")
external fun BIO_f_base64(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl1184_BIO_f_cipher")
external fun BIO_f_cipher(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl1185_BIO_f_reliable")
external fun BIO_f_reliable(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl1186_BIO_set_cipher")
external fun BIO_set_cipher(
    b: CValuesRef<BIO>?,
    c: CValuesRef<EVP_CIPHER>?,
    k: CValuesRef<UByteVar>?,
    i: CValuesRef<UByteVar>?,
    enc: Int
): Int

@CCall("knifunptr_openssl1187_EVP_md_null")
external fun EVP_md_null(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1188_EVP_md4")
external fun EVP_md4(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1189_EVP_md5")
external fun EVP_md5(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1190_EVP_md5_sha1")
external fun EVP_md5_sha1(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1191_EVP_blake2b512")
external fun EVP_blake2b512(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1192_EVP_blake2s256")
external fun EVP_blake2s256(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1193_EVP_sha1")
external fun EVP_sha1(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1194_EVP_sha224")
external fun EVP_sha224(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1195_EVP_sha256")
external fun EVP_sha256(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1196_EVP_sha384")
external fun EVP_sha384(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1197_EVP_sha512")
external fun EVP_sha512(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1198_EVP_sha512_224")
external fun EVP_sha512_224(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1199_EVP_sha512_256")
external fun EVP_sha512_256(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1200_EVP_sha3_224")
external fun EVP_sha3_224(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1201_EVP_sha3_256")
external fun EVP_sha3_256(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1202_EVP_sha3_384")
external fun EVP_sha3_384(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1203_EVP_sha3_512")
external fun EVP_sha3_512(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1204_EVP_shake128")
external fun EVP_shake128(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1205_EVP_shake256")
external fun EVP_shake256(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1206_EVP_ripemd160")
external fun EVP_ripemd160(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1207_EVP_whirlpool")
external fun EVP_whirlpool(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1208_EVP_sm3")
external fun EVP_sm3(): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1209_EVP_enc_null")
external fun EVP_enc_null(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1210_EVP_des_ecb")
external fun EVP_des_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1211_EVP_des_ede")
external fun EVP_des_ede(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1212_EVP_des_ede3")
external fun EVP_des_ede3(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1213_EVP_des_ede_ecb")
external fun EVP_des_ede_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1214_EVP_des_ede3_ecb")
external fun EVP_des_ede3_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1215_EVP_des_cfb64")
external fun EVP_des_cfb64(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1216_EVP_des_cfb1")
external fun EVP_des_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1217_EVP_des_cfb8")
external fun EVP_des_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1218_EVP_des_ede_cfb64")
external fun EVP_des_ede_cfb64(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1219_EVP_des_ede3_cfb64")
external fun EVP_des_ede3_cfb64(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1220_EVP_des_ede3_cfb1")
external fun EVP_des_ede3_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1221_EVP_des_ede3_cfb8")
external fun EVP_des_ede3_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1222_EVP_des_ofb")
external fun EVP_des_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1223_EVP_des_ede_ofb")
external fun EVP_des_ede_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1224_EVP_des_ede3_ofb")
external fun EVP_des_ede3_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1225_EVP_des_cbc")
external fun EVP_des_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1226_EVP_des_ede_cbc")
external fun EVP_des_ede_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1227_EVP_des_ede3_cbc")
external fun EVP_des_ede3_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1228_EVP_desx_cbc")
external fun EVP_desx_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1229_EVP_des_ede3_wrap")
external fun EVP_des_ede3_wrap(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1230_EVP_rc4")
external fun EVP_rc4(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1231_EVP_rc4_40")
external fun EVP_rc4_40(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1232_EVP_rc4_hmac_md5")
external fun EVP_rc4_hmac_md5(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1233_EVP_rc2_ecb")
external fun EVP_rc2_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1234_EVP_rc2_cbc")
external fun EVP_rc2_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1235_EVP_rc2_40_cbc")
external fun EVP_rc2_40_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1236_EVP_rc2_64_cbc")
external fun EVP_rc2_64_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1237_EVP_rc2_cfb64")
external fun EVP_rc2_cfb64(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1238_EVP_rc2_ofb")
external fun EVP_rc2_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1239_EVP_bf_ecb")
external fun EVP_bf_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1240_EVP_bf_cbc")
external fun EVP_bf_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1241_EVP_bf_cfb64")
external fun EVP_bf_cfb64(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1242_EVP_bf_ofb")
external fun EVP_bf_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1243_EVP_cast5_ecb")
external fun EVP_cast5_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1244_EVP_cast5_cbc")
external fun EVP_cast5_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1245_EVP_cast5_cfb64")
external fun EVP_cast5_cfb64(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1246_EVP_cast5_ofb")
external fun EVP_cast5_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1247_EVP_aes_128_ecb")
external fun EVP_aes_128_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1248_EVP_aes_128_cbc")
external fun EVP_aes_128_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1249_EVP_aes_128_cfb1")
external fun EVP_aes_128_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1250_EVP_aes_128_cfb8")
external fun EVP_aes_128_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1251_EVP_aes_128_cfb128")
external fun EVP_aes_128_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1252_EVP_aes_128_ofb")
external fun EVP_aes_128_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1253_EVP_aes_128_ctr")
external fun EVP_aes_128_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1254_EVP_aes_128_ccm")
external fun EVP_aes_128_ccm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1255_EVP_aes_128_gcm")
external fun EVP_aes_128_gcm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1256_EVP_aes_128_xts")
external fun EVP_aes_128_xts(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1257_EVP_aes_128_wrap")
external fun EVP_aes_128_wrap(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1258_EVP_aes_128_wrap_pad")
external fun EVP_aes_128_wrap_pad(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1259_EVP_aes_128_ocb")
external fun EVP_aes_128_ocb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1260_EVP_aes_192_ecb")
external fun EVP_aes_192_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1261_EVP_aes_192_cbc")
external fun EVP_aes_192_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1262_EVP_aes_192_cfb1")
external fun EVP_aes_192_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1263_EVP_aes_192_cfb8")
external fun EVP_aes_192_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1264_EVP_aes_192_cfb128")
external fun EVP_aes_192_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1265_EVP_aes_192_ofb")
external fun EVP_aes_192_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1266_EVP_aes_192_ctr")
external fun EVP_aes_192_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1267_EVP_aes_192_ccm")
external fun EVP_aes_192_ccm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1268_EVP_aes_192_gcm")
external fun EVP_aes_192_gcm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1269_EVP_aes_192_wrap")
external fun EVP_aes_192_wrap(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1270_EVP_aes_192_wrap_pad")
external fun EVP_aes_192_wrap_pad(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1271_EVP_aes_192_ocb")
external fun EVP_aes_192_ocb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1272_EVP_aes_256_ecb")
external fun EVP_aes_256_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1273_EVP_aes_256_cbc")
external fun EVP_aes_256_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1274_EVP_aes_256_cfb1")
external fun EVP_aes_256_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1275_EVP_aes_256_cfb8")
external fun EVP_aes_256_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1276_EVP_aes_256_cfb128")
external fun EVP_aes_256_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1277_EVP_aes_256_ofb")
external fun EVP_aes_256_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1278_EVP_aes_256_ctr")
external fun EVP_aes_256_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1279_EVP_aes_256_ccm")
external fun EVP_aes_256_ccm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1280_EVP_aes_256_gcm")
external fun EVP_aes_256_gcm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1281_EVP_aes_256_xts")
external fun EVP_aes_256_xts(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1282_EVP_aes_256_wrap")
external fun EVP_aes_256_wrap(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1283_EVP_aes_256_wrap_pad")
external fun EVP_aes_256_wrap_pad(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1284_EVP_aes_256_ocb")
external fun EVP_aes_256_ocb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1285_EVP_aes_128_cbc_hmac_sha1")
external fun EVP_aes_128_cbc_hmac_sha1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1286_EVP_aes_256_cbc_hmac_sha1")
external fun EVP_aes_256_cbc_hmac_sha1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1287_EVP_aes_128_cbc_hmac_sha256")
external fun EVP_aes_128_cbc_hmac_sha256(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1288_EVP_aes_256_cbc_hmac_sha256")
external fun EVP_aes_256_cbc_hmac_sha256(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1289_EVP_aria_128_ecb")
external fun EVP_aria_128_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1290_EVP_aria_128_cbc")
external fun EVP_aria_128_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1291_EVP_aria_128_cfb1")
external fun EVP_aria_128_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1292_EVP_aria_128_cfb8")
external fun EVP_aria_128_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1293_EVP_aria_128_cfb128")
external fun EVP_aria_128_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1294_EVP_aria_128_ctr")
external fun EVP_aria_128_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1295_EVP_aria_128_ofb")
external fun EVP_aria_128_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1296_EVP_aria_128_gcm")
external fun EVP_aria_128_gcm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1297_EVP_aria_128_ccm")
external fun EVP_aria_128_ccm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1298_EVP_aria_192_ecb")
external fun EVP_aria_192_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1299_EVP_aria_192_cbc")
external fun EVP_aria_192_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1300_EVP_aria_192_cfb1")
external fun EVP_aria_192_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1301_EVP_aria_192_cfb8")
external fun EVP_aria_192_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1302_EVP_aria_192_cfb128")
external fun EVP_aria_192_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1303_EVP_aria_192_ctr")
external fun EVP_aria_192_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1304_EVP_aria_192_ofb")
external fun EVP_aria_192_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1305_EVP_aria_192_gcm")
external fun EVP_aria_192_gcm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1306_EVP_aria_192_ccm")
external fun EVP_aria_192_ccm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1307_EVP_aria_256_ecb")
external fun EVP_aria_256_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1308_EVP_aria_256_cbc")
external fun EVP_aria_256_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1309_EVP_aria_256_cfb1")
external fun EVP_aria_256_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1310_EVP_aria_256_cfb8")
external fun EVP_aria_256_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1311_EVP_aria_256_cfb128")
external fun EVP_aria_256_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1312_EVP_aria_256_ctr")
external fun EVP_aria_256_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1313_EVP_aria_256_ofb")
external fun EVP_aria_256_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1314_EVP_aria_256_gcm")
external fun EVP_aria_256_gcm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1315_EVP_aria_256_ccm")
external fun EVP_aria_256_ccm(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1316_EVP_camellia_128_ecb")
external fun EVP_camellia_128_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1317_EVP_camellia_128_cbc")
external fun EVP_camellia_128_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1318_EVP_camellia_128_cfb1")
external fun EVP_camellia_128_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1319_EVP_camellia_128_cfb8")
external fun EVP_camellia_128_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1320_EVP_camellia_128_cfb128")
external fun EVP_camellia_128_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1321_EVP_camellia_128_ofb")
external fun EVP_camellia_128_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1322_EVP_camellia_128_ctr")
external fun EVP_camellia_128_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1323_EVP_camellia_192_ecb")
external fun EVP_camellia_192_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1324_EVP_camellia_192_cbc")
external fun EVP_camellia_192_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1325_EVP_camellia_192_cfb1")
external fun EVP_camellia_192_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1326_EVP_camellia_192_cfb8")
external fun EVP_camellia_192_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1327_EVP_camellia_192_cfb128")
external fun EVP_camellia_192_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1328_EVP_camellia_192_ofb")
external fun EVP_camellia_192_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1329_EVP_camellia_192_ctr")
external fun EVP_camellia_192_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1330_EVP_camellia_256_ecb")
external fun EVP_camellia_256_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1331_EVP_camellia_256_cbc")
external fun EVP_camellia_256_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1332_EVP_camellia_256_cfb1")
external fun EVP_camellia_256_cfb1(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1333_EVP_camellia_256_cfb8")
external fun EVP_camellia_256_cfb8(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1334_EVP_camellia_256_cfb128")
external fun EVP_camellia_256_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1335_EVP_camellia_256_ofb")
external fun EVP_camellia_256_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1336_EVP_camellia_256_ctr")
external fun EVP_camellia_256_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1337_EVP_chacha20")
external fun EVP_chacha20(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1338_EVP_chacha20_poly1305")
external fun EVP_chacha20_poly1305(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1339_EVP_seed_ecb")
external fun EVP_seed_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1340_EVP_seed_cbc")
external fun EVP_seed_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1341_EVP_seed_cfb128")
external fun EVP_seed_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1342_EVP_seed_ofb")
external fun EVP_seed_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1343_EVP_sm4_ecb")
external fun EVP_sm4_ecb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1344_EVP_sm4_cbc")
external fun EVP_sm4_cbc(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1345_EVP_sm4_cfb128")
external fun EVP_sm4_cfb128(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1346_EVP_sm4_ofb")
external fun EVP_sm4_ofb(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1347_EVP_sm4_ctr")
external fun EVP_sm4_ctr(): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1348_EVP_add_cipher")
external fun EVP_add_cipher(cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1349_EVP_add_digest")
external fun EVP_add_digest(digest: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl1350_EVP_get_cipherbyname")
external fun EVP_get_cipherbyname(@CCall.CString name: String?): CPointer<EVP_CIPHER>?

@CCall("knifunptr_openssl1351_EVP_get_digestbyname")
external fun EVP_get_digestbyname(@CCall.CString name: String?): CPointer<EVP_MD>?

@CCall("knifunptr_openssl1352_EVP_CIPHER_do_all")
external fun EVP_CIPHER_do_all(
    fn: CPointer<CFunction<(CPointer<EVP_CIPHER>?, CPointer<ByteVar>?, CPointer<ByteVar>?, COpaquePointer?) -> Unit>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl1353_EVP_CIPHER_do_all_sorted")
external fun EVP_CIPHER_do_all_sorted(
    fn: CPointer<CFunction<(CPointer<EVP_CIPHER>?, CPointer<ByteVar>?, CPointer<ByteVar>?, COpaquePointer?) -> Unit>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl1354_EVP_MD_do_all")
external fun EVP_MD_do_all(
    fn: CPointer<CFunction<(CPointer<EVP_MD>?, CPointer<ByteVar>?, CPointer<ByteVar>?, COpaquePointer?) -> Unit>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl1355_EVP_MD_do_all_sorted")
external fun EVP_MD_do_all_sorted(
    fn: CPointer<CFunction<(CPointer<EVP_MD>?, CPointer<ByteVar>?, CPointer<ByteVar>?, COpaquePointer?) -> Unit>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl1356_EVP_PKEY_decrypt_old")
external fun EVP_PKEY_decrypt_old(
    dec_key: CValuesRef<UByteVar>?,
    enc_key: CValuesRef<UByteVar>?,
    enc_key_len: Int,
    private_key: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1357_EVP_PKEY_encrypt_old")
external fun EVP_PKEY_encrypt_old(
    enc_key: CValuesRef<UByteVar>?,
    key: CValuesRef<UByteVar>?,
    key_len: Int,
    pub_key: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl1358_EVP_PKEY_type")
external fun EVP_PKEY_type(type: Int): Int

@CCall("knifunptr_openssl1359_EVP_PKEY_id")
external fun EVP_PKEY_id(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1360_EVP_PKEY_base_id")
external fun EVP_PKEY_base_id(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1361_EVP_PKEY_bits")
external fun EVP_PKEY_bits(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1362_EVP_PKEY_security_bits")
external fun EVP_PKEY_security_bits(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1363_EVP_PKEY_size")
external fun EVP_PKEY_size(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1364_EVP_PKEY_set_type")
external fun EVP_PKEY_set_type(pkey: CValuesRef<EVP_PKEY>?, type: Int): Int

@CCall("knifunptr_openssl1365_EVP_PKEY_set_type_str")
external fun EVP_PKEY_set_type_str(pkey: CValuesRef<EVP_PKEY>?, @CCall.CString str: String?, len: Int): Int

@CCall("knifunptr_openssl1366_EVP_PKEY_set_alias_type")
external fun EVP_PKEY_set_alias_type(pkey: CValuesRef<EVP_PKEY>?, type: Int): Int

@CCall("knifunptr_openssl1367_EVP_PKEY_set1_engine")
external fun EVP_PKEY_set1_engine(pkey: CValuesRef<EVP_PKEY>?, e: CValuesRef<ENGINE>?): Int

@CCall("knifunptr_openssl1368_EVP_PKEY_get0_engine")
external fun EVP_PKEY_get0_engine(pkey: CValuesRef<EVP_PKEY>?): CPointer<ENGINE>?

@CCall("knifunptr_openssl1369_EVP_PKEY_assign")
external fun EVP_PKEY_assign(pkey: CValuesRef<EVP_PKEY>?, type: Int, key: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1370_EVP_PKEY_get0")
external fun EVP_PKEY_get0(pkey: CValuesRef<EVP_PKEY>?): COpaquePointer?

@CCall("knifunptr_openssl1371_EVP_PKEY_get0_hmac")
external fun EVP_PKEY_get0_hmac(pkey: CValuesRef<EVP_PKEY>?, len: CValuesRef<size_tVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1372_EVP_PKEY_get0_poly1305")
external fun EVP_PKEY_get0_poly1305(pkey: CValuesRef<EVP_PKEY>?, len: CValuesRef<size_tVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1373_EVP_PKEY_get0_siphash")
external fun EVP_PKEY_get0_siphash(pkey: CValuesRef<EVP_PKEY>?, len: CValuesRef<size_tVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1374_EVP_PKEY_set1_RSA")
external fun EVP_PKEY_set1_RSA(pkey: CValuesRef<EVP_PKEY>?, key: CValuesRef<rsa_st>?): Int

@CCall("knifunptr_openssl1375_EVP_PKEY_get0_RSA")
external fun EVP_PKEY_get0_RSA(pkey: CValuesRef<EVP_PKEY>?): CPointer<rsa_st>?

@CCall("knifunptr_openssl1376_EVP_PKEY_get1_RSA")
external fun EVP_PKEY_get1_RSA(pkey: CValuesRef<EVP_PKEY>?): CPointer<rsa_st>?

@CCall("knifunptr_openssl1377_EVP_PKEY_set1_DSA")
external fun EVP_PKEY_set1_DSA(pkey: CValuesRef<EVP_PKEY>?, key: CValuesRef<dsa_st>?): Int

@CCall("knifunptr_openssl1378_EVP_PKEY_get0_DSA")
external fun EVP_PKEY_get0_DSA(pkey: CValuesRef<EVP_PKEY>?): CPointer<dsa_st>?

@CCall("knifunptr_openssl1379_EVP_PKEY_get1_DSA")
external fun EVP_PKEY_get1_DSA(pkey: CValuesRef<EVP_PKEY>?): CPointer<dsa_st>?

@CCall("knifunptr_openssl1380_EVP_PKEY_set1_DH")
external fun EVP_PKEY_set1_DH(pkey: CValuesRef<EVP_PKEY>?, key: CValuesRef<dh_st>?): Int

@CCall("knifunptr_openssl1381_EVP_PKEY_get0_DH")
external fun EVP_PKEY_get0_DH(pkey: CValuesRef<EVP_PKEY>?): CPointer<dh_st>?

@CCall("knifunptr_openssl1382_EVP_PKEY_get1_DH")
external fun EVP_PKEY_get1_DH(pkey: CValuesRef<EVP_PKEY>?): CPointer<dh_st>?

@CCall("knifunptr_openssl1383_EVP_PKEY_set1_EC_KEY")
external fun EVP_PKEY_set1_EC_KEY(pkey: CValuesRef<EVP_PKEY>?, key: CValuesRef<ec_key_st>?): Int

@CCall("knifunptr_openssl1384_EVP_PKEY_get0_EC_KEY")
external fun EVP_PKEY_get0_EC_KEY(pkey: CValuesRef<EVP_PKEY>?): CPointer<ec_key_st>?

@CCall("knifunptr_openssl1385_EVP_PKEY_get1_EC_KEY")
external fun EVP_PKEY_get1_EC_KEY(pkey: CValuesRef<EVP_PKEY>?): CPointer<ec_key_st>?

@CCall("knifunptr_openssl1386_EVP_PKEY_new")
external fun EVP_PKEY_new(): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1387_EVP_PKEY_up_ref")
external fun EVP_PKEY_up_ref(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1388_EVP_PKEY_free")
external fun EVP_PKEY_free(pkey: CValuesRef<EVP_PKEY>?): Unit

@CCall("knifunptr_openssl1389_d2i_PublicKey")
external fun d2i_PublicKey(
    type: Int,
    a: CValuesRef<CPointerVar<EVP_PKEY>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1390_i2d_PublicKey")
external fun i2d_PublicKey(a: CValuesRef<EVP_PKEY>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1391_d2i_PrivateKey")
external fun d2i_PrivateKey(
    type: Int,
    a: CValuesRef<CPointerVar<EVP_PKEY>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1392_d2i_AutoPrivateKey")
external fun d2i_AutoPrivateKey(
    a: CValuesRef<CPointerVar<EVP_PKEY>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1393_i2d_PrivateKey")
external fun i2d_PrivateKey(a: CValuesRef<EVP_PKEY>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1394_EVP_PKEY_copy_parameters")
external fun EVP_PKEY_copy_parameters(to: CValuesRef<EVP_PKEY>?, from: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1395_EVP_PKEY_missing_parameters")
external fun EVP_PKEY_missing_parameters(pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1396_EVP_PKEY_save_parameters")
external fun EVP_PKEY_save_parameters(pkey: CValuesRef<EVP_PKEY>?, mode: Int): Int

@CCall("knifunptr_openssl1397_EVP_PKEY_cmp_parameters")
external fun EVP_PKEY_cmp_parameters(a: CValuesRef<EVP_PKEY>?, b: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1398_EVP_PKEY_cmp")
external fun EVP_PKEY_cmp(a: CValuesRef<EVP_PKEY>?, b: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1399_EVP_PKEY_print_public")
external fun EVP_PKEY_print_public(
    out: CValuesRef<BIO>?,
    pkey: CValuesRef<EVP_PKEY>?,
    indent: Int,
    pctx: CValuesRef<ASN1_PCTX>?
): Int

@CCall("knifunptr_openssl1400_EVP_PKEY_print_private")
external fun EVP_PKEY_print_private(
    out: CValuesRef<BIO>?,
    pkey: CValuesRef<EVP_PKEY>?,
    indent: Int,
    pctx: CValuesRef<ASN1_PCTX>?
): Int

@CCall("knifunptr_openssl1401_EVP_PKEY_print_params")
external fun EVP_PKEY_print_params(
    out: CValuesRef<BIO>?,
    pkey: CValuesRef<EVP_PKEY>?,
    indent: Int,
    pctx: CValuesRef<ASN1_PCTX>?
): Int

@CCall("knifunptr_openssl1402_EVP_PKEY_get_default_digest_nid")
external fun EVP_PKEY_get_default_digest_nid(pkey: CValuesRef<EVP_PKEY>?, pnid: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1403_EVP_PKEY_set1_tls_encodedpoint")
external fun EVP_PKEY_set1_tls_encodedpoint(pkey: CValuesRef<EVP_PKEY>?, pt: CValuesRef<UByteVar>?, ptlen: size_t): Int

@CCall("knifunptr_openssl1404_EVP_PKEY_get1_tls_encodedpoint")
external fun EVP_PKEY_get1_tls_encodedpoint(
    pkey: CValuesRef<EVP_PKEY>?,
    ppt: CValuesRef<CPointerVar<UByteVar>>?
): size_t

@CCall("knifunptr_openssl1405_EVP_CIPHER_type")
external fun EVP_CIPHER_type(ctx: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl1406_EVP_CIPHER_param_to_asn1")
external fun EVP_CIPHER_param_to_asn1(c: CValuesRef<EVP_CIPHER_CTX>?, type: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl1407_EVP_CIPHER_asn1_to_param")
external fun EVP_CIPHER_asn1_to_param(c: CValuesRef<EVP_CIPHER_CTX>?, type: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl1408_EVP_CIPHER_set_asn1_iv")
external fun EVP_CIPHER_set_asn1_iv(c: CValuesRef<EVP_CIPHER_CTX>?, type: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl1409_EVP_CIPHER_get_asn1_iv")
external fun EVP_CIPHER_get_asn1_iv(c: CValuesRef<EVP_CIPHER_CTX>?, type: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl1410_PKCS5_PBE_keyivgen")
external fun PKCS5_PBE_keyivgen(
    ctx: CValuesRef<EVP_CIPHER_CTX>?, @CCall.CString pass: String?,
    passlen: Int,
    param: CValuesRef<ASN1_TYPE>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    md: CValuesRef<EVP_MD>?,
    en_de: Int
): Int

@CCall("knifunptr_openssl1411_PKCS5_PBKDF2_HMAC_SHA1")
external fun PKCS5_PBKDF2_HMAC_SHA1(
    @CCall.CString pass: String?, passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    iter: Int,
    keylen: Int,
    out: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1412_PKCS5_PBKDF2_HMAC")
external fun PKCS5_PBKDF2_HMAC(
    @CCall.CString pass: String?, passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    iter: Int,
    digest: CValuesRef<EVP_MD>?,
    keylen: Int,
    out: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl1413_PKCS5_v2_PBE_keyivgen")
external fun PKCS5_v2_PBE_keyivgen(
    ctx: CValuesRef<EVP_CIPHER_CTX>?, @CCall.CString pass: String?,
    passlen: Int,
    param: CValuesRef<ASN1_TYPE>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    md: CValuesRef<EVP_MD>?,
    en_de: Int
): Int

@CCall("knifunptr_openssl1414_EVP_PBE_scrypt")
external fun EVP_PBE_scrypt(
    @CCall.CString pass: String?, passlen: size_t,
    salt: CValuesRef<UByteVar>?,
    saltlen: size_t,
    N: uint64_t,
    r: uint64_t,
    p: uint64_t,
    maxmem: uint64_t,
    key: CValuesRef<UByteVar>?,
    keylen: size_t
): Int

@CCall("knifunptr_openssl1415_PKCS5_v2_scrypt_keyivgen")
external fun PKCS5_v2_scrypt_keyivgen(
    ctx: CValuesRef<EVP_CIPHER_CTX>?, @CCall.CString pass: String?,
    passlen: Int,
    param: CValuesRef<ASN1_TYPE>?,
    c: CValuesRef<EVP_CIPHER>?,
    md: CValuesRef<EVP_MD>?,
    en_de: Int
): Int

@CCall("knifunptr_openssl1416_PKCS5_PBE_add")
external fun PKCS5_PBE_add(): Unit

@CCall("knifunptr_openssl1417_EVP_PBE_CipherInit")
external fun EVP_PBE_CipherInit(
    pbe_obj: CValuesRef<ASN1_OBJECT>?, @CCall.CString pass: String?,
    passlen: Int,
    param: CValuesRef<ASN1_TYPE>?,
    ctx: CValuesRef<EVP_CIPHER_CTX>?,
    en_de: Int
): Int

@CCall("knifunptr_openssl1418_EVP_PBE_alg_add_type")
external fun EVP_PBE_alg_add_type(
    pbe_type: Int,
    pbe_nid: Int,
    cipher_nid: Int,
    md_nid: Int,
    keygen: CPointer<EVP_PBE_KEYGEN>?
): Int

@CCall("knifunptr_openssl1419_EVP_PBE_alg_add")
external fun EVP_PBE_alg_add(
    nid: Int,
    cipher: CValuesRef<EVP_CIPHER>?,
    md: CValuesRef<EVP_MD>?,
    keygen: CPointer<EVP_PBE_KEYGEN>?
): Int

@CCall("knifunptr_openssl1420_EVP_PBE_find")
external fun EVP_PBE_find(
    type: Int,
    pbe_nid: Int,
    pcnid: CValuesRef<IntVar>?,
    pmnid: CValuesRef<IntVar>?,
    pkeygen: CValuesRef<CPointerVar<EVP_PBE_KEYGEN>>?
): Int

@CCall("knifunptr_openssl1421_EVP_PBE_cleanup")
external fun EVP_PBE_cleanup(): Unit

@CCall("knifunptr_openssl1422_EVP_PBE_get")
external fun EVP_PBE_get(ptype: CValuesRef<IntVar>?, ppbe_nid: CValuesRef<IntVar>?, num: size_t): Int

@CCall("knifunptr_openssl1423_EVP_PKEY_asn1_get_count")
external fun EVP_PKEY_asn1_get_count(): Int

@CCall("knifunptr_openssl1424_EVP_PKEY_asn1_get0")
external fun EVP_PKEY_asn1_get0(idx: Int): CPointer<EVP_PKEY_ASN1_METHOD>?

@CCall("knifunptr_openssl1425_EVP_PKEY_asn1_find")
external fun EVP_PKEY_asn1_find(pe: CValuesRef<CPointerVar<ENGINE>>?, type: Int): CPointer<EVP_PKEY_ASN1_METHOD>?

@CCall("knifunptr_openssl1426_EVP_PKEY_asn1_find_str")
external fun EVP_PKEY_asn1_find_str(
    pe: CValuesRef<CPointerVar<ENGINE>>?, @CCall.CString str: String?,
    len: Int
): CPointer<EVP_PKEY_ASN1_METHOD>?

@CCall("knifunptr_openssl1427_EVP_PKEY_asn1_add0")
external fun EVP_PKEY_asn1_add0(ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?): Int

@CCall("knifunptr_openssl1428_EVP_PKEY_asn1_add_alias")
external fun EVP_PKEY_asn1_add_alias(to: Int, from: Int): Int

@CCall("knifunptr_openssl1429_EVP_PKEY_asn1_get0_info")
external fun EVP_PKEY_asn1_get0_info(
    ppkey_id: CValuesRef<IntVar>?,
    pkey_base_id: CValuesRef<IntVar>?,
    ppkey_flags: CValuesRef<IntVar>?,
    pinfo: CValuesRef<CPointerVar<ByteVar>>?,
    ppem_str: CValuesRef<CPointerVar<ByteVar>>?,
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?
): Int

@CCall("knifunptr_openssl1430_EVP_PKEY_get0_asn1")
external fun EVP_PKEY_get0_asn1(pkey: CValuesRef<EVP_PKEY>?): CPointer<EVP_PKEY_ASN1_METHOD>?

@CCall("knifunptr_openssl1431_EVP_PKEY_asn1_new")
external fun EVP_PKEY_asn1_new(
    id: Int,
    flags: Int, @CCall.CString pem_str: String?, @CCall.CString info: String?
): CPointer<EVP_PKEY_ASN1_METHOD>?

@CCall("knifunptr_openssl1432_EVP_PKEY_asn1_copy")
external fun EVP_PKEY_asn1_copy(dst: CValuesRef<EVP_PKEY_ASN1_METHOD>?, src: CValuesRef<EVP_PKEY_ASN1_METHOD>?): Unit

@CCall("knifunptr_openssl1433_EVP_PKEY_asn1_free")
external fun EVP_PKEY_asn1_free(ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?): Unit

@CCall("knifunptr_openssl1434_EVP_PKEY_asn1_set_public")
external fun EVP_PKEY_asn1_set_public(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pub_decode: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<X509_PUBKEY>?) -> Int>>?,
    pub_encode: CPointer<CFunction<(CPointer<X509_PUBKEY>?, CPointer<EVP_PKEY>?) -> Int>>?,
    pub_cmp: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<EVP_PKEY>?) -> Int>>?,
    pub_print: CPointer<CFunction<(CPointer<BIO>?, CPointer<EVP_PKEY>?, Int, CPointer<ASN1_PCTX>?) -> Int>>?,
    pkey_size: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?,
    pkey_bits: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1435_EVP_PKEY_asn1_set_private")
external fun EVP_PKEY_asn1_set_private(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    priv_decode: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<PKCS8_PRIV_KEY_INFO>?) -> Int>>?,
    priv_encode: CPointer<CFunction<(CPointer<PKCS8_PRIV_KEY_INFO>?, CPointer<EVP_PKEY>?) -> Int>>?,
    priv_print: CPointer<CFunction<(CPointer<BIO>?, CPointer<EVP_PKEY>?, Int, CPointer<ASN1_PCTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1436_EVP_PKEY_asn1_set_param")
external fun EVP_PKEY_asn1_set_param(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    param_decode: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<CPointerVar<UByteVar>>?, Int) -> Int>>?,
    param_encode: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<CPointerVar<UByteVar>>?) -> Int>>?,
    param_missing: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?,
    param_copy: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<EVP_PKEY>?) -> Int>>?,
    param_cmp: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<EVP_PKEY>?) -> Int>>?,
    param_print: CPointer<CFunction<(CPointer<BIO>?, CPointer<EVP_PKEY>?, Int, CPointer<ASN1_PCTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1437_EVP_PKEY_asn1_set_free")
external fun EVP_PKEY_asn1_set_free(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pkey_free: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl1438_EVP_PKEY_asn1_set_ctrl")
external fun EVP_PKEY_asn1_set_ctrl(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pkey_ctrl: CPointer<CFunction<(CPointer<EVP_PKEY>?, Int, Long, COpaquePointer?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1439_EVP_PKEY_asn1_set_item")
external fun EVP_PKEY_asn1_set_item(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    item_verify: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, CPointer<ASN1_ITEM>?, COpaquePointer?, CPointer<X509_ALGOR>?, CPointer<ASN1_BIT_STRING>?, CPointer<EVP_PKEY>?) -> Int>>?,
    item_sign: CPointer<CFunction<(CPointer<EVP_MD_CTX>?, CPointer<ASN1_ITEM>?, COpaquePointer?, CPointer<X509_ALGOR>?, CPointer<X509_ALGOR>?, CPointer<ASN1_BIT_STRING>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1440_EVP_PKEY_asn1_set_siginf")
external fun EVP_PKEY_asn1_set_siginf(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    siginf_set: CPointer<CFunction<(CPointer<X509_SIG_INFO>?, CPointer<X509_ALGOR>?, CPointer<ASN1_STRING>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1441_EVP_PKEY_asn1_set_check")
external fun EVP_PKEY_asn1_set_check(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pkey_check: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1442_EVP_PKEY_asn1_set_public_check")
external fun EVP_PKEY_asn1_set_public_check(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pkey_pub_check: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1443_EVP_PKEY_asn1_set_param_check")
external fun EVP_PKEY_asn1_set_param_check(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pkey_param_check: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1444_EVP_PKEY_asn1_set_set_priv_key")
external fun EVP_PKEY_asn1_set_set_priv_key(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    set_priv_key: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1445_EVP_PKEY_asn1_set_set_pub_key")
external fun EVP_PKEY_asn1_set_set_pub_key(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    set_pub_key: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1446_EVP_PKEY_asn1_set_get_priv_key")
external fun EVP_PKEY_asn1_set_get_priv_key(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    get_priv_key: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<UByteVar>?, CPointer<size_tVar>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1447_EVP_PKEY_asn1_set_get_pub_key")
external fun EVP_PKEY_asn1_set_get_pub_key(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    get_pub_key: CPointer<CFunction<(CPointer<EVP_PKEY>?, CPointer<UByteVar>?, CPointer<size_tVar>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1448_EVP_PKEY_asn1_set_security_bits")
external fun EVP_PKEY_asn1_set_security_bits(
    ameth: CValuesRef<EVP_PKEY_ASN1_METHOD>?,
    pkey_security_bits: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1449_EVP_PKEY_meth_find")
external fun EVP_PKEY_meth_find(type: Int): CPointer<EVP_PKEY_METHOD>?

@CCall("knifunptr_openssl1450_EVP_PKEY_meth_new")
external fun EVP_PKEY_meth_new(id: Int, flags: Int): CPointer<EVP_PKEY_METHOD>?

@CCall("knifunptr_openssl1451_EVP_PKEY_meth_get0_info")
external fun EVP_PKEY_meth_get0_info(
    ppkey_id: CValuesRef<IntVar>?,
    pflags: CValuesRef<IntVar>?,
    meth: CValuesRef<EVP_PKEY_METHOD>?
): Unit

@CCall("knifunptr_openssl1452_EVP_PKEY_meth_copy")
external fun EVP_PKEY_meth_copy(dst: CValuesRef<EVP_PKEY_METHOD>?, src: CValuesRef<EVP_PKEY_METHOD>?): Unit

@CCall("knifunptr_openssl1453_EVP_PKEY_meth_free")
external fun EVP_PKEY_meth_free(pmeth: CValuesRef<EVP_PKEY_METHOD>?): Unit

@CCall("knifunptr_openssl1454_EVP_PKEY_meth_add0")
external fun EVP_PKEY_meth_add0(pmeth: CValuesRef<EVP_PKEY_METHOD>?): Int

@CCall("knifunptr_openssl1455_EVP_PKEY_meth_remove")
external fun EVP_PKEY_meth_remove(pmeth: CValuesRef<EVP_PKEY_METHOD>?): Int

@CCall("knifunptr_openssl1456_EVP_PKEY_meth_get_count")
external fun EVP_PKEY_meth_get_count(): size_t

@CCall("knifunptr_openssl1457_EVP_PKEY_meth_get0")
external fun EVP_PKEY_meth_get0(idx: size_t): CPointer<EVP_PKEY_METHOD>?

@CCall("knifunptr_openssl1458_EVP_PKEY_CTX_new")
external fun EVP_PKEY_CTX_new(pkey: CValuesRef<EVP_PKEY>?, e: CValuesRef<ENGINE>?): CPointer<EVP_PKEY_CTX>?

@CCall("knifunptr_openssl1459_EVP_PKEY_CTX_new_id")
external fun EVP_PKEY_CTX_new_id(id: Int, e: CValuesRef<ENGINE>?): CPointer<EVP_PKEY_CTX>?

@CCall("knifunptr_openssl1460_EVP_PKEY_CTX_dup")
external fun EVP_PKEY_CTX_dup(ctx: CValuesRef<EVP_PKEY_CTX>?): CPointer<EVP_PKEY_CTX>?

@CCall("knifunptr_openssl1461_EVP_PKEY_CTX_free")
external fun EVP_PKEY_CTX_free(ctx: CValuesRef<EVP_PKEY_CTX>?): Unit

@CCall("knifunptr_openssl1462_EVP_PKEY_CTX_ctrl")
external fun EVP_PKEY_CTX_ctrl(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    keytype: Int,
    optype: Int,
    cmd: Int,
    p1: Int,
    p2: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl1463_EVP_PKEY_CTX_ctrl_str")
external fun EVP_PKEY_CTX_ctrl_str(ctx: CValuesRef<EVP_PKEY_CTX>?, @CCall.CString type: String?, @CCall.CString value: String?): Int

@CCall("knifunptr_openssl1464_EVP_PKEY_CTX_ctrl_uint64")
external fun EVP_PKEY_CTX_ctrl_uint64(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    keytype: Int,
    optype: Int,
    cmd: Int,
    value: uint64_t
): Int

@CCall("knifunptr_openssl1465_EVP_PKEY_CTX_str2ctrl")
external fun EVP_PKEY_CTX_str2ctrl(ctx: CValuesRef<EVP_PKEY_CTX>?, cmd: Int, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl1466_EVP_PKEY_CTX_hex2ctrl")
external fun EVP_PKEY_CTX_hex2ctrl(ctx: CValuesRef<EVP_PKEY_CTX>?, cmd: Int, @CCall.CString hex: String?): Int

@CCall("knifunptr_openssl1467_EVP_PKEY_CTX_md")
external fun EVP_PKEY_CTX_md(ctx: CValuesRef<EVP_PKEY_CTX>?, optype: Int, cmd: Int, @CCall.CString md: String?): Int

@CCall("knifunptr_openssl1468_EVP_PKEY_CTX_get_operation")
external fun EVP_PKEY_CTX_get_operation(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1469_EVP_PKEY_CTX_set0_keygen_info")
external fun EVP_PKEY_CTX_set0_keygen_info(ctx: CValuesRef<EVP_PKEY_CTX>?, dat: CValuesRef<IntVar>?, datlen: Int): Unit

@CCall("knifunptr_openssl1470_EVP_PKEY_new_mac_key")
external fun EVP_PKEY_new_mac_key(
    type: Int,
    e: CValuesRef<ENGINE>?,
    key: CValuesRef<UByteVar>?,
    keylen: Int
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1471_EVP_PKEY_new_raw_private_key")
external fun EVP_PKEY_new_raw_private_key(
    type: Int,
    e: CValuesRef<ENGINE>?,
    priv: CValuesRef<UByteVar>?,
    len: size_t
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1472_EVP_PKEY_new_raw_public_key")
external fun EVP_PKEY_new_raw_public_key(
    type: Int,
    e: CValuesRef<ENGINE>?,
    pub: CValuesRef<UByteVar>?,
    len: size_t
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1473_EVP_PKEY_get_raw_private_key")
external fun EVP_PKEY_get_raw_private_key(
    pkey: CValuesRef<EVP_PKEY>?,
    priv: CValuesRef<UByteVar>?,
    len: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl1474_EVP_PKEY_get_raw_public_key")
external fun EVP_PKEY_get_raw_public_key(
    pkey: CValuesRef<EVP_PKEY>?,
    pub: CValuesRef<UByteVar>?,
    len: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl1475_EVP_PKEY_new_CMAC_key")
external fun EVP_PKEY_new_CMAC_key(
    e: CValuesRef<ENGINE>?,
    priv: CValuesRef<UByteVar>?,
    len: size_t,
    cipher: CValuesRef<EVP_CIPHER>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1476_EVP_PKEY_CTX_set_data")
external fun EVP_PKEY_CTX_set_data(ctx: CValuesRef<EVP_PKEY_CTX>?, data: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl1477_EVP_PKEY_CTX_get_data")
external fun EVP_PKEY_CTX_get_data(ctx: CValuesRef<EVP_PKEY_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl1478_EVP_PKEY_CTX_get0_pkey")
external fun EVP_PKEY_CTX_get0_pkey(ctx: CValuesRef<EVP_PKEY_CTX>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1479_EVP_PKEY_CTX_get0_peerkey")
external fun EVP_PKEY_CTX_get0_peerkey(ctx: CValuesRef<EVP_PKEY_CTX>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl1480_EVP_PKEY_CTX_set_app_data")
external fun EVP_PKEY_CTX_set_app_data(ctx: CValuesRef<EVP_PKEY_CTX>?, data: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl1481_EVP_PKEY_CTX_get_app_data")
external fun EVP_PKEY_CTX_get_app_data(ctx: CValuesRef<EVP_PKEY_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl1482_EVP_PKEY_sign_init")
external fun EVP_PKEY_sign_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1483_EVP_PKEY_sign")
external fun EVP_PKEY_sign(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    sig: CValuesRef<UByteVar>?,
    siglen: CValuesRef<size_tVar>?,
    tbs: CValuesRef<UByteVar>?,
    tbslen: size_t
): Int

@CCall("knifunptr_openssl1484_EVP_PKEY_verify_init")
external fun EVP_PKEY_verify_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1485_EVP_PKEY_verify")
external fun EVP_PKEY_verify(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    sig: CValuesRef<UByteVar>?,
    siglen: size_t,
    tbs: CValuesRef<UByteVar>?,
    tbslen: size_t
): Int

@CCall("knifunptr_openssl1486_EVP_PKEY_verify_recover_init")
external fun EVP_PKEY_verify_recover_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1487_EVP_PKEY_verify_recover")
external fun EVP_PKEY_verify_recover(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    rout: CValuesRef<UByteVar>?,
    routlen: CValuesRef<size_tVar>?,
    sig: CValuesRef<UByteVar>?,
    siglen: size_t
): Int

@CCall("knifunptr_openssl1488_EVP_PKEY_encrypt_init")
external fun EVP_PKEY_encrypt_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1489_EVP_PKEY_encrypt")
external fun EVP_PKEY_encrypt(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    out: CValuesRef<UByteVar>?,
    outlen: CValuesRef<size_tVar>?,
    `in`: CValuesRef<UByteVar>?,
    inlen: size_t
): Int

@CCall("knifunptr_openssl1490_EVP_PKEY_decrypt_init")
external fun EVP_PKEY_decrypt_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1491_EVP_PKEY_decrypt")
external fun EVP_PKEY_decrypt(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    out: CValuesRef<UByteVar>?,
    outlen: CValuesRef<size_tVar>?,
    `in`: CValuesRef<UByteVar>?,
    inlen: size_t
): Int

@CCall("knifunptr_openssl1492_EVP_PKEY_derive_init")
external fun EVP_PKEY_derive_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1493_EVP_PKEY_derive_set_peer")
external fun EVP_PKEY_derive_set_peer(ctx: CValuesRef<EVP_PKEY_CTX>?, peer: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl1494_EVP_PKEY_derive")
external fun EVP_PKEY_derive(
    ctx: CValuesRef<EVP_PKEY_CTX>?,
    key: CValuesRef<UByteVar>?,
    keylen: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl1495_EVP_PKEY_paramgen_init")
external fun EVP_PKEY_paramgen_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1496_EVP_PKEY_paramgen")
external fun EVP_PKEY_paramgen(ctx: CValuesRef<EVP_PKEY_CTX>?, ppkey: CValuesRef<CPointerVar<EVP_PKEY>>?): Int

@CCall("knifunptr_openssl1497_EVP_PKEY_keygen_init")
external fun EVP_PKEY_keygen_init(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1498_EVP_PKEY_keygen")
external fun EVP_PKEY_keygen(ctx: CValuesRef<EVP_PKEY_CTX>?, ppkey: CValuesRef<CPointerVar<EVP_PKEY>>?): Int

@CCall("knifunptr_openssl1499_EVP_PKEY_check")
external fun EVP_PKEY_check(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1500_EVP_PKEY_public_check")
external fun EVP_PKEY_public_check(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1501_EVP_PKEY_param_check")
external fun EVP_PKEY_param_check(ctx: CValuesRef<EVP_PKEY_CTX>?): Int

@CCall("knifunptr_openssl1502_EVP_PKEY_CTX_set_cb")
external fun EVP_PKEY_CTX_set_cb(ctx: CValuesRef<EVP_PKEY_CTX>?, cb: CPointer<EVP_PKEY_gen_cb>?): Unit

@CCall("knifunptr_openssl1503_EVP_PKEY_CTX_get_cb")
external fun EVP_PKEY_CTX_get_cb(ctx: CValuesRef<EVP_PKEY_CTX>?): CPointer<EVP_PKEY_gen_cb>?

@CCall("knifunptr_openssl1504_EVP_PKEY_CTX_get_keygen_info")
external fun EVP_PKEY_CTX_get_keygen_info(ctx: CValuesRef<EVP_PKEY_CTX>?, idx: Int): Int

@CCall("knifunptr_openssl1505_EVP_PKEY_meth_set_init")
external fun EVP_PKEY_meth_set_init(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1506_EVP_PKEY_meth_set_copy")
external fun EVP_PKEY_meth_set_copy(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    copy: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_PKEY_CTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1507_EVP_PKEY_meth_set_cleanup")
external fun EVP_PKEY_meth_set_cleanup(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    cleanup: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl1508_EVP_PKEY_meth_set_paramgen")
external fun EVP_PKEY_meth_set_paramgen(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    paramgen_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    paramgen: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1509_EVP_PKEY_meth_set_keygen")
external fun EVP_PKEY_meth_set_keygen(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    keygen_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    keygen: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1510_EVP_PKEY_meth_set_sign")
external fun EVP_PKEY_meth_set_sign(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    sign_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    sign: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1511_EVP_PKEY_meth_set_verify")
external fun EVP_PKEY_meth_set_verify(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    verify_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    verify: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, size_t, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1512_EVP_PKEY_meth_set_verify_recover")
external fun EVP_PKEY_meth_set_verify_recover(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    verify_recover_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    verify_recover: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1513_EVP_PKEY_meth_set_signctx")
external fun EVP_PKEY_meth_set_signctx(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    signctx_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>?,
    signctx: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<EVP_MD_CTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1514_EVP_PKEY_meth_set_verifyctx")
external fun EVP_PKEY_meth_set_verifyctx(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    verifyctx_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>?,
    verifyctx: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, Int, CPointer<EVP_MD_CTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1515_EVP_PKEY_meth_set_encrypt")
external fun EVP_PKEY_meth_set_encrypt(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    encrypt_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    encryptfn: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1516_EVP_PKEY_meth_set_decrypt")
external fun EVP_PKEY_meth_set_decrypt(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    decrypt_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    decrypt: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl1517_EVP_PKEY_meth_set_derive")
external fun EVP_PKEY_meth_set_derive(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    derive_init: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>?,
    derive: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1518_EVP_PKEY_meth_set_ctrl")
external fun EVP_PKEY_meth_set_ctrl(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    ctrl: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, Int, Int, COpaquePointer?) -> Int>>?,
    ctrl_str: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1519_EVP_PKEY_meth_set_check")
external fun EVP_PKEY_meth_set_check(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    check: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1520_EVP_PKEY_meth_set_public_check")
external fun EVP_PKEY_meth_set_public_check(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    check: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1521_EVP_PKEY_meth_set_param_check")
external fun EVP_PKEY_meth_set_param_check(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    check: CPointer<CFunction<(CPointer<EVP_PKEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1522_EVP_PKEY_meth_set_digest_custom")
external fun EVP_PKEY_meth_set_digest_custom(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    digest_custom: CPointer<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1523_EVP_PKEY_meth_get_init")
external fun EVP_PKEY_meth_get_init(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pinit: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1524_EVP_PKEY_meth_get_copy")
external fun EVP_PKEY_meth_get_copy(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pcopy: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_PKEY_CTX>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1525_EVP_PKEY_meth_get_cleanup")
external fun EVP_PKEY_meth_get_cleanup(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pcleanup: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Unit>>>?
): Unit

@CCall("knifunptr_openssl1526_EVP_PKEY_meth_get_paramgen")
external fun EVP_PKEY_meth_get_paramgen(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pparamgen_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pparamgen: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_PKEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1527_EVP_PKEY_meth_get_keygen")
external fun EVP_PKEY_meth_get_keygen(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pkeygen_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pkeygen: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_PKEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1528_EVP_PKEY_meth_get_sign")
external fun EVP_PKEY_meth_get_sign(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    psign_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    psign: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1529_EVP_PKEY_meth_get_verify")
external fun EVP_PKEY_meth_get_verify(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pverify_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pverify: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, size_t, CPointer<UByteVar>?, size_t) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1530_EVP_PKEY_meth_get_verify_recover")
external fun EVP_PKEY_meth_get_verify_recover(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pverify_recover_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pverify_recover: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1531_EVP_PKEY_meth_get_signctx")
external fun EVP_PKEY_meth_get_signctx(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    psignctx_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>>?,
    psignctx: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<EVP_MD_CTX>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1532_EVP_PKEY_meth_get_verifyctx")
external fun EVP_PKEY_meth_get_verifyctx(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pverifyctx_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>>?,
    pverifyctx: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, Int, CPointer<EVP_MD_CTX>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1533_EVP_PKEY_meth_get_encrypt")
external fun EVP_PKEY_meth_get_encrypt(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pencrypt_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pencryptfn: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1534_EVP_PKEY_meth_get_decrypt")
external fun EVP_PKEY_meth_get_decrypt(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pdecrypt_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pdecrypt: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?, CPointer<UByteVar>?, size_t) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1535_EVP_PKEY_meth_get_derive")
external fun EVP_PKEY_meth_get_derive(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pderive_init: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>>>?,
    pderive: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<UByteVar>?, CPointer<size_tVar>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1536_EVP_PKEY_meth_get_ctrl")
external fun EVP_PKEY_meth_get_ctrl(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pctrl: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, Int, Int, COpaquePointer?) -> Int>>>?,
    pctrl_str: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<ByteVar>?, CPointer<ByteVar>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1537_EVP_PKEY_meth_get_check")
external fun EVP_PKEY_meth_get_check(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pcheck: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1538_EVP_PKEY_meth_get_public_check")
external fun EVP_PKEY_meth_get_public_check(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pcheck: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1539_EVP_PKEY_meth_get_param_check")
external fun EVP_PKEY_meth_get_param_check(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pcheck: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1540_EVP_PKEY_meth_get_digest_custom")
external fun EVP_PKEY_meth_get_digest_custom(
    pmeth: CValuesRef<EVP_PKEY_METHOD>?,
    pdigest_custom: CValuesRef<CPointerVar<CFunction<(CPointer<EVP_PKEY_CTX>?, CPointer<EVP_MD_CTX>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1541_EVP_add_alg_module")
external fun EVP_add_alg_module(): Unit

@CCall("knifunptr_openssl1542_ERR_load_EC_strings")
external fun ERR_load_EC_strings(): Int

@CCall("knifunptr_openssl1543_EC_GFp_simple_method")
external fun EC_GFp_simple_method(): CPointer<EC_METHOD>?

@CCall("knifunptr_openssl1544_EC_GFp_mont_method")
external fun EC_GFp_mont_method(): CPointer<EC_METHOD>?

@CCall("knifunptr_openssl1545_EC_GFp_nist_method")
external fun EC_GFp_nist_method(): CPointer<EC_METHOD>?

@CCall("knifunptr_openssl1546_EC_GF2m_simple_method")
external fun EC_GF2m_simple_method(): CPointer<EC_METHOD>?

@CCall("knifunptr_openssl1547_EC_GROUP_new")
external fun EC_GROUP_new(meth: CValuesRef<EC_METHOD>?): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1548_EC_GROUP_free")
external fun EC_GROUP_free(group: CValuesRef<EC_GROUP>?): Unit

@CCall("knifunptr_openssl1549_EC_GROUP_clear_free")
external fun EC_GROUP_clear_free(group: CValuesRef<EC_GROUP>?): Unit

@CCall("knifunptr_openssl1550_EC_GROUP_copy")
external fun EC_GROUP_copy(dst: CValuesRef<EC_GROUP>?, src: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1551_EC_GROUP_dup")
external fun EC_GROUP_dup(src: CValuesRef<EC_GROUP>?): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1552_EC_GROUP_method_of")
external fun EC_GROUP_method_of(group: CValuesRef<EC_GROUP>?): CPointer<EC_METHOD>?

@CCall("knifunptr_openssl1553_EC_METHOD_get_field_type")
external fun EC_METHOD_get_field_type(meth: CValuesRef<EC_METHOD>?): Int

@CCall("knifunptr_openssl1554_EC_GROUP_set_generator")
external fun EC_GROUP_set_generator(
    group: CValuesRef<EC_GROUP>?,
    generator: CValuesRef<EC_POINT>?,
    order: CValuesRef<BIGNUM>?,
    cofactor: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl1555_EC_GROUP_get0_generator")
external fun EC_GROUP_get0_generator(group: CValuesRef<EC_GROUP>?): CPointer<EC_POINT>?

@CCall("knifunptr_openssl1556_EC_GROUP_get_mont_data")
external fun EC_GROUP_get_mont_data(group: CValuesRef<EC_GROUP>?): CPointer<BN_MONT_CTX>?

@CCall("knifunptr_openssl1557_EC_GROUP_get_order")
external fun EC_GROUP_get_order(group: CValuesRef<EC_GROUP>?, order: CValuesRef<BIGNUM>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1558_EC_GROUP_get0_order")
external fun EC_GROUP_get0_order(group: CValuesRef<EC_GROUP>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1559_EC_GROUP_order_bits")
external fun EC_GROUP_order_bits(group: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1560_EC_GROUP_get_cofactor")
external fun EC_GROUP_get_cofactor(
    group: CValuesRef<EC_GROUP>?,
    cofactor: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1561_EC_GROUP_get0_cofactor")
external fun EC_GROUP_get0_cofactor(group: CValuesRef<EC_GROUP>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1562_EC_GROUP_set_curve_name")
external fun EC_GROUP_set_curve_name(group: CValuesRef<EC_GROUP>?, nid: Int): Unit

@CCall("knifunptr_openssl1563_EC_GROUP_get_curve_name")
external fun EC_GROUP_get_curve_name(group: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1564_EC_GROUP_set_asn1_flag")
external fun EC_GROUP_set_asn1_flag(group: CValuesRef<EC_GROUP>?, flag: Int): Unit

@CCall("knifunptr_openssl1565_EC_GROUP_get_asn1_flag")
external fun EC_GROUP_get_asn1_flag(group: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1566_EC_GROUP_set_point_conversion_form")
external fun EC_GROUP_set_point_conversion_form(group: CValuesRef<EC_GROUP>?, form: point_conversion_form_t): Unit

@CCall("knifunptr_openssl1567_EC_GROUP_get_point_conversion_form")
external fun EC_GROUP_get_point_conversion_form(arg0: CValuesRef<EC_GROUP>?): point_conversion_form_t

@CCall("knifunptr_openssl1568_EC_GROUP_get0_seed")
external fun EC_GROUP_get0_seed(x: CValuesRef<EC_GROUP>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl1569_EC_GROUP_get_seed_len")
external fun EC_GROUP_get_seed_len(arg0: CValuesRef<EC_GROUP>?): size_t

@CCall("knifunptr_openssl1570_EC_GROUP_set_seed")
external fun EC_GROUP_set_seed(arg0: CValuesRef<EC_GROUP>?, arg1: CValuesRef<UByteVar>?, len: size_t): size_t

@CCall("knifunptr_openssl1571_EC_GROUP_set_curve")
external fun EC_GROUP_set_curve(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1572_EC_GROUP_get_curve")
external fun EC_GROUP_get_curve(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1573_EC_GROUP_set_curve_GFp")
external fun EC_GROUP_set_curve_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1574_EC_GROUP_get_curve_GFp")
external fun EC_GROUP_get_curve_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1575_EC_GROUP_set_curve_GF2m")
external fun EC_GROUP_set_curve_GF2m(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1576_EC_GROUP_get_curve_GF2m")
external fun EC_GROUP_get_curve_GF2m(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1577_EC_GROUP_get_degree")
external fun EC_GROUP_get_degree(group: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1578_EC_GROUP_check")
external fun EC_GROUP_check(group: CValuesRef<EC_GROUP>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1579_EC_GROUP_check_discriminant")
external fun EC_GROUP_check_discriminant(group: CValuesRef<EC_GROUP>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1580_EC_GROUP_cmp")
external fun EC_GROUP_cmp(a: CValuesRef<EC_GROUP>?, b: CValuesRef<EC_GROUP>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1581_EC_GROUP_new_curve_GFp")
external fun EC_GROUP_new_curve_GFp(
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1582_EC_GROUP_new_curve_GF2m")
external fun EC_GROUP_new_curve_GF2m(
    p: CValuesRef<BIGNUM>?,
    a: CValuesRef<BIGNUM>?,
    b: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1583_EC_GROUP_new_by_curve_name")
external fun EC_GROUP_new_by_curve_name(nid: Int): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1584_EC_GROUP_new_from_ecparameters")
external fun EC_GROUP_new_from_ecparameters(params: CValuesRef<ECPARAMETERS>?): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1585_EC_GROUP_get_ecparameters")
external fun EC_GROUP_get_ecparameters(
    group: CValuesRef<EC_GROUP>?,
    params: CValuesRef<ECPARAMETERS>?
): CPointer<ECPARAMETERS>?

@CCall("knifunptr_openssl1586_EC_GROUP_new_from_ecpkparameters")
external fun EC_GROUP_new_from_ecpkparameters(params: CValuesRef<ECPKPARAMETERS>?): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1587_EC_GROUP_get_ecpkparameters")
external fun EC_GROUP_get_ecpkparameters(
    group: CValuesRef<EC_GROUP>?,
    params: CValuesRef<ECPKPARAMETERS>?
): CPointer<ECPKPARAMETERS>?

@CCall("knifunptr_openssl1588_EC_get_builtin_curves")
external fun EC_get_builtin_curves(r: CValuesRef<EC_builtin_curve>?, nitems: size_t): size_t

@CCall("knifunptr_openssl1589_EC_curve_nid2nist")
external fun EC_curve_nid2nist(nid: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl1590_EC_curve_nist2nid")
external fun EC_curve_nist2nid(@CCall.CString name: String?): Int

@CCall("knifunptr_openssl1591_EC_POINT_new")
external fun EC_POINT_new(group: CValuesRef<EC_GROUP>?): CPointer<EC_POINT>?

@CCall("knifunptr_openssl1592_EC_POINT_free")
external fun EC_POINT_free(point: CValuesRef<EC_POINT>?): Unit

@CCall("knifunptr_openssl1593_EC_POINT_clear_free")
external fun EC_POINT_clear_free(point: CValuesRef<EC_POINT>?): Unit

@CCall("knifunptr_openssl1594_EC_POINT_copy")
external fun EC_POINT_copy(dst: CValuesRef<EC_POINT>?, src: CValuesRef<EC_POINT>?): Int

@CCall("knifunptr_openssl1595_EC_POINT_dup")
external fun EC_POINT_dup(src: CValuesRef<EC_POINT>?, group: CValuesRef<EC_GROUP>?): CPointer<EC_POINT>?

@CCall("knifunptr_openssl1596_EC_POINT_method_of")
external fun EC_POINT_method_of(point: CValuesRef<EC_POINT>?): CPointer<EC_METHOD>?

@CCall("knifunptr_openssl1597_EC_POINT_set_to_infinity")
external fun EC_POINT_set_to_infinity(group: CValuesRef<EC_GROUP>?, point: CValuesRef<EC_POINT>?): Int

@CCall("knifunptr_openssl1598_EC_POINT_set_Jprojective_coordinates_GFp")
external fun EC_POINT_set_Jprojective_coordinates_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    z: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1599_EC_POINT_get_Jprojective_coordinates_GFp")
external fun EC_POINT_get_Jprojective_coordinates_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    z: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1600_EC_POINT_set_affine_coordinates")
external fun EC_POINT_set_affine_coordinates(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1601_EC_POINT_get_affine_coordinates")
external fun EC_POINT_get_affine_coordinates(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1602_EC_POINT_set_affine_coordinates_GFp")
external fun EC_POINT_set_affine_coordinates_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1603_EC_POINT_get_affine_coordinates_GFp")
external fun EC_POINT_get_affine_coordinates_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1604_EC_POINT_set_compressed_coordinates")
external fun EC_POINT_set_compressed_coordinates(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y_bit: Int,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1605_EC_POINT_set_compressed_coordinates_GFp")
external fun EC_POINT_set_compressed_coordinates_GFp(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y_bit: Int,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1606_EC_POINT_set_affine_coordinates_GF2m")
external fun EC_POINT_set_affine_coordinates_GF2m(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1607_EC_POINT_get_affine_coordinates_GF2m")
external fun EC_POINT_get_affine_coordinates_GF2m(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1608_EC_POINT_set_compressed_coordinates_GF2m")
external fun EC_POINT_set_compressed_coordinates_GF2m(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    x: CValuesRef<BIGNUM>?,
    y_bit: Int,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1609_EC_POINT_point2oct")
external fun EC_POINT_point2oct(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    form: point_conversion_form_t,
    buf: CValuesRef<UByteVar>?,
    len: size_t,
    ctx: CValuesRef<BN_CTX>?
): size_t

@CCall("knifunptr_openssl1610_EC_POINT_oct2point")
external fun EC_POINT_oct2point(
    group: CValuesRef<EC_GROUP>?,
    p: CValuesRef<EC_POINT>?,
    buf: CValuesRef<UByteVar>?,
    len: size_t,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1611_EC_POINT_point2buf")
external fun EC_POINT_point2buf(
    group: CValuesRef<EC_GROUP>?,
    point: CValuesRef<EC_POINT>?,
    form: point_conversion_form_t,
    pbuf: CValuesRef<CPointerVar<UByteVar>>?,
    ctx: CValuesRef<BN_CTX>?
): size_t

@CCall("knifunptr_openssl1612_EC_POINT_point2bn")
external fun EC_POINT_point2bn(
    arg0: CValuesRef<EC_GROUP>?,
    arg1: CValuesRef<EC_POINT>?,
    form: point_conversion_form_t,
    arg3: CValuesRef<BIGNUM>?,
    arg4: CValuesRef<BN_CTX>?
): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1613_EC_POINT_bn2point")
external fun EC_POINT_bn2point(
    arg0: CValuesRef<EC_GROUP>?,
    arg1: CValuesRef<BIGNUM>?,
    arg2: CValuesRef<EC_POINT>?,
    arg3: CValuesRef<BN_CTX>?
): CPointer<EC_POINT>?

@CCall("knifunptr_openssl1614_EC_POINT_point2hex")
external fun EC_POINT_point2hex(
    arg0: CValuesRef<EC_GROUP>?,
    arg1: CValuesRef<EC_POINT>?,
    form: point_conversion_form_t,
    arg3: CValuesRef<BN_CTX>?
): CPointer<ByteVar>?

@CCall("knifunptr_openssl1615_EC_POINT_hex2point")
external fun EC_POINT_hex2point(
    arg0: CValuesRef<EC_GROUP>?, @CCall.CString arg1: String?,
    arg2: CValuesRef<EC_POINT>?,
    arg3: CValuesRef<BN_CTX>?
): CPointer<EC_POINT>?

@CCall("knifunptr_openssl1616_EC_POINT_add")
external fun EC_POINT_add(
    group: CValuesRef<EC_GROUP>?,
    r: CValuesRef<EC_POINT>?,
    a: CValuesRef<EC_POINT>?,
    b: CValuesRef<EC_POINT>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1617_EC_POINT_dbl")
external fun EC_POINT_dbl(
    group: CValuesRef<EC_GROUP>?,
    r: CValuesRef<EC_POINT>?,
    a: CValuesRef<EC_POINT>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1618_EC_POINT_invert")
external fun EC_POINT_invert(group: CValuesRef<EC_GROUP>?, a: CValuesRef<EC_POINT>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1619_EC_POINT_is_at_infinity")
external fun EC_POINT_is_at_infinity(group: CValuesRef<EC_GROUP>?, p: CValuesRef<EC_POINT>?): Int

@CCall("knifunptr_openssl1620_EC_POINT_is_on_curve")
external fun EC_POINT_is_on_curve(
    group: CValuesRef<EC_GROUP>?,
    point: CValuesRef<EC_POINT>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1621_EC_POINT_cmp")
external fun EC_POINT_cmp(
    group: CValuesRef<EC_GROUP>?,
    a: CValuesRef<EC_POINT>?,
    b: CValuesRef<EC_POINT>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1622_EC_POINT_make_affine")
external fun EC_POINT_make_affine(
    group: CValuesRef<EC_GROUP>?,
    point: CValuesRef<EC_POINT>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1623_EC_POINTs_make_affine")
external fun EC_POINTs_make_affine(
    group: CValuesRef<EC_GROUP>?,
    num: size_t,
    points: CValuesRef<CPointerVar<EC_POINT>>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1624_EC_POINTs_mul")
external fun EC_POINTs_mul(
    group: CValuesRef<EC_GROUP>?,
    r: CValuesRef<EC_POINT>?,
    n: CValuesRef<BIGNUM>?,
    num: size_t,
    p: CValuesRef<CPointerVar<EC_POINT>>?,
    m: CValuesRef<CPointerVar<BIGNUM>>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1625_EC_POINT_mul")
external fun EC_POINT_mul(
    group: CValuesRef<EC_GROUP>?,
    r: CValuesRef<EC_POINT>?,
    n: CValuesRef<BIGNUM>?,
    q: CValuesRef<EC_POINT>?,
    m: CValuesRef<BIGNUM>?,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1626_EC_GROUP_precompute_mult")
external fun EC_GROUP_precompute_mult(group: CValuesRef<EC_GROUP>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1627_EC_GROUP_have_precompute_mult")
external fun EC_GROUP_have_precompute_mult(group: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1628_ECPKPARAMETERS_new")
external fun ECPKPARAMETERS_new(): CPointer<ECPKPARAMETERS>?

@CCall("knifunptr_openssl1629_ECPKPARAMETERS_free")
external fun ECPKPARAMETERS_free(a: CValuesRef<ECPKPARAMETERS>?): Unit

@CCall("knifunptr_openssl1630_ECPARAMETERS_new")
external fun ECPARAMETERS_new(): CPointer<ECPARAMETERS>?

@CCall("knifunptr_openssl1631_ECPARAMETERS_free")
external fun ECPARAMETERS_free(a: CValuesRef<ECPARAMETERS>?): Unit

@CCall("knifunptr_openssl1632_EC_GROUP_get_basis_type")
external fun EC_GROUP_get_basis_type(arg0: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1633_EC_GROUP_get_trinomial_basis")
external fun EC_GROUP_get_trinomial_basis(arg0: CValuesRef<EC_GROUP>?, k: CValuesRef<UIntVar>?): Int

@CCall("knifunptr_openssl1634_EC_GROUP_get_pentanomial_basis")
external fun EC_GROUP_get_pentanomial_basis(
    arg0: CValuesRef<EC_GROUP>?,
    k1: CValuesRef<UIntVar>?,
    k2: CValuesRef<UIntVar>?,
    k3: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl1635_d2i_ECPKParameters")
external fun d2i_ECPKParameters(
    arg0: CValuesRef<CPointerVar<EC_GROUP>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1636_i2d_ECPKParameters")
external fun i2d_ECPKParameters(arg0: CValuesRef<EC_GROUP>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1637_ECPKParameters_print")
external fun ECPKParameters_print(bp: CValuesRef<BIO>?, x: CValuesRef<EC_GROUP>?, off: Int): Int

@CCall("knifunptr_openssl1638_ECPKParameters_print_fp")
external fun ECPKParameters_print_fp(fp: CValuesRef<FILE>?, x: CValuesRef<EC_GROUP>?, off: Int): Int

@CCall("knifunptr_openssl1639_EC_KEY_new")
external fun EC_KEY_new(): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1640_EC_KEY_get_flags")
external fun EC_KEY_get_flags(key: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1641_EC_KEY_set_flags")
external fun EC_KEY_set_flags(key: CValuesRef<EC_KEY>?, flags: Int): Unit

@CCall("knifunptr_openssl1642_EC_KEY_clear_flags")
external fun EC_KEY_clear_flags(key: CValuesRef<EC_KEY>?, flags: Int): Unit

@CCall("knifunptr_openssl1643_EC_KEY_new_by_curve_name")
external fun EC_KEY_new_by_curve_name(nid: Int): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1644_EC_KEY_free")
external fun EC_KEY_free(key: CValuesRef<EC_KEY>?): Unit

@CCall("knifunptr_openssl1645_EC_KEY_copy")
external fun EC_KEY_copy(dst: CValuesRef<EC_KEY>?, src: CValuesRef<EC_KEY>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1646_EC_KEY_dup")
external fun EC_KEY_dup(src: CValuesRef<EC_KEY>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1647_EC_KEY_up_ref")
external fun EC_KEY_up_ref(key: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1648_EC_KEY_get0_engine")
external fun EC_KEY_get0_engine(eckey: CValuesRef<EC_KEY>?): CPointer<ENGINE>?

@CCall("knifunptr_openssl1649_EC_KEY_get0_group")
external fun EC_KEY_get0_group(key: CValuesRef<EC_KEY>?): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl1650_EC_KEY_set_group")
external fun EC_KEY_set_group(key: CValuesRef<EC_KEY>?, group: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl1651_EC_KEY_get0_private_key")
external fun EC_KEY_get0_private_key(key: CValuesRef<EC_KEY>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1652_EC_KEY_set_private_key")
external fun EC_KEY_set_private_key(key: CValuesRef<EC_KEY>?, prv: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1653_EC_KEY_get0_public_key")
external fun EC_KEY_get0_public_key(key: CValuesRef<EC_KEY>?): CPointer<EC_POINT>?

@CCall("knifunptr_openssl1654_EC_KEY_set_public_key")
external fun EC_KEY_set_public_key(key: CValuesRef<EC_KEY>?, pub: CValuesRef<EC_POINT>?): Int

@CCall("knifunptr_openssl1655_EC_KEY_get_enc_flags")
external fun EC_KEY_get_enc_flags(key: CValuesRef<EC_KEY>?): UInt

@CCall("knifunptr_openssl1656_EC_KEY_set_enc_flags")
external fun EC_KEY_set_enc_flags(eckey: CValuesRef<EC_KEY>?, flags: UInt): Unit

@CCall("knifunptr_openssl1657_EC_KEY_get_conv_form")
external fun EC_KEY_get_conv_form(key: CValuesRef<EC_KEY>?): point_conversion_form_t

@CCall("knifunptr_openssl1658_EC_KEY_set_conv_form")
external fun EC_KEY_set_conv_form(eckey: CValuesRef<EC_KEY>?, cform: point_conversion_form_t): Unit

@CCall("knifunptr_openssl1659_EC_KEY_set_ex_data")
external fun EC_KEY_set_ex_data(key: CValuesRef<EC_KEY>?, idx: Int, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1660_EC_KEY_get_ex_data")
external fun EC_KEY_get_ex_data(key: CValuesRef<EC_KEY>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl1661_EC_KEY_set_asn1_flag")
external fun EC_KEY_set_asn1_flag(eckey: CValuesRef<EC_KEY>?, asn1_flag: Int): Unit

@CCall("knifunptr_openssl1662_EC_KEY_precompute_mult")
external fun EC_KEY_precompute_mult(key: CValuesRef<EC_KEY>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1663_EC_KEY_generate_key")
external fun EC_KEY_generate_key(key: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1664_EC_KEY_check_key")
external fun EC_KEY_check_key(key: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1665_EC_KEY_can_sign")
external fun EC_KEY_can_sign(eckey: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1666_EC_KEY_set_public_key_affine_coordinates")
external fun EC_KEY_set_public_key_affine_coordinates(
    key: CValuesRef<EC_KEY>?,
    x: CValuesRef<BIGNUM>?,
    y: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl1667_EC_KEY_key2buf")
external fun EC_KEY_key2buf(
    key: CValuesRef<EC_KEY>?,
    form: point_conversion_form_t,
    pbuf: CValuesRef<CPointerVar<UByteVar>>?,
    ctx: CValuesRef<BN_CTX>?
): size_t

@CCall("knifunptr_openssl1668_EC_KEY_oct2key")
external fun EC_KEY_oct2key(
    key: CValuesRef<EC_KEY>?,
    buf: CValuesRef<UByteVar>?,
    len: size_t,
    ctx: CValuesRef<BN_CTX>?
): Int

@CCall("knifunptr_openssl1669_EC_KEY_oct2priv")
external fun EC_KEY_oct2priv(key: CValuesRef<EC_KEY>?, buf: CValuesRef<UByteVar>?, len: size_t): Int

@CCall("knifunptr_openssl1670_EC_KEY_priv2oct")
external fun EC_KEY_priv2oct(key: CValuesRef<EC_KEY>?, buf: CValuesRef<UByteVar>?, len: size_t): size_t

@CCall("knifunptr_openssl1671_EC_KEY_priv2buf")
external fun EC_KEY_priv2buf(eckey: CValuesRef<EC_KEY>?, pbuf: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl1672_d2i_ECPrivateKey")
external fun d2i_ECPrivateKey(
    key: CValuesRef<CPointerVar<EC_KEY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1673_i2d_ECPrivateKey")
external fun i2d_ECPrivateKey(key: CValuesRef<EC_KEY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1674_d2i_ECParameters")
external fun d2i_ECParameters(
    key: CValuesRef<CPointerVar<EC_KEY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1675_i2d_ECParameters")
external fun i2d_ECParameters(key: CValuesRef<EC_KEY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1676_o2i_ECPublicKey")
external fun o2i_ECPublicKey(
    key: CValuesRef<CPointerVar<EC_KEY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1677_i2o_ECPublicKey")
external fun i2o_ECPublicKey(key: CValuesRef<EC_KEY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1678_ECParameters_print")
external fun ECParameters_print(bp: CValuesRef<BIO>?, key: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1679_EC_KEY_print")
external fun EC_KEY_print(bp: CValuesRef<BIO>?, key: CValuesRef<EC_KEY>?, off: Int): Int

@CCall("knifunptr_openssl1680_ECParameters_print_fp")
external fun ECParameters_print_fp(fp: CValuesRef<FILE>?, key: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1681_EC_KEY_print_fp")
external fun EC_KEY_print_fp(fp: CValuesRef<FILE>?, key: CValuesRef<EC_KEY>?, off: Int): Int

@CCall("knifunptr_openssl1682_EC_KEY_OpenSSL")
external fun EC_KEY_OpenSSL(): CPointer<EC_KEY_METHOD>?

@CCall("knifunptr_openssl1683_EC_KEY_get_default_method")
external fun EC_KEY_get_default_method(): CPointer<EC_KEY_METHOD>?

@CCall("knifunptr_openssl1684_EC_KEY_set_default_method")
external fun EC_KEY_set_default_method(meth: CValuesRef<EC_KEY_METHOD>?): Unit

@CCall("knifunptr_openssl1685_EC_KEY_get_method")
external fun EC_KEY_get_method(key: CValuesRef<EC_KEY>?): CPointer<EC_KEY_METHOD>?

@CCall("knifunptr_openssl1686_EC_KEY_set_method")
external fun EC_KEY_set_method(key: CValuesRef<EC_KEY>?, meth: CValuesRef<EC_KEY_METHOD>?): Int

@CCall("knifunptr_openssl1687_EC_KEY_new_method")
external fun EC_KEY_new_method(engine: CValuesRef<ENGINE>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl1688_ECDH_KDF_X9_62")
external fun ECDH_KDF_X9_62(
    out: CValuesRef<UByteVar>?,
    outlen: size_t,
    Z: CValuesRef<UByteVar>?,
    Zlen: size_t,
    sinfo: CValuesRef<UByteVar>?,
    sinfolen: size_t,
    md: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl1689_ECDH_compute_key")
external fun ECDH_compute_key(
    out: CValuesRef<*>?,
    outlen: size_t,
    pub_key: CValuesRef<EC_POINT>?,
    ecdh: CValuesRef<EC_KEY>?,
    KDF: CPointer<CFunction<(COpaquePointer?, size_t, COpaquePointer?, CPointer<size_tVar>?) -> COpaquePointer?>>?
): Int

@CCall("knifunptr_openssl1690_ECDSA_SIG_new")
external fun ECDSA_SIG_new(): CPointer<ECDSA_SIG>?

@CCall("knifunptr_openssl1691_ECDSA_SIG_free")
external fun ECDSA_SIG_free(sig: CValuesRef<ECDSA_SIG>?): Unit

@CCall("knifunptr_openssl1692_i2d_ECDSA_SIG")
external fun i2d_ECDSA_SIG(sig: CValuesRef<ECDSA_SIG>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1693_d2i_ECDSA_SIG")
external fun d2i_ECDSA_SIG(
    sig: CValuesRef<CPointerVar<ECDSA_SIG>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<ECDSA_SIG>?

@CCall("knifunptr_openssl1694_ECDSA_SIG_get0")
external fun ECDSA_SIG_get0(
    sig: CValuesRef<ECDSA_SIG>?,
    pr: CValuesRef<CPointerVar<BIGNUM>>?,
    ps: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1695_ECDSA_SIG_get0_r")
external fun ECDSA_SIG_get0_r(sig: CValuesRef<ECDSA_SIG>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1696_ECDSA_SIG_get0_s")
external fun ECDSA_SIG_get0_s(sig: CValuesRef<ECDSA_SIG>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1697_ECDSA_SIG_set0")
external fun ECDSA_SIG_set0(sig: CValuesRef<ECDSA_SIG>?, r: CValuesRef<BIGNUM>?, s: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1698_ECDSA_do_sign")
external fun ECDSA_do_sign(dgst: CValuesRef<UByteVar>?, dgst_len: Int, eckey: CValuesRef<EC_KEY>?): CPointer<ECDSA_SIG>?

@CCall("knifunptr_openssl1699_ECDSA_do_sign_ex")
external fun ECDSA_do_sign_ex(
    dgst: CValuesRef<UByteVar>?,
    dgstlen: Int,
    kinv: CValuesRef<BIGNUM>?,
    rp: CValuesRef<BIGNUM>?,
    eckey: CValuesRef<EC_KEY>?
): CPointer<ECDSA_SIG>?

@CCall("knifunptr_openssl1700_ECDSA_do_verify")
external fun ECDSA_do_verify(
    dgst: CValuesRef<UByteVar>?,
    dgst_len: Int,
    sig: CValuesRef<ECDSA_SIG>?,
    eckey: CValuesRef<EC_KEY>?
): Int

@CCall("knifunptr_openssl1701_ECDSA_sign_setup")
external fun ECDSA_sign_setup(
    eckey: CValuesRef<EC_KEY>?,
    ctx: CValuesRef<BN_CTX>?,
    kinv: CValuesRef<CPointerVar<BIGNUM>>?,
    rp: CValuesRef<CPointerVar<BIGNUM>>?
): Int

@CCall("knifunptr_openssl1702_ECDSA_sign")
external fun ECDSA_sign(
    type: Int,
    dgst: CValuesRef<UByteVar>?,
    dgstlen: Int,
    sig: CValuesRef<UByteVar>?,
    siglen: CValuesRef<UIntVar>?,
    eckey: CValuesRef<EC_KEY>?
): Int

@CCall("knifunptr_openssl1703_ECDSA_sign_ex")
external fun ECDSA_sign_ex(
    type: Int,
    dgst: CValuesRef<UByteVar>?,
    dgstlen: Int,
    sig: CValuesRef<UByteVar>?,
    siglen: CValuesRef<UIntVar>?,
    kinv: CValuesRef<BIGNUM>?,
    rp: CValuesRef<BIGNUM>?,
    eckey: CValuesRef<EC_KEY>?
): Int

@CCall("knifunptr_openssl1704_ECDSA_verify")
external fun ECDSA_verify(
    type: Int,
    dgst: CValuesRef<UByteVar>?,
    dgstlen: Int,
    sig: CValuesRef<UByteVar>?,
    siglen: Int,
    eckey: CValuesRef<EC_KEY>?
): Int

@CCall("knifunptr_openssl1705_ECDSA_size")
external fun ECDSA_size(eckey: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl1706_EC_KEY_METHOD_new")
external fun EC_KEY_METHOD_new(meth: CValuesRef<EC_KEY_METHOD>?): CPointer<EC_KEY_METHOD>?

@CCall("knifunptr_openssl1707_EC_KEY_METHOD_free")
external fun EC_KEY_METHOD_free(meth: CValuesRef<EC_KEY_METHOD>?): Unit

@CCall("knifunptr_openssl1708_EC_KEY_METHOD_set_init")
external fun EC_KEY_METHOD_set_init(
    meth: CValuesRef<EC_KEY_METHOD>?,
    init: CPointer<CFunction<(CPointer<EC_KEY>?) -> Int>>?,
    finish: CPointer<CFunction<(CPointer<EC_KEY>?) -> Unit>>?,
    copy: CPointer<CFunction<(CPointer<EC_KEY>?, CPointer<EC_KEY>?) -> Int>>?,
    set_group: CPointer<CFunction<(CPointer<EC_KEY>?, CPointer<EC_GROUP>?) -> Int>>?,
    set_private: CPointer<CFunction<(CPointer<EC_KEY>?, CPointer<BIGNUM>?) -> Int>>?,
    set_public: CPointer<CFunction<(CPointer<EC_KEY>?, CPointer<EC_POINT>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1709_EC_KEY_METHOD_set_keygen")
external fun EC_KEY_METHOD_set_keygen(
    meth: CValuesRef<EC_KEY_METHOD>?,
    keygen: CPointer<CFunction<(CPointer<EC_KEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1710_EC_KEY_METHOD_set_compute_key")
external fun EC_KEY_METHOD_set_compute_key(
    meth: CValuesRef<EC_KEY_METHOD>?,
    ckey: CPointer<CFunction<(CPointer<CPointerVar<UByteVar>>?, CPointer<size_tVar>?, CPointer<EC_POINT>?, CPointer<EC_KEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1711_EC_KEY_METHOD_set_sign")
external fun EC_KEY_METHOD_set_sign(
    meth: CValuesRef<EC_KEY_METHOD>?,
    sign: CPointer<CFunction<(Int, CPointer<UByteVar>?, Int, CPointer<UByteVar>?, CPointer<UIntVar>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<EC_KEY>?) -> Int>>?,
    sign_setup: CPointer<CFunction<(CPointer<EC_KEY>?, CPointer<BN_CTX>?, CPointer<CPointerVar<BIGNUM>>?, CPointer<CPointerVar<BIGNUM>>?) -> Int>>?,
    sign_sig: CPointer<CFunction<(CPointer<UByteVar>?, Int, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<EC_KEY>?) -> CPointer<ECDSA_SIG>?>>?
): Unit

@CCall("knifunptr_openssl1712_EC_KEY_METHOD_set_verify")
external fun EC_KEY_METHOD_set_verify(
    meth: CValuesRef<EC_KEY_METHOD>?,
    verify: CPointer<CFunction<(Int, CPointer<UByteVar>?, Int, CPointer<UByteVar>?, Int, CPointer<EC_KEY>?) -> Int>>?,
    verify_sig: CPointer<CFunction<(CPointer<UByteVar>?, Int, CPointer<ECDSA_SIG>?, CPointer<EC_KEY>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl1713_EC_KEY_METHOD_get_init")
external fun EC_KEY_METHOD_get_init(
    meth: CValuesRef<EC_KEY_METHOD>?,
    pinit: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?) -> Int>>>?,
    pfinish: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?) -> Unit>>>?,
    pcopy: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?, CPointer<EC_KEY>?) -> Int>>>?,
    pset_group: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?, CPointer<EC_GROUP>?) -> Int>>>?,
    pset_private: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?, CPointer<BIGNUM>?) -> Int>>>?,
    pset_public: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?, CPointer<EC_POINT>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1714_EC_KEY_METHOD_get_keygen")
external fun EC_KEY_METHOD_get_keygen(
    meth: CValuesRef<EC_KEY_METHOD>?,
    pkeygen: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1715_EC_KEY_METHOD_get_compute_key")
external fun EC_KEY_METHOD_get_compute_key(
    meth: CValuesRef<EC_KEY_METHOD>?,
    pck: CValuesRef<CPointerVar<CFunction<(CPointer<CPointerVar<UByteVar>>?, CPointer<size_tVar>?, CPointer<EC_POINT>?, CPointer<EC_KEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1716_EC_KEY_METHOD_get_sign")
external fun EC_KEY_METHOD_get_sign(
    meth: CValuesRef<EC_KEY_METHOD>?,
    psign: CValuesRef<CPointerVar<CFunction<(Int, CPointer<UByteVar>?, Int, CPointer<UByteVar>?, CPointer<UIntVar>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<EC_KEY>?) -> Int>>>?,
    psign_setup: CValuesRef<CPointerVar<CFunction<(CPointer<EC_KEY>?, CPointer<BN_CTX>?, CPointer<CPointerVar<BIGNUM>>?, CPointer<CPointerVar<BIGNUM>>?) -> Int>>>?,
    psign_sig: CValuesRef<CPointerVar<CFunction<(CPointer<UByteVar>?, Int, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<EC_KEY>?) -> CPointer<ECDSA_SIG>?>>>?
): Unit

@CCall("knifunptr_openssl1717_EC_KEY_METHOD_get_verify")
external fun EC_KEY_METHOD_get_verify(
    meth: CValuesRef<EC_KEY_METHOD>?,
    pverify: CValuesRef<CPointerVar<CFunction<(Int, CPointer<UByteVar>?, Int, CPointer<UByteVar>?, Int, CPointer<EC_KEY>?) -> Int>>>?,
    pverify_sig: CValuesRef<CPointerVar<CFunction<(CPointer<UByteVar>?, Int, CPointer<ECDSA_SIG>?, CPointer<EC_KEY>?) -> Int>>>?
): Unit

@CCall("knifunptr_openssl1718_ERR_load_RSA_strings")
external fun ERR_load_RSA_strings(): Int

@CCall("knifunptr_openssl1719_RSA_new")
external fun RSA_new(): CPointer<RSA>?

@CCall("knifunptr_openssl1720_RSA_new_method")
external fun RSA_new_method(engine: CValuesRef<ENGINE>?): CPointer<RSA>?

@CCall("knifunptr_openssl1721_RSA_bits")
external fun RSA_bits(rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1722_RSA_size")
external fun RSA_size(rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1723_RSA_security_bits")
external fun RSA_security_bits(rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1724_RSA_set0_key")
external fun RSA_set0_key(
    r: CValuesRef<RSA>?,
    n: CValuesRef<BIGNUM>?,
    e: CValuesRef<BIGNUM>?,
    d: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl1725_RSA_set0_factors")
external fun RSA_set0_factors(r: CValuesRef<RSA>?, p: CValuesRef<BIGNUM>?, q: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1726_RSA_set0_crt_params")
external fun RSA_set0_crt_params(
    r: CValuesRef<RSA>?,
    dmp1: CValuesRef<BIGNUM>?,
    dmq1: CValuesRef<BIGNUM>?,
    iqmp: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl1727_RSA_set0_multi_prime_params")
external fun RSA_set0_multi_prime_params(
    r: CValuesRef<RSA>?,
    primes: CValuesRef<CPointerVar<BIGNUM>>?,
    exps: CValuesRef<CPointerVar<BIGNUM>>?,
    coeffs: CValuesRef<CPointerVar<BIGNUM>>?,
    pnum: Int
): Int

@CCall("knifunptr_openssl1728_RSA_get0_key")
external fun RSA_get0_key(
    r: CValuesRef<RSA>?,
    n: CValuesRef<CPointerVar<BIGNUM>>?,
    e: CValuesRef<CPointerVar<BIGNUM>>?,
    d: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1729_RSA_get0_factors")
external fun RSA_get0_factors(
    r: CValuesRef<RSA>?,
    p: CValuesRef<CPointerVar<BIGNUM>>?,
    q: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1730_RSA_get_multi_prime_extra_count")
external fun RSA_get_multi_prime_extra_count(r: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1731_RSA_get0_multi_prime_factors")
external fun RSA_get0_multi_prime_factors(r: CValuesRef<RSA>?, primes: CValuesRef<CPointerVar<BIGNUM>>?): Int

@CCall("knifunptr_openssl1732_RSA_get0_crt_params")
external fun RSA_get0_crt_params(
    r: CValuesRef<RSA>?,
    dmp1: CValuesRef<CPointerVar<BIGNUM>>?,
    dmq1: CValuesRef<CPointerVar<BIGNUM>>?,
    iqmp: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1733_RSA_get0_multi_prime_crt_params")
external fun RSA_get0_multi_prime_crt_params(
    r: CValuesRef<RSA>?,
    exps: CValuesRef<CPointerVar<BIGNUM>>?,
    coeffs: CValuesRef<CPointerVar<BIGNUM>>?
): Int

@CCall("knifunptr_openssl1734_RSA_get0_n")
external fun RSA_get0_n(d: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1735_RSA_get0_e")
external fun RSA_get0_e(d: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1736_RSA_get0_d")
external fun RSA_get0_d(d: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1737_RSA_get0_p")
external fun RSA_get0_p(d: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1738_RSA_get0_q")
external fun RSA_get0_q(d: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1739_RSA_get0_dmp1")
external fun RSA_get0_dmp1(r: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1740_RSA_get0_dmq1")
external fun RSA_get0_dmq1(r: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1741_RSA_get0_iqmp")
external fun RSA_get0_iqmp(r: CValuesRef<RSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1742_RSA_clear_flags")
external fun RSA_clear_flags(r: CValuesRef<RSA>?, flags: Int): Unit

@CCall("knifunptr_openssl1743_RSA_test_flags")
external fun RSA_test_flags(r: CValuesRef<RSA>?, flags: Int): Int

@CCall("knifunptr_openssl1744_RSA_set_flags")
external fun RSA_set_flags(r: CValuesRef<RSA>?, flags: Int): Unit

@CCall("knifunptr_openssl1745_RSA_get_version")
external fun RSA_get_version(r: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1746_RSA_get0_engine")
external fun RSA_get0_engine(r: CValuesRef<RSA>?): CPointer<ENGINE>?

@CCall("knifunptr_openssl1747_RSA_generate_key")
external fun RSA_generate_key(
    bits: Int,
    e: ULong,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    cb_arg: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl1748_RSA_generate_key_ex")
external fun RSA_generate_key_ex(
    rsa: CValuesRef<RSA>?,
    bits: Int,
    e: CValuesRef<BIGNUM>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl1749_RSA_generate_multi_prime_key")
external fun RSA_generate_multi_prime_key(
    rsa: CValuesRef<RSA>?,
    bits: Int,
    primes: Int,
    e: CValuesRef<BIGNUM>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl1750_RSA_X931_derive_ex")
external fun RSA_X931_derive_ex(
    rsa: CValuesRef<RSA>?,
    p1: CValuesRef<BIGNUM>?,
    p2: CValuesRef<BIGNUM>?,
    q1: CValuesRef<BIGNUM>?,
    q2: CValuesRef<BIGNUM>?,
    Xp1: CValuesRef<BIGNUM>?,
    Xp2: CValuesRef<BIGNUM>?,
    Xp: CValuesRef<BIGNUM>?,
    Xq1: CValuesRef<BIGNUM>?,
    Xq2: CValuesRef<BIGNUM>?,
    Xq: CValuesRef<BIGNUM>?,
    e: CValuesRef<BIGNUM>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl1751_RSA_X931_generate_key_ex")
external fun RSA_X931_generate_key_ex(
    rsa: CValuesRef<RSA>?,
    bits: Int,
    e: CValuesRef<BIGNUM>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl1752_RSA_check_key")
external fun RSA_check_key(arg0: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1753_RSA_check_key_ex")
external fun RSA_check_key_ex(arg0: CValuesRef<RSA>?, cb: CValuesRef<BN_GENCB>?): Int

@CCall("knifunptr_openssl1754_RSA_public_encrypt")
external fun RSA_public_encrypt(
    flen: Int,
    from: CValuesRef<UByteVar>?,
    to: CValuesRef<UByteVar>?,
    rsa: CValuesRef<RSA>?,
    padding: Int
): Int

@CCall("knifunptr_openssl1755_RSA_private_encrypt")
external fun RSA_private_encrypt(
    flen: Int,
    from: CValuesRef<UByteVar>?,
    to: CValuesRef<UByteVar>?,
    rsa: CValuesRef<RSA>?,
    padding: Int
): Int

@CCall("knifunptr_openssl1756_RSA_public_decrypt")
external fun RSA_public_decrypt(
    flen: Int,
    from: CValuesRef<UByteVar>?,
    to: CValuesRef<UByteVar>?,
    rsa: CValuesRef<RSA>?,
    padding: Int
): Int

@CCall("knifunptr_openssl1757_RSA_private_decrypt")
external fun RSA_private_decrypt(
    flen: Int,
    from: CValuesRef<UByteVar>?,
    to: CValuesRef<UByteVar>?,
    rsa: CValuesRef<RSA>?,
    padding: Int
): Int

@CCall("knifunptr_openssl1758_RSA_free")
external fun RSA_free(r: CValuesRef<RSA>?): Unit

@CCall("knifunptr_openssl1759_RSA_up_ref")
external fun RSA_up_ref(r: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1760_RSA_flags")
external fun RSA_flags(r: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl1761_RSA_set_default_method")
external fun RSA_set_default_method(meth: CValuesRef<RSA_METHOD>?): Unit

@CCall("knifunptr_openssl1762_RSA_get_default_method")
external fun RSA_get_default_method(): CPointer<RSA_METHOD>?

@CCall("knifunptr_openssl1763_RSA_null_method")
external fun RSA_null_method(): CPointer<RSA_METHOD>?

@CCall("knifunptr_openssl1764_RSA_get_method")
external fun RSA_get_method(rsa: CValuesRef<RSA>?): CPointer<RSA_METHOD>?

@CCall("knifunptr_openssl1765_RSA_set_method")
external fun RSA_set_method(rsa: CValuesRef<RSA>?, meth: CValuesRef<RSA_METHOD>?): Int

@CCall("knifunptr_openssl1766_RSA_PKCS1_OpenSSL")
external fun RSA_PKCS1_OpenSSL(): CPointer<RSA_METHOD>?

@CCall("knifunptr_openssl1767_RSA_pkey_ctx_ctrl")
external fun RSA_pkey_ctx_ctrl(ctx: CValuesRef<EVP_PKEY_CTX>?, optype: Int, cmd: Int, p1: Int, p2: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1768_d2i_RSAPublicKey")
external fun d2i_RSAPublicKey(
    a: CValuesRef<CPointerVar<RSA>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<RSA>?

@CCall("knifunptr_openssl1769_i2d_RSAPublicKey")
external fun i2d_RSAPublicKey(a: CValuesRef<RSA>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1770_d2i_RSAPrivateKey")
external fun d2i_RSAPrivateKey(
    a: CValuesRef<CPointerVar<RSA>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<RSA>?

@CCall("knifunptr_openssl1771_i2d_RSAPrivateKey")
external fun i2d_RSAPrivateKey(a: CValuesRef<RSA>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1772_RSA_PSS_PARAMS_new")
external fun RSA_PSS_PARAMS_new(): CPointer<RSA_PSS_PARAMS>?

@CCall("knifunptr_openssl1773_RSA_PSS_PARAMS_free")
external fun RSA_PSS_PARAMS_free(a: CValuesRef<RSA_PSS_PARAMS>?): Unit

@CCall("knifunptr_openssl1774_d2i_RSA_PSS_PARAMS")
external fun d2i_RSA_PSS_PARAMS(
    a: CValuesRef<CPointerVar<RSA_PSS_PARAMS>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<RSA_PSS_PARAMS>?

@CCall("knifunptr_openssl1775_i2d_RSA_PSS_PARAMS")
external fun i2d_RSA_PSS_PARAMS(a: CValuesRef<RSA_PSS_PARAMS>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1776_RSA_OAEP_PARAMS_new")
external fun RSA_OAEP_PARAMS_new(): CPointer<RSA_OAEP_PARAMS>?

@CCall("knifunptr_openssl1777_RSA_OAEP_PARAMS_free")
external fun RSA_OAEP_PARAMS_free(a: CValuesRef<RSA_OAEP_PARAMS>?): Unit

@CCall("knifunptr_openssl1778_d2i_RSA_OAEP_PARAMS")
external fun d2i_RSA_OAEP_PARAMS(
    a: CValuesRef<CPointerVar<RSA_OAEP_PARAMS>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<RSA_OAEP_PARAMS>?

@CCall("knifunptr_openssl1779_i2d_RSA_OAEP_PARAMS")
external fun i2d_RSA_OAEP_PARAMS(a: CValuesRef<RSA_OAEP_PARAMS>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1780_RSA_print_fp")
external fun RSA_print_fp(fp: CValuesRef<FILE>?, r: CValuesRef<RSA>?, offset: Int): Int

@CCall("knifunptr_openssl1781_RSA_print")
external fun RSA_print(bp: CValuesRef<BIO>?, r: CValuesRef<RSA>?, offset: Int): Int

@CCall("knifunptr_openssl1782_RSA_sign")
external fun RSA_sign(
    type: Int,
    m: CValuesRef<UByteVar>?,
    m_length: UInt,
    sigret: CValuesRef<UByteVar>?,
    siglen: CValuesRef<UIntVar>?,
    rsa: CValuesRef<RSA>?
): Int

@CCall("knifunptr_openssl1783_RSA_verify")
external fun RSA_verify(
    type: Int,
    m: CValuesRef<UByteVar>?,
    m_length: UInt,
    sigbuf: CValuesRef<UByteVar>?,
    siglen: UInt,
    rsa: CValuesRef<RSA>?
): Int

@CCall("knifunptr_openssl1784_RSA_sign_ASN1_OCTET_STRING")
external fun RSA_sign_ASN1_OCTET_STRING(
    type: Int,
    m: CValuesRef<UByteVar>?,
    m_length: UInt,
    sigret: CValuesRef<UByteVar>?,
    siglen: CValuesRef<UIntVar>?,
    rsa: CValuesRef<RSA>?
): Int

@CCall("knifunptr_openssl1785_RSA_verify_ASN1_OCTET_STRING")
external fun RSA_verify_ASN1_OCTET_STRING(
    type: Int,
    m: CValuesRef<UByteVar>?,
    m_length: UInt,
    sigbuf: CValuesRef<UByteVar>?,
    siglen: UInt,
    rsa: CValuesRef<RSA>?
): Int

@CCall("knifunptr_openssl1786_RSA_blinding_on")
external fun RSA_blinding_on(rsa: CValuesRef<RSA>?, ctx: CValuesRef<BN_CTX>?): Int

@CCall("knifunptr_openssl1787_RSA_blinding_off")
external fun RSA_blinding_off(rsa: CValuesRef<RSA>?): Unit

@CCall("knifunptr_openssl1788_RSA_setup_blinding")
external fun RSA_setup_blinding(rsa: CValuesRef<RSA>?, ctx: CValuesRef<BN_CTX>?): CPointer<BN_BLINDING>?

@CCall("knifunptr_openssl1789_RSA_padding_add_PKCS1_type_1")
external fun RSA_padding_add_PKCS1_type_1(to: CValuesRef<UByteVar>?, tlen: Int, f: CValuesRef<UByteVar>?, fl: Int): Int

@CCall("knifunptr_openssl1790_RSA_padding_check_PKCS1_type_1")
external fun RSA_padding_check_PKCS1_type_1(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    rsa_len: Int
): Int

@CCall("knifunptr_openssl1791_RSA_padding_add_PKCS1_type_2")
external fun RSA_padding_add_PKCS1_type_2(to: CValuesRef<UByteVar>?, tlen: Int, f: CValuesRef<UByteVar>?, fl: Int): Int

@CCall("knifunptr_openssl1792_RSA_padding_check_PKCS1_type_2")
external fun RSA_padding_check_PKCS1_type_2(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    rsa_len: Int
): Int

@CCall("knifunptr_openssl1793_PKCS1_MGF1")
external fun PKCS1_MGF1(
    mask: CValuesRef<UByteVar>?,
    len: Long,
    seed: CValuesRef<UByteVar>?,
    seedlen: Long,
    dgst: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl1794_RSA_padding_add_PKCS1_OAEP")
external fun RSA_padding_add_PKCS1_OAEP(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    p: CValuesRef<UByteVar>?,
    pl: Int
): Int

@CCall("knifunptr_openssl1795_RSA_padding_check_PKCS1_OAEP")
external fun RSA_padding_check_PKCS1_OAEP(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    rsa_len: Int,
    p: CValuesRef<UByteVar>?,
    pl: Int
): Int

@CCall("knifunptr_openssl1796_RSA_padding_add_PKCS1_OAEP_mgf1")
external fun RSA_padding_add_PKCS1_OAEP_mgf1(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    from: CValuesRef<UByteVar>?,
    flen: Int,
    param: CValuesRef<UByteVar>?,
    plen: Int,
    md: CValuesRef<EVP_MD>?,
    mgf1md: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl1797_RSA_padding_check_PKCS1_OAEP_mgf1")
external fun RSA_padding_check_PKCS1_OAEP_mgf1(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    from: CValuesRef<UByteVar>?,
    flen: Int,
    num: Int,
    param: CValuesRef<UByteVar>?,
    plen: Int,
    md: CValuesRef<EVP_MD>?,
    mgf1md: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl1798_RSA_padding_add_SSLv23")
external fun RSA_padding_add_SSLv23(to: CValuesRef<UByteVar>?, tlen: Int, f: CValuesRef<UByteVar>?, fl: Int): Int

@CCall("knifunptr_openssl1799_RSA_padding_check_SSLv23")
external fun RSA_padding_check_SSLv23(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    rsa_len: Int
): Int

@CCall("knifunptr_openssl1800_RSA_padding_add_none")
external fun RSA_padding_add_none(to: CValuesRef<UByteVar>?, tlen: Int, f: CValuesRef<UByteVar>?, fl: Int): Int

@CCall("knifunptr_openssl1801_RSA_padding_check_none")
external fun RSA_padding_check_none(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    rsa_len: Int
): Int

@CCall("knifunptr_openssl1802_RSA_padding_add_X931")
external fun RSA_padding_add_X931(to: CValuesRef<UByteVar>?, tlen: Int, f: CValuesRef<UByteVar>?, fl: Int): Int

@CCall("knifunptr_openssl1803_RSA_padding_check_X931")
external fun RSA_padding_check_X931(
    to: CValuesRef<UByteVar>?,
    tlen: Int,
    f: CValuesRef<UByteVar>?,
    fl: Int,
    rsa_len: Int
): Int

@CCall("knifunptr_openssl1804_RSA_X931_hash_id")
external fun RSA_X931_hash_id(nid: Int): Int

@CCall("knifunptr_openssl1805_RSA_verify_PKCS1_PSS")
external fun RSA_verify_PKCS1_PSS(
    rsa: CValuesRef<RSA>?,
    mHash: CValuesRef<UByteVar>?,
    Hash: CValuesRef<EVP_MD>?,
    EM: CValuesRef<UByteVar>?,
    sLen: Int
): Int

@CCall("knifunptr_openssl1806_RSA_padding_add_PKCS1_PSS")
external fun RSA_padding_add_PKCS1_PSS(
    rsa: CValuesRef<RSA>?,
    EM: CValuesRef<UByteVar>?,
    mHash: CValuesRef<UByteVar>?,
    Hash: CValuesRef<EVP_MD>?,
    sLen: Int
): Int

@CCall("knifunptr_openssl1807_RSA_verify_PKCS1_PSS_mgf1")
external fun RSA_verify_PKCS1_PSS_mgf1(
    rsa: CValuesRef<RSA>?,
    mHash: CValuesRef<UByteVar>?,
    Hash: CValuesRef<EVP_MD>?,
    mgf1Hash: CValuesRef<EVP_MD>?,
    EM: CValuesRef<UByteVar>?,
    sLen: Int
): Int

@CCall("knifunptr_openssl1808_RSA_padding_add_PKCS1_PSS_mgf1")
external fun RSA_padding_add_PKCS1_PSS_mgf1(
    rsa: CValuesRef<RSA>?,
    EM: CValuesRef<UByteVar>?,
    mHash: CValuesRef<UByteVar>?,
    Hash: CValuesRef<EVP_MD>?,
    mgf1Hash: CValuesRef<EVP_MD>?,
    sLen: Int
): Int

@CCall("knifunptr_openssl1809_RSA_set_ex_data")
external fun RSA_set_ex_data(r: CValuesRef<RSA>?, idx: Int, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1810_RSA_get_ex_data")
external fun RSA_get_ex_data(r: CValuesRef<RSA>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl1811_RSAPublicKey_dup")
external fun RSAPublicKey_dup(rsa: CValuesRef<RSA>?): CPointer<RSA>?

@CCall("knifunptr_openssl1812_RSAPrivateKey_dup")
external fun RSAPrivateKey_dup(rsa: CValuesRef<RSA>?): CPointer<RSA>?

@CCall("knifunptr_openssl1813_RSA_meth_new")
external fun RSA_meth_new(@CCall.CString name: String?, flags: Int): CPointer<RSA_METHOD>?

@CCall("knifunptr_openssl1814_RSA_meth_free")
external fun RSA_meth_free(meth: CValuesRef<RSA_METHOD>?): Unit

@CCall("knifunptr_openssl1815_RSA_meth_dup")
external fun RSA_meth_dup(meth: CValuesRef<RSA_METHOD>?): CPointer<RSA_METHOD>?

@CCall("knifunptr_openssl1816_RSA_meth_get0_name")
external fun RSA_meth_get0_name(meth: CValuesRef<RSA_METHOD>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl1817_RSA_meth_set1_name")
external fun RSA_meth_set1_name(meth: CValuesRef<RSA_METHOD>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl1818_RSA_meth_get_flags")
external fun RSA_meth_get_flags(meth: CValuesRef<RSA_METHOD>?): Int

@CCall("knifunptr_openssl1819_RSA_meth_set_flags")
external fun RSA_meth_set_flags(meth: CValuesRef<RSA_METHOD>?, flags: Int): Int

@CCall("knifunptr_openssl1820_RSA_meth_get0_app_data")
external fun RSA_meth_get0_app_data(meth: CValuesRef<RSA_METHOD>?): COpaquePointer?

@CCall("knifunptr_openssl1821_RSA_meth_set0_app_data")
external fun RSA_meth_set0_app_data(meth: CValuesRef<RSA_METHOD>?, app_data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1822_RSA_meth_get_pub_enc")
external fun RSA_meth_get_pub_enc(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?

@CCall("knifunptr_openssl1823_RSA_meth_set_pub_enc")
external fun RSA_meth_set_pub_enc(
    rsa: CValuesRef<RSA_METHOD>?,
    pub_enc: CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl1824_RSA_meth_get_pub_dec")
external fun RSA_meth_get_pub_dec(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?

@CCall("knifunptr_openssl1825_RSA_meth_set_pub_dec")
external fun RSA_meth_set_pub_dec(
    rsa: CValuesRef<RSA_METHOD>?,
    pub_dec: CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl1826_RSA_meth_get_priv_enc")
external fun RSA_meth_get_priv_enc(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?

@CCall("knifunptr_openssl1827_RSA_meth_set_priv_enc")
external fun RSA_meth_set_priv_enc(
    rsa: CValuesRef<RSA_METHOD>?,
    priv_enc: CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl1828_RSA_meth_get_priv_dec")
external fun RSA_meth_get_priv_dec(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?

@CCall("knifunptr_openssl1829_RSA_meth_set_priv_dec")
external fun RSA_meth_set_priv_dec(
    rsa: CValuesRef<RSA_METHOD>?,
    priv_dec: CPointer<CFunction<(Int, CPointer<UByteVar>?, CPointer<UByteVar>?, CPointer<RSA>?, Int) -> Int>>?
): Int

@CCall("knifunptr_openssl1830_RSA_meth_get_mod_exp")
external fun RSA_meth_get_mod_exp(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<RSA>?, CPointer<BN_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1831_RSA_meth_set_mod_exp")
external fun RSA_meth_set_mod_exp(
    rsa: CValuesRef<RSA_METHOD>?,
    mod_exp: CPointer<CFunction<(CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<RSA>?, CPointer<BN_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1832_RSA_meth_get_bn_mod_exp")
external fun RSA_meth_get_bn_mod_exp(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1833_RSA_meth_set_bn_mod_exp")
external fun RSA_meth_set_bn_mod_exp(
    rsa: CValuesRef<RSA_METHOD>?,
    bn_mod_exp: CPointer<CFunction<(CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1834_RSA_meth_get_init")
external fun RSA_meth_get_init(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(CPointer<RSA>?) -> Int>>?

@CCall("knifunptr_openssl1835_RSA_meth_set_init")
external fun RSA_meth_set_init(rsa: CValuesRef<RSA_METHOD>?, init: CPointer<CFunction<(CPointer<RSA>?) -> Int>>?): Int

@CCall("knifunptr_openssl1836_RSA_meth_get_finish")
external fun RSA_meth_get_finish(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(CPointer<RSA>?) -> Int>>?

@CCall("knifunptr_openssl1837_RSA_meth_set_finish")
external fun RSA_meth_set_finish(
    rsa: CValuesRef<RSA_METHOD>?,
    finish: CPointer<CFunction<(CPointer<RSA>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1838_RSA_meth_get_sign")
external fun RSA_meth_get_sign(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(Int, CPointer<UByteVar>?, UInt, CPointer<UByteVar>?, CPointer<UIntVar>?, CPointer<RSA>?) -> Int>>?

@CCall("knifunptr_openssl1839_RSA_meth_set_sign")
external fun RSA_meth_set_sign(
    rsa: CValuesRef<RSA_METHOD>?,
    sign: CPointer<CFunction<(Int, CPointer<UByteVar>?, UInt, CPointer<UByteVar>?, CPointer<UIntVar>?, CPointer<RSA>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1840_RSA_meth_get_verify")
external fun RSA_meth_get_verify(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(Int, CPointer<UByteVar>?, UInt, CPointer<UByteVar>?, UInt, CPointer<RSA>?) -> Int>>?

@CCall("knifunptr_openssl1841_RSA_meth_set_verify")
external fun RSA_meth_set_verify(
    rsa: CValuesRef<RSA_METHOD>?,
    verify: CPointer<CFunction<(Int, CPointer<UByteVar>?, UInt, CPointer<UByteVar>?, UInt, CPointer<RSA>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1842_RSA_meth_get_keygen")
external fun RSA_meth_get_keygen(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(CPointer<RSA>?, Int, CPointer<BIGNUM>?, CPointer<BN_GENCB>?) -> Int>>?

@CCall("knifunptr_openssl1843_RSA_meth_set_keygen")
external fun RSA_meth_set_keygen(
    rsa: CValuesRef<RSA_METHOD>?,
    keygen: CPointer<CFunction<(CPointer<RSA>?, Int, CPointer<BIGNUM>?, CPointer<BN_GENCB>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1844_RSA_meth_get_multi_prime_keygen")
external fun RSA_meth_get_multi_prime_keygen(meth: CValuesRef<RSA_METHOD>?): CPointer<CFunction<(CPointer<RSA>?, Int, Int, CPointer<BIGNUM>?, CPointer<BN_GENCB>?) -> Int>>?

@CCall("knifunptr_openssl1845_RSA_meth_set_multi_prime_keygen")
external fun RSA_meth_set_multi_prime_keygen(
    meth: CValuesRef<RSA_METHOD>?,
    keygen: CPointer<CFunction<(CPointer<RSA>?, Int, Int, CPointer<BIGNUM>?, CPointer<BN_GENCB>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1846_ERR_load_DH_strings")
external fun ERR_load_DH_strings(): Int

@CCall("knifunptr_openssl1847_DHparams_dup")
external fun DHparams_dup(arg0: CValuesRef<DH>?): CPointer<DH>?

@CCall("knifunptr_openssl1848_DH_OpenSSL")
external fun DH_OpenSSL(): CPointer<DH_METHOD>?

@CCall("knifunptr_openssl1849_DH_set_default_method")
external fun DH_set_default_method(meth: CValuesRef<DH_METHOD>?): Unit

@CCall("knifunptr_openssl1850_DH_get_default_method")
external fun DH_get_default_method(): CPointer<DH_METHOD>?

@CCall("knifunptr_openssl1851_DH_set_method")
external fun DH_set_method(dh: CValuesRef<DH>?, meth: CValuesRef<DH_METHOD>?): Int

@CCall("knifunptr_openssl1852_DH_new_method")
external fun DH_new_method(engine: CValuesRef<ENGINE>?): CPointer<DH>?

@CCall("knifunptr_openssl1853_DH_new")
external fun DH_new(): CPointer<DH>?

@CCall("knifunptr_openssl1854_DH_free")
external fun DH_free(dh: CValuesRef<DH>?): Unit

@CCall("knifunptr_openssl1855_DH_up_ref")
external fun DH_up_ref(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1856_DH_bits")
external fun DH_bits(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1857_DH_size")
external fun DH_size(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1858_DH_security_bits")
external fun DH_security_bits(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1859_DH_set_ex_data")
external fun DH_set_ex_data(d: CValuesRef<DH>?, idx: Int, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1860_DH_get_ex_data")
external fun DH_get_ex_data(d: CValuesRef<DH>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl1861_DH_generate_parameters")
external fun DH_generate_parameters(
    prime_len: Int,
    generator: Int,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    cb_arg: CValuesRef<*>?
): CPointer<DH>?

@CCall("knifunptr_openssl1862_DH_generate_parameters_ex")
external fun DH_generate_parameters_ex(
    dh: CValuesRef<DH>?,
    prime_len: Int,
    generator: Int,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl1863_DH_check_params_ex")
external fun DH_check_params_ex(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1864_DH_check_ex")
external fun DH_check_ex(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1865_DH_check_pub_key_ex")
external fun DH_check_pub_key_ex(dh: CValuesRef<DH>?, pub_key: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1866_DH_check_params")
external fun DH_check_params(dh: CValuesRef<DH>?, ret: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1867_DH_check")
external fun DH_check(dh: CValuesRef<DH>?, codes: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1868_DH_check_pub_key")
external fun DH_check_pub_key(dh: CValuesRef<DH>?, pub_key: CValuesRef<BIGNUM>?, codes: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl1869_DH_generate_key")
external fun DH_generate_key(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1870_DH_compute_key")
external fun DH_compute_key(key: CValuesRef<UByteVar>?, pub_key: CValuesRef<BIGNUM>?, dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1871_DH_compute_key_padded")
external fun DH_compute_key_padded(key: CValuesRef<UByteVar>?, pub_key: CValuesRef<BIGNUM>?, dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1872_d2i_DHparams")
external fun d2i_DHparams(
    a: CValuesRef<CPointerVar<DH>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DH>?

@CCall("knifunptr_openssl1873_i2d_DHparams")
external fun i2d_DHparams(a: CValuesRef<DH>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1874_d2i_DHxparams")
external fun d2i_DHxparams(
    a: CValuesRef<CPointerVar<DH>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DH>?

@CCall("knifunptr_openssl1875_i2d_DHxparams")
external fun i2d_DHxparams(a: CValuesRef<DH>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1876_DHparams_print_fp")
external fun DHparams_print_fp(fp: CValuesRef<FILE>?, x: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1877_DHparams_print")
external fun DHparams_print(bp: CValuesRef<BIO>?, x: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1878_DH_get_1024_160")
external fun DH_get_1024_160(): CPointer<DH>?

@CCall("knifunptr_openssl1879_DH_get_2048_224")
external fun DH_get_2048_224(): CPointer<DH>?

@CCall("knifunptr_openssl1880_DH_get_2048_256")
external fun DH_get_2048_256(): CPointer<DH>?

@CCall("knifunptr_openssl1881_DH_new_by_nid")
external fun DH_new_by_nid(nid: Int): CPointer<DH>?

@CCall("knifunptr_openssl1882_DH_get_nid")
external fun DH_get_nid(dh: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl1883_DH_KDF_X9_42")
external fun DH_KDF_X9_42(
    out: CValuesRef<UByteVar>?,
    outlen: size_t,
    Z: CValuesRef<UByteVar>?,
    Zlen: size_t,
    key_oid: CValuesRef<ASN1_OBJECT>?,
    ukm: CValuesRef<UByteVar>?,
    ukmlen: size_t,
    md: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl1884_DH_get0_pqg")
external fun DH_get0_pqg(
    dh: CValuesRef<DH>?,
    p: CValuesRef<CPointerVar<BIGNUM>>?,
    q: CValuesRef<CPointerVar<BIGNUM>>?,
    g: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1885_DH_set0_pqg")
external fun DH_set0_pqg(
    dh: CValuesRef<DH>?,
    p: CValuesRef<BIGNUM>?,
    q: CValuesRef<BIGNUM>?,
    g: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl1886_DH_get0_key")
external fun DH_get0_key(
    dh: CValuesRef<DH>?,
    pub_key: CValuesRef<CPointerVar<BIGNUM>>?,
    priv_key: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1887_DH_set0_key")
external fun DH_set0_key(dh: CValuesRef<DH>?, pub_key: CValuesRef<BIGNUM>?, priv_key: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1888_DH_get0_p")
external fun DH_get0_p(dh: CValuesRef<DH>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1889_DH_get0_q")
external fun DH_get0_q(dh: CValuesRef<DH>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1890_DH_get0_g")
external fun DH_get0_g(dh: CValuesRef<DH>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1891_DH_get0_priv_key")
external fun DH_get0_priv_key(dh: CValuesRef<DH>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1892_DH_get0_pub_key")
external fun DH_get0_pub_key(dh: CValuesRef<DH>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1893_DH_clear_flags")
external fun DH_clear_flags(dh: CValuesRef<DH>?, flags: Int): Unit

@CCall("knifunptr_openssl1894_DH_test_flags")
external fun DH_test_flags(dh: CValuesRef<DH>?, flags: Int): Int

@CCall("knifunptr_openssl1895_DH_set_flags")
external fun DH_set_flags(dh: CValuesRef<DH>?, flags: Int): Unit

@CCall("knifunptr_openssl1896_DH_get0_engine")
external fun DH_get0_engine(d: CValuesRef<DH>?): CPointer<ENGINE>?

@CCall("knifunptr_openssl1897_DH_get_length")
external fun DH_get_length(dh: CValuesRef<DH>?): Long

@CCall("knifunptr_openssl1898_DH_set_length")
external fun DH_set_length(dh: CValuesRef<DH>?, length: Long): Int

@CCall("knifunptr_openssl1899_DH_meth_new")
external fun DH_meth_new(@CCall.CString name: String?, flags: Int): CPointer<DH_METHOD>?

@CCall("knifunptr_openssl1900_DH_meth_free")
external fun DH_meth_free(dhm: CValuesRef<DH_METHOD>?): Unit

@CCall("knifunptr_openssl1901_DH_meth_dup")
external fun DH_meth_dup(dhm: CValuesRef<DH_METHOD>?): CPointer<DH_METHOD>?

@CCall("knifunptr_openssl1902_DH_meth_get0_name")
external fun DH_meth_get0_name(dhm: CValuesRef<DH_METHOD>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl1903_DH_meth_set1_name")
external fun DH_meth_set1_name(dhm: CValuesRef<DH_METHOD>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl1904_DH_meth_get_flags")
external fun DH_meth_get_flags(dhm: CValuesRef<DH_METHOD>?): Int

@CCall("knifunptr_openssl1905_DH_meth_set_flags")
external fun DH_meth_set_flags(dhm: CValuesRef<DH_METHOD>?, flags: Int): Int

@CCall("knifunptr_openssl1906_DH_meth_get0_app_data")
external fun DH_meth_get0_app_data(dhm: CValuesRef<DH_METHOD>?): COpaquePointer?

@CCall("knifunptr_openssl1907_DH_meth_set0_app_data")
external fun DH_meth_set0_app_data(dhm: CValuesRef<DH_METHOD>?, app_data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1908_DH_meth_get_generate_key")
external fun DH_meth_get_generate_key(dhm: CValuesRef<DH_METHOD>?): CPointer<CFunction<(CPointer<DH>?) -> Int>>?

@CCall("knifunptr_openssl1909_DH_meth_set_generate_key")
external fun DH_meth_set_generate_key(
    dhm: CValuesRef<DH_METHOD>?,
    generate_key: CPointer<CFunction<(CPointer<DH>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1910_DH_meth_get_compute_key")
external fun DH_meth_get_compute_key(dhm: CValuesRef<DH_METHOD>?): CPointer<CFunction<(CPointer<UByteVar>?, CPointer<BIGNUM>?, CPointer<DH>?) -> Int>>?

@CCall("knifunptr_openssl1911_DH_meth_set_compute_key")
external fun DH_meth_set_compute_key(
    dhm: CValuesRef<DH_METHOD>?,
    compute_key: CPointer<CFunction<(CPointer<UByteVar>?, CPointer<BIGNUM>?, CPointer<DH>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1912_DH_meth_get_bn_mod_exp")
external fun DH_meth_get_bn_mod_exp(dhm: CValuesRef<DH_METHOD>?): CPointer<CFunction<(CPointer<DH>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1913_DH_meth_set_bn_mod_exp")
external fun DH_meth_set_bn_mod_exp(
    dhm: CValuesRef<DH_METHOD>?,
    bn_mod_exp: CPointer<CFunction<(CPointer<DH>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1914_DH_meth_get_init")
external fun DH_meth_get_init(dhm: CValuesRef<DH_METHOD>?): CPointer<CFunction<(CPointer<DH>?) -> Int>>?

@CCall("knifunptr_openssl1915_DH_meth_set_init")
external fun DH_meth_set_init(dhm: CValuesRef<DH_METHOD>?, init: CPointer<CFunction<(CPointer<DH>?) -> Int>>?): Int

@CCall("knifunptr_openssl1916_DH_meth_get_finish")
external fun DH_meth_get_finish(dhm: CValuesRef<DH_METHOD>?): CPointer<CFunction<(CPointer<DH>?) -> Int>>?

@CCall("knifunptr_openssl1917_DH_meth_set_finish")
external fun DH_meth_set_finish(dhm: CValuesRef<DH_METHOD>?, finish: CPointer<CFunction<(CPointer<DH>?) -> Int>>?): Int

@CCall("knifunptr_openssl1918_DH_meth_get_generate_params")
external fun DH_meth_get_generate_params(dhm: CValuesRef<DH_METHOD>?): CPointer<CFunction<(CPointer<DH>?, Int, Int, CPointer<BN_GENCB>?) -> Int>>?

@CCall("knifunptr_openssl1919_DH_meth_set_generate_params")
external fun DH_meth_set_generate_params(
    dhm: CValuesRef<DH_METHOD>?,
    generate_params: CPointer<CFunction<(CPointer<DH>?, Int, Int, CPointer<BN_GENCB>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1920_ERR_load_DSA_strings")
external fun ERR_load_DSA_strings(): Int

@CCall("knifunptr_openssl1921_DSAparams_dup")
external fun DSAparams_dup(x: CValuesRef<DSA>?): CPointer<DSA>?

@CCall("knifunptr_openssl1922_DSA_SIG_new")
external fun DSA_SIG_new(): CPointer<DSA_SIG>?

@CCall("knifunptr_openssl1923_DSA_SIG_free")
external fun DSA_SIG_free(a: CValuesRef<DSA_SIG>?): Unit

@CCall("knifunptr_openssl1924_i2d_DSA_SIG")
external fun i2d_DSA_SIG(a: CValuesRef<DSA_SIG>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1925_d2i_DSA_SIG")
external fun d2i_DSA_SIG(
    v: CValuesRef<CPointerVar<DSA_SIG>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DSA_SIG>?

@CCall("knifunptr_openssl1926_DSA_SIG_get0")
external fun DSA_SIG_get0(
    sig: CValuesRef<DSA_SIG>?,
    pr: CValuesRef<CPointerVar<BIGNUM>>?,
    ps: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1927_DSA_SIG_set0")
external fun DSA_SIG_set0(sig: CValuesRef<DSA_SIG>?, r: CValuesRef<BIGNUM>?, s: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1928_DSA_do_sign")
external fun DSA_do_sign(dgst: CValuesRef<UByteVar>?, dlen: Int, dsa: CValuesRef<DSA>?): CPointer<DSA_SIG>?

@CCall("knifunptr_openssl1929_DSA_do_verify")
external fun DSA_do_verify(
    dgst: CValuesRef<UByteVar>?,
    dgst_len: Int,
    sig: CValuesRef<DSA_SIG>?,
    dsa: CValuesRef<DSA>?
): Int

@CCall("knifunptr_openssl1930_DSA_OpenSSL")
external fun DSA_OpenSSL(): CPointer<DSA_METHOD>?

@CCall("knifunptr_openssl1931_DSA_set_default_method")
external fun DSA_set_default_method(arg0: CValuesRef<DSA_METHOD>?): Unit

@CCall("knifunptr_openssl1932_DSA_get_default_method")
external fun DSA_get_default_method(): CPointer<DSA_METHOD>?

@CCall("knifunptr_openssl1933_DSA_set_method")
external fun DSA_set_method(dsa: CValuesRef<DSA>?, arg1: CValuesRef<DSA_METHOD>?): Int

@CCall("knifunptr_openssl1934_DSA_get_method")
external fun DSA_get_method(d: CValuesRef<DSA>?): CPointer<DSA_METHOD>?

@CCall("knifunptr_openssl1935_DSA_new")
external fun DSA_new(): CPointer<DSA>?

@CCall("knifunptr_openssl1936_DSA_new_method")
external fun DSA_new_method(engine: CValuesRef<ENGINE>?): CPointer<DSA>?

@CCall("knifunptr_openssl1937_DSA_free")
external fun DSA_free(r: CValuesRef<DSA>?): Unit

@CCall("knifunptr_openssl1938_DSA_up_ref")
external fun DSA_up_ref(r: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1939_DSA_size")
external fun DSA_size(arg0: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1940_DSA_bits")
external fun DSA_bits(d: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1941_DSA_security_bits")
external fun DSA_security_bits(d: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1942_DSA_sign_setup")
external fun DSA_sign_setup(
    dsa: CValuesRef<DSA>?,
    ctx_in: CValuesRef<BN_CTX>?,
    kinvp: CValuesRef<CPointerVar<BIGNUM>>?,
    rp: CValuesRef<CPointerVar<BIGNUM>>?
): Int

@CCall("knifunptr_openssl1943_DSA_sign")
external fun DSA_sign(
    type: Int,
    dgst: CValuesRef<UByteVar>?,
    dlen: Int,
    sig: CValuesRef<UByteVar>?,
    siglen: CValuesRef<UIntVar>?,
    dsa: CValuesRef<DSA>?
): Int

@CCall("knifunptr_openssl1944_DSA_verify")
external fun DSA_verify(
    type: Int,
    dgst: CValuesRef<UByteVar>?,
    dgst_len: Int,
    sigbuf: CValuesRef<UByteVar>?,
    siglen: Int,
    dsa: CValuesRef<DSA>?
): Int

@CCall("knifunptr_openssl1945_DSA_set_ex_data")
external fun DSA_set_ex_data(d: CValuesRef<DSA>?, idx: Int, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1946_DSA_get_ex_data")
external fun DSA_get_ex_data(d: CValuesRef<DSA>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl1947_d2i_DSAPublicKey")
external fun d2i_DSAPublicKey(
    a: CValuesRef<CPointerVar<DSA>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DSA>?

@CCall("knifunptr_openssl1948_d2i_DSAPrivateKey")
external fun d2i_DSAPrivateKey(
    a: CValuesRef<CPointerVar<DSA>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DSA>?

@CCall("knifunptr_openssl1949_d2i_DSAparams")
external fun d2i_DSAparams(
    a: CValuesRef<CPointerVar<DSA>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DSA>?

@CCall("knifunptr_openssl1950_DSA_generate_parameters")
external fun DSA_generate_parameters(
    bits: Int,
    seed: CValuesRef<UByteVar>?,
    seed_len: Int,
    counter_ret: CValuesRef<IntVar>?,
    h_ret: CValuesRef<ULongVar>?,
    callback: CPointer<CFunction<(Int, Int, COpaquePointer?) -> Unit>>?,
    cb_arg: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl1951_DSA_generate_parameters_ex")
external fun DSA_generate_parameters_ex(
    dsa: CValuesRef<DSA>?,
    bits: Int,
    seed: CValuesRef<UByteVar>?,
    seed_len: Int,
    counter_ret: CValuesRef<IntVar>?,
    h_ret: CValuesRef<ULongVar>?,
    cb: CValuesRef<BN_GENCB>?
): Int

@CCall("knifunptr_openssl1952_DSA_generate_key")
external fun DSA_generate_key(a: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1953_i2d_DSAPublicKey")
external fun i2d_DSAPublicKey(a: CValuesRef<DSA>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1954_i2d_DSAPrivateKey")
external fun i2d_DSAPrivateKey(a: CValuesRef<DSA>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1955_i2d_DSAparams")
external fun i2d_DSAparams(a: CValuesRef<DSA>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl1956_DSAparams_print")
external fun DSAparams_print(bp: CValuesRef<BIO>?, x: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1957_DSA_print")
external fun DSA_print(bp: CValuesRef<BIO>?, x: CValuesRef<DSA>?, off: Int): Int

@CCall("knifunptr_openssl1958_DSAparams_print_fp")
external fun DSAparams_print_fp(fp: CValuesRef<FILE>?, x: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl1959_DSA_print_fp")
external fun DSA_print_fp(bp: CValuesRef<FILE>?, x: CValuesRef<DSA>?, off: Int): Int

@CCall("knifunptr_openssl1960_DSA_dup_DH")
external fun DSA_dup_DH(r: CValuesRef<DSA>?): CPointer<DH>?

@CCall("knifunptr_openssl1961_DSA_get0_pqg")
external fun DSA_get0_pqg(
    d: CValuesRef<DSA>?,
    p: CValuesRef<CPointerVar<BIGNUM>>?,
    q: CValuesRef<CPointerVar<BIGNUM>>?,
    g: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1962_DSA_set0_pqg")
external fun DSA_set0_pqg(
    d: CValuesRef<DSA>?,
    p: CValuesRef<BIGNUM>?,
    q: CValuesRef<BIGNUM>?,
    g: CValuesRef<BIGNUM>?
): Int

@CCall("knifunptr_openssl1963_DSA_get0_key")
external fun DSA_get0_key(
    d: CValuesRef<DSA>?,
    pub_key: CValuesRef<CPointerVar<BIGNUM>>?,
    priv_key: CValuesRef<CPointerVar<BIGNUM>>?
): Unit

@CCall("knifunptr_openssl1964_DSA_set0_key")
external fun DSA_set0_key(d: CValuesRef<DSA>?, pub_key: CValuesRef<BIGNUM>?, priv_key: CValuesRef<BIGNUM>?): Int

@CCall("knifunptr_openssl1965_DSA_get0_p")
external fun DSA_get0_p(d: CValuesRef<DSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1966_DSA_get0_q")
external fun DSA_get0_q(d: CValuesRef<DSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1967_DSA_get0_g")
external fun DSA_get0_g(d: CValuesRef<DSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1968_DSA_get0_pub_key")
external fun DSA_get0_pub_key(d: CValuesRef<DSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1969_DSA_get0_priv_key")
external fun DSA_get0_priv_key(d: CValuesRef<DSA>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl1970_DSA_clear_flags")
external fun DSA_clear_flags(d: CValuesRef<DSA>?, flags: Int): Unit

@CCall("knifunptr_openssl1971_DSA_test_flags")
external fun DSA_test_flags(d: CValuesRef<DSA>?, flags: Int): Int

@CCall("knifunptr_openssl1972_DSA_set_flags")
external fun DSA_set_flags(d: CValuesRef<DSA>?, flags: Int): Unit

@CCall("knifunptr_openssl1973_DSA_get0_engine")
external fun DSA_get0_engine(d: CValuesRef<DSA>?): CPointer<ENGINE>?

@CCall("knifunptr_openssl1974_DSA_meth_new")
external fun DSA_meth_new(@CCall.CString name: String?, flags: Int): CPointer<DSA_METHOD>?

@CCall("knifunptr_openssl1975_DSA_meth_free")
external fun DSA_meth_free(dsam: CValuesRef<DSA_METHOD>?): Unit

@CCall("knifunptr_openssl1976_DSA_meth_dup")
external fun DSA_meth_dup(dsam: CValuesRef<DSA_METHOD>?): CPointer<DSA_METHOD>?

@CCall("knifunptr_openssl1977_DSA_meth_get0_name")
external fun DSA_meth_get0_name(dsam: CValuesRef<DSA_METHOD>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl1978_DSA_meth_set1_name")
external fun DSA_meth_set1_name(dsam: CValuesRef<DSA_METHOD>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl1979_DSA_meth_get_flags")
external fun DSA_meth_get_flags(dsam: CValuesRef<DSA_METHOD>?): Int

@CCall("knifunptr_openssl1980_DSA_meth_set_flags")
external fun DSA_meth_set_flags(dsam: CValuesRef<DSA_METHOD>?, flags: Int): Int

@CCall("knifunptr_openssl1981_DSA_meth_get0_app_data")
external fun DSA_meth_get0_app_data(dsam: CValuesRef<DSA_METHOD>?): COpaquePointer?

@CCall("knifunptr_openssl1982_DSA_meth_set0_app_data")
external fun DSA_meth_set0_app_data(dsam: CValuesRef<DSA_METHOD>?, app_data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl1983_DSA_meth_get_sign")
external fun DSA_meth_get_sign(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<UByteVar>?, Int, CPointer<DSA>?) -> CPointer<DSA_SIG>?>>?

@CCall("knifunptr_openssl1984_DSA_meth_set_sign")
external fun DSA_meth_set_sign(
    dsam: CValuesRef<DSA_METHOD>?,
    sign: CPointer<CFunction<(CPointer<UByteVar>?, Int, CPointer<DSA>?) -> CPointer<DSA_SIG>?>>?
): Int

@CCall("knifunptr_openssl1985_DSA_meth_get_sign_setup")
external fun DSA_meth_get_sign_setup(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?, CPointer<BN_CTX>?, CPointer<CPointerVar<BIGNUM>>?, CPointer<CPointerVar<BIGNUM>>?) -> Int>>?

@CCall("knifunptr_openssl1986_DSA_meth_set_sign_setup")
external fun DSA_meth_set_sign_setup(
    dsam: CValuesRef<DSA_METHOD>?,
    sign_setup: CPointer<CFunction<(CPointer<DSA>?, CPointer<BN_CTX>?, CPointer<CPointerVar<BIGNUM>>?, CPointer<CPointerVar<BIGNUM>>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1987_DSA_meth_get_verify")
external fun DSA_meth_get_verify(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<UByteVar>?, Int, CPointer<DSA_SIG>?, CPointer<DSA>?) -> Int>>?

@CCall("knifunptr_openssl1988_DSA_meth_set_verify")
external fun DSA_meth_set_verify(
    dsam: CValuesRef<DSA_METHOD>?,
    verify: CPointer<CFunction<(CPointer<UByteVar>?, Int, CPointer<DSA_SIG>?, CPointer<DSA>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1989_DSA_meth_get_mod_exp")
external fun DSA_meth_get_mod_exp(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1990_DSA_meth_set_mod_exp")
external fun DSA_meth_set_mod_exp(
    dsam: CValuesRef<DSA_METHOD>?,
    mod_exp: CPointer<CFunction<(CPointer<DSA>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1991_DSA_meth_get_bn_mod_exp")
external fun DSA_meth_get_bn_mod_exp(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?

@CCall("knifunptr_openssl1992_DSA_meth_set_bn_mod_exp")
external fun DSA_meth_set_bn_mod_exp(
    dsam: CValuesRef<DSA_METHOD>?,
    bn_mod_exp: CPointer<CFunction<(CPointer<DSA>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BIGNUM>?, CPointer<BN_CTX>?, CPointer<BN_MONT_CTX>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1993_DSA_meth_get_init")
external fun DSA_meth_get_init(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?) -> Int>>?

@CCall("knifunptr_openssl1994_DSA_meth_set_init")
external fun DSA_meth_set_init(dsam: CValuesRef<DSA_METHOD>?, init: CPointer<CFunction<(CPointer<DSA>?) -> Int>>?): Int

@CCall("knifunptr_openssl1995_DSA_meth_get_finish")
external fun DSA_meth_get_finish(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?) -> Int>>?

@CCall("knifunptr_openssl1996_DSA_meth_set_finish")
external fun DSA_meth_set_finish(
    dsam: CValuesRef<DSA_METHOD>?,
    finish: CPointer<CFunction<(CPointer<DSA>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1997_DSA_meth_get_paramgen")
external fun DSA_meth_get_paramgen(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?, Int, CPointer<UByteVar>?, Int, CPointer<IntVar>?, CPointer<ULongVar>?, CPointer<BN_GENCB>?) -> Int>>?

@CCall("knifunptr_openssl1998_DSA_meth_set_paramgen")
external fun DSA_meth_set_paramgen(
    dsam: CValuesRef<DSA_METHOD>?,
    paramgen: CPointer<CFunction<(CPointer<DSA>?, Int, CPointer<UByteVar>?, Int, CPointer<IntVar>?, CPointer<ULongVar>?, CPointer<BN_GENCB>?) -> Int>>?
): Int

@CCall("knifunptr_openssl1999_DSA_meth_get_keygen")
external fun DSA_meth_get_keygen(dsam: CValuesRef<DSA_METHOD>?): CPointer<CFunction<(CPointer<DSA>?) -> Int>>?

@CCall("knifunptr_openssl2000_DSA_meth_set_keygen")
external fun DSA_meth_set_keygen(
    dsam: CValuesRef<DSA_METHOD>?,
    keygen: CPointer<CFunction<(CPointer<DSA>?) -> Int>>?
): Int

@CCall("knifunptr_openssl2001_SHA1_Init")
external fun SHA1_Init(c: CValuesRef<SHA_CTX>?): Int

@CCall("knifunptr_openssl2002_SHA1_Update")
external fun SHA1_Update(c: CValuesRef<SHA_CTX>?, data: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl2003_SHA1_Final")
external fun SHA1_Final(md: CValuesRef<UByteVar>?, c: CValuesRef<SHA_CTX>?): Int

@CCall("knifunptr_openssl2004_SHA1")
external fun SHA1(d: CValuesRef<UByteVar>?, n: size_t, md: CValuesRef<UByteVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2005_SHA1_Transform")
external fun SHA1_Transform(c: CValuesRef<SHA_CTX>?, data: CValuesRef<UByteVar>?): Unit

@CCall("knifunptr_openssl2006_SHA224_Init")
external fun SHA224_Init(c: CValuesRef<SHA256_CTX>?): Int

@CCall("knifunptr_openssl2007_SHA224_Update")
external fun SHA224_Update(c: CValuesRef<SHA256_CTX>?, data: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl2008_SHA224_Final")
external fun SHA224_Final(md: CValuesRef<UByteVar>?, c: CValuesRef<SHA256_CTX>?): Int

@CCall("knifunptr_openssl2009_SHA224")
external fun SHA224(d: CValuesRef<UByteVar>?, n: size_t, md: CValuesRef<UByteVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2010_SHA256_Init")
external fun SHA256_Init(c: CValuesRef<SHA256_CTX>?): Int

@CCall("knifunptr_openssl2011_SHA256_Update")
external fun SHA256_Update(c: CValuesRef<SHA256_CTX>?, data: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl2012_SHA256_Final")
external fun SHA256_Final(md: CValuesRef<UByteVar>?, c: CValuesRef<SHA256_CTX>?): Int

@CCall("knifunptr_openssl2013_SHA256")
external fun SHA256(d: CValuesRef<UByteVar>?, n: size_t, md: CValuesRef<UByteVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2014_SHA256_Transform")
external fun SHA256_Transform(c: CValuesRef<SHA256_CTX>?, data: CValuesRef<UByteVar>?): Unit

@CCall("knifunptr_openssl2015_SHA384_Init")
external fun SHA384_Init(c: CValuesRef<SHA512_CTX>?): Int

@CCall("knifunptr_openssl2016_SHA384_Update")
external fun SHA384_Update(c: CValuesRef<SHA512_CTX>?, data: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl2017_SHA384_Final")
external fun SHA384_Final(md: CValuesRef<UByteVar>?, c: CValuesRef<SHA512_CTX>?): Int

@CCall("knifunptr_openssl2018_SHA384")
external fun SHA384(d: CValuesRef<UByteVar>?, n: size_t, md: CValuesRef<UByteVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2019_SHA512_Init")
external fun SHA512_Init(c: CValuesRef<SHA512_CTX>?): Int

@CCall("knifunptr_openssl2020_SHA512_Update")
external fun SHA512_Update(c: CValuesRef<SHA512_CTX>?, data: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl2021_SHA512_Final")
external fun SHA512_Final(md: CValuesRef<UByteVar>?, c: CValuesRef<SHA512_CTX>?): Int

@CCall("knifunptr_openssl2022_SHA512")
external fun SHA512(d: CValuesRef<UByteVar>?, n: size_t, md: CValuesRef<UByteVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2023_SHA512_Transform")
external fun SHA512_Transform(c: CValuesRef<SHA512_CTX>?, data: CValuesRef<UByteVar>?): Unit

@CCall("knifunptr_openssl2024_ERR_load_X509_strings")
external fun ERR_load_X509_strings(): Int

@CCall("knifunptr_openssl2025_sk_X509_NAME_ENTRY_num")
external fun sk_X509_NAME_ENTRY_num(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): Int

@CCall("knifunptr_openssl2026_sk_X509_NAME_ENTRY_value")
external fun sk_X509_NAME_ENTRY_value(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?, idx: Int): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2027_sk_X509_NAME_ENTRY_new")
external fun sk_X509_NAME_ENTRY_new(compare: sk_X509_NAME_ENTRY_compfunc?): CPointer<stack_st_X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2028_sk_X509_NAME_ENTRY_new_null")
external fun sk_X509_NAME_ENTRY_new_null(): CPointer<stack_st_X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2029_sk_X509_NAME_ENTRY_new_reserve")
external fun sk_X509_NAME_ENTRY_new_reserve(
    compare: sk_X509_NAME_ENTRY_compfunc?,
    n: Int
): CPointer<stack_st_X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2030_sk_X509_NAME_ENTRY_reserve")
external fun sk_X509_NAME_ENTRY_reserve(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?, n: Int): Int

@CCall("knifunptr_openssl2031_sk_X509_NAME_ENTRY_free")
external fun sk_X509_NAME_ENTRY_free(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): Unit

@CCall("knifunptr_openssl2032_sk_X509_NAME_ENTRY_zero")
external fun sk_X509_NAME_ENTRY_zero(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): Unit

@CCall("knifunptr_openssl2033_sk_X509_NAME_ENTRY_delete")
external fun sk_X509_NAME_ENTRY_delete(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?, i: Int): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2034_sk_X509_NAME_ENTRY_delete_ptr")
external fun sk_X509_NAME_ENTRY_delete_ptr(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    ptr: CValuesRef<X509_NAME_ENTRY>?
): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2035_sk_X509_NAME_ENTRY_push")
external fun sk_X509_NAME_ENTRY_push(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?, ptr: CValuesRef<X509_NAME_ENTRY>?): Int

@CCall("knifunptr_openssl2036_sk_X509_NAME_ENTRY_unshift")
external fun sk_X509_NAME_ENTRY_unshift(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    ptr: CValuesRef<X509_NAME_ENTRY>?
): Int

@CCall("knifunptr_openssl2037_sk_X509_NAME_ENTRY_pop")
external fun sk_X509_NAME_ENTRY_pop(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2038_sk_X509_NAME_ENTRY_shift")
external fun sk_X509_NAME_ENTRY_shift(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2039_sk_X509_NAME_ENTRY_pop_free")
external fun sk_X509_NAME_ENTRY_pop_free(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    freefunc: sk_X509_NAME_ENTRY_freefunc?
): Unit

@CCall("knifunptr_openssl2040_sk_X509_NAME_ENTRY_insert")
external fun sk_X509_NAME_ENTRY_insert(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    ptr: CValuesRef<X509_NAME_ENTRY>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2041_sk_X509_NAME_ENTRY_set")
external fun sk_X509_NAME_ENTRY_set(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    idx: Int,
    ptr: CValuesRef<X509_NAME_ENTRY>?
): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2042_sk_X509_NAME_ENTRY_find")
external fun sk_X509_NAME_ENTRY_find(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?, ptr: CValuesRef<X509_NAME_ENTRY>?): Int

@CCall("knifunptr_openssl2043_sk_X509_NAME_ENTRY_find_ex")
external fun sk_X509_NAME_ENTRY_find_ex(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    ptr: CValuesRef<X509_NAME_ENTRY>?
): Int

@CCall("knifunptr_openssl2044_sk_X509_NAME_ENTRY_sort")
external fun sk_X509_NAME_ENTRY_sort(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): Unit

@CCall("knifunptr_openssl2045_sk_X509_NAME_ENTRY_is_sorted")
external fun sk_X509_NAME_ENTRY_is_sorted(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): Int

@CCall("knifunptr_openssl2046_sk_X509_NAME_ENTRY_dup")
external fun sk_X509_NAME_ENTRY_dup(sk: CValuesRef<stack_st_X509_NAME_ENTRY>?): CPointer<stack_st_X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2047_sk_X509_NAME_ENTRY_deep_copy")
external fun sk_X509_NAME_ENTRY_deep_copy(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    copyfunc: sk_X509_NAME_ENTRY_copyfunc?,
    freefunc: sk_X509_NAME_ENTRY_freefunc?
): CPointer<stack_st_X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2048_sk_X509_NAME_ENTRY_set_cmp_func")
external fun sk_X509_NAME_ENTRY_set_cmp_func(
    sk: CValuesRef<stack_st_X509_NAME_ENTRY>?,
    compare: sk_X509_NAME_ENTRY_compfunc?
): sk_X509_NAME_ENTRY_compfunc?

@CCall("knifunptr_openssl2049_sk_X509_NAME_num")
external fun sk_X509_NAME_num(sk: CValuesRef<stack_st_X509_NAME>?): Int

@CCall("knifunptr_openssl2050_sk_X509_NAME_value")
external fun sk_X509_NAME_value(sk: CValuesRef<stack_st_X509_NAME>?, idx: Int): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2051_sk_X509_NAME_new")
external fun sk_X509_NAME_new(compare: sk_X509_NAME_compfunc?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl2052_sk_X509_NAME_new_null")
external fun sk_X509_NAME_new_null(): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl2053_sk_X509_NAME_new_reserve")
external fun sk_X509_NAME_new_reserve(compare: sk_X509_NAME_compfunc?, n: Int): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl2054_sk_X509_NAME_reserve")
external fun sk_X509_NAME_reserve(sk: CValuesRef<stack_st_X509_NAME>?, n: Int): Int

@CCall("knifunptr_openssl2055_sk_X509_NAME_free")
external fun sk_X509_NAME_free(sk: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl2056_sk_X509_NAME_zero")
external fun sk_X509_NAME_zero(sk: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl2057_sk_X509_NAME_delete")
external fun sk_X509_NAME_delete(sk: CValuesRef<stack_st_X509_NAME>?, i: Int): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2058_sk_X509_NAME_delete_ptr")
external fun sk_X509_NAME_delete_ptr(
    sk: CValuesRef<stack_st_X509_NAME>?,
    ptr: CValuesRef<X509_NAME>?
): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2059_sk_X509_NAME_push")
external fun sk_X509_NAME_push(sk: CValuesRef<stack_st_X509_NAME>?, ptr: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2060_sk_X509_NAME_unshift")
external fun sk_X509_NAME_unshift(sk: CValuesRef<stack_st_X509_NAME>?, ptr: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2061_sk_X509_NAME_pop")
external fun sk_X509_NAME_pop(sk: CValuesRef<stack_st_X509_NAME>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2062_sk_X509_NAME_shift")
external fun sk_X509_NAME_shift(sk: CValuesRef<stack_st_X509_NAME>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2063_sk_X509_NAME_pop_free")
external fun sk_X509_NAME_pop_free(sk: CValuesRef<stack_st_X509_NAME>?, freefunc: sk_X509_NAME_freefunc?): Unit

@CCall("knifunptr_openssl2064_sk_X509_NAME_insert")
external fun sk_X509_NAME_insert(sk: CValuesRef<stack_st_X509_NAME>?, ptr: CValuesRef<X509_NAME>?, idx: Int): Int

@CCall("knifunptr_openssl2065_sk_X509_NAME_set")
external fun sk_X509_NAME_set(
    sk: CValuesRef<stack_st_X509_NAME>?,
    idx: Int,
    ptr: CValuesRef<X509_NAME>?
): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2066_sk_X509_NAME_find")
external fun sk_X509_NAME_find(sk: CValuesRef<stack_st_X509_NAME>?, ptr: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2067_sk_X509_NAME_find_ex")
external fun sk_X509_NAME_find_ex(sk: CValuesRef<stack_st_X509_NAME>?, ptr: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2068_sk_X509_NAME_sort")
external fun sk_X509_NAME_sort(sk: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl2069_sk_X509_NAME_is_sorted")
external fun sk_X509_NAME_is_sorted(sk: CValuesRef<stack_st_X509_NAME>?): Int

@CCall("knifunptr_openssl2070_sk_X509_NAME_dup")
external fun sk_X509_NAME_dup(sk: CValuesRef<stack_st_X509_NAME>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl2071_sk_X509_NAME_deep_copy")
external fun sk_X509_NAME_deep_copy(
    sk: CValuesRef<stack_st_X509_NAME>?,
    copyfunc: sk_X509_NAME_copyfunc?,
    freefunc: sk_X509_NAME_freefunc?
): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl2072_sk_X509_NAME_set_cmp_func")
external fun sk_X509_NAME_set_cmp_func(
    sk: CValuesRef<stack_st_X509_NAME>?,
    compare: sk_X509_NAME_compfunc?
): sk_X509_NAME_compfunc?

@CCall("knifunptr_openssl2073_sk_X509_EXTENSION_num")
external fun sk_X509_EXTENSION_num(sk: CValuesRef<stack_st_X509_EXTENSION>?): Int

@CCall("knifunptr_openssl2074_sk_X509_EXTENSION_value")
external fun sk_X509_EXTENSION_value(sk: CValuesRef<stack_st_X509_EXTENSION>?, idx: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2075_sk_X509_EXTENSION_new")
external fun sk_X509_EXTENSION_new(compare: sk_X509_EXTENSION_compfunc?): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl2076_sk_X509_EXTENSION_new_null")
external fun sk_X509_EXTENSION_new_null(): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl2077_sk_X509_EXTENSION_new_reserve")
external fun sk_X509_EXTENSION_new_reserve(
    compare: sk_X509_EXTENSION_compfunc?,
    n: Int
): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl2078_sk_X509_EXTENSION_reserve")
external fun sk_X509_EXTENSION_reserve(sk: CValuesRef<stack_st_X509_EXTENSION>?, n: Int): Int

@CCall("knifunptr_openssl2079_sk_X509_EXTENSION_free")
external fun sk_X509_EXTENSION_free(sk: CValuesRef<stack_st_X509_EXTENSION>?): Unit

@CCall("knifunptr_openssl2080_sk_X509_EXTENSION_zero")
external fun sk_X509_EXTENSION_zero(sk: CValuesRef<stack_st_X509_EXTENSION>?): Unit

@CCall("knifunptr_openssl2081_sk_X509_EXTENSION_delete")
external fun sk_X509_EXTENSION_delete(sk: CValuesRef<stack_st_X509_EXTENSION>?, i: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2082_sk_X509_EXTENSION_delete_ptr")
external fun sk_X509_EXTENSION_delete_ptr(
    sk: CValuesRef<stack_st_X509_EXTENSION>?,
    ptr: CValuesRef<X509_EXTENSION>?
): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2083_sk_X509_EXTENSION_push")
external fun sk_X509_EXTENSION_push(sk: CValuesRef<stack_st_X509_EXTENSION>?, ptr: CValuesRef<X509_EXTENSION>?): Int

@CCall("knifunptr_openssl2084_sk_X509_EXTENSION_unshift")
external fun sk_X509_EXTENSION_unshift(sk: CValuesRef<stack_st_X509_EXTENSION>?, ptr: CValuesRef<X509_EXTENSION>?): Int

@CCall("knifunptr_openssl2085_sk_X509_EXTENSION_pop")
external fun sk_X509_EXTENSION_pop(sk: CValuesRef<stack_st_X509_EXTENSION>?): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2086_sk_X509_EXTENSION_shift")
external fun sk_X509_EXTENSION_shift(sk: CValuesRef<stack_st_X509_EXTENSION>?): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2087_sk_X509_EXTENSION_pop_free")
external fun sk_X509_EXTENSION_pop_free(
    sk: CValuesRef<stack_st_X509_EXTENSION>?,
    freefunc: sk_X509_EXTENSION_freefunc?
): Unit

@CCall("knifunptr_openssl2088_sk_X509_EXTENSION_insert")
external fun sk_X509_EXTENSION_insert(
    sk: CValuesRef<stack_st_X509_EXTENSION>?,
    ptr: CValuesRef<X509_EXTENSION>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2089_sk_X509_EXTENSION_set")
external fun sk_X509_EXTENSION_set(
    sk: CValuesRef<stack_st_X509_EXTENSION>?,
    idx: Int,
    ptr: CValuesRef<X509_EXTENSION>?
): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2090_sk_X509_EXTENSION_find")
external fun sk_X509_EXTENSION_find(sk: CValuesRef<stack_st_X509_EXTENSION>?, ptr: CValuesRef<X509_EXTENSION>?): Int

@CCall("knifunptr_openssl2091_sk_X509_EXTENSION_find_ex")
external fun sk_X509_EXTENSION_find_ex(sk: CValuesRef<stack_st_X509_EXTENSION>?, ptr: CValuesRef<X509_EXTENSION>?): Int

@CCall("knifunptr_openssl2092_sk_X509_EXTENSION_sort")
external fun sk_X509_EXTENSION_sort(sk: CValuesRef<stack_st_X509_EXTENSION>?): Unit

@CCall("knifunptr_openssl2093_sk_X509_EXTENSION_is_sorted")
external fun sk_X509_EXTENSION_is_sorted(sk: CValuesRef<stack_st_X509_EXTENSION>?): Int

@CCall("knifunptr_openssl2094_sk_X509_EXTENSION_dup")
external fun sk_X509_EXTENSION_dup(sk: CValuesRef<stack_st_X509_EXTENSION>?): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl2095_sk_X509_EXTENSION_deep_copy")
external fun sk_X509_EXTENSION_deep_copy(
    sk: CValuesRef<stack_st_X509_EXTENSION>?,
    copyfunc: sk_X509_EXTENSION_copyfunc?,
    freefunc: sk_X509_EXTENSION_freefunc?
): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl2096_sk_X509_EXTENSION_set_cmp_func")
external fun sk_X509_EXTENSION_set_cmp_func(
    sk: CValuesRef<stack_st_X509_EXTENSION>?,
    compare: sk_X509_EXTENSION_compfunc?
): sk_X509_EXTENSION_compfunc?

@CCall("knifunptr_openssl2097_sk_X509_ATTRIBUTE_num")
external fun sk_X509_ATTRIBUTE_num(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2098_sk_X509_ATTRIBUTE_value")
external fun sk_X509_ATTRIBUTE_value(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, idx: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2099_sk_X509_ATTRIBUTE_new")
external fun sk_X509_ATTRIBUTE_new(compare: sk_X509_ATTRIBUTE_compfunc?): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2100_sk_X509_ATTRIBUTE_new_null")
external fun sk_X509_ATTRIBUTE_new_null(): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2101_sk_X509_ATTRIBUTE_new_reserve")
external fun sk_X509_ATTRIBUTE_new_reserve(
    compare: sk_X509_ATTRIBUTE_compfunc?,
    n: Int
): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2102_sk_X509_ATTRIBUTE_reserve")
external fun sk_X509_ATTRIBUTE_reserve(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, n: Int): Int

@CCall("knifunptr_openssl2103_sk_X509_ATTRIBUTE_free")
external fun sk_X509_ATTRIBUTE_free(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): Unit

@CCall("knifunptr_openssl2104_sk_X509_ATTRIBUTE_zero")
external fun sk_X509_ATTRIBUTE_zero(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): Unit

@CCall("knifunptr_openssl2105_sk_X509_ATTRIBUTE_delete")
external fun sk_X509_ATTRIBUTE_delete(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, i: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2106_sk_X509_ATTRIBUTE_delete_ptr")
external fun sk_X509_ATTRIBUTE_delete_ptr(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    ptr: CValuesRef<X509_ATTRIBUTE>?
): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2107_sk_X509_ATTRIBUTE_push")
external fun sk_X509_ATTRIBUTE_push(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, ptr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2108_sk_X509_ATTRIBUTE_unshift")
external fun sk_X509_ATTRIBUTE_unshift(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, ptr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2109_sk_X509_ATTRIBUTE_pop")
external fun sk_X509_ATTRIBUTE_pop(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2110_sk_X509_ATTRIBUTE_shift")
external fun sk_X509_ATTRIBUTE_shift(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2111_sk_X509_ATTRIBUTE_pop_free")
external fun sk_X509_ATTRIBUTE_pop_free(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    freefunc: sk_X509_ATTRIBUTE_freefunc?
): Unit

@CCall("knifunptr_openssl2112_sk_X509_ATTRIBUTE_insert")
external fun sk_X509_ATTRIBUTE_insert(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    ptr: CValuesRef<X509_ATTRIBUTE>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2113_sk_X509_ATTRIBUTE_set")
external fun sk_X509_ATTRIBUTE_set(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    idx: Int,
    ptr: CValuesRef<X509_ATTRIBUTE>?
): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2114_sk_X509_ATTRIBUTE_find")
external fun sk_X509_ATTRIBUTE_find(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, ptr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2115_sk_X509_ATTRIBUTE_find_ex")
external fun sk_X509_ATTRIBUTE_find_ex(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?, ptr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2116_sk_X509_ATTRIBUTE_sort")
external fun sk_X509_ATTRIBUTE_sort(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): Unit

@CCall("knifunptr_openssl2117_sk_X509_ATTRIBUTE_is_sorted")
external fun sk_X509_ATTRIBUTE_is_sorted(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2118_sk_X509_ATTRIBUTE_dup")
external fun sk_X509_ATTRIBUTE_dup(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2119_sk_X509_ATTRIBUTE_deep_copy")
external fun sk_X509_ATTRIBUTE_deep_copy(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    copyfunc: sk_X509_ATTRIBUTE_copyfunc?,
    freefunc: sk_X509_ATTRIBUTE_freefunc?
): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2120_sk_X509_ATTRIBUTE_set_cmp_func")
external fun sk_X509_ATTRIBUTE_set_cmp_func(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    compare: sk_X509_ATTRIBUTE_compfunc?
): sk_X509_ATTRIBUTE_compfunc?

@CCall("knifunptr_openssl2121_sk_X509_num")
external fun sk_X509_num(sk: CValuesRef<stack_st_X509>?): Int

@CCall("knifunptr_openssl2122_sk_X509_value")
external fun sk_X509_value(sk: CValuesRef<stack_st_X509>?, idx: Int): CPointer<X509>?

@CCall("knifunptr_openssl2123_sk_X509_new")
external fun sk_X509_new(compare: sk_X509_compfunc?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2124_sk_X509_new_null")
external fun sk_X509_new_null(): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2125_sk_X509_new_reserve")
external fun sk_X509_new_reserve(compare: sk_X509_compfunc?, n: Int): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2126_sk_X509_reserve")
external fun sk_X509_reserve(sk: CValuesRef<stack_st_X509>?, n: Int): Int

@CCall("knifunptr_openssl2127_sk_X509_free")
external fun sk_X509_free(sk: CValuesRef<stack_st_X509>?): Unit

@CCall("knifunptr_openssl2128_sk_X509_zero")
external fun sk_X509_zero(sk: CValuesRef<stack_st_X509>?): Unit

@CCall("knifunptr_openssl2129_sk_X509_delete")
external fun sk_X509_delete(sk: CValuesRef<stack_st_X509>?, i: Int): CPointer<X509>?

@CCall("knifunptr_openssl2130_sk_X509_delete_ptr")
external fun sk_X509_delete_ptr(sk: CValuesRef<stack_st_X509>?, ptr: CValuesRef<X509>?): CPointer<X509>?

@CCall("knifunptr_openssl2131_sk_X509_push")
external fun sk_X509_push(sk: CValuesRef<stack_st_X509>?, ptr: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2132_sk_X509_unshift")
external fun sk_X509_unshift(sk: CValuesRef<stack_st_X509>?, ptr: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2133_sk_X509_pop")
external fun sk_X509_pop(sk: CValuesRef<stack_st_X509>?): CPointer<X509>?

@CCall("knifunptr_openssl2134_sk_X509_shift")
external fun sk_X509_shift(sk: CValuesRef<stack_st_X509>?): CPointer<X509>?

@CCall("knifunptr_openssl2135_sk_X509_pop_free")
external fun sk_X509_pop_free(sk: CValuesRef<stack_st_X509>?, freefunc: sk_X509_freefunc?): Unit

@CCall("knifunptr_openssl2136_sk_X509_insert")
external fun sk_X509_insert(sk: CValuesRef<stack_st_X509>?, ptr: CValuesRef<X509>?, idx: Int): Int

@CCall("knifunptr_openssl2137_sk_X509_set")
external fun sk_X509_set(sk: CValuesRef<stack_st_X509>?, idx: Int, ptr: CValuesRef<X509>?): CPointer<X509>?

@CCall("knifunptr_openssl2138_sk_X509_find")
external fun sk_X509_find(sk: CValuesRef<stack_st_X509>?, ptr: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2139_sk_X509_find_ex")
external fun sk_X509_find_ex(sk: CValuesRef<stack_st_X509>?, ptr: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2140_sk_X509_sort")
external fun sk_X509_sort(sk: CValuesRef<stack_st_X509>?): Unit

@CCall("knifunptr_openssl2141_sk_X509_is_sorted")
external fun sk_X509_is_sorted(sk: CValuesRef<stack_st_X509>?): Int

@CCall("knifunptr_openssl2142_sk_X509_dup")
external fun sk_X509_dup(sk: CValuesRef<stack_st_X509>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2143_sk_X509_deep_copy")
external fun sk_X509_deep_copy(
    sk: CValuesRef<stack_st_X509>?,
    copyfunc: sk_X509_copyfunc?,
    freefunc: sk_X509_freefunc?
): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2144_sk_X509_set_cmp_func")
external fun sk_X509_set_cmp_func(sk: CValuesRef<stack_st_X509>?, compare: sk_X509_compfunc?): sk_X509_compfunc?

@CCall("knifunptr_openssl2145_sk_X509_TRUST_num")
external fun sk_X509_TRUST_num(sk: CValuesRef<stack_st_X509_TRUST>?): Int

@CCall("knifunptr_openssl2146_sk_X509_TRUST_value")
external fun sk_X509_TRUST_value(sk: CValuesRef<stack_st_X509_TRUST>?, idx: Int): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl2147_sk_X509_TRUST_new")
external fun sk_X509_TRUST_new(compare: sk_X509_TRUST_compfunc?): CPointer<stack_st_X509_TRUST>?

@CCall("knifunptr_openssl2148_sk_X509_TRUST_new_null")
external fun sk_X509_TRUST_new_null(): CPointer<stack_st_X509_TRUST>?

@CCall("knifunptr_openssl2149_sk_X509_TRUST_new_reserve")
external fun sk_X509_TRUST_new_reserve(compare: sk_X509_TRUST_compfunc?, n: Int): CPointer<stack_st_X509_TRUST>?

@CCall("knifunptr_openssl2150_sk_X509_TRUST_reserve")
external fun sk_X509_TRUST_reserve(sk: CValuesRef<stack_st_X509_TRUST>?, n: Int): Int

@CCall("knifunptr_openssl2151_sk_X509_TRUST_free")
external fun sk_X509_TRUST_free(sk: CValuesRef<stack_st_X509_TRUST>?): Unit

@CCall("knifunptr_openssl2152_sk_X509_TRUST_zero")
external fun sk_X509_TRUST_zero(sk: CValuesRef<stack_st_X509_TRUST>?): Unit

@CCall("knifunptr_openssl2153_sk_X509_TRUST_delete")
external fun sk_X509_TRUST_delete(sk: CValuesRef<stack_st_X509_TRUST>?, i: Int): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl2154_sk_X509_TRUST_delete_ptr")
external fun sk_X509_TRUST_delete_ptr(
    sk: CValuesRef<stack_st_X509_TRUST>?,
    ptr: CValuesRef<X509_TRUST>?
): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl2155_sk_X509_TRUST_push")
external fun sk_X509_TRUST_push(sk: CValuesRef<stack_st_X509_TRUST>?, ptr: CValuesRef<X509_TRUST>?): Int

@CCall("knifunptr_openssl2156_sk_X509_TRUST_unshift")
external fun sk_X509_TRUST_unshift(sk: CValuesRef<stack_st_X509_TRUST>?, ptr: CValuesRef<X509_TRUST>?): Int

@CCall("knifunptr_openssl2157_sk_X509_TRUST_pop")
external fun sk_X509_TRUST_pop(sk: CValuesRef<stack_st_X509_TRUST>?): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl2158_sk_X509_TRUST_shift")
external fun sk_X509_TRUST_shift(sk: CValuesRef<stack_st_X509_TRUST>?): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl2159_sk_X509_TRUST_pop_free")
external fun sk_X509_TRUST_pop_free(sk: CValuesRef<stack_st_X509_TRUST>?, freefunc: sk_X509_TRUST_freefunc?): Unit

@CCall("knifunptr_openssl2160_sk_X509_TRUST_insert")
external fun sk_X509_TRUST_insert(sk: CValuesRef<stack_st_X509_TRUST>?, ptr: CValuesRef<X509_TRUST>?, idx: Int): Int

@CCall("knifunptr_openssl2161_sk_X509_TRUST_set")
external fun sk_X509_TRUST_set(
    sk: CValuesRef<stack_st_X509_TRUST>?,
    idx: Int,
    ptr: CValuesRef<X509_TRUST>?
): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl2162_sk_X509_TRUST_find")
external fun sk_X509_TRUST_find(sk: CValuesRef<stack_st_X509_TRUST>?, ptr: CValuesRef<X509_TRUST>?): Int

@CCall("knifunptr_openssl2163_sk_X509_TRUST_find_ex")
external fun sk_X509_TRUST_find_ex(sk: CValuesRef<stack_st_X509_TRUST>?, ptr: CValuesRef<X509_TRUST>?): Int

@CCall("knifunptr_openssl2164_sk_X509_TRUST_sort")
external fun sk_X509_TRUST_sort(sk: CValuesRef<stack_st_X509_TRUST>?): Unit

@CCall("knifunptr_openssl2165_sk_X509_TRUST_is_sorted")
external fun sk_X509_TRUST_is_sorted(sk: CValuesRef<stack_st_X509_TRUST>?): Int

@CCall("knifunptr_openssl2166_sk_X509_TRUST_dup")
external fun sk_X509_TRUST_dup(sk: CValuesRef<stack_st_X509_TRUST>?): CPointer<stack_st_X509_TRUST>?

@CCall("knifunptr_openssl2167_sk_X509_TRUST_deep_copy")
external fun sk_X509_TRUST_deep_copy(
    sk: CValuesRef<stack_st_X509_TRUST>?,
    copyfunc: sk_X509_TRUST_copyfunc?,
    freefunc: sk_X509_TRUST_freefunc?
): CPointer<stack_st_X509_TRUST>?

@CCall("knifunptr_openssl2168_sk_X509_TRUST_set_cmp_func")
external fun sk_X509_TRUST_set_cmp_func(
    sk: CValuesRef<stack_st_X509_TRUST>?,
    compare: sk_X509_TRUST_compfunc?
): sk_X509_TRUST_compfunc?

@CCall("knifunptr_openssl2169_sk_X509_REVOKED_num")
external fun sk_X509_REVOKED_num(sk: CValuesRef<stack_st_X509_REVOKED>?): Int

@CCall("knifunptr_openssl2170_sk_X509_REVOKED_value")
external fun sk_X509_REVOKED_value(sk: CValuesRef<stack_st_X509_REVOKED>?, idx: Int): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2171_sk_X509_REVOKED_new")
external fun sk_X509_REVOKED_new(compare: sk_X509_REVOKED_compfunc?): CPointer<stack_st_X509_REVOKED>?

@CCall("knifunptr_openssl2172_sk_X509_REVOKED_new_null")
external fun sk_X509_REVOKED_new_null(): CPointer<stack_st_X509_REVOKED>?

@CCall("knifunptr_openssl2173_sk_X509_REVOKED_new_reserve")
external fun sk_X509_REVOKED_new_reserve(compare: sk_X509_REVOKED_compfunc?, n: Int): CPointer<stack_st_X509_REVOKED>?

@CCall("knifunptr_openssl2174_sk_X509_REVOKED_reserve")
external fun sk_X509_REVOKED_reserve(sk: CValuesRef<stack_st_X509_REVOKED>?, n: Int): Int

@CCall("knifunptr_openssl2175_sk_X509_REVOKED_free")
external fun sk_X509_REVOKED_free(sk: CValuesRef<stack_st_X509_REVOKED>?): Unit

@CCall("knifunptr_openssl2176_sk_X509_REVOKED_zero")
external fun sk_X509_REVOKED_zero(sk: CValuesRef<stack_st_X509_REVOKED>?): Unit

@CCall("knifunptr_openssl2177_sk_X509_REVOKED_delete")
external fun sk_X509_REVOKED_delete(sk: CValuesRef<stack_st_X509_REVOKED>?, i: Int): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2178_sk_X509_REVOKED_delete_ptr")
external fun sk_X509_REVOKED_delete_ptr(
    sk: CValuesRef<stack_st_X509_REVOKED>?,
    ptr: CValuesRef<X509_REVOKED>?
): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2179_sk_X509_REVOKED_push")
external fun sk_X509_REVOKED_push(sk: CValuesRef<stack_st_X509_REVOKED>?, ptr: CValuesRef<X509_REVOKED>?): Int

@CCall("knifunptr_openssl2180_sk_X509_REVOKED_unshift")
external fun sk_X509_REVOKED_unshift(sk: CValuesRef<stack_st_X509_REVOKED>?, ptr: CValuesRef<X509_REVOKED>?): Int

@CCall("knifunptr_openssl2181_sk_X509_REVOKED_pop")
external fun sk_X509_REVOKED_pop(sk: CValuesRef<stack_st_X509_REVOKED>?): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2182_sk_X509_REVOKED_shift")
external fun sk_X509_REVOKED_shift(sk: CValuesRef<stack_st_X509_REVOKED>?): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2183_sk_X509_REVOKED_pop_free")
external fun sk_X509_REVOKED_pop_free(sk: CValuesRef<stack_st_X509_REVOKED>?, freefunc: sk_X509_REVOKED_freefunc?): Unit

@CCall("knifunptr_openssl2184_sk_X509_REVOKED_insert")
external fun sk_X509_REVOKED_insert(
    sk: CValuesRef<stack_st_X509_REVOKED>?,
    ptr: CValuesRef<X509_REVOKED>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2185_sk_X509_REVOKED_set")
external fun sk_X509_REVOKED_set(
    sk: CValuesRef<stack_st_X509_REVOKED>?,
    idx: Int,
    ptr: CValuesRef<X509_REVOKED>?
): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2186_sk_X509_REVOKED_find")
external fun sk_X509_REVOKED_find(sk: CValuesRef<stack_st_X509_REVOKED>?, ptr: CValuesRef<X509_REVOKED>?): Int

@CCall("knifunptr_openssl2187_sk_X509_REVOKED_find_ex")
external fun sk_X509_REVOKED_find_ex(sk: CValuesRef<stack_st_X509_REVOKED>?, ptr: CValuesRef<X509_REVOKED>?): Int

@CCall("knifunptr_openssl2188_sk_X509_REVOKED_sort")
external fun sk_X509_REVOKED_sort(sk: CValuesRef<stack_st_X509_REVOKED>?): Unit

@CCall("knifunptr_openssl2189_sk_X509_REVOKED_is_sorted")
external fun sk_X509_REVOKED_is_sorted(sk: CValuesRef<stack_st_X509_REVOKED>?): Int

@CCall("knifunptr_openssl2190_sk_X509_REVOKED_dup")
external fun sk_X509_REVOKED_dup(sk: CValuesRef<stack_st_X509_REVOKED>?): CPointer<stack_st_X509_REVOKED>?

@CCall("knifunptr_openssl2191_sk_X509_REVOKED_deep_copy")
external fun sk_X509_REVOKED_deep_copy(
    sk: CValuesRef<stack_st_X509_REVOKED>?,
    copyfunc: sk_X509_REVOKED_copyfunc?,
    freefunc: sk_X509_REVOKED_freefunc?
): CPointer<stack_st_X509_REVOKED>?

@CCall("knifunptr_openssl2192_sk_X509_REVOKED_set_cmp_func")
external fun sk_X509_REVOKED_set_cmp_func(
    sk: CValuesRef<stack_st_X509_REVOKED>?,
    compare: sk_X509_REVOKED_compfunc?
): sk_X509_REVOKED_compfunc?

@CCall("knifunptr_openssl2193_sk_X509_CRL_num")
external fun sk_X509_CRL_num(sk: CValuesRef<stack_st_X509_CRL>?): Int

@CCall("knifunptr_openssl2194_sk_X509_CRL_value")
external fun sk_X509_CRL_value(sk: CValuesRef<stack_st_X509_CRL>?, idx: Int): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2195_sk_X509_CRL_new")
external fun sk_X509_CRL_new(compare: sk_X509_CRL_compfunc?): CPointer<stack_st_X509_CRL>?

@CCall("knifunptr_openssl2196_sk_X509_CRL_new_null")
external fun sk_X509_CRL_new_null(): CPointer<stack_st_X509_CRL>?

@CCall("knifunptr_openssl2197_sk_X509_CRL_new_reserve")
external fun sk_X509_CRL_new_reserve(compare: sk_X509_CRL_compfunc?, n: Int): CPointer<stack_st_X509_CRL>?

@CCall("knifunptr_openssl2198_sk_X509_CRL_reserve")
external fun sk_X509_CRL_reserve(sk: CValuesRef<stack_st_X509_CRL>?, n: Int): Int

@CCall("knifunptr_openssl2199_sk_X509_CRL_free")
external fun sk_X509_CRL_free(sk: CValuesRef<stack_st_X509_CRL>?): Unit

@CCall("knifunptr_openssl2200_sk_X509_CRL_zero")
external fun sk_X509_CRL_zero(sk: CValuesRef<stack_st_X509_CRL>?): Unit

@CCall("knifunptr_openssl2201_sk_X509_CRL_delete")
external fun sk_X509_CRL_delete(sk: CValuesRef<stack_st_X509_CRL>?, i: Int): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2202_sk_X509_CRL_delete_ptr")
external fun sk_X509_CRL_delete_ptr(sk: CValuesRef<stack_st_X509_CRL>?, ptr: CValuesRef<X509_CRL>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2203_sk_X509_CRL_push")
external fun sk_X509_CRL_push(sk: CValuesRef<stack_st_X509_CRL>?, ptr: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2204_sk_X509_CRL_unshift")
external fun sk_X509_CRL_unshift(sk: CValuesRef<stack_st_X509_CRL>?, ptr: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2205_sk_X509_CRL_pop")
external fun sk_X509_CRL_pop(sk: CValuesRef<stack_st_X509_CRL>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2206_sk_X509_CRL_shift")
external fun sk_X509_CRL_shift(sk: CValuesRef<stack_st_X509_CRL>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2207_sk_X509_CRL_pop_free")
external fun sk_X509_CRL_pop_free(sk: CValuesRef<stack_st_X509_CRL>?, freefunc: sk_X509_CRL_freefunc?): Unit

@CCall("knifunptr_openssl2208_sk_X509_CRL_insert")
external fun sk_X509_CRL_insert(sk: CValuesRef<stack_st_X509_CRL>?, ptr: CValuesRef<X509_CRL>?, idx: Int): Int

@CCall("knifunptr_openssl2209_sk_X509_CRL_set")
external fun sk_X509_CRL_set(
    sk: CValuesRef<stack_st_X509_CRL>?,
    idx: Int,
    ptr: CValuesRef<X509_CRL>?
): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2210_sk_X509_CRL_find")
external fun sk_X509_CRL_find(sk: CValuesRef<stack_st_X509_CRL>?, ptr: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2211_sk_X509_CRL_find_ex")
external fun sk_X509_CRL_find_ex(sk: CValuesRef<stack_st_X509_CRL>?, ptr: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2212_sk_X509_CRL_sort")
external fun sk_X509_CRL_sort(sk: CValuesRef<stack_st_X509_CRL>?): Unit

@CCall("knifunptr_openssl2213_sk_X509_CRL_is_sorted")
external fun sk_X509_CRL_is_sorted(sk: CValuesRef<stack_st_X509_CRL>?): Int

@CCall("knifunptr_openssl2214_sk_X509_CRL_dup")
external fun sk_X509_CRL_dup(sk: CValuesRef<stack_st_X509_CRL>?): CPointer<stack_st_X509_CRL>?

@CCall("knifunptr_openssl2215_sk_X509_CRL_deep_copy")
external fun sk_X509_CRL_deep_copy(
    sk: CValuesRef<stack_st_X509_CRL>?,
    copyfunc: sk_X509_CRL_copyfunc?,
    freefunc: sk_X509_CRL_freefunc?
): CPointer<stack_st_X509_CRL>?

@CCall("knifunptr_openssl2216_sk_X509_CRL_set_cmp_func")
external fun sk_X509_CRL_set_cmp_func(
    sk: CValuesRef<stack_st_X509_CRL>?,
    compare: sk_X509_CRL_compfunc?
): sk_X509_CRL_compfunc?

@CCall("knifunptr_openssl2217_sk_X509_INFO_num")
external fun sk_X509_INFO_num(sk: CValuesRef<stack_st_X509_INFO>?): Int

@CCall("knifunptr_openssl2218_sk_X509_INFO_value")
external fun sk_X509_INFO_value(sk: CValuesRef<stack_st_X509_INFO>?, idx: Int): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2219_sk_X509_INFO_new")
external fun sk_X509_INFO_new(compare: sk_X509_INFO_compfunc?): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl2220_sk_X509_INFO_new_null")
external fun sk_X509_INFO_new_null(): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl2221_sk_X509_INFO_new_reserve")
external fun sk_X509_INFO_new_reserve(compare: sk_X509_INFO_compfunc?, n: Int): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl2222_sk_X509_INFO_reserve")
external fun sk_X509_INFO_reserve(sk: CValuesRef<stack_st_X509_INFO>?, n: Int): Int

@CCall("knifunptr_openssl2223_sk_X509_INFO_free")
external fun sk_X509_INFO_free(sk: CValuesRef<stack_st_X509_INFO>?): Unit

@CCall("knifunptr_openssl2224_sk_X509_INFO_zero")
external fun sk_X509_INFO_zero(sk: CValuesRef<stack_st_X509_INFO>?): Unit

@CCall("knifunptr_openssl2225_sk_X509_INFO_delete")
external fun sk_X509_INFO_delete(sk: CValuesRef<stack_st_X509_INFO>?, i: Int): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2226_sk_X509_INFO_delete_ptr")
external fun sk_X509_INFO_delete_ptr(
    sk: CValuesRef<stack_st_X509_INFO>?,
    ptr: CValuesRef<X509_INFO>?
): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2227_sk_X509_INFO_push")
external fun sk_X509_INFO_push(sk: CValuesRef<stack_st_X509_INFO>?, ptr: CValuesRef<X509_INFO>?): Int

@CCall("knifunptr_openssl2228_sk_X509_INFO_unshift")
external fun sk_X509_INFO_unshift(sk: CValuesRef<stack_st_X509_INFO>?, ptr: CValuesRef<X509_INFO>?): Int

@CCall("knifunptr_openssl2229_sk_X509_INFO_pop")
external fun sk_X509_INFO_pop(sk: CValuesRef<stack_st_X509_INFO>?): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2230_sk_X509_INFO_shift")
external fun sk_X509_INFO_shift(sk: CValuesRef<stack_st_X509_INFO>?): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2231_sk_X509_INFO_pop_free")
external fun sk_X509_INFO_pop_free(sk: CValuesRef<stack_st_X509_INFO>?, freefunc: sk_X509_INFO_freefunc?): Unit

@CCall("knifunptr_openssl2232_sk_X509_INFO_insert")
external fun sk_X509_INFO_insert(sk: CValuesRef<stack_st_X509_INFO>?, ptr: CValuesRef<X509_INFO>?, idx: Int): Int

@CCall("knifunptr_openssl2233_sk_X509_INFO_set")
external fun sk_X509_INFO_set(
    sk: CValuesRef<stack_st_X509_INFO>?,
    idx: Int,
    ptr: CValuesRef<X509_INFO>?
): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2234_sk_X509_INFO_find")
external fun sk_X509_INFO_find(sk: CValuesRef<stack_st_X509_INFO>?, ptr: CValuesRef<X509_INFO>?): Int

@CCall("knifunptr_openssl2235_sk_X509_INFO_find_ex")
external fun sk_X509_INFO_find_ex(sk: CValuesRef<stack_st_X509_INFO>?, ptr: CValuesRef<X509_INFO>?): Int

@CCall("knifunptr_openssl2236_sk_X509_INFO_sort")
external fun sk_X509_INFO_sort(sk: CValuesRef<stack_st_X509_INFO>?): Unit

@CCall("knifunptr_openssl2237_sk_X509_INFO_is_sorted")
external fun sk_X509_INFO_is_sorted(sk: CValuesRef<stack_st_X509_INFO>?): Int

@CCall("knifunptr_openssl2238_sk_X509_INFO_dup")
external fun sk_X509_INFO_dup(sk: CValuesRef<stack_st_X509_INFO>?): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl2239_sk_X509_INFO_deep_copy")
external fun sk_X509_INFO_deep_copy(
    sk: CValuesRef<stack_st_X509_INFO>?,
    copyfunc: sk_X509_INFO_copyfunc?,
    freefunc: sk_X509_INFO_freefunc?
): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl2240_sk_X509_INFO_set_cmp_func")
external fun sk_X509_INFO_set_cmp_func(
    sk: CValuesRef<stack_st_X509_INFO>?,
    compare: sk_X509_INFO_compfunc?
): sk_X509_INFO_compfunc?

@CCall("knifunptr_openssl2241_OPENSSL_LH_error")
external fun OPENSSL_LH_error(lh: CValuesRef<OPENSSL_LHASH>?): Int

@CCall("knifunptr_openssl2242_OPENSSL_LH_new")
external fun OPENSSL_LH_new(h: OPENSSL_LH_HASHFUNC?, c: OPENSSL_LH_COMPFUNC?): CPointer<OPENSSL_LHASH>?

@CCall("knifunptr_openssl2243_OPENSSL_LH_free")
external fun OPENSSL_LH_free(lh: CValuesRef<OPENSSL_LHASH>?): Unit

@CCall("knifunptr_openssl2244_OPENSSL_LH_insert")
external fun OPENSSL_LH_insert(lh: CValuesRef<OPENSSL_LHASH>?, data: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl2245_OPENSSL_LH_delete")
external fun OPENSSL_LH_delete(lh: CValuesRef<OPENSSL_LHASH>?, data: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl2246_OPENSSL_LH_retrieve")
external fun OPENSSL_LH_retrieve(lh: CValuesRef<OPENSSL_LHASH>?, data: CValuesRef<*>?): COpaquePointer?

@CCall("knifunptr_openssl2247_OPENSSL_LH_doall")
external fun OPENSSL_LH_doall(lh: CValuesRef<OPENSSL_LHASH>?, func: OPENSSL_LH_DOALL_FUNC?): Unit

@CCall("knifunptr_openssl2248_OPENSSL_LH_doall_arg")
external fun OPENSSL_LH_doall_arg(
    lh: CValuesRef<OPENSSL_LHASH>?,
    func: OPENSSL_LH_DOALL_FUNCARG?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl2249_OPENSSL_LH_strhash")
external fun OPENSSL_LH_strhash(@CCall.CString c: String?): ULong

@CCall("knifunptr_openssl2250_OPENSSL_LH_num_items")
external fun OPENSSL_LH_num_items(lh: CValuesRef<OPENSSL_LHASH>?): ULong

@CCall("knifunptr_openssl2251_OPENSSL_LH_get_down_load")
external fun OPENSSL_LH_get_down_load(lh: CValuesRef<OPENSSL_LHASH>?): ULong

@CCall("knifunptr_openssl2252_OPENSSL_LH_set_down_load")
external fun OPENSSL_LH_set_down_load(lh: CValuesRef<OPENSSL_LHASH>?, down_load: ULong): Unit

@CCall("knifunptr_openssl2253_OPENSSL_LH_stats")
external fun OPENSSL_LH_stats(lh: CValuesRef<OPENSSL_LHASH>?, fp: CValuesRef<FILE>?): Unit

@CCall("knifunptr_openssl2254_OPENSSL_LH_node_stats")
external fun OPENSSL_LH_node_stats(lh: CValuesRef<OPENSSL_LHASH>?, fp: CValuesRef<FILE>?): Unit

@CCall("knifunptr_openssl2255_OPENSSL_LH_node_usage_stats")
external fun OPENSSL_LH_node_usage_stats(lh: CValuesRef<OPENSSL_LHASH>?, fp: CValuesRef<FILE>?): Unit

@CCall("knifunptr_openssl2256_OPENSSL_LH_stats_bio")
external fun OPENSSL_LH_stats_bio(lh: CValuesRef<OPENSSL_LHASH>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2257_OPENSSL_LH_node_stats_bio")
external fun OPENSSL_LH_node_stats_bio(lh: CValuesRef<OPENSSL_LHASH>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2258_OPENSSL_LH_node_usage_stats_bio")
external fun OPENSSL_LH_node_usage_stats_bio(lh: CValuesRef<OPENSSL_LHASH>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2259_lh_OPENSSL_STRING_new")
external fun lh_OPENSSL_STRING_new(
    hfn: CPointer<CFunction<(CPointer<OPENSSL_STRINGVar>?) -> ULong>>?,
    cfn: CPointer<CFunction<(CPointer<OPENSSL_STRINGVar>?, CPointer<OPENSSL_STRINGVar>?) -> Int>>?
): CPointer<lhash_st_OPENSSL_STRING>?

@CCall("knifunptr_openssl2260_lh_OPENSSL_STRING_free")
external fun lh_OPENSSL_STRING_free(lh: CValuesRef<lhash_st_OPENSSL_STRING>?): Unit

@CCall("knifunptr_openssl2261_lh_OPENSSL_STRING_insert")
external fun lh_OPENSSL_STRING_insert(
    lh: CValuesRef<lhash_st_OPENSSL_STRING>?,
    d: CValuesRef<OPENSSL_STRINGVar>?
): CPointer<OPENSSL_STRINGVar>?

@CCall("knifunptr_openssl2262_lh_OPENSSL_STRING_delete")
external fun lh_OPENSSL_STRING_delete(
    lh: CValuesRef<lhash_st_OPENSSL_STRING>?,
    d: CValuesRef<OPENSSL_STRINGVar>?
): CPointer<OPENSSL_STRINGVar>?

@CCall("knifunptr_openssl2263_lh_OPENSSL_STRING_retrieve")
external fun lh_OPENSSL_STRING_retrieve(
    lh: CValuesRef<lhash_st_OPENSSL_STRING>?,
    d: CValuesRef<OPENSSL_STRINGVar>?
): CPointer<OPENSSL_STRINGVar>?

@CCall("knifunptr_openssl2264_lh_OPENSSL_STRING_error")
external fun lh_OPENSSL_STRING_error(lh: CValuesRef<lhash_st_OPENSSL_STRING>?): Int

@CCall("knifunptr_openssl2265_lh_OPENSSL_STRING_num_items")
external fun lh_OPENSSL_STRING_num_items(lh: CValuesRef<lhash_st_OPENSSL_STRING>?): ULong

@CCall("knifunptr_openssl2266_lh_OPENSSL_STRING_node_stats_bio")
external fun lh_OPENSSL_STRING_node_stats_bio(lh: CValuesRef<lhash_st_OPENSSL_STRING>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2267_lh_OPENSSL_STRING_node_usage_stats_bio")
external fun lh_OPENSSL_STRING_node_usage_stats_bio(
    lh: CValuesRef<lhash_st_OPENSSL_STRING>?,
    out: CValuesRef<BIO>?
): Unit

@CCall("knifunptr_openssl2268_lh_OPENSSL_STRING_stats_bio")
external fun lh_OPENSSL_STRING_stats_bio(lh: CValuesRef<lhash_st_OPENSSL_STRING>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2269_lh_OPENSSL_STRING_get_down_load")
external fun lh_OPENSSL_STRING_get_down_load(lh: CValuesRef<lhash_st_OPENSSL_STRING>?): ULong

@CCall("knifunptr_openssl2270_lh_OPENSSL_STRING_set_down_load")
external fun lh_OPENSSL_STRING_set_down_load(lh: CValuesRef<lhash_st_OPENSSL_STRING>?, dl: ULong): Unit

@CCall("knifunptr_openssl2271_lh_OPENSSL_STRING_doall")
external fun lh_OPENSSL_STRING_doall(
    lh: CValuesRef<lhash_st_OPENSSL_STRING>?,
    doall: CPointer<CFunction<(CPointer<OPENSSL_STRINGVar>?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl2272_lh_OPENSSL_CSTRING_new")
external fun lh_OPENSSL_CSTRING_new(
    hfn: CPointer<CFunction<(CPointer<OPENSSL_CSTRINGVar>?) -> ULong>>?,
    cfn: CPointer<CFunction<(CPointer<OPENSSL_CSTRINGVar>?, CPointer<OPENSSL_CSTRINGVar>?) -> Int>>?
): CPointer<lhash_st_OPENSSL_CSTRING>?

@CCall("knifunptr_openssl2273_lh_OPENSSL_CSTRING_free")
external fun lh_OPENSSL_CSTRING_free(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?): Unit

@CCall("knifunptr_openssl2274_lh_OPENSSL_CSTRING_insert")
external fun lh_OPENSSL_CSTRING_insert(
    lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?,
    d: CValuesRef<OPENSSL_CSTRINGVar>?
): CPointer<OPENSSL_CSTRINGVar>?

@CCall("knifunptr_openssl2275_lh_OPENSSL_CSTRING_delete")
external fun lh_OPENSSL_CSTRING_delete(
    lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?,
    d: CValuesRef<OPENSSL_CSTRINGVar>?
): CPointer<OPENSSL_CSTRINGVar>?

@CCall("knifunptr_openssl2276_lh_OPENSSL_CSTRING_retrieve")
external fun lh_OPENSSL_CSTRING_retrieve(
    lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?,
    d: CValuesRef<OPENSSL_CSTRINGVar>?
): CPointer<OPENSSL_CSTRINGVar>?

@CCall("knifunptr_openssl2277_lh_OPENSSL_CSTRING_error")
external fun lh_OPENSSL_CSTRING_error(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?): Int

@CCall("knifunptr_openssl2278_lh_OPENSSL_CSTRING_num_items")
external fun lh_OPENSSL_CSTRING_num_items(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?): ULong

@CCall("knifunptr_openssl2279_lh_OPENSSL_CSTRING_node_stats_bio")
external fun lh_OPENSSL_CSTRING_node_stats_bio(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2280_lh_OPENSSL_CSTRING_node_usage_stats_bio")
external fun lh_OPENSSL_CSTRING_node_usage_stats_bio(
    lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?,
    out: CValuesRef<BIO>?
): Unit

@CCall("knifunptr_openssl2281_lh_OPENSSL_CSTRING_stats_bio")
external fun lh_OPENSSL_CSTRING_stats_bio(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl2282_lh_OPENSSL_CSTRING_get_down_load")
external fun lh_OPENSSL_CSTRING_get_down_load(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?): ULong

@CCall("knifunptr_openssl2283_lh_OPENSSL_CSTRING_set_down_load")
external fun lh_OPENSSL_CSTRING_set_down_load(lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?, dl: ULong): Unit

@CCall("knifunptr_openssl2284_lh_OPENSSL_CSTRING_doall")
external fun lh_OPENSSL_CSTRING_doall(
    lh: CValuesRef<lhash_st_OPENSSL_CSTRING>?,
    doall: CPointer<CFunction<(CPointer<OPENSSL_CSTRINGVar>?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl2285_sk_X509_LOOKUP_num")
external fun sk_X509_LOOKUP_num(sk: CValuesRef<stack_st_X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2286_sk_X509_LOOKUP_value")
external fun sk_X509_LOOKUP_value(sk: CValuesRef<stack_st_X509_LOOKUP>?, idx: Int): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2287_sk_X509_LOOKUP_new")
external fun sk_X509_LOOKUP_new(compare: sk_X509_LOOKUP_compfunc?): CPointer<stack_st_X509_LOOKUP>?

@CCall("knifunptr_openssl2288_sk_X509_LOOKUP_new_null")
external fun sk_X509_LOOKUP_new_null(): CPointer<stack_st_X509_LOOKUP>?

@CCall("knifunptr_openssl2289_sk_X509_LOOKUP_new_reserve")
external fun sk_X509_LOOKUP_new_reserve(compare: sk_X509_LOOKUP_compfunc?, n: Int): CPointer<stack_st_X509_LOOKUP>?

@CCall("knifunptr_openssl2290_sk_X509_LOOKUP_reserve")
external fun sk_X509_LOOKUP_reserve(sk: CValuesRef<stack_st_X509_LOOKUP>?, n: Int): Int

@CCall("knifunptr_openssl2291_sk_X509_LOOKUP_free")
external fun sk_X509_LOOKUP_free(sk: CValuesRef<stack_st_X509_LOOKUP>?): Unit

@CCall("knifunptr_openssl2292_sk_X509_LOOKUP_zero")
external fun sk_X509_LOOKUP_zero(sk: CValuesRef<stack_st_X509_LOOKUP>?): Unit

@CCall("knifunptr_openssl2293_sk_X509_LOOKUP_delete")
external fun sk_X509_LOOKUP_delete(sk: CValuesRef<stack_st_X509_LOOKUP>?, i: Int): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2294_sk_X509_LOOKUP_delete_ptr")
external fun sk_X509_LOOKUP_delete_ptr(
    sk: CValuesRef<stack_st_X509_LOOKUP>?,
    ptr: CValuesRef<X509_LOOKUP>?
): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2295_sk_X509_LOOKUP_push")
external fun sk_X509_LOOKUP_push(sk: CValuesRef<stack_st_X509_LOOKUP>?, ptr: CValuesRef<X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2296_sk_X509_LOOKUP_unshift")
external fun sk_X509_LOOKUP_unshift(sk: CValuesRef<stack_st_X509_LOOKUP>?, ptr: CValuesRef<X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2297_sk_X509_LOOKUP_pop")
external fun sk_X509_LOOKUP_pop(sk: CValuesRef<stack_st_X509_LOOKUP>?): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2298_sk_X509_LOOKUP_shift")
external fun sk_X509_LOOKUP_shift(sk: CValuesRef<stack_st_X509_LOOKUP>?): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2299_sk_X509_LOOKUP_pop_free")
external fun sk_X509_LOOKUP_pop_free(sk: CValuesRef<stack_st_X509_LOOKUP>?, freefunc: sk_X509_LOOKUP_freefunc?): Unit

@CCall("knifunptr_openssl2300_sk_X509_LOOKUP_insert")
external fun sk_X509_LOOKUP_insert(sk: CValuesRef<stack_st_X509_LOOKUP>?, ptr: CValuesRef<X509_LOOKUP>?, idx: Int): Int

@CCall("knifunptr_openssl2301_sk_X509_LOOKUP_set")
external fun sk_X509_LOOKUP_set(
    sk: CValuesRef<stack_st_X509_LOOKUP>?,
    idx: Int,
    ptr: CValuesRef<X509_LOOKUP>?
): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2302_sk_X509_LOOKUP_find")
external fun sk_X509_LOOKUP_find(sk: CValuesRef<stack_st_X509_LOOKUP>?, ptr: CValuesRef<X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2303_sk_X509_LOOKUP_find_ex")
external fun sk_X509_LOOKUP_find_ex(sk: CValuesRef<stack_st_X509_LOOKUP>?, ptr: CValuesRef<X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2304_sk_X509_LOOKUP_sort")
external fun sk_X509_LOOKUP_sort(sk: CValuesRef<stack_st_X509_LOOKUP>?): Unit

@CCall("knifunptr_openssl2305_sk_X509_LOOKUP_is_sorted")
external fun sk_X509_LOOKUP_is_sorted(sk: CValuesRef<stack_st_X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2306_sk_X509_LOOKUP_dup")
external fun sk_X509_LOOKUP_dup(sk: CValuesRef<stack_st_X509_LOOKUP>?): CPointer<stack_st_X509_LOOKUP>?

@CCall("knifunptr_openssl2307_sk_X509_LOOKUP_deep_copy")
external fun sk_X509_LOOKUP_deep_copy(
    sk: CValuesRef<stack_st_X509_LOOKUP>?,
    copyfunc: sk_X509_LOOKUP_copyfunc?,
    freefunc: sk_X509_LOOKUP_freefunc?
): CPointer<stack_st_X509_LOOKUP>?

@CCall("knifunptr_openssl2308_sk_X509_LOOKUP_set_cmp_func")
external fun sk_X509_LOOKUP_set_cmp_func(
    sk: CValuesRef<stack_st_X509_LOOKUP>?,
    compare: sk_X509_LOOKUP_compfunc?
): sk_X509_LOOKUP_compfunc?

@CCall("knifunptr_openssl2309_sk_X509_OBJECT_num")
external fun sk_X509_OBJECT_num(sk: CValuesRef<stack_st_X509_OBJECT>?): Int

@CCall("knifunptr_openssl2310_sk_X509_OBJECT_value")
external fun sk_X509_OBJECT_value(sk: CValuesRef<stack_st_X509_OBJECT>?, idx: Int): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2311_sk_X509_OBJECT_new")
external fun sk_X509_OBJECT_new(compare: sk_X509_OBJECT_compfunc?): CPointer<stack_st_X509_OBJECT>?

@CCall("knifunptr_openssl2312_sk_X509_OBJECT_new_null")
external fun sk_X509_OBJECT_new_null(): CPointer<stack_st_X509_OBJECT>?

@CCall("knifunptr_openssl2313_sk_X509_OBJECT_new_reserve")
external fun sk_X509_OBJECT_new_reserve(compare: sk_X509_OBJECT_compfunc?, n: Int): CPointer<stack_st_X509_OBJECT>?

@CCall("knifunptr_openssl2314_sk_X509_OBJECT_reserve")
external fun sk_X509_OBJECT_reserve(sk: CValuesRef<stack_st_X509_OBJECT>?, n: Int): Int

@CCall("knifunptr_openssl2315_sk_X509_OBJECT_free")
external fun sk_X509_OBJECT_free(sk: CValuesRef<stack_st_X509_OBJECT>?): Unit

@CCall("knifunptr_openssl2316_sk_X509_OBJECT_zero")
external fun sk_X509_OBJECT_zero(sk: CValuesRef<stack_st_X509_OBJECT>?): Unit

@CCall("knifunptr_openssl2317_sk_X509_OBJECT_delete")
external fun sk_X509_OBJECT_delete(sk: CValuesRef<stack_st_X509_OBJECT>?, i: Int): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2318_sk_X509_OBJECT_delete_ptr")
external fun sk_X509_OBJECT_delete_ptr(
    sk: CValuesRef<stack_st_X509_OBJECT>?,
    ptr: CValuesRef<X509_OBJECT>?
): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2319_sk_X509_OBJECT_push")
external fun sk_X509_OBJECT_push(sk: CValuesRef<stack_st_X509_OBJECT>?, ptr: CValuesRef<X509_OBJECT>?): Int

@CCall("knifunptr_openssl2320_sk_X509_OBJECT_unshift")
external fun sk_X509_OBJECT_unshift(sk: CValuesRef<stack_st_X509_OBJECT>?, ptr: CValuesRef<X509_OBJECT>?): Int

@CCall("knifunptr_openssl2321_sk_X509_OBJECT_pop")
external fun sk_X509_OBJECT_pop(sk: CValuesRef<stack_st_X509_OBJECT>?): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2322_sk_X509_OBJECT_shift")
external fun sk_X509_OBJECT_shift(sk: CValuesRef<stack_st_X509_OBJECT>?): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2323_sk_X509_OBJECT_pop_free")
external fun sk_X509_OBJECT_pop_free(sk: CValuesRef<stack_st_X509_OBJECT>?, freefunc: sk_X509_OBJECT_freefunc?): Unit

@CCall("knifunptr_openssl2324_sk_X509_OBJECT_insert")
external fun sk_X509_OBJECT_insert(sk: CValuesRef<stack_st_X509_OBJECT>?, ptr: CValuesRef<X509_OBJECT>?, idx: Int): Int

@CCall("knifunptr_openssl2325_sk_X509_OBJECT_set")
external fun sk_X509_OBJECT_set(
    sk: CValuesRef<stack_st_X509_OBJECT>?,
    idx: Int,
    ptr: CValuesRef<X509_OBJECT>?
): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2326_sk_X509_OBJECT_find")
external fun sk_X509_OBJECT_find(sk: CValuesRef<stack_st_X509_OBJECT>?, ptr: CValuesRef<X509_OBJECT>?): Int

@CCall("knifunptr_openssl2327_sk_X509_OBJECT_find_ex")
external fun sk_X509_OBJECT_find_ex(sk: CValuesRef<stack_st_X509_OBJECT>?, ptr: CValuesRef<X509_OBJECT>?): Int

@CCall("knifunptr_openssl2328_sk_X509_OBJECT_sort")
external fun sk_X509_OBJECT_sort(sk: CValuesRef<stack_st_X509_OBJECT>?): Unit

@CCall("knifunptr_openssl2329_sk_X509_OBJECT_is_sorted")
external fun sk_X509_OBJECT_is_sorted(sk: CValuesRef<stack_st_X509_OBJECT>?): Int

@CCall("knifunptr_openssl2330_sk_X509_OBJECT_dup")
external fun sk_X509_OBJECT_dup(sk: CValuesRef<stack_st_X509_OBJECT>?): CPointer<stack_st_X509_OBJECT>?

@CCall("knifunptr_openssl2331_sk_X509_OBJECT_deep_copy")
external fun sk_X509_OBJECT_deep_copy(
    sk: CValuesRef<stack_st_X509_OBJECT>?,
    copyfunc: sk_X509_OBJECT_copyfunc?,
    freefunc: sk_X509_OBJECT_freefunc?
): CPointer<stack_st_X509_OBJECT>?

@CCall("knifunptr_openssl2332_sk_X509_OBJECT_set_cmp_func")
external fun sk_X509_OBJECT_set_cmp_func(
    sk: CValuesRef<stack_st_X509_OBJECT>?,
    compare: sk_X509_OBJECT_compfunc?
): sk_X509_OBJECT_compfunc?

@CCall("knifunptr_openssl2333_sk_X509_VERIFY_PARAM_num")
external fun sk_X509_VERIFY_PARAM_num(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2334_sk_X509_VERIFY_PARAM_value")
external fun sk_X509_VERIFY_PARAM_value(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    idx: Int
): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2335_sk_X509_VERIFY_PARAM_new")
external fun sk_X509_VERIFY_PARAM_new(compare: sk_X509_VERIFY_PARAM_compfunc?): CPointer<stack_st_X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2336_sk_X509_VERIFY_PARAM_new_null")
external fun sk_X509_VERIFY_PARAM_new_null(): CPointer<stack_st_X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2337_sk_X509_VERIFY_PARAM_new_reserve")
external fun sk_X509_VERIFY_PARAM_new_reserve(
    compare: sk_X509_VERIFY_PARAM_compfunc?,
    n: Int
): CPointer<stack_st_X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2338_sk_X509_VERIFY_PARAM_reserve")
external fun sk_X509_VERIFY_PARAM_reserve(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?, n: Int): Int

@CCall("knifunptr_openssl2339_sk_X509_VERIFY_PARAM_free")
external fun sk_X509_VERIFY_PARAM_free(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): Unit

@CCall("knifunptr_openssl2340_sk_X509_VERIFY_PARAM_zero")
external fun sk_X509_VERIFY_PARAM_zero(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): Unit

@CCall("knifunptr_openssl2341_sk_X509_VERIFY_PARAM_delete")
external fun sk_X509_VERIFY_PARAM_delete(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    i: Int
): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2342_sk_X509_VERIFY_PARAM_delete_ptr")
external fun sk_X509_VERIFY_PARAM_delete_ptr(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    ptr: CValuesRef<X509_VERIFY_PARAM>?
): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2343_sk_X509_VERIFY_PARAM_push")
external fun sk_X509_VERIFY_PARAM_push(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    ptr: CValuesRef<X509_VERIFY_PARAM>?
): Int

@CCall("knifunptr_openssl2344_sk_X509_VERIFY_PARAM_unshift")
external fun sk_X509_VERIFY_PARAM_unshift(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    ptr: CValuesRef<X509_VERIFY_PARAM>?
): Int

@CCall("knifunptr_openssl2345_sk_X509_VERIFY_PARAM_pop")
external fun sk_X509_VERIFY_PARAM_pop(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2346_sk_X509_VERIFY_PARAM_shift")
external fun sk_X509_VERIFY_PARAM_shift(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2347_sk_X509_VERIFY_PARAM_pop_free")
external fun sk_X509_VERIFY_PARAM_pop_free(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    freefunc: sk_X509_VERIFY_PARAM_freefunc?
): Unit

@CCall("knifunptr_openssl2348_sk_X509_VERIFY_PARAM_insert")
external fun sk_X509_VERIFY_PARAM_insert(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    ptr: CValuesRef<X509_VERIFY_PARAM>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2349_sk_X509_VERIFY_PARAM_set")
external fun sk_X509_VERIFY_PARAM_set(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    idx: Int,
    ptr: CValuesRef<X509_VERIFY_PARAM>?
): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2350_sk_X509_VERIFY_PARAM_find")
external fun sk_X509_VERIFY_PARAM_find(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    ptr: CValuesRef<X509_VERIFY_PARAM>?
): Int

@CCall("knifunptr_openssl2351_sk_X509_VERIFY_PARAM_find_ex")
external fun sk_X509_VERIFY_PARAM_find_ex(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    ptr: CValuesRef<X509_VERIFY_PARAM>?
): Int

@CCall("knifunptr_openssl2352_sk_X509_VERIFY_PARAM_sort")
external fun sk_X509_VERIFY_PARAM_sort(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): Unit

@CCall("knifunptr_openssl2353_sk_X509_VERIFY_PARAM_is_sorted")
external fun sk_X509_VERIFY_PARAM_is_sorted(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2354_sk_X509_VERIFY_PARAM_dup")
external fun sk_X509_VERIFY_PARAM_dup(sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?): CPointer<stack_st_X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2355_sk_X509_VERIFY_PARAM_deep_copy")
external fun sk_X509_VERIFY_PARAM_deep_copy(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    copyfunc: sk_X509_VERIFY_PARAM_copyfunc?,
    freefunc: sk_X509_VERIFY_PARAM_freefunc?
): CPointer<stack_st_X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2356_sk_X509_VERIFY_PARAM_set_cmp_func")
external fun sk_X509_VERIFY_PARAM_set_cmp_func(
    sk: CValuesRef<stack_st_X509_VERIFY_PARAM>?,
    compare: sk_X509_VERIFY_PARAM_compfunc?
): sk_X509_VERIFY_PARAM_compfunc?

@CCall("knifunptr_openssl2357_X509_STORE_set_depth")
external fun X509_STORE_set_depth(store: CValuesRef<X509_STORE>?, depth: Int): Int

@CCall("knifunptr_openssl2358_X509_STORE_CTX_set_depth")
external fun X509_STORE_CTX_set_depth(ctx: CValuesRef<X509_STORE_CTX>?, depth: Int): Unit

@CCall("knifunptr_openssl2359_X509_OBJECT_idx_by_subject")
external fun X509_OBJECT_idx_by_subject(
    h: CValuesRef<stack_st_X509_OBJECT>?,
    type: X509_LOOKUP_TYPE,
    name: CValuesRef<X509_NAME>?
): Int

@CCall("knifunptr_openssl2360_X509_OBJECT_retrieve_by_subject")
external fun X509_OBJECT_retrieve_by_subject(
    h: CValuesRef<stack_st_X509_OBJECT>?,
    type: X509_LOOKUP_TYPE,
    name: CValuesRef<X509_NAME>?
): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2361_X509_OBJECT_retrieve_match")
external fun X509_OBJECT_retrieve_match(
    h: CValuesRef<stack_st_X509_OBJECT>?,
    x: CValuesRef<X509_OBJECT>?
): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2362_X509_OBJECT_up_ref_count")
external fun X509_OBJECT_up_ref_count(a: CValuesRef<X509_OBJECT>?): Int

@CCall("knifunptr_openssl2363_X509_OBJECT_new")
external fun X509_OBJECT_new(): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2364_X509_OBJECT_free")
external fun X509_OBJECT_free(a: CValuesRef<X509_OBJECT>?): Unit

@CCall("knifunptr_openssl2365_X509_OBJECT_get_type")
external fun X509_OBJECT_get_type(a: CValuesRef<X509_OBJECT>?): X509_LOOKUP_TYPE

@CCall("knifunptr_openssl2366_X509_OBJECT_get0_X509")
external fun X509_OBJECT_get0_X509(a: CValuesRef<X509_OBJECT>?): CPointer<X509>?

@CCall("knifunptr_openssl2367_X509_OBJECT_set1_X509")
external fun X509_OBJECT_set1_X509(a: CValuesRef<X509_OBJECT>?, obj: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2368_X509_OBJECT_get0_X509_CRL")
external fun X509_OBJECT_get0_X509_CRL(a: CValuesRef<X509_OBJECT>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2369_X509_OBJECT_set1_X509_CRL")
external fun X509_OBJECT_set1_X509_CRL(a: CValuesRef<X509_OBJECT>?, obj: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2370_X509_STORE_new")
external fun X509_STORE_new(): CPointer<X509_STORE>?

@CCall("knifunptr_openssl2371_X509_STORE_free")
external fun X509_STORE_free(v: CValuesRef<X509_STORE>?): Unit

@CCall("knifunptr_openssl2372_X509_STORE_lock")
external fun X509_STORE_lock(ctx: CValuesRef<X509_STORE>?): Int

@CCall("knifunptr_openssl2373_X509_STORE_unlock")
external fun X509_STORE_unlock(ctx: CValuesRef<X509_STORE>?): Int

@CCall("knifunptr_openssl2374_X509_STORE_up_ref")
external fun X509_STORE_up_ref(v: CValuesRef<X509_STORE>?): Int

@CCall("knifunptr_openssl2375_X509_STORE_get0_objects")
external fun X509_STORE_get0_objects(v: CValuesRef<X509_STORE>?): CPointer<stack_st_X509_OBJECT>?

@CCall("knifunptr_openssl2376_X509_STORE_CTX_get1_certs")
external fun X509_STORE_CTX_get1_certs(
    st: CValuesRef<X509_STORE_CTX>?,
    nm: CValuesRef<X509_NAME>?
): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2377_X509_STORE_CTX_get1_crls")
external fun X509_STORE_CTX_get1_crls(
    st: CValuesRef<X509_STORE_CTX>?,
    nm: CValuesRef<X509_NAME>?
): CPointer<stack_st_X509_CRL>?

@CCall("knifunptr_openssl2378_X509_STORE_set_flags")
external fun X509_STORE_set_flags(ctx: CValuesRef<X509_STORE>?, flags: ULong): Int

@CCall("knifunptr_openssl2379_X509_STORE_set_purpose")
external fun X509_STORE_set_purpose(ctx: CValuesRef<X509_STORE>?, purpose: Int): Int

@CCall("knifunptr_openssl2380_X509_STORE_set_trust")
external fun X509_STORE_set_trust(ctx: CValuesRef<X509_STORE>?, trust: Int): Int

@CCall("knifunptr_openssl2381_X509_STORE_set1_param")
external fun X509_STORE_set1_param(ctx: CValuesRef<X509_STORE>?, pm: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2382_X509_STORE_get0_param")
external fun X509_STORE_get0_param(ctx: CValuesRef<X509_STORE>?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2383_X509_STORE_set_verify")
external fun X509_STORE_set_verify(ctx: CValuesRef<X509_STORE>?, verify: X509_STORE_CTX_verify_fn?): Unit

@CCall("knifunptr_openssl2384_X509_STORE_CTX_set_verify")
external fun X509_STORE_CTX_set_verify(ctx: CValuesRef<X509_STORE_CTX>?, verify: X509_STORE_CTX_verify_fn?): Unit

@CCall("knifunptr_openssl2385_X509_STORE_get_verify")
external fun X509_STORE_get_verify(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_verify_fn?

@CCall("knifunptr_openssl2386_X509_STORE_set_verify_cb")
external fun X509_STORE_set_verify_cb(ctx: CValuesRef<X509_STORE>?, verify_cb: X509_STORE_CTX_verify_cb?): Unit

@CCall("knifunptr_openssl2387_X509_STORE_get_verify_cb")
external fun X509_STORE_get_verify_cb(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_verify_cb?

@CCall("knifunptr_openssl2388_X509_STORE_set_get_issuer")
external fun X509_STORE_set_get_issuer(ctx: CValuesRef<X509_STORE>?, get_issuer: X509_STORE_CTX_get_issuer_fn?): Unit

@CCall("knifunptr_openssl2389_X509_STORE_get_get_issuer")
external fun X509_STORE_get_get_issuer(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_get_issuer_fn?

@CCall("knifunptr_openssl2390_X509_STORE_set_check_issued")
external fun X509_STORE_set_check_issued(
    ctx: CValuesRef<X509_STORE>?,
    check_issued: X509_STORE_CTX_check_issued_fn?
): Unit

@CCall("knifunptr_openssl2391_X509_STORE_get_check_issued")
external fun X509_STORE_get_check_issued(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_check_issued_fn?

@CCall("knifunptr_openssl2392_X509_STORE_set_check_revocation")
external fun X509_STORE_set_check_revocation(
    ctx: CValuesRef<X509_STORE>?,
    check_revocation: X509_STORE_CTX_check_revocation_fn?
): Unit

@CCall("knifunptr_openssl2393_X509_STORE_get_check_revocation")
external fun X509_STORE_get_check_revocation(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_check_revocation_fn?

@CCall("knifunptr_openssl2394_X509_STORE_set_get_crl")
external fun X509_STORE_set_get_crl(ctx: CValuesRef<X509_STORE>?, get_crl: X509_STORE_CTX_get_crl_fn?): Unit

@CCall("knifunptr_openssl2395_X509_STORE_get_get_crl")
external fun X509_STORE_get_get_crl(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_get_crl_fn?

@CCall("knifunptr_openssl2396_X509_STORE_set_check_crl")
external fun X509_STORE_set_check_crl(ctx: CValuesRef<X509_STORE>?, check_crl: X509_STORE_CTX_check_crl_fn?): Unit

@CCall("knifunptr_openssl2397_X509_STORE_get_check_crl")
external fun X509_STORE_get_check_crl(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_check_crl_fn?

@CCall("knifunptr_openssl2398_X509_STORE_set_cert_crl")
external fun X509_STORE_set_cert_crl(ctx: CValuesRef<X509_STORE>?, cert_crl: X509_STORE_CTX_cert_crl_fn?): Unit

@CCall("knifunptr_openssl2399_X509_STORE_get_cert_crl")
external fun X509_STORE_get_cert_crl(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_cert_crl_fn?

@CCall("knifunptr_openssl2400_X509_STORE_set_check_policy")
external fun X509_STORE_set_check_policy(
    ctx: CValuesRef<X509_STORE>?,
    check_policy: X509_STORE_CTX_check_policy_fn?
): Unit

@CCall("knifunptr_openssl2401_X509_STORE_get_check_policy")
external fun X509_STORE_get_check_policy(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_check_policy_fn?

@CCall("knifunptr_openssl2402_X509_STORE_set_lookup_certs")
external fun X509_STORE_set_lookup_certs(
    ctx: CValuesRef<X509_STORE>?,
    lookup_certs: X509_STORE_CTX_lookup_certs_fn?
): Unit

@CCall("knifunptr_openssl2403_X509_STORE_get_lookup_certs")
external fun X509_STORE_get_lookup_certs(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_lookup_certs_fn?

@CCall("knifunptr_openssl2404_X509_STORE_set_lookup_crls")
external fun X509_STORE_set_lookup_crls(ctx: CValuesRef<X509_STORE>?, lookup_crls: X509_STORE_CTX_lookup_crls_fn?): Unit

@CCall("knifunptr_openssl2405_X509_STORE_get_lookup_crls")
external fun X509_STORE_get_lookup_crls(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_lookup_crls_fn?

@CCall("knifunptr_openssl2406_X509_STORE_set_cleanup")
external fun X509_STORE_set_cleanup(ctx: CValuesRef<X509_STORE>?, cleanup: X509_STORE_CTX_cleanup_fn?): Unit

@CCall("knifunptr_openssl2407_X509_STORE_get_cleanup")
external fun X509_STORE_get_cleanup(ctx: CValuesRef<X509_STORE>?): X509_STORE_CTX_cleanup_fn?

@CCall("knifunptr_openssl2408_X509_STORE_set_ex_data")
external fun X509_STORE_set_ex_data(ctx: CValuesRef<X509_STORE>?, idx: Int, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl2409_X509_STORE_get_ex_data")
external fun X509_STORE_get_ex_data(ctx: CValuesRef<X509_STORE>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl2410_X509_STORE_CTX_new")
external fun X509_STORE_CTX_new(): CPointer<X509_STORE_CTX>?

@CCall("knifunptr_openssl2411_X509_STORE_CTX_get1_issuer")
external fun X509_STORE_CTX_get1_issuer(
    issuer: CValuesRef<CPointerVar<X509>>?,
    ctx: CValuesRef<X509_STORE_CTX>?,
    x: CValuesRef<X509>?
): Int

@CCall("knifunptr_openssl2412_X509_STORE_CTX_free")
external fun X509_STORE_CTX_free(ctx: CValuesRef<X509_STORE_CTX>?): Unit

@CCall("knifunptr_openssl2413_X509_STORE_CTX_init")
external fun X509_STORE_CTX_init(
    ctx: CValuesRef<X509_STORE_CTX>?,
    store: CValuesRef<X509_STORE>?,
    x509: CValuesRef<X509>?,
    chain: CValuesRef<stack_st_X509>?
): Int

@CCall("knifunptr_openssl2414_X509_STORE_CTX_set0_trusted_stack")
external fun X509_STORE_CTX_set0_trusted_stack(ctx: CValuesRef<X509_STORE_CTX>?, sk: CValuesRef<stack_st_X509>?): Unit

@CCall("knifunptr_openssl2415_X509_STORE_CTX_cleanup")
external fun X509_STORE_CTX_cleanup(ctx: CValuesRef<X509_STORE_CTX>?): Unit

@CCall("knifunptr_openssl2416_X509_STORE_CTX_get0_store")
external fun X509_STORE_CTX_get0_store(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509_STORE>?

@CCall("knifunptr_openssl2417_X509_STORE_CTX_get0_cert")
external fun X509_STORE_CTX_get0_cert(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509>?

@CCall("knifunptr_openssl2418_X509_STORE_CTX_get0_untrusted")
external fun X509_STORE_CTX_get0_untrusted(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2419_X509_STORE_CTX_set0_untrusted")
external fun X509_STORE_CTX_set0_untrusted(ctx: CValuesRef<X509_STORE_CTX>?, sk: CValuesRef<stack_st_X509>?): Unit

@CCall("knifunptr_openssl2420_X509_STORE_CTX_set_verify_cb")
external fun X509_STORE_CTX_set_verify_cb(ctx: CValuesRef<X509_STORE_CTX>?, verify: X509_STORE_CTX_verify_cb?): Unit

@CCall("knifunptr_openssl2421_X509_STORE_CTX_get_verify_cb")
external fun X509_STORE_CTX_get_verify_cb(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_verify_cb?

@CCall("knifunptr_openssl2422_X509_STORE_CTX_get_verify")
external fun X509_STORE_CTX_get_verify(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_verify_fn?

@CCall("knifunptr_openssl2423_X509_STORE_CTX_get_get_issuer")
external fun X509_STORE_CTX_get_get_issuer(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_get_issuer_fn?

@CCall("knifunptr_openssl2424_X509_STORE_CTX_get_check_issued")
external fun X509_STORE_CTX_get_check_issued(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_check_issued_fn?

@CCall("knifunptr_openssl2425_X509_STORE_CTX_get_check_revocation")
external fun X509_STORE_CTX_get_check_revocation(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_check_revocation_fn?

@CCall("knifunptr_openssl2426_X509_STORE_CTX_get_get_crl")
external fun X509_STORE_CTX_get_get_crl(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_get_crl_fn?

@CCall("knifunptr_openssl2427_X509_STORE_CTX_get_check_crl")
external fun X509_STORE_CTX_get_check_crl(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_check_crl_fn?

@CCall("knifunptr_openssl2428_X509_STORE_CTX_get_cert_crl")
external fun X509_STORE_CTX_get_cert_crl(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_cert_crl_fn?

@CCall("knifunptr_openssl2429_X509_STORE_CTX_get_check_policy")
external fun X509_STORE_CTX_get_check_policy(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_check_policy_fn?

@CCall("knifunptr_openssl2430_X509_STORE_CTX_get_lookup_certs")
external fun X509_STORE_CTX_get_lookup_certs(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_lookup_certs_fn?

@CCall("knifunptr_openssl2431_X509_STORE_CTX_get_lookup_crls")
external fun X509_STORE_CTX_get_lookup_crls(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_lookup_crls_fn?

@CCall("knifunptr_openssl2432_X509_STORE_CTX_get_cleanup")
external fun X509_STORE_CTX_get_cleanup(ctx: CValuesRef<X509_STORE_CTX>?): X509_STORE_CTX_cleanup_fn?

@CCall("knifunptr_openssl2433_X509_STORE_add_lookup")
external fun X509_STORE_add_lookup(
    v: CValuesRef<X509_STORE>?,
    m: CValuesRef<X509_LOOKUP_METHOD>?
): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2434_X509_LOOKUP_hash_dir")
external fun X509_LOOKUP_hash_dir(): CPointer<X509_LOOKUP_METHOD>?

@CCall("knifunptr_openssl2435_X509_LOOKUP_file")
external fun X509_LOOKUP_file(): CPointer<X509_LOOKUP_METHOD>?

@CCall("knifunptr_openssl2436_X509_LOOKUP_meth_new")
external fun X509_LOOKUP_meth_new(@CCall.CString name: String?): CPointer<X509_LOOKUP_METHOD>?

@CCall("knifunptr_openssl2437_X509_LOOKUP_meth_free")
external fun X509_LOOKUP_meth_free(method: CValuesRef<X509_LOOKUP_METHOD>?): Unit

@CCall("knifunptr_openssl2438_X509_LOOKUP_meth_set_new_item")
external fun X509_LOOKUP_meth_set_new_item(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    new_item: CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Int>>?
): Int

@CCall("knifunptr_openssl2439_X509_LOOKUP_meth_get_new_item")
external fun X509_LOOKUP_meth_get_new_item(method: CValuesRef<X509_LOOKUP_METHOD>?): CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Int>>?

@CCall("knifunptr_openssl2440_X509_LOOKUP_meth_set_free")
external fun X509_LOOKUP_meth_set_free(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    free_fn: CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Unit>>?
): Int

@CCall("knifunptr_openssl2441_X509_LOOKUP_meth_get_free")
external fun X509_LOOKUP_meth_get_free(method: CValuesRef<X509_LOOKUP_METHOD>?): CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Unit>>?

@CCall("knifunptr_openssl2442_X509_LOOKUP_meth_set_init")
external fun X509_LOOKUP_meth_set_init(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    init: CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Int>>?
): Int

@CCall("knifunptr_openssl2443_X509_LOOKUP_meth_get_init")
external fun X509_LOOKUP_meth_get_init(method: CValuesRef<X509_LOOKUP_METHOD>?): CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Int>>?

@CCall("knifunptr_openssl2444_X509_LOOKUP_meth_set_shutdown")
external fun X509_LOOKUP_meth_set_shutdown(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    shutdown: CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Int>>?
): Int

@CCall("knifunptr_openssl2445_X509_LOOKUP_meth_get_shutdown")
external fun X509_LOOKUP_meth_get_shutdown(method: CValuesRef<X509_LOOKUP_METHOD>?): CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Int>>?

@CCall("knifunptr_openssl2446_X509_LOOKUP_meth_set_ctrl")
external fun X509_LOOKUP_meth_set_ctrl(method: CValuesRef<X509_LOOKUP_METHOD>?, ctrl_fn: X509_LOOKUP_ctrl_fn?): Int

@CCall("knifunptr_openssl2447_X509_LOOKUP_meth_get_ctrl")
external fun X509_LOOKUP_meth_get_ctrl(method: CValuesRef<X509_LOOKUP_METHOD>?): X509_LOOKUP_ctrl_fn?

@CCall("knifunptr_openssl2448_X509_LOOKUP_meth_set_get_by_subject")
external fun X509_LOOKUP_meth_set_get_by_subject(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    fn: X509_LOOKUP_get_by_subject_fn?
): Int

@CCall("knifunptr_openssl2449_X509_LOOKUP_meth_get_get_by_subject")
external fun X509_LOOKUP_meth_get_get_by_subject(method: CValuesRef<X509_LOOKUP_METHOD>?): X509_LOOKUP_get_by_subject_fn?

@CCall("knifunptr_openssl2450_X509_LOOKUP_meth_set_get_by_issuer_serial")
external fun X509_LOOKUP_meth_set_get_by_issuer_serial(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    fn: X509_LOOKUP_get_by_issuer_serial_fn?
): Int

@CCall("knifunptr_openssl2451_X509_LOOKUP_meth_get_get_by_issuer_serial")
external fun X509_LOOKUP_meth_get_get_by_issuer_serial(method: CValuesRef<X509_LOOKUP_METHOD>?): X509_LOOKUP_get_by_issuer_serial_fn?

@CCall("knifunptr_openssl2452_X509_LOOKUP_meth_set_get_by_fingerprint")
external fun X509_LOOKUP_meth_set_get_by_fingerprint(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    fn: X509_LOOKUP_get_by_fingerprint_fn?
): Int

@CCall("knifunptr_openssl2453_X509_LOOKUP_meth_get_get_by_fingerprint")
external fun X509_LOOKUP_meth_get_get_by_fingerprint(method: CValuesRef<X509_LOOKUP_METHOD>?): X509_LOOKUP_get_by_fingerprint_fn?

@CCall("knifunptr_openssl2454_X509_LOOKUP_meth_set_get_by_alias")
external fun X509_LOOKUP_meth_set_get_by_alias(
    method: CValuesRef<X509_LOOKUP_METHOD>?,
    fn: X509_LOOKUP_get_by_alias_fn?
): Int

@CCall("knifunptr_openssl2455_X509_LOOKUP_meth_get_get_by_alias")
external fun X509_LOOKUP_meth_get_get_by_alias(method: CValuesRef<X509_LOOKUP_METHOD>?): X509_LOOKUP_get_by_alias_fn?

@CCall("knifunptr_openssl2456_X509_STORE_add_cert")
external fun X509_STORE_add_cert(ctx: CValuesRef<X509_STORE>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2457_X509_STORE_add_crl")
external fun X509_STORE_add_crl(ctx: CValuesRef<X509_STORE>?, x: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2458_X509_STORE_CTX_get_by_subject")
external fun X509_STORE_CTX_get_by_subject(
    vs: CValuesRef<X509_STORE_CTX>?,
    type: X509_LOOKUP_TYPE,
    name: CValuesRef<X509_NAME>?,
    ret: CValuesRef<X509_OBJECT>?
): Int

@CCall("knifunptr_openssl2459_X509_STORE_CTX_get_obj_by_subject")
external fun X509_STORE_CTX_get_obj_by_subject(
    vs: CValuesRef<X509_STORE_CTX>?,
    type: X509_LOOKUP_TYPE,
    name: CValuesRef<X509_NAME>?
): CPointer<X509_OBJECT>?

@CCall("knifunptr_openssl2460_X509_LOOKUP_ctrl")
external fun X509_LOOKUP_ctrl(
    ctx: CValuesRef<X509_LOOKUP>?,
    cmd: Int, @CCall.CString argc: String?,
    argl: Long,
    ret: CValuesRef<CPointerVar<ByteVar>>?
): Int

@CCall("knifunptr_openssl2461_X509_load_cert_file")
external fun X509_load_cert_file(ctx: CValuesRef<X509_LOOKUP>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl2462_X509_load_crl_file")
external fun X509_load_crl_file(ctx: CValuesRef<X509_LOOKUP>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl2463_X509_load_cert_crl_file")
external fun X509_load_cert_crl_file(ctx: CValuesRef<X509_LOOKUP>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl2464_X509_LOOKUP_new")
external fun X509_LOOKUP_new(method: CValuesRef<X509_LOOKUP_METHOD>?): CPointer<X509_LOOKUP>?

@CCall("knifunptr_openssl2465_X509_LOOKUP_free")
external fun X509_LOOKUP_free(ctx: CValuesRef<X509_LOOKUP>?): Unit

@CCall("knifunptr_openssl2466_X509_LOOKUP_init")
external fun X509_LOOKUP_init(ctx: CValuesRef<X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2467_X509_LOOKUP_by_subject")
external fun X509_LOOKUP_by_subject(
    ctx: CValuesRef<X509_LOOKUP>?,
    type: X509_LOOKUP_TYPE,
    name: CValuesRef<X509_NAME>?,
    ret: CValuesRef<X509_OBJECT>?
): Int

@CCall("knifunptr_openssl2468_X509_LOOKUP_by_issuer_serial")
external fun X509_LOOKUP_by_issuer_serial(
    ctx: CValuesRef<X509_LOOKUP>?,
    type: X509_LOOKUP_TYPE,
    name: CValuesRef<X509_NAME>?,
    serial: CValuesRef<ASN1_INTEGER>?,
    ret: CValuesRef<X509_OBJECT>?
): Int

@CCall("knifunptr_openssl2469_X509_LOOKUP_by_fingerprint")
external fun X509_LOOKUP_by_fingerprint(
    ctx: CValuesRef<X509_LOOKUP>?,
    type: X509_LOOKUP_TYPE,
    bytes: CValuesRef<UByteVar>?,
    len: Int,
    ret: CValuesRef<X509_OBJECT>?
): Int

@CCall("knifunptr_openssl2470_X509_LOOKUP_by_alias")
external fun X509_LOOKUP_by_alias(
    ctx: CValuesRef<X509_LOOKUP>?,
    type: X509_LOOKUP_TYPE, @CCall.CString str: String?,
    len: Int,
    ret: CValuesRef<X509_OBJECT>?
): Int

@CCall("knifunptr_openssl2471_X509_LOOKUP_set_method_data")
external fun X509_LOOKUP_set_method_data(ctx: CValuesRef<X509_LOOKUP>?, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl2472_X509_LOOKUP_get_method_data")
external fun X509_LOOKUP_get_method_data(ctx: CValuesRef<X509_LOOKUP>?): COpaquePointer?

@CCall("knifunptr_openssl2473_X509_LOOKUP_get_store")
external fun X509_LOOKUP_get_store(ctx: CValuesRef<X509_LOOKUP>?): CPointer<X509_STORE>?

@CCall("knifunptr_openssl2474_X509_LOOKUP_shutdown")
external fun X509_LOOKUP_shutdown(ctx: CValuesRef<X509_LOOKUP>?): Int

@CCall("knifunptr_openssl2475_X509_STORE_load_locations")
external fun X509_STORE_load_locations(ctx: CValuesRef<X509_STORE>?, @CCall.CString file: String?, @CCall.CString dir: String?): Int

@CCall("knifunptr_openssl2476_X509_STORE_set_default_paths")
external fun X509_STORE_set_default_paths(ctx: CValuesRef<X509_STORE>?): Int

@CCall("knifunptr_openssl2477_X509_STORE_CTX_set_ex_data")
external fun X509_STORE_CTX_set_ex_data(ctx: CValuesRef<X509_STORE_CTX>?, idx: Int, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl2478_X509_STORE_CTX_get_ex_data")
external fun X509_STORE_CTX_get_ex_data(ctx: CValuesRef<X509_STORE_CTX>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl2479_X509_STORE_CTX_get_error")
external fun X509_STORE_CTX_get_error(ctx: CValuesRef<X509_STORE_CTX>?): Int

@CCall("knifunptr_openssl2480_X509_STORE_CTX_set_error")
external fun X509_STORE_CTX_set_error(ctx: CValuesRef<X509_STORE_CTX>?, s: Int): Unit

@CCall("knifunptr_openssl2481_X509_STORE_CTX_get_error_depth")
external fun X509_STORE_CTX_get_error_depth(ctx: CValuesRef<X509_STORE_CTX>?): Int

@CCall("knifunptr_openssl2482_X509_STORE_CTX_set_error_depth")
external fun X509_STORE_CTX_set_error_depth(ctx: CValuesRef<X509_STORE_CTX>?, depth: Int): Unit

@CCall("knifunptr_openssl2483_X509_STORE_CTX_get_current_cert")
external fun X509_STORE_CTX_get_current_cert(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509>?

@CCall("knifunptr_openssl2484_X509_STORE_CTX_set_current_cert")
external fun X509_STORE_CTX_set_current_cert(ctx: CValuesRef<X509_STORE_CTX>?, x: CValuesRef<X509>?): Unit

@CCall("knifunptr_openssl2485_X509_STORE_CTX_get0_current_issuer")
external fun X509_STORE_CTX_get0_current_issuer(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509>?

@CCall("knifunptr_openssl2486_X509_STORE_CTX_get0_current_crl")
external fun X509_STORE_CTX_get0_current_crl(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2487_X509_STORE_CTX_get0_parent_ctx")
external fun X509_STORE_CTX_get0_parent_ctx(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509_STORE_CTX>?

@CCall("knifunptr_openssl2488_X509_STORE_CTX_get0_chain")
external fun X509_STORE_CTX_get0_chain(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2489_X509_STORE_CTX_get1_chain")
external fun X509_STORE_CTX_get1_chain(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2490_X509_STORE_CTX_set_cert")
external fun X509_STORE_CTX_set_cert(c: CValuesRef<X509_STORE_CTX>?, x: CValuesRef<X509>?): Unit

@CCall("knifunptr_openssl2491_X509_STORE_CTX_set0_verified_chain")
external fun X509_STORE_CTX_set0_verified_chain(c: CValuesRef<X509_STORE_CTX>?, sk: CValuesRef<stack_st_X509>?): Unit

@CCall("knifunptr_openssl2492_X509_STORE_CTX_set0_crls")
external fun X509_STORE_CTX_set0_crls(c: CValuesRef<X509_STORE_CTX>?, sk: CValuesRef<stack_st_X509_CRL>?): Unit

@CCall("knifunptr_openssl2493_X509_STORE_CTX_set_purpose")
external fun X509_STORE_CTX_set_purpose(ctx: CValuesRef<X509_STORE_CTX>?, purpose: Int): Int

@CCall("knifunptr_openssl2494_X509_STORE_CTX_set_trust")
external fun X509_STORE_CTX_set_trust(ctx: CValuesRef<X509_STORE_CTX>?, trust: Int): Int

@CCall("knifunptr_openssl2495_X509_STORE_CTX_purpose_inherit")
external fun X509_STORE_CTX_purpose_inherit(
    ctx: CValuesRef<X509_STORE_CTX>?,
    def_purpose: Int,
    purpose: Int,
    trust: Int
): Int

@CCall("knifunptr_openssl2496_X509_STORE_CTX_set_flags")
external fun X509_STORE_CTX_set_flags(ctx: CValuesRef<X509_STORE_CTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl2497_X509_STORE_CTX_set_time")
external fun X509_STORE_CTX_set_time(ctx: CValuesRef<X509_STORE_CTX>?, flags: ULong, t: time_t): Unit

@CCall("knifunptr_openssl2498_X509_STORE_CTX_get0_policy_tree")
external fun X509_STORE_CTX_get0_policy_tree(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509_POLICY_TREE>?

@CCall("knifunptr_openssl2499_X509_STORE_CTX_get_explicit_policy")
external fun X509_STORE_CTX_get_explicit_policy(ctx: CValuesRef<X509_STORE_CTX>?): Int

@CCall("knifunptr_openssl2500_X509_STORE_CTX_get_num_untrusted")
external fun X509_STORE_CTX_get_num_untrusted(ctx: CValuesRef<X509_STORE_CTX>?): Int

@CCall("knifunptr_openssl2501_X509_STORE_CTX_get0_param")
external fun X509_STORE_CTX_get0_param(ctx: CValuesRef<X509_STORE_CTX>?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2502_X509_STORE_CTX_set0_param")
external fun X509_STORE_CTX_set0_param(ctx: CValuesRef<X509_STORE_CTX>?, param: CValuesRef<X509_VERIFY_PARAM>?): Unit

@CCall("knifunptr_openssl2503_X509_STORE_CTX_set_default")
external fun X509_STORE_CTX_set_default(ctx: CValuesRef<X509_STORE_CTX>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl2504_X509_STORE_CTX_set0_dane")
external fun X509_STORE_CTX_set0_dane(ctx: CValuesRef<X509_STORE_CTX>?, dane: CValuesRef<SSL_DANE>?): Unit

@CCall("knifunptr_openssl2505_X509_VERIFY_PARAM_new")
external fun X509_VERIFY_PARAM_new(): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2506_X509_VERIFY_PARAM_free")
external fun X509_VERIFY_PARAM_free(param: CValuesRef<X509_VERIFY_PARAM>?): Unit

@CCall("knifunptr_openssl2507_X509_VERIFY_PARAM_inherit")
external fun X509_VERIFY_PARAM_inherit(to: CValuesRef<X509_VERIFY_PARAM>?, from: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2508_X509_VERIFY_PARAM_set1")
external fun X509_VERIFY_PARAM_set1(to: CValuesRef<X509_VERIFY_PARAM>?, from: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2509_X509_VERIFY_PARAM_set1_name")
external fun X509_VERIFY_PARAM_set1_name(param: CValuesRef<X509_VERIFY_PARAM>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl2510_X509_VERIFY_PARAM_set_flags")
external fun X509_VERIFY_PARAM_set_flags(param: CValuesRef<X509_VERIFY_PARAM>?, flags: ULong): Int

@CCall("knifunptr_openssl2511_X509_VERIFY_PARAM_clear_flags")
external fun X509_VERIFY_PARAM_clear_flags(param: CValuesRef<X509_VERIFY_PARAM>?, flags: ULong): Int

@CCall("knifunptr_openssl2512_X509_VERIFY_PARAM_get_flags")
external fun X509_VERIFY_PARAM_get_flags(param: CValuesRef<X509_VERIFY_PARAM>?): ULong

@CCall("knifunptr_openssl2513_X509_VERIFY_PARAM_set_purpose")
external fun X509_VERIFY_PARAM_set_purpose(param: CValuesRef<X509_VERIFY_PARAM>?, purpose: Int): Int

@CCall("knifunptr_openssl2514_X509_VERIFY_PARAM_set_trust")
external fun X509_VERIFY_PARAM_set_trust(param: CValuesRef<X509_VERIFY_PARAM>?, trust: Int): Int

@CCall("knifunptr_openssl2515_X509_VERIFY_PARAM_set_depth")
external fun X509_VERIFY_PARAM_set_depth(param: CValuesRef<X509_VERIFY_PARAM>?, depth: Int): Unit

@CCall("knifunptr_openssl2516_X509_VERIFY_PARAM_set_auth_level")
external fun X509_VERIFY_PARAM_set_auth_level(param: CValuesRef<X509_VERIFY_PARAM>?, auth_level: Int): Unit

@CCall("knifunptr_openssl2517_X509_VERIFY_PARAM_get_time")
external fun X509_VERIFY_PARAM_get_time(param: CValuesRef<X509_VERIFY_PARAM>?): time_t

@CCall("knifunptr_openssl2518_X509_VERIFY_PARAM_set_time")
external fun X509_VERIFY_PARAM_set_time(param: CValuesRef<X509_VERIFY_PARAM>?, t: time_t): Unit

@CCall("knifunptr_openssl2519_X509_VERIFY_PARAM_add0_policy")
external fun X509_VERIFY_PARAM_add0_policy(param: CValuesRef<X509_VERIFY_PARAM>?, policy: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl2520_X509_VERIFY_PARAM_set1_policies")
external fun X509_VERIFY_PARAM_set1_policies(
    param: CValuesRef<X509_VERIFY_PARAM>?,
    policies: CValuesRef<stack_st_ASN1_OBJECT>?
): Int

@CCall("knifunptr_openssl2521_X509_VERIFY_PARAM_set_inh_flags")
external fun X509_VERIFY_PARAM_set_inh_flags(param: CValuesRef<X509_VERIFY_PARAM>?, flags: uint32_t): Int

@CCall("knifunptr_openssl2522_X509_VERIFY_PARAM_get_inh_flags")
external fun X509_VERIFY_PARAM_get_inh_flags(param: CValuesRef<X509_VERIFY_PARAM>?): uint32_t

@CCall("knifunptr_openssl2523_X509_VERIFY_PARAM_set1_host")
external fun X509_VERIFY_PARAM_set1_host(
    param: CValuesRef<X509_VERIFY_PARAM>?, @CCall.CString name: String?,
    namelen: size_t
): Int

@CCall("knifunptr_openssl2524_X509_VERIFY_PARAM_add1_host")
external fun X509_VERIFY_PARAM_add1_host(
    param: CValuesRef<X509_VERIFY_PARAM>?, @CCall.CString name: String?,
    namelen: size_t
): Int

@CCall("knifunptr_openssl2525_X509_VERIFY_PARAM_set_hostflags")
external fun X509_VERIFY_PARAM_set_hostflags(param: CValuesRef<X509_VERIFY_PARAM>?, flags: UInt): Unit

@CCall("knifunptr_openssl2526_X509_VERIFY_PARAM_get_hostflags")
external fun X509_VERIFY_PARAM_get_hostflags(param: CValuesRef<X509_VERIFY_PARAM>?): UInt

@CCall("knifunptr_openssl2527_X509_VERIFY_PARAM_get0_peername")
external fun X509_VERIFY_PARAM_get0_peername(arg0: CValuesRef<X509_VERIFY_PARAM>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl2528_X509_VERIFY_PARAM_move_peername")
external fun X509_VERIFY_PARAM_move_peername(
    arg0: CValuesRef<X509_VERIFY_PARAM>?,
    arg1: CValuesRef<X509_VERIFY_PARAM>?
): Unit

@CCall("knifunptr_openssl2529_X509_VERIFY_PARAM_set1_email")
external fun X509_VERIFY_PARAM_set1_email(
    param: CValuesRef<X509_VERIFY_PARAM>?, @CCall.CString email: String?,
    emaillen: size_t
): Int

@CCall("knifunptr_openssl2530_X509_VERIFY_PARAM_set1_ip")
external fun X509_VERIFY_PARAM_set1_ip(
    param: CValuesRef<X509_VERIFY_PARAM>?,
    ip: CValuesRef<UByteVar>?,
    iplen: size_t
): Int

@CCall("knifunptr_openssl2531_X509_VERIFY_PARAM_set1_ip_asc")
external fun X509_VERIFY_PARAM_set1_ip_asc(param: CValuesRef<X509_VERIFY_PARAM>?, @CCall.CString ipasc: String?): Int

@CCall("knifunptr_openssl2532_X509_VERIFY_PARAM_get_depth")
external fun X509_VERIFY_PARAM_get_depth(param: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2533_X509_VERIFY_PARAM_get_auth_level")
external fun X509_VERIFY_PARAM_get_auth_level(param: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2534_X509_VERIFY_PARAM_get0_name")
external fun X509_VERIFY_PARAM_get0_name(param: CValuesRef<X509_VERIFY_PARAM>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl2535_X509_VERIFY_PARAM_add0_table")
external fun X509_VERIFY_PARAM_add0_table(param: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl2536_X509_VERIFY_PARAM_get_count")
external fun X509_VERIFY_PARAM_get_count(): Int

@CCall("knifunptr_openssl2537_X509_VERIFY_PARAM_get0")
external fun X509_VERIFY_PARAM_get0(id: Int): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2538_X509_VERIFY_PARAM_lookup")
external fun X509_VERIFY_PARAM_lookup(@CCall.CString name: String?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl2539_X509_VERIFY_PARAM_table_cleanup")
external fun X509_VERIFY_PARAM_table_cleanup(): Unit

@CCall("knifunptr_openssl2540_X509_policy_check")
external fun X509_policy_check(
    ptree: CValuesRef<CPointerVar<X509_POLICY_TREE>>?,
    pexplicit_policy: CValuesRef<IntVar>?,
    certs: CValuesRef<stack_st_X509>?,
    policy_oids: CValuesRef<stack_st_ASN1_OBJECT>?,
    flags: UInt
): Int

@CCall("knifunptr_openssl2541_X509_policy_tree_free")
external fun X509_policy_tree_free(tree: CValuesRef<X509_POLICY_TREE>?): Unit

@CCall("knifunptr_openssl2542_X509_policy_tree_level_count")
external fun X509_policy_tree_level_count(tree: CValuesRef<X509_POLICY_TREE>?): Int

@CCall("knifunptr_openssl2543_X509_policy_tree_get0_level")
external fun X509_policy_tree_get0_level(tree: CValuesRef<X509_POLICY_TREE>?, i: Int): CPointer<X509_POLICY_LEVEL>?

@CCall("knifunptr_openssl2544_X509_policy_tree_get0_policies")
external fun X509_policy_tree_get0_policies(tree: CValuesRef<X509_POLICY_TREE>?): CPointer<stack_st_X509_POLICY_NODE>?

@CCall("knifunptr_openssl2545_X509_policy_tree_get0_user_policies")
external fun X509_policy_tree_get0_user_policies(tree: CValuesRef<X509_POLICY_TREE>?): CPointer<stack_st_X509_POLICY_NODE>?

@CCall("knifunptr_openssl2546_X509_policy_level_node_count")
external fun X509_policy_level_node_count(level: CValuesRef<X509_POLICY_LEVEL>?): Int

@CCall("knifunptr_openssl2547_X509_policy_level_get0_node")
external fun X509_policy_level_get0_node(level: CValuesRef<X509_POLICY_LEVEL>?, i: Int): CPointer<X509_POLICY_NODE>?

@CCall("knifunptr_openssl2548_X509_policy_node_get0_policy")
external fun X509_policy_node_get0_policy(node: CValuesRef<X509_POLICY_NODE>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl2549_X509_policy_node_get0_qualifiers")
external fun X509_policy_node_get0_qualifiers(node: CValuesRef<X509_POLICY_NODE>?): CPointer<stack_st_POLICYQUALINFO>?

@CCall("knifunptr_openssl2550_X509_policy_node_get0_parent")
external fun X509_policy_node_get0_parent(node: CValuesRef<X509_POLICY_NODE>?): CPointer<X509_POLICY_NODE>?

@CCall("knifunptr_openssl2551_ERR_load_PKCS7_strings")
external fun ERR_load_PKCS7_strings(): Int

@CCall("knifunptr_openssl2552_sk_PKCS7_SIGNER_INFO_num")
external fun sk_PKCS7_SIGNER_INFO_num(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): Int

@CCall("knifunptr_openssl2553_sk_PKCS7_SIGNER_INFO_value")
external fun sk_PKCS7_SIGNER_INFO_value(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    idx: Int
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2554_sk_PKCS7_SIGNER_INFO_new")
external fun sk_PKCS7_SIGNER_INFO_new(compare: sk_PKCS7_SIGNER_INFO_compfunc?): CPointer<stack_st_PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2555_sk_PKCS7_SIGNER_INFO_new_null")
external fun sk_PKCS7_SIGNER_INFO_new_null(): CPointer<stack_st_PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2556_sk_PKCS7_SIGNER_INFO_new_reserve")
external fun sk_PKCS7_SIGNER_INFO_new_reserve(
    compare: sk_PKCS7_SIGNER_INFO_compfunc?,
    n: Int
): CPointer<stack_st_PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2557_sk_PKCS7_SIGNER_INFO_reserve")
external fun sk_PKCS7_SIGNER_INFO_reserve(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?, n: Int): Int

@CCall("knifunptr_openssl2558_sk_PKCS7_SIGNER_INFO_free")
external fun sk_PKCS7_SIGNER_INFO_free(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): Unit

@CCall("knifunptr_openssl2559_sk_PKCS7_SIGNER_INFO_zero")
external fun sk_PKCS7_SIGNER_INFO_zero(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): Unit

@CCall("knifunptr_openssl2560_sk_PKCS7_SIGNER_INFO_delete")
external fun sk_PKCS7_SIGNER_INFO_delete(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    i: Int
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2561_sk_PKCS7_SIGNER_INFO_delete_ptr")
external fun sk_PKCS7_SIGNER_INFO_delete_ptr(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2562_sk_PKCS7_SIGNER_INFO_push")
external fun sk_PKCS7_SIGNER_INFO_push(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?
): Int

@CCall("knifunptr_openssl2563_sk_PKCS7_SIGNER_INFO_unshift")
external fun sk_PKCS7_SIGNER_INFO_unshift(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?
): Int

@CCall("knifunptr_openssl2564_sk_PKCS7_SIGNER_INFO_pop")
external fun sk_PKCS7_SIGNER_INFO_pop(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2565_sk_PKCS7_SIGNER_INFO_shift")
external fun sk_PKCS7_SIGNER_INFO_shift(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2566_sk_PKCS7_SIGNER_INFO_pop_free")
external fun sk_PKCS7_SIGNER_INFO_pop_free(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    freefunc: sk_PKCS7_SIGNER_INFO_freefunc?
): Unit

@CCall("knifunptr_openssl2567_sk_PKCS7_SIGNER_INFO_insert")
external fun sk_PKCS7_SIGNER_INFO_insert(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2568_sk_PKCS7_SIGNER_INFO_set")
external fun sk_PKCS7_SIGNER_INFO_set(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    idx: Int,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2569_sk_PKCS7_SIGNER_INFO_find")
external fun sk_PKCS7_SIGNER_INFO_find(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?
): Int

@CCall("knifunptr_openssl2570_sk_PKCS7_SIGNER_INFO_find_ex")
external fun sk_PKCS7_SIGNER_INFO_find_ex(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    ptr: CValuesRef<PKCS7_SIGNER_INFO>?
): Int

@CCall("knifunptr_openssl2571_sk_PKCS7_SIGNER_INFO_sort")
external fun sk_PKCS7_SIGNER_INFO_sort(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): Unit

@CCall("knifunptr_openssl2572_sk_PKCS7_SIGNER_INFO_is_sorted")
external fun sk_PKCS7_SIGNER_INFO_is_sorted(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): Int

@CCall("knifunptr_openssl2573_sk_PKCS7_SIGNER_INFO_dup")
external fun sk_PKCS7_SIGNER_INFO_dup(sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?): CPointer<stack_st_PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2574_sk_PKCS7_SIGNER_INFO_deep_copy")
external fun sk_PKCS7_SIGNER_INFO_deep_copy(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    copyfunc: sk_PKCS7_SIGNER_INFO_copyfunc?,
    freefunc: sk_PKCS7_SIGNER_INFO_freefunc?
): CPointer<stack_st_PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2575_sk_PKCS7_SIGNER_INFO_set_cmp_func")
external fun sk_PKCS7_SIGNER_INFO_set_cmp_func(
    sk: CValuesRef<stack_st_PKCS7_SIGNER_INFO>?,
    compare: sk_PKCS7_SIGNER_INFO_compfunc?
): sk_PKCS7_SIGNER_INFO_compfunc?

@CCall("knifunptr_openssl2576_sk_PKCS7_RECIP_INFO_num")
external fun sk_PKCS7_RECIP_INFO_num(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): Int

@CCall("knifunptr_openssl2577_sk_PKCS7_RECIP_INFO_value")
external fun sk_PKCS7_RECIP_INFO_value(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    idx: Int
): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2578_sk_PKCS7_RECIP_INFO_new")
external fun sk_PKCS7_RECIP_INFO_new(compare: sk_PKCS7_RECIP_INFO_compfunc?): CPointer<stack_st_PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2579_sk_PKCS7_RECIP_INFO_new_null")
external fun sk_PKCS7_RECIP_INFO_new_null(): CPointer<stack_st_PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2580_sk_PKCS7_RECIP_INFO_new_reserve")
external fun sk_PKCS7_RECIP_INFO_new_reserve(
    compare: sk_PKCS7_RECIP_INFO_compfunc?,
    n: Int
): CPointer<stack_st_PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2581_sk_PKCS7_RECIP_INFO_reserve")
external fun sk_PKCS7_RECIP_INFO_reserve(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?, n: Int): Int

@CCall("knifunptr_openssl2582_sk_PKCS7_RECIP_INFO_free")
external fun sk_PKCS7_RECIP_INFO_free(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): Unit

@CCall("knifunptr_openssl2583_sk_PKCS7_RECIP_INFO_zero")
external fun sk_PKCS7_RECIP_INFO_zero(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): Unit

@CCall("knifunptr_openssl2584_sk_PKCS7_RECIP_INFO_delete")
external fun sk_PKCS7_RECIP_INFO_delete(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?, i: Int): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2585_sk_PKCS7_RECIP_INFO_delete_ptr")
external fun sk_PKCS7_RECIP_INFO_delete_ptr(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?
): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2586_sk_PKCS7_RECIP_INFO_push")
external fun sk_PKCS7_RECIP_INFO_push(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?
): Int

@CCall("knifunptr_openssl2587_sk_PKCS7_RECIP_INFO_unshift")
external fun sk_PKCS7_RECIP_INFO_unshift(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?
): Int

@CCall("knifunptr_openssl2588_sk_PKCS7_RECIP_INFO_pop")
external fun sk_PKCS7_RECIP_INFO_pop(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2589_sk_PKCS7_RECIP_INFO_shift")
external fun sk_PKCS7_RECIP_INFO_shift(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2590_sk_PKCS7_RECIP_INFO_pop_free")
external fun sk_PKCS7_RECIP_INFO_pop_free(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    freefunc: sk_PKCS7_RECIP_INFO_freefunc?
): Unit

@CCall("knifunptr_openssl2591_sk_PKCS7_RECIP_INFO_insert")
external fun sk_PKCS7_RECIP_INFO_insert(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?,
    idx: Int
): Int

@CCall("knifunptr_openssl2592_sk_PKCS7_RECIP_INFO_set")
external fun sk_PKCS7_RECIP_INFO_set(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    idx: Int,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?
): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2593_sk_PKCS7_RECIP_INFO_find")
external fun sk_PKCS7_RECIP_INFO_find(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?
): Int

@CCall("knifunptr_openssl2594_sk_PKCS7_RECIP_INFO_find_ex")
external fun sk_PKCS7_RECIP_INFO_find_ex(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    ptr: CValuesRef<PKCS7_RECIP_INFO>?
): Int

@CCall("knifunptr_openssl2595_sk_PKCS7_RECIP_INFO_sort")
external fun sk_PKCS7_RECIP_INFO_sort(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): Unit

@CCall("knifunptr_openssl2596_sk_PKCS7_RECIP_INFO_is_sorted")
external fun sk_PKCS7_RECIP_INFO_is_sorted(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): Int

@CCall("knifunptr_openssl2597_sk_PKCS7_RECIP_INFO_dup")
external fun sk_PKCS7_RECIP_INFO_dup(sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?): CPointer<stack_st_PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2598_sk_PKCS7_RECIP_INFO_deep_copy")
external fun sk_PKCS7_RECIP_INFO_deep_copy(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    copyfunc: sk_PKCS7_RECIP_INFO_copyfunc?,
    freefunc: sk_PKCS7_RECIP_INFO_freefunc?
): CPointer<stack_st_PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2599_sk_PKCS7_RECIP_INFO_set_cmp_func")
external fun sk_PKCS7_RECIP_INFO_set_cmp_func(
    sk: CValuesRef<stack_st_PKCS7_RECIP_INFO>?,
    compare: sk_PKCS7_RECIP_INFO_compfunc?
): sk_PKCS7_RECIP_INFO_compfunc?

@CCall("knifunptr_openssl2600_sk_PKCS7_num")
external fun sk_PKCS7_num(sk: CValuesRef<stack_st_PKCS7>?): Int

@CCall("knifunptr_openssl2601_sk_PKCS7_value")
external fun sk_PKCS7_value(sk: CValuesRef<stack_st_PKCS7>?, idx: Int): CPointer<PKCS7>?

@CCall("knifunptr_openssl2602_sk_PKCS7_new")
external fun sk_PKCS7_new(compare: sk_PKCS7_compfunc?): CPointer<stack_st_PKCS7>?

@CCall("knifunptr_openssl2603_sk_PKCS7_new_null")
external fun sk_PKCS7_new_null(): CPointer<stack_st_PKCS7>?

@CCall("knifunptr_openssl2604_sk_PKCS7_new_reserve")
external fun sk_PKCS7_new_reserve(compare: sk_PKCS7_compfunc?, n: Int): CPointer<stack_st_PKCS7>?

@CCall("knifunptr_openssl2605_sk_PKCS7_reserve")
external fun sk_PKCS7_reserve(sk: CValuesRef<stack_st_PKCS7>?, n: Int): Int

@CCall("knifunptr_openssl2606_sk_PKCS7_free")
external fun sk_PKCS7_free(sk: CValuesRef<stack_st_PKCS7>?): Unit

@CCall("knifunptr_openssl2607_sk_PKCS7_zero")
external fun sk_PKCS7_zero(sk: CValuesRef<stack_st_PKCS7>?): Unit

@CCall("knifunptr_openssl2608_sk_PKCS7_delete")
external fun sk_PKCS7_delete(sk: CValuesRef<stack_st_PKCS7>?, i: Int): CPointer<PKCS7>?

@CCall("knifunptr_openssl2609_sk_PKCS7_delete_ptr")
external fun sk_PKCS7_delete_ptr(sk: CValuesRef<stack_st_PKCS7>?, ptr: CValuesRef<PKCS7>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2610_sk_PKCS7_push")
external fun sk_PKCS7_push(sk: CValuesRef<stack_st_PKCS7>?, ptr: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2611_sk_PKCS7_unshift")
external fun sk_PKCS7_unshift(sk: CValuesRef<stack_st_PKCS7>?, ptr: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2612_sk_PKCS7_pop")
external fun sk_PKCS7_pop(sk: CValuesRef<stack_st_PKCS7>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2613_sk_PKCS7_shift")
external fun sk_PKCS7_shift(sk: CValuesRef<stack_st_PKCS7>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2614_sk_PKCS7_pop_free")
external fun sk_PKCS7_pop_free(sk: CValuesRef<stack_st_PKCS7>?, freefunc: sk_PKCS7_freefunc?): Unit

@CCall("knifunptr_openssl2615_sk_PKCS7_insert")
external fun sk_PKCS7_insert(sk: CValuesRef<stack_st_PKCS7>?, ptr: CValuesRef<PKCS7>?, idx: Int): Int

@CCall("knifunptr_openssl2616_sk_PKCS7_set")
external fun sk_PKCS7_set(sk: CValuesRef<stack_st_PKCS7>?, idx: Int, ptr: CValuesRef<PKCS7>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2617_sk_PKCS7_find")
external fun sk_PKCS7_find(sk: CValuesRef<stack_st_PKCS7>?, ptr: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2618_sk_PKCS7_find_ex")
external fun sk_PKCS7_find_ex(sk: CValuesRef<stack_st_PKCS7>?, ptr: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2619_sk_PKCS7_sort")
external fun sk_PKCS7_sort(sk: CValuesRef<stack_st_PKCS7>?): Unit

@CCall("knifunptr_openssl2620_sk_PKCS7_is_sorted")
external fun sk_PKCS7_is_sorted(sk: CValuesRef<stack_st_PKCS7>?): Int

@CCall("knifunptr_openssl2621_sk_PKCS7_dup")
external fun sk_PKCS7_dup(sk: CValuesRef<stack_st_PKCS7>?): CPointer<stack_st_PKCS7>?

@CCall("knifunptr_openssl2622_sk_PKCS7_deep_copy")
external fun sk_PKCS7_deep_copy(
    sk: CValuesRef<stack_st_PKCS7>?,
    copyfunc: sk_PKCS7_copyfunc?,
    freefunc: sk_PKCS7_freefunc?
): CPointer<stack_st_PKCS7>?

@CCall("knifunptr_openssl2623_sk_PKCS7_set_cmp_func")
external fun sk_PKCS7_set_cmp_func(sk: CValuesRef<stack_st_PKCS7>?, compare: sk_PKCS7_compfunc?): sk_PKCS7_compfunc?

@CCall("knifunptr_openssl2624_PKCS7_ISSUER_AND_SERIAL_new")
external fun PKCS7_ISSUER_AND_SERIAL_new(): CPointer<PKCS7_ISSUER_AND_SERIAL>?

@CCall("knifunptr_openssl2625_PKCS7_ISSUER_AND_SERIAL_free")
external fun PKCS7_ISSUER_AND_SERIAL_free(a: CValuesRef<PKCS7_ISSUER_AND_SERIAL>?): Unit

@CCall("knifunptr_openssl2626_d2i_PKCS7_ISSUER_AND_SERIAL")
external fun d2i_PKCS7_ISSUER_AND_SERIAL(
    a: CValuesRef<CPointerVar<PKCS7_ISSUER_AND_SERIAL>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_ISSUER_AND_SERIAL>?

@CCall("knifunptr_openssl2627_i2d_PKCS7_ISSUER_AND_SERIAL")
external fun i2d_PKCS7_ISSUER_AND_SERIAL(
    a: CValuesRef<PKCS7_ISSUER_AND_SERIAL>?,
    out: CValuesRef<CPointerVar<UByteVar>>?
): Int

@CCall("knifunptr_openssl2628_PKCS7_ISSUER_AND_SERIAL_digest")
external fun PKCS7_ISSUER_AND_SERIAL_digest(
    data: CValuesRef<PKCS7_ISSUER_AND_SERIAL>?,
    type: CValuesRef<EVP_MD>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2629_d2i_PKCS7_fp")
external fun d2i_PKCS7_fp(fp: CValuesRef<FILE>?, p7: CValuesRef<CPointerVar<PKCS7>>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2630_i2d_PKCS7_fp")
external fun i2d_PKCS7_fp(fp: CValuesRef<FILE>?, p7: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2631_PKCS7_dup")
external fun PKCS7_dup(p7: CValuesRef<PKCS7>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2632_d2i_PKCS7_bio")
external fun d2i_PKCS7_bio(bp: CValuesRef<BIO>?, p7: CValuesRef<CPointerVar<PKCS7>>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2633_i2d_PKCS7_bio")
external fun i2d_PKCS7_bio(bp: CValuesRef<BIO>?, p7: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2634_i2d_PKCS7_bio_stream")
external fun i2d_PKCS7_bio_stream(
    out: CValuesRef<BIO>?,
    p7: CValuesRef<PKCS7>?,
    `in`: CValuesRef<BIO>?,
    flags: Int
): Int

@CCall("knifunptr_openssl2635_PEM_write_bio_PKCS7_stream")
external fun PEM_write_bio_PKCS7_stream(
    out: CValuesRef<BIO>?,
    p7: CValuesRef<PKCS7>?,
    `in`: CValuesRef<BIO>?,
    flags: Int
): Int

@CCall("knifunptr_openssl2636_PKCS7_SIGNER_INFO_new")
external fun PKCS7_SIGNER_INFO_new(): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2637_PKCS7_SIGNER_INFO_free")
external fun PKCS7_SIGNER_INFO_free(a: CValuesRef<PKCS7_SIGNER_INFO>?): Unit

@CCall("knifunptr_openssl2638_d2i_PKCS7_SIGNER_INFO")
external fun d2i_PKCS7_SIGNER_INFO(
    a: CValuesRef<CPointerVar<PKCS7_SIGNER_INFO>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2639_i2d_PKCS7_SIGNER_INFO")
external fun i2d_PKCS7_SIGNER_INFO(a: CValuesRef<PKCS7_SIGNER_INFO>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2640_PKCS7_RECIP_INFO_new")
external fun PKCS7_RECIP_INFO_new(): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2641_PKCS7_RECIP_INFO_free")
external fun PKCS7_RECIP_INFO_free(a: CValuesRef<PKCS7_RECIP_INFO>?): Unit

@CCall("knifunptr_openssl2642_d2i_PKCS7_RECIP_INFO")
external fun d2i_PKCS7_RECIP_INFO(
    a: CValuesRef<CPointerVar<PKCS7_RECIP_INFO>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2643_i2d_PKCS7_RECIP_INFO")
external fun i2d_PKCS7_RECIP_INFO(a: CValuesRef<PKCS7_RECIP_INFO>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2644_PKCS7_SIGNED_new")
external fun PKCS7_SIGNED_new(): CPointer<PKCS7_SIGNED>?

@CCall("knifunptr_openssl2645_PKCS7_SIGNED_free")
external fun PKCS7_SIGNED_free(a: CValuesRef<PKCS7_SIGNED>?): Unit

@CCall("knifunptr_openssl2646_d2i_PKCS7_SIGNED")
external fun d2i_PKCS7_SIGNED(
    a: CValuesRef<CPointerVar<PKCS7_SIGNED>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_SIGNED>?

@CCall("knifunptr_openssl2647_i2d_PKCS7_SIGNED")
external fun i2d_PKCS7_SIGNED(a: CValuesRef<PKCS7_SIGNED>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2648_PKCS7_ENC_CONTENT_new")
external fun PKCS7_ENC_CONTENT_new(): CPointer<PKCS7_ENC_CONTENT>?

@CCall("knifunptr_openssl2649_PKCS7_ENC_CONTENT_free")
external fun PKCS7_ENC_CONTENT_free(a: CValuesRef<PKCS7_ENC_CONTENT>?): Unit

@CCall("knifunptr_openssl2650_d2i_PKCS7_ENC_CONTENT")
external fun d2i_PKCS7_ENC_CONTENT(
    a: CValuesRef<CPointerVar<PKCS7_ENC_CONTENT>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_ENC_CONTENT>?

@CCall("knifunptr_openssl2651_i2d_PKCS7_ENC_CONTENT")
external fun i2d_PKCS7_ENC_CONTENT(a: CValuesRef<PKCS7_ENC_CONTENT>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2652_PKCS7_ENVELOPE_new")
external fun PKCS7_ENVELOPE_new(): CPointer<PKCS7_ENVELOPE>?

@CCall("knifunptr_openssl2653_PKCS7_ENVELOPE_free")
external fun PKCS7_ENVELOPE_free(a: CValuesRef<PKCS7_ENVELOPE>?): Unit

@CCall("knifunptr_openssl2654_d2i_PKCS7_ENVELOPE")
external fun d2i_PKCS7_ENVELOPE(
    a: CValuesRef<CPointerVar<PKCS7_ENVELOPE>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_ENVELOPE>?

@CCall("knifunptr_openssl2655_i2d_PKCS7_ENVELOPE")
external fun i2d_PKCS7_ENVELOPE(a: CValuesRef<PKCS7_ENVELOPE>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2656_PKCS7_SIGN_ENVELOPE_new")
external fun PKCS7_SIGN_ENVELOPE_new(): CPointer<PKCS7_SIGN_ENVELOPE>?

@CCall("knifunptr_openssl2657_PKCS7_SIGN_ENVELOPE_free")
external fun PKCS7_SIGN_ENVELOPE_free(a: CValuesRef<PKCS7_SIGN_ENVELOPE>?): Unit

@CCall("knifunptr_openssl2658_d2i_PKCS7_SIGN_ENVELOPE")
external fun d2i_PKCS7_SIGN_ENVELOPE(
    a: CValuesRef<CPointerVar<PKCS7_SIGN_ENVELOPE>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_SIGN_ENVELOPE>?

@CCall("knifunptr_openssl2659_i2d_PKCS7_SIGN_ENVELOPE")
external fun i2d_PKCS7_SIGN_ENVELOPE(a: CValuesRef<PKCS7_SIGN_ENVELOPE>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2660_PKCS7_DIGEST_new")
external fun PKCS7_DIGEST_new(): CPointer<PKCS7_DIGEST>?

@CCall("knifunptr_openssl2661_PKCS7_DIGEST_free")
external fun PKCS7_DIGEST_free(a: CValuesRef<PKCS7_DIGEST>?): Unit

@CCall("knifunptr_openssl2662_d2i_PKCS7_DIGEST")
external fun d2i_PKCS7_DIGEST(
    a: CValuesRef<CPointerVar<PKCS7_DIGEST>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_DIGEST>?

@CCall("knifunptr_openssl2663_i2d_PKCS7_DIGEST")
external fun i2d_PKCS7_DIGEST(a: CValuesRef<PKCS7_DIGEST>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2664_PKCS7_ENCRYPT_new")
external fun PKCS7_ENCRYPT_new(): CPointer<PKCS7_ENCRYPT>?

@CCall("knifunptr_openssl2665_PKCS7_ENCRYPT_free")
external fun PKCS7_ENCRYPT_free(a: CValuesRef<PKCS7_ENCRYPT>?): Unit

@CCall("knifunptr_openssl2666_d2i_PKCS7_ENCRYPT")
external fun d2i_PKCS7_ENCRYPT(
    a: CValuesRef<CPointerVar<PKCS7_ENCRYPT>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7_ENCRYPT>?

@CCall("knifunptr_openssl2667_i2d_PKCS7_ENCRYPT")
external fun i2d_PKCS7_ENCRYPT(a: CValuesRef<PKCS7_ENCRYPT>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2668_PKCS7_new")
external fun PKCS7_new(): CPointer<PKCS7>?

@CCall("knifunptr_openssl2669_PKCS7_free")
external fun PKCS7_free(a: CValuesRef<PKCS7>?): Unit

@CCall("knifunptr_openssl2670_d2i_PKCS7")
external fun d2i_PKCS7(
    a: CValuesRef<CPointerVar<PKCS7>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS7>?

@CCall("knifunptr_openssl2671_i2d_PKCS7")
external fun i2d_PKCS7(a: CValuesRef<PKCS7>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2672_i2d_PKCS7_NDEF")
external fun i2d_PKCS7_NDEF(a: CValuesRef<PKCS7>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2673_PKCS7_print_ctx")
external fun PKCS7_print_ctx(
    out: CValuesRef<BIO>?,
    x: CValuesRef<PKCS7>?,
    indent: Int,
    pctx: CValuesRef<ASN1_PCTX>?
): Int

@CCall("knifunptr_openssl2674_PKCS7_ctrl")
external fun PKCS7_ctrl(p7: CValuesRef<PKCS7>?, cmd: Int, larg: Long, parg: CValuesRef<ByteVar>?): Long

@CCall("knifunptr_openssl2675_PKCS7_set_type")
external fun PKCS7_set_type(p7: CValuesRef<PKCS7>?, type: Int): Int

@CCall("knifunptr_openssl2676_PKCS7_set0_type_other")
external fun PKCS7_set0_type_other(p7: CValuesRef<PKCS7>?, type: Int, other: CValuesRef<ASN1_TYPE>?): Int

@CCall("knifunptr_openssl2677_PKCS7_set_content")
external fun PKCS7_set_content(p7: CValuesRef<PKCS7>?, p7_data: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2678_PKCS7_SIGNER_INFO_set")
external fun PKCS7_SIGNER_INFO_set(
    p7i: CValuesRef<PKCS7_SIGNER_INFO>?,
    x509: CValuesRef<X509>?,
    pkey: CValuesRef<EVP_PKEY>?,
    dgst: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl2679_PKCS7_SIGNER_INFO_sign")
external fun PKCS7_SIGNER_INFO_sign(si: CValuesRef<PKCS7_SIGNER_INFO>?): Int

@CCall("knifunptr_openssl2680_PKCS7_add_signer")
external fun PKCS7_add_signer(p7: CValuesRef<PKCS7>?, p7i: CValuesRef<PKCS7_SIGNER_INFO>?): Int

@CCall("knifunptr_openssl2681_PKCS7_add_certificate")
external fun PKCS7_add_certificate(p7: CValuesRef<PKCS7>?, x509: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2682_PKCS7_add_crl")
external fun PKCS7_add_crl(p7: CValuesRef<PKCS7>?, x509: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2683_PKCS7_content_new")
external fun PKCS7_content_new(p7: CValuesRef<PKCS7>?, nid: Int): Int

@CCall("knifunptr_openssl2684_PKCS7_dataVerify")
external fun PKCS7_dataVerify(
    cert_store: CValuesRef<X509_STORE>?,
    ctx: CValuesRef<X509_STORE_CTX>?,
    bio: CValuesRef<BIO>?,
    p7: CValuesRef<PKCS7>?,
    si: CValuesRef<PKCS7_SIGNER_INFO>?
): Int

@CCall("knifunptr_openssl2685_PKCS7_signatureVerify")
external fun PKCS7_signatureVerify(
    bio: CValuesRef<BIO>?,
    p7: CValuesRef<PKCS7>?,
    si: CValuesRef<PKCS7_SIGNER_INFO>?,
    x509: CValuesRef<X509>?
): Int

@CCall("knifunptr_openssl2686_PKCS7_dataInit")
external fun PKCS7_dataInit(p7: CValuesRef<PKCS7>?, bio: CValuesRef<BIO>?): CPointer<BIO>?

@CCall("knifunptr_openssl2687_PKCS7_dataFinal")
external fun PKCS7_dataFinal(p7: CValuesRef<PKCS7>?, bio: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl2688_PKCS7_dataDecode")
external fun PKCS7_dataDecode(
    p7: CValuesRef<PKCS7>?,
    pkey: CValuesRef<EVP_PKEY>?,
    in_bio: CValuesRef<BIO>?,
    pcert: CValuesRef<X509>?
): CPointer<BIO>?

@CCall("knifunptr_openssl2689_PKCS7_add_signature")
external fun PKCS7_add_signature(
    p7: CValuesRef<PKCS7>?,
    x509: CValuesRef<X509>?,
    pkey: CValuesRef<EVP_PKEY>?,
    dgst: CValuesRef<EVP_MD>?
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2690_PKCS7_cert_from_signer_info")
external fun PKCS7_cert_from_signer_info(p7: CValuesRef<PKCS7>?, si: CValuesRef<PKCS7_SIGNER_INFO>?): CPointer<X509>?

@CCall("knifunptr_openssl2691_PKCS7_set_digest")
external fun PKCS7_set_digest(p7: CValuesRef<PKCS7>?, md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl2692_PKCS7_get_signer_info")
external fun PKCS7_get_signer_info(p7: CValuesRef<PKCS7>?): CPointer<stack_st_PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2693_PKCS7_add_recipient")
external fun PKCS7_add_recipient(p7: CValuesRef<PKCS7>?, x509: CValuesRef<X509>?): CPointer<PKCS7_RECIP_INFO>?

@CCall("knifunptr_openssl2694_PKCS7_SIGNER_INFO_get0_algs")
external fun PKCS7_SIGNER_INFO_get0_algs(
    si: CValuesRef<PKCS7_SIGNER_INFO>?,
    pk: CValuesRef<CPointerVar<EVP_PKEY>>?,
    pdig: CValuesRef<CPointerVar<X509_ALGOR>>?,
    psig: CValuesRef<CPointerVar<X509_ALGOR>>?
): Unit

@CCall("knifunptr_openssl2695_PKCS7_RECIP_INFO_get0_alg")
external fun PKCS7_RECIP_INFO_get0_alg(
    ri: CValuesRef<PKCS7_RECIP_INFO>?,
    penc: CValuesRef<CPointerVar<X509_ALGOR>>?
): Unit

@CCall("knifunptr_openssl2696_PKCS7_add_recipient_info")
external fun PKCS7_add_recipient_info(p7: CValuesRef<PKCS7>?, ri: CValuesRef<PKCS7_RECIP_INFO>?): Int

@CCall("knifunptr_openssl2697_PKCS7_RECIP_INFO_set")
external fun PKCS7_RECIP_INFO_set(p7i: CValuesRef<PKCS7_RECIP_INFO>?, x509: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2698_PKCS7_set_cipher")
external fun PKCS7_set_cipher(p7: CValuesRef<PKCS7>?, cipher: CValuesRef<EVP_CIPHER>?): Int

@CCall("knifunptr_openssl2699_PKCS7_stream")
external fun PKCS7_stream(boundary: CValuesRef<CPointerVar<CPointerVar<UByteVar>>>?, p7: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl2700_PKCS7_get_issuer_and_serial")
external fun PKCS7_get_issuer_and_serial(p7: CValuesRef<PKCS7>?, idx: Int): CPointer<PKCS7_ISSUER_AND_SERIAL>?

@CCall("knifunptr_openssl2701_PKCS7_digest_from_attributes")
external fun PKCS7_digest_from_attributes(sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): CPointer<ASN1_OCTET_STRING>?

@CCall("knifunptr_openssl2702_PKCS7_add_signed_attribute")
external fun PKCS7_add_signed_attribute(
    p7si: CValuesRef<PKCS7_SIGNER_INFO>?,
    nid: Int,
    type: Int,
    data: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl2703_PKCS7_add_attribute")
external fun PKCS7_add_attribute(
    p7si: CValuesRef<PKCS7_SIGNER_INFO>?,
    nid: Int,
    atrtype: Int,
    value: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl2704_PKCS7_get_attribute")
external fun PKCS7_get_attribute(si: CValuesRef<PKCS7_SIGNER_INFO>?, nid: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl2705_PKCS7_get_signed_attribute")
external fun PKCS7_get_signed_attribute(si: CValuesRef<PKCS7_SIGNER_INFO>?, nid: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl2706_PKCS7_set_signed_attributes")
external fun PKCS7_set_signed_attributes(
    p7si: CValuesRef<PKCS7_SIGNER_INFO>?,
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?
): Int

@CCall("knifunptr_openssl2707_PKCS7_set_attributes")
external fun PKCS7_set_attributes(p7si: CValuesRef<PKCS7_SIGNER_INFO>?, sk: CValuesRef<stack_st_X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl2708_PKCS7_sign")
external fun PKCS7_sign(
    signcert: CValuesRef<X509>?,
    pkey: CValuesRef<EVP_PKEY>?,
    certs: CValuesRef<stack_st_X509>?,
    data: CValuesRef<BIO>?,
    flags: Int
): CPointer<PKCS7>?

@CCall("knifunptr_openssl2709_PKCS7_sign_add_signer")
external fun PKCS7_sign_add_signer(
    p7: CValuesRef<PKCS7>?,
    signcert: CValuesRef<X509>?,
    pkey: CValuesRef<EVP_PKEY>?,
    md: CValuesRef<EVP_MD>?,
    flags: Int
): CPointer<PKCS7_SIGNER_INFO>?

@CCall("knifunptr_openssl2710_PKCS7_final")
external fun PKCS7_final(p7: CValuesRef<PKCS7>?, data: CValuesRef<BIO>?, flags: Int): Int

@CCall("knifunptr_openssl2711_PKCS7_verify")
external fun PKCS7_verify(
    p7: CValuesRef<PKCS7>?,
    certs: CValuesRef<stack_st_X509>?,
    store: CValuesRef<X509_STORE>?,
    indata: CValuesRef<BIO>?,
    out: CValuesRef<BIO>?,
    flags: Int
): Int

@CCall("knifunptr_openssl2712_PKCS7_get0_signers")
external fun PKCS7_get0_signers(
    p7: CValuesRef<PKCS7>?,
    certs: CValuesRef<stack_st_X509>?,
    flags: Int
): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl2713_PKCS7_encrypt")
external fun PKCS7_encrypt(
    certs: CValuesRef<stack_st_X509>?,
    `in`: CValuesRef<BIO>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    flags: Int
): CPointer<PKCS7>?

@CCall("knifunptr_openssl2714_PKCS7_decrypt")
external fun PKCS7_decrypt(
    p7: CValuesRef<PKCS7>?,
    pkey: CValuesRef<EVP_PKEY>?,
    cert: CValuesRef<X509>?,
    data: CValuesRef<BIO>?,
    flags: Int
): Int

@CCall("knifunptr_openssl2715_PKCS7_add_attrib_smimecap")
external fun PKCS7_add_attrib_smimecap(si: CValuesRef<PKCS7_SIGNER_INFO>?, cap: CValuesRef<stack_st_X509_ALGOR>?): Int

@CCall("knifunptr_openssl2716_PKCS7_get_smimecap")
external fun PKCS7_get_smimecap(si: CValuesRef<PKCS7_SIGNER_INFO>?): CPointer<stack_st_X509_ALGOR>?

@CCall("knifunptr_openssl2717_PKCS7_simple_smimecap")
external fun PKCS7_simple_smimecap(sk: CValuesRef<stack_st_X509_ALGOR>?, nid: Int, arg: Int): Int

@CCall("knifunptr_openssl2718_PKCS7_add_attrib_content_type")
external fun PKCS7_add_attrib_content_type(si: CValuesRef<PKCS7_SIGNER_INFO>?, coid: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl2719_PKCS7_add0_attrib_signing_time")
external fun PKCS7_add0_attrib_signing_time(si: CValuesRef<PKCS7_SIGNER_INFO>?, t: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl2720_PKCS7_add1_attrib_digest")
external fun PKCS7_add1_attrib_digest(si: CValuesRef<PKCS7_SIGNER_INFO>?, md: CValuesRef<UByteVar>?, mdlen: Int): Int

@CCall("knifunptr_openssl2721_SMIME_write_PKCS7")
external fun SMIME_write_PKCS7(bio: CValuesRef<BIO>?, p7: CValuesRef<PKCS7>?, data: CValuesRef<BIO>?, flags: Int): Int

@CCall("knifunptr_openssl2722_SMIME_read_PKCS7")
external fun SMIME_read_PKCS7(bio: CValuesRef<BIO>?, bcont: CValuesRef<CPointerVar<BIO>>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl2723_BIO_new_PKCS7")
external fun BIO_new_PKCS7(out: CValuesRef<BIO>?, p7: CValuesRef<PKCS7>?): CPointer<BIO>?

@CCall("knifunptr_openssl2724_X509_CRL_set_default_method")
external fun X509_CRL_set_default_method(meth: CValuesRef<X509_CRL_METHOD>?): Unit

@CCall("knifunptr_openssl2725_X509_CRL_METHOD_new")
external fun X509_CRL_METHOD_new(
    crl_init: CPointer<CFunction<(CPointer<X509_CRL>?) -> Int>>?,
    crl_free: CPointer<CFunction<(CPointer<X509_CRL>?) -> Int>>?,
    crl_lookup: CPointer<CFunction<(CPointer<X509_CRL>?, CPointer<CPointerVar<X509_REVOKED>>?, CPointer<ASN1_INTEGER>?, CPointer<X509_NAME>?) -> Int>>?,
    crl_verify: CPointer<CFunction<(CPointer<X509_CRL>?, CPointer<EVP_PKEY>?) -> Int>>?
): CPointer<X509_CRL_METHOD>?

@CCall("knifunptr_openssl2726_X509_CRL_METHOD_free")
external fun X509_CRL_METHOD_free(m: CValuesRef<X509_CRL_METHOD>?): Unit

@CCall("knifunptr_openssl2727_X509_CRL_set_meth_data")
external fun X509_CRL_set_meth_data(crl: CValuesRef<X509_CRL>?, dat: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl2728_X509_CRL_get_meth_data")
external fun X509_CRL_get_meth_data(crl: CValuesRef<X509_CRL>?): COpaquePointer?

@CCall("knifunptr_openssl2729_X509_verify_cert_error_string")
external fun X509_verify_cert_error_string(n: Long): CPointer<ByteVar>?

@CCall("knifunptr_openssl2730_X509_verify")
external fun X509_verify(a: CValuesRef<X509>?, r: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2731_X509_REQ_verify")
external fun X509_REQ_verify(a: CValuesRef<X509_REQ>?, r: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2732_X509_CRL_verify")
external fun X509_CRL_verify(a: CValuesRef<X509_CRL>?, r: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2733_NETSCAPE_SPKI_verify")
external fun NETSCAPE_SPKI_verify(a: CValuesRef<NETSCAPE_SPKI>?, r: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2734_NETSCAPE_SPKI_b64_decode")
external fun NETSCAPE_SPKI_b64_decode(@CCall.CString str: String?, len: Int): CPointer<NETSCAPE_SPKI>?

@CCall("knifunptr_openssl2735_NETSCAPE_SPKI_b64_encode")
external fun NETSCAPE_SPKI_b64_encode(x: CValuesRef<NETSCAPE_SPKI>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl2736_NETSCAPE_SPKI_get_pubkey")
external fun NETSCAPE_SPKI_get_pubkey(x: CValuesRef<NETSCAPE_SPKI>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2737_NETSCAPE_SPKI_set_pubkey")
external fun NETSCAPE_SPKI_set_pubkey(x: CValuesRef<NETSCAPE_SPKI>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2738_NETSCAPE_SPKI_print")
external fun NETSCAPE_SPKI_print(out: CValuesRef<BIO>?, spki: CValuesRef<NETSCAPE_SPKI>?): Int

@CCall("knifunptr_openssl2739_X509_signature_dump")
external fun X509_signature_dump(bp: CValuesRef<BIO>?, sig: CValuesRef<ASN1_STRING>?, indent: Int): Int

@CCall("knifunptr_openssl2740_X509_signature_print")
external fun X509_signature_print(
    bp: CValuesRef<BIO>?,
    alg: CValuesRef<X509_ALGOR>?,
    sig: CValuesRef<ASN1_STRING>?
): Int

@CCall("knifunptr_openssl2741_X509_sign")
external fun X509_sign(x: CValuesRef<X509>?, pkey: CValuesRef<EVP_PKEY>?, md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl2742_X509_sign_ctx")
external fun X509_sign_ctx(x: CValuesRef<X509>?, ctx: CValuesRef<EVP_MD_CTX>?): Int

@CCall("knifunptr_openssl2743_X509_http_nbio")
external fun X509_http_nbio(rctx: CValuesRef<OCSP_REQ_CTX>?, pcert: CValuesRef<CPointerVar<X509>>?): Int

@CCall("knifunptr_openssl2744_X509_REQ_sign")
external fun X509_REQ_sign(x: CValuesRef<X509_REQ>?, pkey: CValuesRef<EVP_PKEY>?, md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl2745_X509_REQ_sign_ctx")
external fun X509_REQ_sign_ctx(x: CValuesRef<X509_REQ>?, ctx: CValuesRef<EVP_MD_CTX>?): Int

@CCall("knifunptr_openssl2746_X509_CRL_sign")
external fun X509_CRL_sign(x: CValuesRef<X509_CRL>?, pkey: CValuesRef<EVP_PKEY>?, md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl2747_X509_CRL_sign_ctx")
external fun X509_CRL_sign_ctx(x: CValuesRef<X509_CRL>?, ctx: CValuesRef<EVP_MD_CTX>?): Int

@CCall("knifunptr_openssl2748_X509_CRL_http_nbio")
external fun X509_CRL_http_nbio(rctx: CValuesRef<OCSP_REQ_CTX>?, pcrl: CValuesRef<CPointerVar<X509_CRL>>?): Int

@CCall("knifunptr_openssl2749_NETSCAPE_SPKI_sign")
external fun NETSCAPE_SPKI_sign(
    x: CValuesRef<NETSCAPE_SPKI>?,
    pkey: CValuesRef<EVP_PKEY>?,
    md: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl2750_X509_pubkey_digest")
external fun X509_pubkey_digest(
    data: CValuesRef<X509>?,
    type: CValuesRef<EVP_MD>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2751_X509_digest")
external fun X509_digest(
    data: CValuesRef<X509>?,
    type: CValuesRef<EVP_MD>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2752_X509_CRL_digest")
external fun X509_CRL_digest(
    data: CValuesRef<X509_CRL>?,
    type: CValuesRef<EVP_MD>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2753_X509_REQ_digest")
external fun X509_REQ_digest(
    data: CValuesRef<X509_REQ>?,
    type: CValuesRef<EVP_MD>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2754_X509_NAME_digest")
external fun X509_NAME_digest(
    data: CValuesRef<X509_NAME>?,
    type: CValuesRef<EVP_MD>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2755_d2i_X509_fp")
external fun d2i_X509_fp(fp: CValuesRef<FILE>?, x509: CValuesRef<CPointerVar<X509>>?): CPointer<X509>?

@CCall("knifunptr_openssl2756_i2d_X509_fp")
external fun i2d_X509_fp(fp: CValuesRef<FILE>?, x509: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2757_d2i_X509_CRL_fp")
external fun d2i_X509_CRL_fp(fp: CValuesRef<FILE>?, crl: CValuesRef<CPointerVar<X509_CRL>>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2758_i2d_X509_CRL_fp")
external fun i2d_X509_CRL_fp(fp: CValuesRef<FILE>?, crl: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2759_d2i_X509_REQ_fp")
external fun d2i_X509_REQ_fp(fp: CValuesRef<FILE>?, req: CValuesRef<CPointerVar<X509_REQ>>?): CPointer<X509_REQ>?

@CCall("knifunptr_openssl2760_i2d_X509_REQ_fp")
external fun i2d_X509_REQ_fp(fp: CValuesRef<FILE>?, req: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl2761_d2i_RSAPrivateKey_fp")
external fun d2i_RSAPrivateKey_fp(fp: CValuesRef<FILE>?, rsa: CValuesRef<CPointerVar<RSA>>?): CPointer<RSA>?

@CCall("knifunptr_openssl2762_i2d_RSAPrivateKey_fp")
external fun i2d_RSAPrivateKey_fp(fp: CValuesRef<FILE>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl2763_d2i_RSAPublicKey_fp")
external fun d2i_RSAPublicKey_fp(fp: CValuesRef<FILE>?, rsa: CValuesRef<CPointerVar<RSA>>?): CPointer<RSA>?

@CCall("knifunptr_openssl2764_i2d_RSAPublicKey_fp")
external fun i2d_RSAPublicKey_fp(fp: CValuesRef<FILE>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl2765_d2i_RSA_PUBKEY_fp")
external fun d2i_RSA_PUBKEY_fp(fp: CValuesRef<FILE>?, rsa: CValuesRef<CPointerVar<RSA>>?): CPointer<RSA>?

@CCall("knifunptr_openssl2766_i2d_RSA_PUBKEY_fp")
external fun i2d_RSA_PUBKEY_fp(fp: CValuesRef<FILE>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl2767_d2i_DSA_PUBKEY_fp")
external fun d2i_DSA_PUBKEY_fp(fp: CValuesRef<FILE>?, dsa: CValuesRef<CPointerVar<DSA>>?): CPointer<DSA>?

@CCall("knifunptr_openssl2768_i2d_DSA_PUBKEY_fp")
external fun i2d_DSA_PUBKEY_fp(fp: CValuesRef<FILE>?, dsa: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl2769_d2i_DSAPrivateKey_fp")
external fun d2i_DSAPrivateKey_fp(fp: CValuesRef<FILE>?, dsa: CValuesRef<CPointerVar<DSA>>?): CPointer<DSA>?

@CCall("knifunptr_openssl2770_i2d_DSAPrivateKey_fp")
external fun i2d_DSAPrivateKey_fp(fp: CValuesRef<FILE>?, dsa: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl2771_d2i_EC_PUBKEY_fp")
external fun d2i_EC_PUBKEY_fp(fp: CValuesRef<FILE>?, eckey: CValuesRef<CPointerVar<EC_KEY>>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl2772_i2d_EC_PUBKEY_fp")
external fun i2d_EC_PUBKEY_fp(fp: CValuesRef<FILE>?, eckey: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl2773_d2i_ECPrivateKey_fp")
external fun d2i_ECPrivateKey_fp(fp: CValuesRef<FILE>?, eckey: CValuesRef<CPointerVar<EC_KEY>>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl2774_i2d_ECPrivateKey_fp")
external fun i2d_ECPrivateKey_fp(fp: CValuesRef<FILE>?, eckey: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl2775_d2i_PKCS8_fp")
external fun d2i_PKCS8_fp(fp: CValuesRef<FILE>?, p8: CValuesRef<CPointerVar<X509_SIG>>?): CPointer<X509_SIG>?

@CCall("knifunptr_openssl2776_i2d_PKCS8_fp")
external fun i2d_PKCS8_fp(fp: CValuesRef<FILE>?, p8: CValuesRef<X509_SIG>?): Int

@CCall("knifunptr_openssl2777_d2i_PKCS8_PRIV_KEY_INFO_fp")
external fun d2i_PKCS8_PRIV_KEY_INFO_fp(
    fp: CValuesRef<FILE>?,
    p8inf: CValuesRef<CPointerVar<PKCS8_PRIV_KEY_INFO>>?
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl2778_i2d_PKCS8_PRIV_KEY_INFO_fp")
external fun i2d_PKCS8_PRIV_KEY_INFO_fp(fp: CValuesRef<FILE>?, p8inf: CValuesRef<PKCS8_PRIV_KEY_INFO>?): Int

@CCall("knifunptr_openssl2779_i2d_PKCS8PrivateKeyInfo_fp")
external fun i2d_PKCS8PrivateKeyInfo_fp(fp: CValuesRef<FILE>?, key: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2780_i2d_PrivateKey_fp")
external fun i2d_PrivateKey_fp(fp: CValuesRef<FILE>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2781_d2i_PrivateKey_fp")
external fun d2i_PrivateKey_fp(fp: CValuesRef<FILE>?, a: CValuesRef<CPointerVar<EVP_PKEY>>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2782_i2d_PUBKEY_fp")
external fun i2d_PUBKEY_fp(fp: CValuesRef<FILE>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2783_d2i_PUBKEY_fp")
external fun d2i_PUBKEY_fp(fp: CValuesRef<FILE>?, a: CValuesRef<CPointerVar<EVP_PKEY>>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2784_d2i_X509_bio")
external fun d2i_X509_bio(bp: CValuesRef<BIO>?, x509: CValuesRef<CPointerVar<X509>>?): CPointer<X509>?

@CCall("knifunptr_openssl2785_i2d_X509_bio")
external fun i2d_X509_bio(bp: CValuesRef<BIO>?, x509: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2786_d2i_X509_CRL_bio")
external fun d2i_X509_CRL_bio(bp: CValuesRef<BIO>?, crl: CValuesRef<CPointerVar<X509_CRL>>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2787_i2d_X509_CRL_bio")
external fun i2d_X509_CRL_bio(bp: CValuesRef<BIO>?, crl: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl2788_d2i_X509_REQ_bio")
external fun d2i_X509_REQ_bio(bp: CValuesRef<BIO>?, req: CValuesRef<CPointerVar<X509_REQ>>?): CPointer<X509_REQ>?

@CCall("knifunptr_openssl2789_i2d_X509_REQ_bio")
external fun i2d_X509_REQ_bio(bp: CValuesRef<BIO>?, req: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl2790_d2i_RSAPrivateKey_bio")
external fun d2i_RSAPrivateKey_bio(bp: CValuesRef<BIO>?, rsa: CValuesRef<CPointerVar<RSA>>?): CPointer<RSA>?

@CCall("knifunptr_openssl2791_i2d_RSAPrivateKey_bio")
external fun i2d_RSAPrivateKey_bio(bp: CValuesRef<BIO>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl2792_d2i_RSAPublicKey_bio")
external fun d2i_RSAPublicKey_bio(bp: CValuesRef<BIO>?, rsa: CValuesRef<CPointerVar<RSA>>?): CPointer<RSA>?

@CCall("knifunptr_openssl2793_i2d_RSAPublicKey_bio")
external fun i2d_RSAPublicKey_bio(bp: CValuesRef<BIO>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl2794_d2i_RSA_PUBKEY_bio")
external fun d2i_RSA_PUBKEY_bio(bp: CValuesRef<BIO>?, rsa: CValuesRef<CPointerVar<RSA>>?): CPointer<RSA>?

@CCall("knifunptr_openssl2795_i2d_RSA_PUBKEY_bio")
external fun i2d_RSA_PUBKEY_bio(bp: CValuesRef<BIO>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl2796_d2i_DSA_PUBKEY_bio")
external fun d2i_DSA_PUBKEY_bio(bp: CValuesRef<BIO>?, dsa: CValuesRef<CPointerVar<DSA>>?): CPointer<DSA>?

@CCall("knifunptr_openssl2797_i2d_DSA_PUBKEY_bio")
external fun i2d_DSA_PUBKEY_bio(bp: CValuesRef<BIO>?, dsa: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl2798_d2i_DSAPrivateKey_bio")
external fun d2i_DSAPrivateKey_bio(bp: CValuesRef<BIO>?, dsa: CValuesRef<CPointerVar<DSA>>?): CPointer<DSA>?

@CCall("knifunptr_openssl2799_i2d_DSAPrivateKey_bio")
external fun i2d_DSAPrivateKey_bio(bp: CValuesRef<BIO>?, dsa: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl2800_d2i_EC_PUBKEY_bio")
external fun d2i_EC_PUBKEY_bio(bp: CValuesRef<BIO>?, eckey: CValuesRef<CPointerVar<EC_KEY>>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl2801_i2d_EC_PUBKEY_bio")
external fun i2d_EC_PUBKEY_bio(bp: CValuesRef<BIO>?, eckey: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl2802_d2i_ECPrivateKey_bio")
external fun d2i_ECPrivateKey_bio(bp: CValuesRef<BIO>?, eckey: CValuesRef<CPointerVar<EC_KEY>>?): CPointer<EC_KEY>?

@CCall("knifunptr_openssl2803_i2d_ECPrivateKey_bio")
external fun i2d_ECPrivateKey_bio(bp: CValuesRef<BIO>?, eckey: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl2804_d2i_PKCS8_bio")
external fun d2i_PKCS8_bio(bp: CValuesRef<BIO>?, p8: CValuesRef<CPointerVar<X509_SIG>>?): CPointer<X509_SIG>?

@CCall("knifunptr_openssl2805_i2d_PKCS8_bio")
external fun i2d_PKCS8_bio(bp: CValuesRef<BIO>?, p8: CValuesRef<X509_SIG>?): Int

@CCall("knifunptr_openssl2806_d2i_PKCS8_PRIV_KEY_INFO_bio")
external fun d2i_PKCS8_PRIV_KEY_INFO_bio(
    bp: CValuesRef<BIO>?,
    p8inf: CValuesRef<CPointerVar<PKCS8_PRIV_KEY_INFO>>?
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl2807_i2d_PKCS8_PRIV_KEY_INFO_bio")
external fun i2d_PKCS8_PRIV_KEY_INFO_bio(bp: CValuesRef<BIO>?, p8inf: CValuesRef<PKCS8_PRIV_KEY_INFO>?): Int

@CCall("knifunptr_openssl2808_i2d_PKCS8PrivateKeyInfo_bio")
external fun i2d_PKCS8PrivateKeyInfo_bio(bp: CValuesRef<BIO>?, key: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2809_i2d_PrivateKey_bio")
external fun i2d_PrivateKey_bio(bp: CValuesRef<BIO>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2810_d2i_PrivateKey_bio")
external fun d2i_PrivateKey_bio(bp: CValuesRef<BIO>?, a: CValuesRef<CPointerVar<EVP_PKEY>>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2811_i2d_PUBKEY_bio")
external fun i2d_PUBKEY_bio(bp: CValuesRef<BIO>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2812_d2i_PUBKEY_bio")
external fun d2i_PUBKEY_bio(bp: CValuesRef<BIO>?, a: CValuesRef<CPointerVar<EVP_PKEY>>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2813_X509_dup")
external fun X509_dup(x509: CValuesRef<X509>?): CPointer<X509>?

@CCall("knifunptr_openssl2814_X509_ATTRIBUTE_dup")
external fun X509_ATTRIBUTE_dup(xa: CValuesRef<X509_ATTRIBUTE>?): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2815_X509_EXTENSION_dup")
external fun X509_EXTENSION_dup(ex: CValuesRef<X509_EXTENSION>?): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2816_X509_CRL_dup")
external fun X509_CRL_dup(crl: CValuesRef<X509_CRL>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2817_X509_REVOKED_dup")
external fun X509_REVOKED_dup(rev: CValuesRef<X509_REVOKED>?): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2818_X509_REQ_dup")
external fun X509_REQ_dup(req: CValuesRef<X509_REQ>?): CPointer<X509_REQ>?

@CCall("knifunptr_openssl2819_X509_ALGOR_dup")
external fun X509_ALGOR_dup(xn: CValuesRef<X509_ALGOR>?): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl2820_X509_ALGOR_set0")
external fun X509_ALGOR_set0(
    alg: CValuesRef<X509_ALGOR>?,
    aobj: CValuesRef<ASN1_OBJECT>?,
    ptype: Int,
    pval: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl2821_X509_ALGOR_get0")
external fun X509_ALGOR_get0(
    paobj: CValuesRef<CPointerVar<ASN1_OBJECT>>?,
    pptype: CValuesRef<IntVar>?,
    ppval: CValuesRef<COpaquePointerVar>?,
    algor: CValuesRef<X509_ALGOR>?
): Unit

@CCall("knifunptr_openssl2822_X509_ALGOR_set_md")
external fun X509_ALGOR_set_md(alg: CValuesRef<X509_ALGOR>?, md: CValuesRef<EVP_MD>?): Unit

@CCall("knifunptr_openssl2823_X509_ALGOR_cmp")
external fun X509_ALGOR_cmp(a: CValuesRef<X509_ALGOR>?, b: CValuesRef<X509_ALGOR>?): Int

@CCall("knifunptr_openssl2824_X509_NAME_dup")
external fun X509_NAME_dup(xn: CValuesRef<X509_NAME>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2825_X509_NAME_ENTRY_dup")
external fun X509_NAME_ENTRY_dup(ne: CValuesRef<X509_NAME_ENTRY>?): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2826_X509_cmp_time")
external fun X509_cmp_time(s: CValuesRef<ASN1_TIME>?, t: CValuesRef<time_tVar>?): Int

@CCall("knifunptr_openssl2827_X509_cmp_current_time")
external fun X509_cmp_current_time(s: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl2828_X509_time_adj")
external fun X509_time_adj(s: CValuesRef<ASN1_TIME>?, adj: Long, t: CValuesRef<time_tVar>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2829_X509_time_adj_ex")
external fun X509_time_adj_ex(
    s: CValuesRef<ASN1_TIME>?,
    offset_day: Int,
    offset_sec: Long,
    t: CValuesRef<time_tVar>?
): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2830_X509_gmtime_adj")
external fun X509_gmtime_adj(s: CValuesRef<ASN1_TIME>?, adj: Long): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2831_X509_get_default_cert_area")
external fun X509_get_default_cert_area(): CPointer<ByteVar>?

@CCall("knifunptr_openssl2832_X509_get_default_cert_dir")
external fun X509_get_default_cert_dir(): CPointer<ByteVar>?

@CCall("knifunptr_openssl2833_X509_get_default_cert_file")
external fun X509_get_default_cert_file(): CPointer<ByteVar>?

@CCall("knifunptr_openssl2834_X509_get_default_cert_dir_env")
external fun X509_get_default_cert_dir_env(): CPointer<ByteVar>?

@CCall("knifunptr_openssl2835_X509_get_default_cert_file_env")
external fun X509_get_default_cert_file_env(): CPointer<ByteVar>?

@CCall("knifunptr_openssl2836_X509_get_default_private_dir")
external fun X509_get_default_private_dir(): CPointer<ByteVar>?

@CCall("knifunptr_openssl2837_X509_to_X509_REQ")
external fun X509_to_X509_REQ(
    x: CValuesRef<X509>?,
    pkey: CValuesRef<EVP_PKEY>?,
    md: CValuesRef<EVP_MD>?
): CPointer<X509_REQ>?

@CCall("knifunptr_openssl2838_X509_REQ_to_X509")
external fun X509_REQ_to_X509(r: CValuesRef<X509_REQ>?, days: Int, pkey: CValuesRef<EVP_PKEY>?): CPointer<X509>?

@CCall("knifunptr_openssl2839_X509_ALGOR_new")
external fun X509_ALGOR_new(): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl2840_X509_ALGOR_free")
external fun X509_ALGOR_free(a: CValuesRef<X509_ALGOR>?): Unit

@CCall("knifunptr_openssl2841_d2i_X509_ALGOR")
external fun d2i_X509_ALGOR(
    a: CValuesRef<CPointerVar<X509_ALGOR>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl2842_i2d_X509_ALGOR")
external fun i2d_X509_ALGOR(a: CValuesRef<X509_ALGOR>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2843_d2i_X509_ALGORS")
external fun d2i_X509_ALGORS(
    a: CValuesRef<CPointerVar<X509_ALGORS>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_ALGORS>?

@CCall("knifunptr_openssl2844_i2d_X509_ALGORS")
external fun i2d_X509_ALGORS(a: CValuesRef<X509_ALGORS>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2845_X509_VAL_new")
external fun X509_VAL_new(): CPointer<X509_VAL>?

@CCall("knifunptr_openssl2846_X509_VAL_free")
external fun X509_VAL_free(a: CValuesRef<X509_VAL>?): Unit

@CCall("knifunptr_openssl2847_d2i_X509_VAL")
external fun d2i_X509_VAL(
    a: CValuesRef<CPointerVar<X509_VAL>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_VAL>?

@CCall("knifunptr_openssl2848_i2d_X509_VAL")
external fun i2d_X509_VAL(a: CValuesRef<X509_VAL>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2849_X509_PUBKEY_new")
external fun X509_PUBKEY_new(): CPointer<X509_PUBKEY>?

@CCall("knifunptr_openssl2850_X509_PUBKEY_free")
external fun X509_PUBKEY_free(a: CValuesRef<X509_PUBKEY>?): Unit

@CCall("knifunptr_openssl2851_d2i_X509_PUBKEY")
external fun d2i_X509_PUBKEY(
    a: CValuesRef<CPointerVar<X509_PUBKEY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_PUBKEY>?

@CCall("knifunptr_openssl2852_i2d_X509_PUBKEY")
external fun i2d_X509_PUBKEY(a: CValuesRef<X509_PUBKEY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2853_X509_PUBKEY_set")
external fun X509_PUBKEY_set(x: CValuesRef<CPointerVar<X509_PUBKEY>>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2854_X509_PUBKEY_get0")
external fun X509_PUBKEY_get0(key: CValuesRef<X509_PUBKEY>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2855_X509_PUBKEY_get")
external fun X509_PUBKEY_get(key: CValuesRef<X509_PUBKEY>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2856_X509_get_pubkey_parameters")
external fun X509_get_pubkey_parameters(pkey: CValuesRef<EVP_PKEY>?, chain: CValuesRef<stack_st_X509>?): Int

@CCall("knifunptr_openssl2857_X509_get_pathlen")
external fun X509_get_pathlen(x: CValuesRef<X509>?): Long

@CCall("knifunptr_openssl2858_i2d_PUBKEY")
external fun i2d_PUBKEY(a: CValuesRef<EVP_PKEY>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2859_d2i_PUBKEY")
external fun d2i_PUBKEY(
    a: CValuesRef<CPointerVar<EVP_PKEY>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2860_i2d_RSA_PUBKEY")
external fun i2d_RSA_PUBKEY(a: CValuesRef<RSA>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2861_d2i_RSA_PUBKEY")
external fun d2i_RSA_PUBKEY(
    a: CValuesRef<CPointerVar<RSA>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<RSA>?

@CCall("knifunptr_openssl2862_i2d_DSA_PUBKEY")
external fun i2d_DSA_PUBKEY(a: CValuesRef<DSA>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2863_d2i_DSA_PUBKEY")
external fun d2i_DSA_PUBKEY(
    a: CValuesRef<CPointerVar<DSA>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<DSA>?

@CCall("knifunptr_openssl2864_i2d_EC_PUBKEY")
external fun i2d_EC_PUBKEY(a: CValuesRef<EC_KEY>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2865_d2i_EC_PUBKEY")
external fun d2i_EC_PUBKEY(
    a: CValuesRef<CPointerVar<EC_KEY>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl2866_X509_SIG_new")
external fun X509_SIG_new(): CPointer<X509_SIG>?

@CCall("knifunptr_openssl2867_X509_SIG_free")
external fun X509_SIG_free(a: CValuesRef<X509_SIG>?): Unit

@CCall("knifunptr_openssl2868_d2i_X509_SIG")
external fun d2i_X509_SIG(
    a: CValuesRef<CPointerVar<X509_SIG>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_SIG>?

@CCall("knifunptr_openssl2869_i2d_X509_SIG")
external fun i2d_X509_SIG(a: CValuesRef<X509_SIG>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2870_X509_SIG_get0")
external fun X509_SIG_get0(
    sig: CValuesRef<X509_SIG>?,
    palg: CValuesRef<CPointerVar<X509_ALGOR>>?,
    pdigest: CValuesRef<CPointerVar<ASN1_OCTET_STRING>>?
): Unit

@CCall("knifunptr_openssl2871_X509_SIG_getm")
external fun X509_SIG_getm(
    sig: CValuesRef<X509_SIG>?,
    palg: CValuesRef<CPointerVar<X509_ALGOR>>?,
    pdigest: CValuesRef<CPointerVar<ASN1_OCTET_STRING>>?
): Unit

@CCall("knifunptr_openssl2872_X509_REQ_INFO_new")
external fun X509_REQ_INFO_new(): CPointer<X509_REQ_INFO>?

@CCall("knifunptr_openssl2873_X509_REQ_INFO_free")
external fun X509_REQ_INFO_free(a: CValuesRef<X509_REQ_INFO>?): Unit

@CCall("knifunptr_openssl2874_d2i_X509_REQ_INFO")
external fun d2i_X509_REQ_INFO(
    a: CValuesRef<CPointerVar<X509_REQ_INFO>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_REQ_INFO>?

@CCall("knifunptr_openssl2875_i2d_X509_REQ_INFO")
external fun i2d_X509_REQ_INFO(a: CValuesRef<X509_REQ_INFO>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2876_X509_REQ_new")
external fun X509_REQ_new(): CPointer<X509_REQ>?

@CCall("knifunptr_openssl2877_X509_REQ_free")
external fun X509_REQ_free(a: CValuesRef<X509_REQ>?): Unit

@CCall("knifunptr_openssl2878_d2i_X509_REQ")
external fun d2i_X509_REQ(
    a: CValuesRef<CPointerVar<X509_REQ>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_REQ>?

@CCall("knifunptr_openssl2879_i2d_X509_REQ")
external fun i2d_X509_REQ(a: CValuesRef<X509_REQ>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2880_X509_ATTRIBUTE_new")
external fun X509_ATTRIBUTE_new(): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2881_X509_ATTRIBUTE_free")
external fun X509_ATTRIBUTE_free(a: CValuesRef<X509_ATTRIBUTE>?): Unit

@CCall("knifunptr_openssl2882_d2i_X509_ATTRIBUTE")
external fun d2i_X509_ATTRIBUTE(
    a: CValuesRef<CPointerVar<X509_ATTRIBUTE>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2883_i2d_X509_ATTRIBUTE")
external fun i2d_X509_ATTRIBUTE(a: CValuesRef<X509_ATTRIBUTE>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2884_X509_ATTRIBUTE_create")
external fun X509_ATTRIBUTE_create(nid: Int, atrtype: Int, value: CValuesRef<*>?): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl2885_X509_EXTENSION_new")
external fun X509_EXTENSION_new(): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2886_X509_EXTENSION_free")
external fun X509_EXTENSION_free(a: CValuesRef<X509_EXTENSION>?): Unit

@CCall("knifunptr_openssl2887_d2i_X509_EXTENSION")
external fun d2i_X509_EXTENSION(
    a: CValuesRef<CPointerVar<X509_EXTENSION>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl2888_i2d_X509_EXTENSION")
external fun i2d_X509_EXTENSION(a: CValuesRef<X509_EXTENSION>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2889_d2i_X509_EXTENSIONS")
external fun d2i_X509_EXTENSIONS(
    a: CValuesRef<CPointerVar<X509_EXTENSIONS>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_EXTENSIONS>?

@CCall("knifunptr_openssl2890_i2d_X509_EXTENSIONS")
external fun i2d_X509_EXTENSIONS(a: CValuesRef<X509_EXTENSIONS>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2891_X509_NAME_ENTRY_new")
external fun X509_NAME_ENTRY_new(): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2892_X509_NAME_ENTRY_free")
external fun X509_NAME_ENTRY_free(a: CValuesRef<X509_NAME_ENTRY>?): Unit

@CCall("knifunptr_openssl2893_d2i_X509_NAME_ENTRY")
external fun d2i_X509_NAME_ENTRY(
    a: CValuesRef<CPointerVar<X509_NAME_ENTRY>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl2894_i2d_X509_NAME_ENTRY")
external fun i2d_X509_NAME_ENTRY(a: CValuesRef<X509_NAME_ENTRY>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2895_X509_NAME_new")
external fun X509_NAME_new(): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2896_X509_NAME_free")
external fun X509_NAME_free(a: CValuesRef<X509_NAME>?): Unit

@CCall("knifunptr_openssl2897_d2i_X509_NAME")
external fun d2i_X509_NAME(
    a: CValuesRef<CPointerVar<X509_NAME>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2898_i2d_X509_NAME")
external fun i2d_X509_NAME(a: CValuesRef<X509_NAME>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2899_X509_NAME_set")
external fun X509_NAME_set(xn: CValuesRef<CPointerVar<X509_NAME>>?, name: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2900_X509_CINF_new")
external fun X509_CINF_new(): CPointer<X509_CINF>?

@CCall("knifunptr_openssl2901_X509_CINF_free")
external fun X509_CINF_free(a: CValuesRef<X509_CINF>?): Unit

@CCall("knifunptr_openssl2902_d2i_X509_CINF")
external fun d2i_X509_CINF(
    a: CValuesRef<CPointerVar<X509_CINF>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_CINF>?

@CCall("knifunptr_openssl2903_i2d_X509_CINF")
external fun i2d_X509_CINF(a: CValuesRef<X509_CINF>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2904_X509_new")
external fun X509_new(): CPointer<X509>?

@CCall("knifunptr_openssl2905_X509_free")
external fun X509_free(a: CValuesRef<X509>?): Unit

@CCall("knifunptr_openssl2906_d2i_X509")
external fun d2i_X509(
    a: CValuesRef<CPointerVar<X509>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509>?

@CCall("knifunptr_openssl2907_i2d_X509")
external fun i2d_X509(a: CValuesRef<X509>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2908_X509_CERT_AUX_new")
external fun X509_CERT_AUX_new(): CPointer<X509_CERT_AUX>?

@CCall("knifunptr_openssl2909_X509_CERT_AUX_free")
external fun X509_CERT_AUX_free(a: CValuesRef<X509_CERT_AUX>?): Unit

@CCall("knifunptr_openssl2910_d2i_X509_CERT_AUX")
external fun d2i_X509_CERT_AUX(
    a: CValuesRef<CPointerVar<X509_CERT_AUX>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_CERT_AUX>?

@CCall("knifunptr_openssl2911_i2d_X509_CERT_AUX")
external fun i2d_X509_CERT_AUX(a: CValuesRef<X509_CERT_AUX>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2912_X509_set_ex_data")
external fun X509_set_ex_data(r: CValuesRef<X509>?, idx: Int, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl2913_X509_get_ex_data")
external fun X509_get_ex_data(r: CValuesRef<X509>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl2914_i2d_X509_AUX")
external fun i2d_X509_AUX(a: CValuesRef<X509>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2915_d2i_X509_AUX")
external fun d2i_X509_AUX(
    a: CValuesRef<CPointerVar<X509>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<X509>?

@CCall("knifunptr_openssl2916_i2d_re_X509_tbs")
external fun i2d_re_X509_tbs(x: CValuesRef<X509>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2917_X509_SIG_INFO_get")
external fun X509_SIG_INFO_get(
    siginf: CValuesRef<X509_SIG_INFO>?,
    mdnid: CValuesRef<IntVar>?,
    pknid: CValuesRef<IntVar>?,
    secbits: CValuesRef<IntVar>?,
    flags: CValuesRef<uint32_tVar>?
): Int

@CCall("knifunptr_openssl2918_X509_SIG_INFO_set")
external fun X509_SIG_INFO_set(
    siginf: CValuesRef<X509_SIG_INFO>?,
    mdnid: Int,
    pknid: Int,
    secbits: Int,
    flags: uint32_t
): Unit

@CCall("knifunptr_openssl2919_X509_get_signature_info")
external fun X509_get_signature_info(
    x: CValuesRef<X509>?,
    mdnid: CValuesRef<IntVar>?,
    pknid: CValuesRef<IntVar>?,
    secbits: CValuesRef<IntVar>?,
    flags: CValuesRef<uint32_tVar>?
): Int

@CCall("knifunptr_openssl2920_X509_get0_signature")
external fun X509_get0_signature(
    psig: CValuesRef<CPointerVar<ASN1_BIT_STRING>>?,
    palg: CValuesRef<CPointerVar<X509_ALGOR>>?,
    x: CValuesRef<X509>?
): Unit

@CCall("knifunptr_openssl2921_X509_get_signature_nid")
external fun X509_get_signature_nid(x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2922_X509_trusted")
external fun X509_trusted(x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2923_X509_alias_set1")
external fun X509_alias_set1(x: CValuesRef<X509>?, name: CValuesRef<UByteVar>?, len: Int): Int

@CCall("knifunptr_openssl2924_X509_keyid_set1")
external fun X509_keyid_set1(x: CValuesRef<X509>?, id: CValuesRef<UByteVar>?, len: Int): Int

@CCall("knifunptr_openssl2925_X509_alias_get0")
external fun X509_alias_get0(x: CValuesRef<X509>?, len: CValuesRef<IntVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2926_X509_keyid_get0")
external fun X509_keyid_get0(x: CValuesRef<X509>?, len: CValuesRef<IntVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl2927_X509_TRUST_set_default")
external fun X509_TRUST_set_default(trust: CPointer<CFunction<(Int, CPointer<X509>?, Int) -> Int>>?): CPointer<CFunction<(Int, CPointer<X509>?, Int) -> Int>>?

@CCall("knifunptr_openssl2928_X509_TRUST_set")
external fun X509_TRUST_set(t: CValuesRef<IntVar>?, trust: Int): Int

@CCall("knifunptr_openssl2929_X509_add1_trust_object")
external fun X509_add1_trust_object(x: CValuesRef<X509>?, obj: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl2930_X509_add1_reject_object")
external fun X509_add1_reject_object(x: CValuesRef<X509>?, obj: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl2931_X509_trust_clear")
external fun X509_trust_clear(x: CValuesRef<X509>?): Unit

@CCall("knifunptr_openssl2932_X509_reject_clear")
external fun X509_reject_clear(x: CValuesRef<X509>?): Unit

@CCall("knifunptr_openssl2933_X509_get0_trust_objects")
external fun X509_get0_trust_objects(x: CValuesRef<X509>?): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl2934_X509_get0_reject_objects")
external fun X509_get0_reject_objects(x: CValuesRef<X509>?): CPointer<stack_st_ASN1_OBJECT>?

@CCall("knifunptr_openssl2935_X509_REVOKED_new")
external fun X509_REVOKED_new(): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2936_X509_REVOKED_free")
external fun X509_REVOKED_free(a: CValuesRef<X509_REVOKED>?): Unit

@CCall("knifunptr_openssl2937_d2i_X509_REVOKED")
external fun d2i_X509_REVOKED(
    a: CValuesRef<CPointerVar<X509_REVOKED>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_REVOKED>?

@CCall("knifunptr_openssl2938_i2d_X509_REVOKED")
external fun i2d_X509_REVOKED(a: CValuesRef<X509_REVOKED>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2939_X509_CRL_INFO_new")
external fun X509_CRL_INFO_new(): CPointer<X509_CRL_INFO>?

@CCall("knifunptr_openssl2940_X509_CRL_INFO_free")
external fun X509_CRL_INFO_free(a: CValuesRef<X509_CRL_INFO>?): Unit

@CCall("knifunptr_openssl2941_d2i_X509_CRL_INFO")
external fun d2i_X509_CRL_INFO(
    a: CValuesRef<CPointerVar<X509_CRL_INFO>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_CRL_INFO>?

@CCall("knifunptr_openssl2942_i2d_X509_CRL_INFO")
external fun i2d_X509_CRL_INFO(a: CValuesRef<X509_CRL_INFO>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2943_X509_CRL_new")
external fun X509_CRL_new(): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2944_X509_CRL_free")
external fun X509_CRL_free(a: CValuesRef<X509_CRL>?): Unit

@CCall("knifunptr_openssl2945_d2i_X509_CRL")
external fun d2i_X509_CRL(
    a: CValuesRef<CPointerVar<X509_CRL>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<X509_CRL>?

@CCall("knifunptr_openssl2946_i2d_X509_CRL")
external fun i2d_X509_CRL(a: CValuesRef<X509_CRL>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2947_X509_CRL_add0_revoked")
external fun X509_CRL_add0_revoked(crl: CValuesRef<X509_CRL>?, rev: CValuesRef<X509_REVOKED>?): Int

@CCall("knifunptr_openssl2948_X509_CRL_get0_by_serial")
external fun X509_CRL_get0_by_serial(
    crl: CValuesRef<X509_CRL>?,
    ret: CValuesRef<CPointerVar<X509_REVOKED>>?,
    serial: CValuesRef<ASN1_INTEGER>?
): Int

@CCall("knifunptr_openssl2949_X509_CRL_get0_by_cert")
external fun X509_CRL_get0_by_cert(
    crl: CValuesRef<X509_CRL>?,
    ret: CValuesRef<CPointerVar<X509_REVOKED>>?,
    x: CValuesRef<X509>?
): Int

@CCall("knifunptr_openssl2950_X509_PKEY_new")
external fun X509_PKEY_new(): CPointer<X509_PKEY>?

@CCall("knifunptr_openssl2951_X509_PKEY_free")
external fun X509_PKEY_free(a: CValuesRef<X509_PKEY>?): Unit

@CCall("knifunptr_openssl2952_NETSCAPE_SPKI_new")
external fun NETSCAPE_SPKI_new(): CPointer<NETSCAPE_SPKI>?

@CCall("knifunptr_openssl2953_NETSCAPE_SPKI_free")
external fun NETSCAPE_SPKI_free(a: CValuesRef<NETSCAPE_SPKI>?): Unit

@CCall("knifunptr_openssl2954_d2i_NETSCAPE_SPKI")
external fun d2i_NETSCAPE_SPKI(
    a: CValuesRef<CPointerVar<NETSCAPE_SPKI>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<NETSCAPE_SPKI>?

@CCall("knifunptr_openssl2955_i2d_NETSCAPE_SPKI")
external fun i2d_NETSCAPE_SPKI(a: CValuesRef<NETSCAPE_SPKI>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2956_NETSCAPE_SPKAC_new")
external fun NETSCAPE_SPKAC_new(): CPointer<NETSCAPE_SPKAC>?

@CCall("knifunptr_openssl2957_NETSCAPE_SPKAC_free")
external fun NETSCAPE_SPKAC_free(a: CValuesRef<NETSCAPE_SPKAC>?): Unit

@CCall("knifunptr_openssl2958_d2i_NETSCAPE_SPKAC")
external fun d2i_NETSCAPE_SPKAC(
    a: CValuesRef<CPointerVar<NETSCAPE_SPKAC>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<NETSCAPE_SPKAC>?

@CCall("knifunptr_openssl2959_i2d_NETSCAPE_SPKAC")
external fun i2d_NETSCAPE_SPKAC(a: CValuesRef<NETSCAPE_SPKAC>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl2960_NETSCAPE_CERT_SEQUENCE_new")
external fun NETSCAPE_CERT_SEQUENCE_new(): CPointer<NETSCAPE_CERT_SEQUENCE>?

@CCall("knifunptr_openssl2961_NETSCAPE_CERT_SEQUENCE_free")
external fun NETSCAPE_CERT_SEQUENCE_free(a: CValuesRef<NETSCAPE_CERT_SEQUENCE>?): Unit

@CCall("knifunptr_openssl2962_d2i_NETSCAPE_CERT_SEQUENCE")
external fun d2i_NETSCAPE_CERT_SEQUENCE(
    a: CValuesRef<CPointerVar<NETSCAPE_CERT_SEQUENCE>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<NETSCAPE_CERT_SEQUENCE>?

@CCall("knifunptr_openssl2963_i2d_NETSCAPE_CERT_SEQUENCE")
external fun i2d_NETSCAPE_CERT_SEQUENCE(
    a: CValuesRef<NETSCAPE_CERT_SEQUENCE>?,
    out: CValuesRef<CPointerVar<UByteVar>>?
): Int

@CCall("knifunptr_openssl2964_X509_INFO_new")
external fun X509_INFO_new(): CPointer<X509_INFO>?

@CCall("knifunptr_openssl2965_X509_INFO_free")
external fun X509_INFO_free(a: CValuesRef<X509_INFO>?): Unit

@CCall("knifunptr_openssl2966_X509_NAME_oneline")
external fun X509_NAME_oneline(a: CValuesRef<X509_NAME>?, buf: CValuesRef<ByteVar>?, size: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl2967_ASN1_verify")
external fun ASN1_verify(
    i2d: CPointer<i2d_of_void>?,
    algor1: CValuesRef<X509_ALGOR>?,
    signature: CValuesRef<ASN1_BIT_STRING>?,
    data: CValuesRef<ByteVar>?,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl2968_ASN1_digest")
external fun ASN1_digest(
    i2d: CPointer<i2d_of_void>?,
    type: CValuesRef<EVP_MD>?,
    data: CValuesRef<ByteVar>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2969_ASN1_sign")
external fun ASN1_sign(
    i2d: CPointer<i2d_of_void>?,
    algor1: CValuesRef<X509_ALGOR>?,
    algor2: CValuesRef<X509_ALGOR>?,
    signature: CValuesRef<ASN1_BIT_STRING>?,
    data: CValuesRef<ByteVar>?,
    pkey: CValuesRef<EVP_PKEY>?,
    type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl2970_ASN1_item_digest")
external fun ASN1_item_digest(
    it: CValuesRef<ASN1_ITEM>?,
    type: CValuesRef<EVP_MD>?,
    data: CValuesRef<*>?,
    md: CValuesRef<UByteVar>?,
    len: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl2971_ASN1_item_verify")
external fun ASN1_item_verify(
    it: CValuesRef<ASN1_ITEM>?,
    algor1: CValuesRef<X509_ALGOR>?,
    signature: CValuesRef<ASN1_BIT_STRING>?,
    data: CValuesRef<*>?,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl2972_ASN1_item_sign")
external fun ASN1_item_sign(
    it: CValuesRef<ASN1_ITEM>?,
    algor1: CValuesRef<X509_ALGOR>?,
    algor2: CValuesRef<X509_ALGOR>?,
    signature: CValuesRef<ASN1_BIT_STRING>?,
    data: CValuesRef<*>?,
    pkey: CValuesRef<EVP_PKEY>?,
    type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl2973_ASN1_item_sign_ctx")
external fun ASN1_item_sign_ctx(
    it: CValuesRef<ASN1_ITEM>?,
    algor1: CValuesRef<X509_ALGOR>?,
    algor2: CValuesRef<X509_ALGOR>?,
    signature: CValuesRef<ASN1_BIT_STRING>?,
    asn: CValuesRef<*>?,
    ctx: CValuesRef<EVP_MD_CTX>?
): Int

@CCall("knifunptr_openssl2974_X509_get_version")
external fun X509_get_version(x: CValuesRef<X509>?): Long

@CCall("knifunptr_openssl2975_X509_set_version")
external fun X509_set_version(x: CValuesRef<X509>?, version: Long): Int

@CCall("knifunptr_openssl2976_X509_set_serialNumber")
external fun X509_set_serialNumber(x: CValuesRef<X509>?, serial: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl2977_X509_get_serialNumber")
external fun X509_get_serialNumber(x: CValuesRef<X509>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl2978_X509_get0_serialNumber")
external fun X509_get0_serialNumber(x: CValuesRef<X509>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl2979_X509_set_issuer_name")
external fun X509_set_issuer_name(x: CValuesRef<X509>?, name: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2980_X509_get_issuer_name")
external fun X509_get_issuer_name(a: CValuesRef<X509>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2981_X509_set_subject_name")
external fun X509_set_subject_name(x: CValuesRef<X509>?, name: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl2982_X509_get_subject_name")
external fun X509_get_subject_name(a: CValuesRef<X509>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl2983_X509_get0_notBefore")
external fun X509_get0_notBefore(x: CValuesRef<X509>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2984_X509_getm_notBefore")
external fun X509_getm_notBefore(x: CValuesRef<X509>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2985_X509_set1_notBefore")
external fun X509_set1_notBefore(x: CValuesRef<X509>?, tm: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl2986_X509_get0_notAfter")
external fun X509_get0_notAfter(x: CValuesRef<X509>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2987_X509_getm_notAfter")
external fun X509_getm_notAfter(x: CValuesRef<X509>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl2988_X509_set1_notAfter")
external fun X509_set1_notAfter(x: CValuesRef<X509>?, tm: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl2989_X509_set_pubkey")
external fun X509_set_pubkey(x: CValuesRef<X509>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl2990_X509_up_ref")
external fun X509_up_ref(x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2991_X509_get_signature_type")
external fun X509_get_signature_type(x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl2992_X509_get_X509_PUBKEY")
external fun X509_get_X509_PUBKEY(x: CValuesRef<X509>?): CPointer<X509_PUBKEY>?

@CCall("knifunptr_openssl2993_X509_get0_extensions")
external fun X509_get0_extensions(x: CValuesRef<X509>?): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl2994_X509_get0_uids")
external fun X509_get0_uids(
    x: CValuesRef<X509>?,
    piuid: CValuesRef<CPointerVar<ASN1_BIT_STRING>>?,
    psuid: CValuesRef<CPointerVar<ASN1_BIT_STRING>>?
): Unit

@CCall("knifunptr_openssl2995_X509_get0_tbs_sigalg")
external fun X509_get0_tbs_sigalg(x: CValuesRef<X509>?): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl2996_X509_get0_pubkey")
external fun X509_get0_pubkey(x: CValuesRef<X509>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2997_X509_get_pubkey")
external fun X509_get_pubkey(x: CValuesRef<X509>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl2998_X509_get0_pubkey_bitstr")
external fun X509_get0_pubkey_bitstr(x: CValuesRef<X509>?): CPointer<ASN1_BIT_STRING>?

@CCall("knifunptr_openssl2999_X509_certificate_type")
external fun X509_certificate_type(x: CValuesRef<X509>?, pubkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3000_X509_REQ_get_version")
external fun X509_REQ_get_version(req: CValuesRef<X509_REQ>?): Long

@CCall("knifunptr_openssl3001_X509_REQ_set_version")
external fun X509_REQ_set_version(x: CValuesRef<X509_REQ>?, version: Long): Int

@CCall("knifunptr_openssl3002_X509_REQ_get_subject_name")
external fun X509_REQ_get_subject_name(req: CValuesRef<X509_REQ>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl3003_X509_REQ_set_subject_name")
external fun X509_REQ_set_subject_name(req: CValuesRef<X509_REQ>?, name: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl3004_X509_REQ_get0_signature")
external fun X509_REQ_get0_signature(
    req: CValuesRef<X509_REQ>?,
    psig: CValuesRef<CPointerVar<ASN1_BIT_STRING>>?,
    palg: CValuesRef<CPointerVar<X509_ALGOR>>?
): Unit

@CCall("knifunptr_openssl3005_X509_REQ_get_signature_nid")
external fun X509_REQ_get_signature_nid(req: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3006_i2d_re_X509_REQ_tbs")
external fun i2d_re_X509_REQ_tbs(req: CValuesRef<X509_REQ>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3007_X509_REQ_set_pubkey")
external fun X509_REQ_set_pubkey(x: CValuesRef<X509_REQ>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3008_X509_REQ_get_pubkey")
external fun X509_REQ_get_pubkey(req: CValuesRef<X509_REQ>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3009_X509_REQ_get0_pubkey")
external fun X509_REQ_get0_pubkey(req: CValuesRef<X509_REQ>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3010_X509_REQ_get_X509_PUBKEY")
external fun X509_REQ_get_X509_PUBKEY(req: CValuesRef<X509_REQ>?): CPointer<X509_PUBKEY>?

@CCall("knifunptr_openssl3011_X509_REQ_extension_nid")
external fun X509_REQ_extension_nid(nid: Int): Int

@CCall("knifunptr_openssl3012_X509_REQ_get_extension_nids")
external fun X509_REQ_get_extension_nids(): CPointer<IntVar>?

@CCall("knifunptr_openssl3013_X509_REQ_set_extension_nids")
external fun X509_REQ_set_extension_nids(nids: CValuesRef<IntVar>?): Unit

@CCall("knifunptr_openssl3014_X509_REQ_get_extensions")
external fun X509_REQ_get_extensions(req: CValuesRef<X509_REQ>?): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl3015_X509_REQ_add_extensions_nid")
external fun X509_REQ_add_extensions_nid(
    req: CValuesRef<X509_REQ>?,
    exts: CValuesRef<stack_st_X509_EXTENSION>?,
    nid: Int
): Int

@CCall("knifunptr_openssl3016_X509_REQ_add_extensions")
external fun X509_REQ_add_extensions(req: CValuesRef<X509_REQ>?, exts: CValuesRef<stack_st_X509_EXTENSION>?): Int

@CCall("knifunptr_openssl3017_X509_REQ_get_attr_count")
external fun X509_REQ_get_attr_count(req: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3018_X509_REQ_get_attr_by_NID")
external fun X509_REQ_get_attr_by_NID(req: CValuesRef<X509_REQ>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3019_X509_REQ_get_attr_by_OBJ")
external fun X509_REQ_get_attr_by_OBJ(req: CValuesRef<X509_REQ>?, obj: CValuesRef<ASN1_OBJECT>?, lastpos: Int): Int

@CCall("knifunptr_openssl3020_X509_REQ_get_attr")
external fun X509_REQ_get_attr(req: CValuesRef<X509_REQ>?, loc: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3021_X509_REQ_delete_attr")
external fun X509_REQ_delete_attr(req: CValuesRef<X509_REQ>?, loc: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3022_X509_REQ_add1_attr")
external fun X509_REQ_add1_attr(req: CValuesRef<X509_REQ>?, attr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl3023_X509_REQ_add1_attr_by_OBJ")
external fun X509_REQ_add1_attr_by_OBJ(
    req: CValuesRef<X509_REQ>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3024_X509_REQ_add1_attr_by_NID")
external fun X509_REQ_add1_attr_by_NID(
    req: CValuesRef<X509_REQ>?,
    nid: Int,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3025_X509_REQ_add1_attr_by_txt")
external fun X509_REQ_add1_attr_by_txt(
    req: CValuesRef<X509_REQ>?, @CCall.CString attrname: String?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3026_X509_CRL_set_version")
external fun X509_CRL_set_version(x: CValuesRef<X509_CRL>?, version: Long): Int

@CCall("knifunptr_openssl3027_X509_CRL_set_issuer_name")
external fun X509_CRL_set_issuer_name(x: CValuesRef<X509_CRL>?, name: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl3028_X509_CRL_set1_lastUpdate")
external fun X509_CRL_set1_lastUpdate(x: CValuesRef<X509_CRL>?, tm: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl3029_X509_CRL_set1_nextUpdate")
external fun X509_CRL_set1_nextUpdate(x: CValuesRef<X509_CRL>?, tm: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl3030_X509_CRL_sort")
external fun X509_CRL_sort(crl: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3031_X509_CRL_up_ref")
external fun X509_CRL_up_ref(crl: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3032_X509_CRL_get_version")
external fun X509_CRL_get_version(crl: CValuesRef<X509_CRL>?): Long

@CCall("knifunptr_openssl3033_X509_CRL_get0_lastUpdate")
external fun X509_CRL_get0_lastUpdate(crl: CValuesRef<X509_CRL>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl3034_X509_CRL_get0_nextUpdate")
external fun X509_CRL_get0_nextUpdate(crl: CValuesRef<X509_CRL>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl3035_X509_CRL_get_lastUpdate")
external fun X509_CRL_get_lastUpdate(crl: CValuesRef<X509_CRL>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl3036_X509_CRL_get_nextUpdate")
external fun X509_CRL_get_nextUpdate(crl: CValuesRef<X509_CRL>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl3037_X509_CRL_get_issuer")
external fun X509_CRL_get_issuer(crl: CValuesRef<X509_CRL>?): CPointer<X509_NAME>?

@CCall("knifunptr_openssl3038_X509_CRL_get0_extensions")
external fun X509_CRL_get0_extensions(crl: CValuesRef<X509_CRL>?): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl3039_X509_CRL_get_REVOKED")
external fun X509_CRL_get_REVOKED(crl: CValuesRef<X509_CRL>?): CPointer<stack_st_X509_REVOKED>?

@CCall("knifunptr_openssl3040_X509_CRL_get0_signature")
external fun X509_CRL_get0_signature(
    crl: CValuesRef<X509_CRL>?,
    psig: CValuesRef<CPointerVar<ASN1_BIT_STRING>>?,
    palg: CValuesRef<CPointerVar<X509_ALGOR>>?
): Unit

@CCall("knifunptr_openssl3041_X509_CRL_get_signature_nid")
external fun X509_CRL_get_signature_nid(crl: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3042_i2d_re_X509_CRL_tbs")
external fun i2d_re_X509_CRL_tbs(req: CValuesRef<X509_CRL>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3043_X509_REVOKED_get0_serialNumber")
external fun X509_REVOKED_get0_serialNumber(x: CValuesRef<X509_REVOKED>?): CPointer<ASN1_INTEGER>?

@CCall("knifunptr_openssl3044_X509_REVOKED_set_serialNumber")
external fun X509_REVOKED_set_serialNumber(x: CValuesRef<X509_REVOKED>?, serial: CValuesRef<ASN1_INTEGER>?): Int

@CCall("knifunptr_openssl3045_X509_REVOKED_get0_revocationDate")
external fun X509_REVOKED_get0_revocationDate(x: CValuesRef<X509_REVOKED>?): CPointer<ASN1_TIME>?

@CCall("knifunptr_openssl3046_X509_REVOKED_set_revocationDate")
external fun X509_REVOKED_set_revocationDate(r: CValuesRef<X509_REVOKED>?, tm: CValuesRef<ASN1_TIME>?): Int

@CCall("knifunptr_openssl3047_X509_REVOKED_get0_extensions")
external fun X509_REVOKED_get0_extensions(r: CValuesRef<X509_REVOKED>?): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl3048_X509_CRL_diff")
external fun X509_CRL_diff(
    base: CValuesRef<X509_CRL>?,
    newer: CValuesRef<X509_CRL>?,
    skey: CValuesRef<EVP_PKEY>?,
    md: CValuesRef<EVP_MD>?,
    flags: UInt
): CPointer<X509_CRL>?

@CCall("knifunptr_openssl3049_X509_REQ_check_private_key")
external fun X509_REQ_check_private_key(x509: CValuesRef<X509_REQ>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3050_X509_check_private_key")
external fun X509_check_private_key(x509: CValuesRef<X509>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3051_X509_chain_check_suiteb")
external fun X509_chain_check_suiteb(
    perror_depth: CValuesRef<IntVar>?,
    x: CValuesRef<X509>?,
    chain: CValuesRef<stack_st_X509>?,
    flags: ULong
): Int

@CCall("knifunptr_openssl3052_X509_CRL_check_suiteb")
external fun X509_CRL_check_suiteb(crl: CValuesRef<X509_CRL>?, pk: CValuesRef<EVP_PKEY>?, flags: ULong): Int

@CCall("knifunptr_openssl3053_X509_chain_up_ref")
external fun X509_chain_up_ref(chain: CValuesRef<stack_st_X509>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl3054_X509_issuer_and_serial_cmp")
external fun X509_issuer_and_serial_cmp(a: CValuesRef<X509>?, b: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3055_X509_issuer_and_serial_hash")
external fun X509_issuer_and_serial_hash(a: CValuesRef<X509>?): ULong

@CCall("knifunptr_openssl3056_X509_issuer_name_cmp")
external fun X509_issuer_name_cmp(a: CValuesRef<X509>?, b: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3057_X509_issuer_name_hash")
external fun X509_issuer_name_hash(a: CValuesRef<X509>?): ULong

@CCall("knifunptr_openssl3058_X509_subject_name_cmp")
external fun X509_subject_name_cmp(a: CValuesRef<X509>?, b: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3059_X509_subject_name_hash")
external fun X509_subject_name_hash(x: CValuesRef<X509>?): ULong

@CCall("knifunptr_openssl3060_X509_issuer_name_hash_old")
external fun X509_issuer_name_hash_old(a: CValuesRef<X509>?): ULong

@CCall("knifunptr_openssl3061_X509_subject_name_hash_old")
external fun X509_subject_name_hash_old(x: CValuesRef<X509>?): ULong

@CCall("knifunptr_openssl3062_X509_cmp")
external fun X509_cmp(a: CValuesRef<X509>?, b: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3063_X509_NAME_cmp")
external fun X509_NAME_cmp(a: CValuesRef<X509_NAME>?, b: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl3064_X509_NAME_hash")
external fun X509_NAME_hash(x: CValuesRef<X509_NAME>?): ULong

@CCall("knifunptr_openssl3065_X509_NAME_hash_old")
external fun X509_NAME_hash_old(x: CValuesRef<X509_NAME>?): ULong

@CCall("knifunptr_openssl3066_X509_CRL_cmp")
external fun X509_CRL_cmp(a: CValuesRef<X509_CRL>?, b: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3067_X509_CRL_match")
external fun X509_CRL_match(a: CValuesRef<X509_CRL>?, b: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3068_X509_aux_print")
external fun X509_aux_print(out: CValuesRef<BIO>?, x: CValuesRef<X509>?, indent: Int): Int

@CCall("knifunptr_openssl3069_X509_print_ex_fp")
external fun X509_print_ex_fp(bp: CValuesRef<FILE>?, x: CValuesRef<X509>?, nmflag: ULong, cflag: ULong): Int

@CCall("knifunptr_openssl3070_X509_print_fp")
external fun X509_print_fp(bp: CValuesRef<FILE>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3071_X509_CRL_print_fp")
external fun X509_CRL_print_fp(bp: CValuesRef<FILE>?, x: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3072_X509_REQ_print_fp")
external fun X509_REQ_print_fp(bp: CValuesRef<FILE>?, req: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3073_X509_NAME_print_ex_fp")
external fun X509_NAME_print_ex_fp(fp: CValuesRef<FILE>?, nm: CValuesRef<X509_NAME>?, indent: Int, flags: ULong): Int

@CCall("knifunptr_openssl3074_X509_NAME_print")
external fun X509_NAME_print(bp: CValuesRef<BIO>?, name: CValuesRef<X509_NAME>?, obase: Int): Int

@CCall("knifunptr_openssl3075_X509_NAME_print_ex")
external fun X509_NAME_print_ex(out: CValuesRef<BIO>?, nm: CValuesRef<X509_NAME>?, indent: Int, flags: ULong): Int

@CCall("knifunptr_openssl3076_X509_print_ex")
external fun X509_print_ex(bp: CValuesRef<BIO>?, x: CValuesRef<X509>?, nmflag: ULong, cflag: ULong): Int

@CCall("knifunptr_openssl3077_X509_print")
external fun X509_print(bp: CValuesRef<BIO>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3078_X509_ocspid_print")
external fun X509_ocspid_print(bp: CValuesRef<BIO>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3079_X509_CRL_print_ex")
external fun X509_CRL_print_ex(out: CValuesRef<BIO>?, x: CValuesRef<X509_CRL>?, nmflag: ULong): Int

@CCall("knifunptr_openssl3080_X509_CRL_print")
external fun X509_CRL_print(bp: CValuesRef<BIO>?, x: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3081_X509_REQ_print_ex")
external fun X509_REQ_print_ex(bp: CValuesRef<BIO>?, x: CValuesRef<X509_REQ>?, nmflag: ULong, cflag: ULong): Int

@CCall("knifunptr_openssl3082_X509_REQ_print")
external fun X509_REQ_print(bp: CValuesRef<BIO>?, req: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3083_X509_NAME_entry_count")
external fun X509_NAME_entry_count(name: CValuesRef<X509_NAME>?): Int

@CCall("knifunptr_openssl3084_X509_NAME_get_text_by_NID")
external fun X509_NAME_get_text_by_NID(name: CValuesRef<X509_NAME>?, nid: Int, buf: CValuesRef<ByteVar>?, len: Int): Int

@CCall("knifunptr_openssl3085_X509_NAME_get_text_by_OBJ")
external fun X509_NAME_get_text_by_OBJ(
    name: CValuesRef<X509_NAME>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    buf: CValuesRef<ByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3086_X509_NAME_get_index_by_NID")
external fun X509_NAME_get_index_by_NID(name: CValuesRef<X509_NAME>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3087_X509_NAME_get_index_by_OBJ")
external fun X509_NAME_get_index_by_OBJ(name: CValuesRef<X509_NAME>?, obj: CValuesRef<ASN1_OBJECT>?, lastpos: Int): Int

@CCall("knifunptr_openssl3088_X509_NAME_get_entry")
external fun X509_NAME_get_entry(name: CValuesRef<X509_NAME>?, loc: Int): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl3089_X509_NAME_delete_entry")
external fun X509_NAME_delete_entry(name: CValuesRef<X509_NAME>?, loc: Int): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl3090_X509_NAME_add_entry")
external fun X509_NAME_add_entry(
    name: CValuesRef<X509_NAME>?,
    ne: CValuesRef<X509_NAME_ENTRY>?,
    loc: Int,
    set: Int
): Int

@CCall("knifunptr_openssl3091_X509_NAME_add_entry_by_OBJ")
external fun X509_NAME_add_entry_by_OBJ(
    name: CValuesRef<X509_NAME>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int,
    loc: Int,
    set: Int
): Int

@CCall("knifunptr_openssl3092_X509_NAME_add_entry_by_NID")
external fun X509_NAME_add_entry_by_NID(
    name: CValuesRef<X509_NAME>?,
    nid: Int,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int,
    loc: Int,
    set: Int
): Int

@CCall("knifunptr_openssl3093_X509_NAME_ENTRY_create_by_txt")
external fun X509_NAME_ENTRY_create_by_txt(
    ne: CValuesRef<CPointerVar<X509_NAME_ENTRY>>?, @CCall.CString field: String?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl3094_X509_NAME_ENTRY_create_by_NID")
external fun X509_NAME_ENTRY_create_by_NID(
    ne: CValuesRef<CPointerVar<X509_NAME_ENTRY>>?,
    nid: Int,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl3095_X509_NAME_add_entry_by_txt")
external fun X509_NAME_add_entry_by_txt(
    name: CValuesRef<X509_NAME>?, @CCall.CString field: String?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int,
    loc: Int,
    set: Int
): Int

@CCall("knifunptr_openssl3096_X509_NAME_ENTRY_create_by_OBJ")
external fun X509_NAME_ENTRY_create_by_OBJ(
    ne: CValuesRef<CPointerVar<X509_NAME_ENTRY>>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<X509_NAME_ENTRY>?

@CCall("knifunptr_openssl3097_X509_NAME_ENTRY_set_object")
external fun X509_NAME_ENTRY_set_object(ne: CValuesRef<X509_NAME_ENTRY>?, obj: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl3098_X509_NAME_ENTRY_set_data")
external fun X509_NAME_ENTRY_set_data(
    ne: CValuesRef<X509_NAME_ENTRY>?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3099_X509_NAME_ENTRY_get_object")
external fun X509_NAME_ENTRY_get_object(ne: CValuesRef<X509_NAME_ENTRY>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl3100_X509_NAME_ENTRY_get_data")
external fun X509_NAME_ENTRY_get_data(ne: CValuesRef<X509_NAME_ENTRY>?): CPointer<ASN1_STRING>?

@CCall("knifunptr_openssl3101_X509_NAME_ENTRY_set")
external fun X509_NAME_ENTRY_set(ne: CValuesRef<X509_NAME_ENTRY>?): Int

@CCall("knifunptr_openssl3102_X509_NAME_get0_der")
external fun X509_NAME_get0_der(
    nm: CValuesRef<X509_NAME>?,
    pder: CValuesRef<CPointerVar<UByteVar>>?,
    pderlen: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3103_X509v3_get_ext_count")
external fun X509v3_get_ext_count(x: CValuesRef<stack_st_X509_EXTENSION>?): Int

@CCall("knifunptr_openssl3104_X509v3_get_ext_by_NID")
external fun X509v3_get_ext_by_NID(x: CValuesRef<stack_st_X509_EXTENSION>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3105_X509v3_get_ext_by_OBJ")
external fun X509v3_get_ext_by_OBJ(
    x: CValuesRef<stack_st_X509_EXTENSION>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    lastpos: Int
): Int

@CCall("knifunptr_openssl3106_X509v3_get_ext_by_critical")
external fun X509v3_get_ext_by_critical(x: CValuesRef<stack_st_X509_EXTENSION>?, crit: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3107_X509v3_get_ext")
external fun X509v3_get_ext(x: CValuesRef<stack_st_X509_EXTENSION>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3108_X509v3_delete_ext")
external fun X509v3_delete_ext(x: CValuesRef<stack_st_X509_EXTENSION>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3109_X509v3_add_ext")
external fun X509v3_add_ext(
    x: CValuesRef<CPointerVar<stack_st_X509_EXTENSION>>?,
    ex: CValuesRef<X509_EXTENSION>?,
    loc: Int
): CPointer<stack_st_X509_EXTENSION>?

@CCall("knifunptr_openssl3110_X509_get_ext_count")
external fun X509_get_ext_count(x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3111_X509_get_ext_by_NID")
external fun X509_get_ext_by_NID(x: CValuesRef<X509>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3112_X509_get_ext_by_OBJ")
external fun X509_get_ext_by_OBJ(x: CValuesRef<X509>?, obj: CValuesRef<ASN1_OBJECT>?, lastpos: Int): Int

@CCall("knifunptr_openssl3113_X509_get_ext_by_critical")
external fun X509_get_ext_by_critical(x: CValuesRef<X509>?, crit: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3114_X509_get_ext")
external fun X509_get_ext(x: CValuesRef<X509>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3115_X509_delete_ext")
external fun X509_delete_ext(x: CValuesRef<X509>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3116_X509_add_ext")
external fun X509_add_ext(x: CValuesRef<X509>?, ex: CValuesRef<X509_EXTENSION>?, loc: Int): Int

@CCall("knifunptr_openssl3117_X509_get_ext_d2i")
external fun X509_get_ext_d2i(
    x: CValuesRef<X509>?,
    nid: Int,
    crit: CValuesRef<IntVar>?,
    idx: CValuesRef<IntVar>?
): COpaquePointer?

@CCall("knifunptr_openssl3118_X509_add1_ext_i2d")
external fun X509_add1_ext_i2d(x: CValuesRef<X509>?, nid: Int, value: CValuesRef<*>?, crit: Int, flags: ULong): Int

@CCall("knifunptr_openssl3119_X509_CRL_get_ext_count")
external fun X509_CRL_get_ext_count(x: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3120_X509_CRL_get_ext_by_NID")
external fun X509_CRL_get_ext_by_NID(x: CValuesRef<X509_CRL>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3121_X509_CRL_get_ext_by_OBJ")
external fun X509_CRL_get_ext_by_OBJ(x: CValuesRef<X509_CRL>?, obj: CValuesRef<ASN1_OBJECT>?, lastpos: Int): Int

@CCall("knifunptr_openssl3122_X509_CRL_get_ext_by_critical")
external fun X509_CRL_get_ext_by_critical(x: CValuesRef<X509_CRL>?, crit: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3123_X509_CRL_get_ext")
external fun X509_CRL_get_ext(x: CValuesRef<X509_CRL>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3124_X509_CRL_delete_ext")
external fun X509_CRL_delete_ext(x: CValuesRef<X509_CRL>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3125_X509_CRL_add_ext")
external fun X509_CRL_add_ext(x: CValuesRef<X509_CRL>?, ex: CValuesRef<X509_EXTENSION>?, loc: Int): Int

@CCall("knifunptr_openssl3126_X509_CRL_get_ext_d2i")
external fun X509_CRL_get_ext_d2i(
    x: CValuesRef<X509_CRL>?,
    nid: Int,
    crit: CValuesRef<IntVar>?,
    idx: CValuesRef<IntVar>?
): COpaquePointer?

@CCall("knifunptr_openssl3127_X509_CRL_add1_ext_i2d")
external fun X509_CRL_add1_ext_i2d(
    x: CValuesRef<X509_CRL>?,
    nid: Int,
    value: CValuesRef<*>?,
    crit: Int,
    flags: ULong
): Int

@CCall("knifunptr_openssl3128_X509_REVOKED_get_ext_count")
external fun X509_REVOKED_get_ext_count(x: CValuesRef<X509_REVOKED>?): Int

@CCall("knifunptr_openssl3129_X509_REVOKED_get_ext_by_NID")
external fun X509_REVOKED_get_ext_by_NID(x: CValuesRef<X509_REVOKED>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3130_X509_REVOKED_get_ext_by_OBJ")
external fun X509_REVOKED_get_ext_by_OBJ(x: CValuesRef<X509_REVOKED>?, obj: CValuesRef<ASN1_OBJECT>?, lastpos: Int): Int

@CCall("knifunptr_openssl3131_X509_REVOKED_get_ext_by_critical")
external fun X509_REVOKED_get_ext_by_critical(x: CValuesRef<X509_REVOKED>?, crit: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3132_X509_REVOKED_get_ext")
external fun X509_REVOKED_get_ext(x: CValuesRef<X509_REVOKED>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3133_X509_REVOKED_delete_ext")
external fun X509_REVOKED_delete_ext(x: CValuesRef<X509_REVOKED>?, loc: Int): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3134_X509_REVOKED_add_ext")
external fun X509_REVOKED_add_ext(x: CValuesRef<X509_REVOKED>?, ex: CValuesRef<X509_EXTENSION>?, loc: Int): Int

@CCall("knifunptr_openssl3135_X509_REVOKED_get_ext_d2i")
external fun X509_REVOKED_get_ext_d2i(
    x: CValuesRef<X509_REVOKED>?,
    nid: Int,
    crit: CValuesRef<IntVar>?,
    idx: CValuesRef<IntVar>?
): COpaquePointer?

@CCall("knifunptr_openssl3136_X509_REVOKED_add1_ext_i2d")
external fun X509_REVOKED_add1_ext_i2d(
    x: CValuesRef<X509_REVOKED>?,
    nid: Int,
    value: CValuesRef<*>?,
    crit: Int,
    flags: ULong
): Int

@CCall("knifunptr_openssl3137_X509_EXTENSION_create_by_NID")
external fun X509_EXTENSION_create_by_NID(
    ex: CValuesRef<CPointerVar<X509_EXTENSION>>?,
    nid: Int,
    crit: Int,
    data: CValuesRef<ASN1_OCTET_STRING>?
): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3138_X509_EXTENSION_create_by_OBJ")
external fun X509_EXTENSION_create_by_OBJ(
    ex: CValuesRef<CPointerVar<X509_EXTENSION>>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    crit: Int,
    data: CValuesRef<ASN1_OCTET_STRING>?
): CPointer<X509_EXTENSION>?

@CCall("knifunptr_openssl3139_X509_EXTENSION_set_object")
external fun X509_EXTENSION_set_object(ex: CValuesRef<X509_EXTENSION>?, obj: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl3140_X509_EXTENSION_set_critical")
external fun X509_EXTENSION_set_critical(ex: CValuesRef<X509_EXTENSION>?, crit: Int): Int

@CCall("knifunptr_openssl3141_X509_EXTENSION_set_data")
external fun X509_EXTENSION_set_data(ex: CValuesRef<X509_EXTENSION>?, data: CValuesRef<ASN1_OCTET_STRING>?): Int

@CCall("knifunptr_openssl3142_X509_EXTENSION_get_object")
external fun X509_EXTENSION_get_object(ex: CValuesRef<X509_EXTENSION>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl3143_X509_EXTENSION_get_data")
external fun X509_EXTENSION_get_data(ne: CValuesRef<X509_EXTENSION>?): CPointer<ASN1_OCTET_STRING>?

@CCall("knifunptr_openssl3144_X509_EXTENSION_get_critical")
external fun X509_EXTENSION_get_critical(ex: CValuesRef<X509_EXTENSION>?): Int

@CCall("knifunptr_openssl3145_X509at_get_attr_count")
external fun X509at_get_attr_count(x: CValuesRef<stack_st_X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl3146_X509at_get_attr_by_NID")
external fun X509at_get_attr_by_NID(x: CValuesRef<stack_st_X509_ATTRIBUTE>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3147_X509at_get_attr_by_OBJ")
external fun X509at_get_attr_by_OBJ(
    sk: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    lastpos: Int
): Int

@CCall("knifunptr_openssl3148_X509at_get_attr")
external fun X509at_get_attr(x: CValuesRef<stack_st_X509_ATTRIBUTE>?, loc: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3149_X509at_delete_attr")
external fun X509at_delete_attr(x: CValuesRef<stack_st_X509_ATTRIBUTE>?, loc: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3150_X509at_add1_attr")
external fun X509at_add1_attr(
    x: CValuesRef<CPointerVar<stack_st_X509_ATTRIBUTE>>?,
    attr: CValuesRef<X509_ATTRIBUTE>?
): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3151_X509at_add1_attr_by_OBJ")
external fun X509at_add1_attr_by_OBJ(
    x: CValuesRef<CPointerVar<stack_st_X509_ATTRIBUTE>>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3152_X509at_add1_attr_by_NID")
external fun X509at_add1_attr_by_NID(
    x: CValuesRef<CPointerVar<stack_st_X509_ATTRIBUTE>>?,
    nid: Int,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3153_X509at_add1_attr_by_txt")
external fun X509at_add1_attr_by_txt(
    x: CValuesRef<CPointerVar<stack_st_X509_ATTRIBUTE>>?, @CCall.CString attrname: String?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3154_X509at_get0_data_by_OBJ")
external fun X509at_get0_data_by_OBJ(
    x: CValuesRef<stack_st_X509_ATTRIBUTE>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    lastpos: Int,
    type: Int
): COpaquePointer?

@CCall("knifunptr_openssl3155_X509_ATTRIBUTE_create_by_NID")
external fun X509_ATTRIBUTE_create_by_NID(
    attr: CValuesRef<CPointerVar<X509_ATTRIBUTE>>?,
    nid: Int,
    atrtype: Int,
    data: CValuesRef<*>?,
    len: Int
): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3156_X509_ATTRIBUTE_create_by_OBJ")
external fun X509_ATTRIBUTE_create_by_OBJ(
    attr: CValuesRef<CPointerVar<X509_ATTRIBUTE>>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    atrtype: Int,
    data: CValuesRef<*>?,
    len: Int
): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3157_X509_ATTRIBUTE_create_by_txt")
external fun X509_ATTRIBUTE_create_by_txt(
    attr: CValuesRef<CPointerVar<X509_ATTRIBUTE>>?, @CCall.CString atrname: String?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3158_X509_ATTRIBUTE_set1_object")
external fun X509_ATTRIBUTE_set1_object(attr: CValuesRef<X509_ATTRIBUTE>?, obj: CValuesRef<ASN1_OBJECT>?): Int

@CCall("knifunptr_openssl3159_X509_ATTRIBUTE_set1_data")
external fun X509_ATTRIBUTE_set1_data(
    attr: CValuesRef<X509_ATTRIBUTE>?,
    attrtype: Int,
    data: CValuesRef<*>?,
    len: Int
): Int

@CCall("knifunptr_openssl3160_X509_ATTRIBUTE_get0_data")
external fun X509_ATTRIBUTE_get0_data(
    attr: CValuesRef<X509_ATTRIBUTE>?,
    idx: Int,
    atrtype: Int,
    data: CValuesRef<*>?
): COpaquePointer?

@CCall("knifunptr_openssl3161_X509_ATTRIBUTE_count")
external fun X509_ATTRIBUTE_count(attr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl3162_X509_ATTRIBUTE_get0_object")
external fun X509_ATTRIBUTE_get0_object(attr: CValuesRef<X509_ATTRIBUTE>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl3163_X509_ATTRIBUTE_get0_type")
external fun X509_ATTRIBUTE_get0_type(attr: CValuesRef<X509_ATTRIBUTE>?, idx: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl3164_EVP_PKEY_get_attr_count")
external fun EVP_PKEY_get_attr_count(key: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3165_EVP_PKEY_get_attr_by_NID")
external fun EVP_PKEY_get_attr_by_NID(key: CValuesRef<EVP_PKEY>?, nid: Int, lastpos: Int): Int

@CCall("knifunptr_openssl3166_EVP_PKEY_get_attr_by_OBJ")
external fun EVP_PKEY_get_attr_by_OBJ(key: CValuesRef<EVP_PKEY>?, obj: CValuesRef<ASN1_OBJECT>?, lastpos: Int): Int

@CCall("knifunptr_openssl3167_EVP_PKEY_get_attr")
external fun EVP_PKEY_get_attr(key: CValuesRef<EVP_PKEY>?, loc: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3168_EVP_PKEY_delete_attr")
external fun EVP_PKEY_delete_attr(key: CValuesRef<EVP_PKEY>?, loc: Int): CPointer<X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3169_EVP_PKEY_add1_attr")
external fun EVP_PKEY_add1_attr(key: CValuesRef<EVP_PKEY>?, attr: CValuesRef<X509_ATTRIBUTE>?): Int

@CCall("knifunptr_openssl3170_EVP_PKEY_add1_attr_by_OBJ")
external fun EVP_PKEY_add1_attr_by_OBJ(
    key: CValuesRef<EVP_PKEY>?,
    obj: CValuesRef<ASN1_OBJECT>?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3171_EVP_PKEY_add1_attr_by_NID")
external fun EVP_PKEY_add1_attr_by_NID(
    key: CValuesRef<EVP_PKEY>?,
    nid: Int,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3172_EVP_PKEY_add1_attr_by_txt")
external fun EVP_PKEY_add1_attr_by_txt(
    key: CValuesRef<EVP_PKEY>?, @CCall.CString attrname: String?,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3173_X509_verify_cert")
external fun X509_verify_cert(ctx: CValuesRef<X509_STORE_CTX>?): Int

@CCall("knifunptr_openssl3174_X509_find_by_issuer_and_serial")
external fun X509_find_by_issuer_and_serial(
    sk: CValuesRef<stack_st_X509>?,
    name: CValuesRef<X509_NAME>?,
    serial: CValuesRef<ASN1_INTEGER>?
): CPointer<X509>?

@CCall("knifunptr_openssl3175_X509_find_by_subject")
external fun X509_find_by_subject(sk: CValuesRef<stack_st_X509>?, name: CValuesRef<X509_NAME>?): CPointer<X509>?

@CCall("knifunptr_openssl3176_PBEPARAM_new")
external fun PBEPARAM_new(): CPointer<PBEPARAM>?

@CCall("knifunptr_openssl3177_PBEPARAM_free")
external fun PBEPARAM_free(a: CValuesRef<PBEPARAM>?): Unit

@CCall("knifunptr_openssl3178_d2i_PBEPARAM")
external fun d2i_PBEPARAM(
    a: CValuesRef<CPointerVar<PBEPARAM>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PBEPARAM>?

@CCall("knifunptr_openssl3179_i2d_PBEPARAM")
external fun i2d_PBEPARAM(a: CValuesRef<PBEPARAM>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3180_PBE2PARAM_new")
external fun PBE2PARAM_new(): CPointer<PBE2PARAM>?

@CCall("knifunptr_openssl3181_PBE2PARAM_free")
external fun PBE2PARAM_free(a: CValuesRef<PBE2PARAM>?): Unit

@CCall("knifunptr_openssl3182_d2i_PBE2PARAM")
external fun d2i_PBE2PARAM(
    a: CValuesRef<CPointerVar<PBE2PARAM>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PBE2PARAM>?

@CCall("knifunptr_openssl3183_i2d_PBE2PARAM")
external fun i2d_PBE2PARAM(a: CValuesRef<PBE2PARAM>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3184_PBKDF2PARAM_new")
external fun PBKDF2PARAM_new(): CPointer<PBKDF2PARAM>?

@CCall("knifunptr_openssl3185_PBKDF2PARAM_free")
external fun PBKDF2PARAM_free(a: CValuesRef<PBKDF2PARAM>?): Unit

@CCall("knifunptr_openssl3186_d2i_PBKDF2PARAM")
external fun d2i_PBKDF2PARAM(
    a: CValuesRef<CPointerVar<PBKDF2PARAM>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PBKDF2PARAM>?

@CCall("knifunptr_openssl3187_i2d_PBKDF2PARAM")
external fun i2d_PBKDF2PARAM(a: CValuesRef<PBKDF2PARAM>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3188_SCRYPT_PARAMS_new")
external fun SCRYPT_PARAMS_new(): CPointer<SCRYPT_PARAMS>?

@CCall("knifunptr_openssl3189_SCRYPT_PARAMS_free")
external fun SCRYPT_PARAMS_free(a: CValuesRef<SCRYPT_PARAMS>?): Unit

@CCall("knifunptr_openssl3190_d2i_SCRYPT_PARAMS")
external fun d2i_SCRYPT_PARAMS(
    a: CValuesRef<CPointerVar<SCRYPT_PARAMS>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<SCRYPT_PARAMS>?

@CCall("knifunptr_openssl3191_i2d_SCRYPT_PARAMS")
external fun i2d_SCRYPT_PARAMS(a: CValuesRef<SCRYPT_PARAMS>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3192_PKCS5_pbe_set0_algor")
external fun PKCS5_pbe_set0_algor(
    algor: CValuesRef<X509_ALGOR>?,
    alg: Int,
    iter: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int
): Int

@CCall("knifunptr_openssl3193_PKCS5_pbe_set")
external fun PKCS5_pbe_set(alg: Int, iter: Int, salt: CValuesRef<UByteVar>?, saltlen: Int): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl3194_PKCS5_pbe2_set")
external fun PKCS5_pbe2_set(
    cipher: CValuesRef<EVP_CIPHER>?,
    iter: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl3195_PKCS5_pbe2_set_iv")
external fun PKCS5_pbe2_set_iv(
    cipher: CValuesRef<EVP_CIPHER>?,
    iter: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    aiv: CValuesRef<UByteVar>?,
    prf_nid: Int
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl3196_PKCS5_pbe2_set_scrypt")
external fun PKCS5_pbe2_set_scrypt(
    cipher: CValuesRef<EVP_CIPHER>?,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    aiv: CValuesRef<UByteVar>?,
    N: uint64_t,
    r: uint64_t,
    p: uint64_t
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl3197_PKCS5_pbkdf2_set")
external fun PKCS5_pbkdf2_set(
    iter: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    prf_nid: Int,
    keylen: Int
): CPointer<X509_ALGOR>?

@CCall("knifunptr_openssl3198_PKCS8_PRIV_KEY_INFO_new")
external fun PKCS8_PRIV_KEY_INFO_new(): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl3199_PKCS8_PRIV_KEY_INFO_free")
external fun PKCS8_PRIV_KEY_INFO_free(a: CValuesRef<PKCS8_PRIV_KEY_INFO>?): Unit

@CCall("knifunptr_openssl3200_d2i_PKCS8_PRIV_KEY_INFO")
external fun d2i_PKCS8_PRIV_KEY_INFO(
    a: CValuesRef<CPointerVar<PKCS8_PRIV_KEY_INFO>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl3201_i2d_PKCS8_PRIV_KEY_INFO")
external fun i2d_PKCS8_PRIV_KEY_INFO(a: CValuesRef<PKCS8_PRIV_KEY_INFO>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3202_EVP_PKCS82PKEY")
external fun EVP_PKCS82PKEY(p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3203_EVP_PKEY2PKCS8")
external fun EVP_PKEY2PKCS8(pkey: CValuesRef<EVP_PKEY>?): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl3204_PKCS8_pkey_set0")
external fun PKCS8_pkey_set0(
    priv: CValuesRef<PKCS8_PRIV_KEY_INFO>?,
    aobj: CValuesRef<ASN1_OBJECT>?,
    version: Int,
    ptype: Int,
    pval: CValuesRef<*>?,
    penc: CValuesRef<UByteVar>?,
    penclen: Int
): Int

@CCall("knifunptr_openssl3205_PKCS8_pkey_get0")
external fun PKCS8_pkey_get0(
    ppkalg: CValuesRef<CPointerVar<ASN1_OBJECT>>?,
    pk: CValuesRef<CPointerVar<UByteVar>>?,
    ppklen: CValuesRef<IntVar>?,
    pa: CValuesRef<CPointerVar<X509_ALGOR>>?,
    p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?
): Int

@CCall("knifunptr_openssl3206_PKCS8_pkey_get0_attrs")
external fun PKCS8_pkey_get0_attrs(p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl3207_PKCS8_pkey_add1_attr_by_NID")
external fun PKCS8_pkey_add1_attr_by_NID(
    p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?,
    nid: Int,
    type: Int,
    bytes: CValuesRef<UByteVar>?,
    len: Int
): Int

@CCall("knifunptr_openssl3208_X509_PUBKEY_set0_param")
external fun X509_PUBKEY_set0_param(
    pub: CValuesRef<X509_PUBKEY>?,
    aobj: CValuesRef<ASN1_OBJECT>?,
    ptype: Int,
    pval: CValuesRef<*>?,
    penc: CValuesRef<UByteVar>?,
    penclen: Int
): Int

@CCall("knifunptr_openssl3209_X509_PUBKEY_get0_param")
external fun X509_PUBKEY_get0_param(
    ppkalg: CValuesRef<CPointerVar<ASN1_OBJECT>>?,
    pk: CValuesRef<CPointerVar<UByteVar>>?,
    ppklen: CValuesRef<IntVar>?,
    pa: CValuesRef<CPointerVar<X509_ALGOR>>?,
    pub: CValuesRef<X509_PUBKEY>?
): Int

@CCall("knifunptr_openssl3210_X509_check_trust")
external fun X509_check_trust(x: CValuesRef<X509>?, id: Int, flags: Int): Int

@CCall("knifunptr_openssl3211_X509_TRUST_get_count")
external fun X509_TRUST_get_count(): Int

@CCall("knifunptr_openssl3212_X509_TRUST_get0")
external fun X509_TRUST_get0(idx: Int): CPointer<X509_TRUST>?

@CCall("knifunptr_openssl3213_X509_TRUST_get_by_id")
external fun X509_TRUST_get_by_id(id: Int): Int

@CCall("knifunptr_openssl3214_X509_TRUST_add")
external fun X509_TRUST_add(
    id: Int,
    flags: Int,
    ck: CPointer<CFunction<(CPointer<X509_TRUST>?, CPointer<X509>?, Int) -> Int>>?, @CCall.CString name: String?,
    arg1: Int,
    arg2: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3215_X509_TRUST_cleanup")
external fun X509_TRUST_cleanup(): Unit

@CCall("knifunptr_openssl3216_X509_TRUST_get_flags")
external fun X509_TRUST_get_flags(xp: CValuesRef<X509_TRUST>?): Int

@CCall("knifunptr_openssl3217_X509_TRUST_get0_name")
external fun X509_TRUST_get0_name(xp: CValuesRef<X509_TRUST>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3218_X509_TRUST_get_trust")
external fun X509_TRUST_get_trust(xp: CValuesRef<X509_TRUST>?): Int

@CCall("knifunptr_openssl3219_ERR_load_PEM_strings")
external fun ERR_load_PEM_strings(): Int

@CCall("knifunptr_openssl3220_PEM_get_EVP_CIPHER_INFO")
external fun PEM_get_EVP_CIPHER_INFO(header: CValuesRef<ByteVar>?, cipher: CValuesRef<EVP_CIPHER_INFO>?): Int

@CCall("knifunptr_openssl3221_PEM_do_header")
external fun PEM_do_header(
    cipher: CValuesRef<EVP_CIPHER_INFO>?,
    data: CValuesRef<UByteVar>?,
    len: CValuesRef<LongVar>?,
    callback: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3222_PEM_read_bio")
external fun PEM_read_bio(
    bp: CValuesRef<BIO>?,
    name: CValuesRef<CPointerVar<ByteVar>>?,
    header: CValuesRef<CPointerVar<ByteVar>>?,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<LongVar>?
): Int

@CCall("knifunptr_openssl3223_PEM_read_bio_ex")
external fun PEM_read_bio_ex(
    bp: CValuesRef<BIO>?,
    name: CValuesRef<CPointerVar<ByteVar>>?,
    header: CValuesRef<CPointerVar<ByteVar>>?,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<LongVar>?,
    flags: UInt
): Int

@CCall("knifunptr_openssl3224_PEM_bytes_read_bio_secmem")
external fun PEM_bytes_read_bio_secmem(
    pdata: CValuesRef<CPointerVar<UByteVar>>?,
    plen: CValuesRef<LongVar>?,
    pnm: CValuesRef<CPointerVar<ByteVar>>?, @CCall.CString name: String?,
    bp: CValuesRef<BIO>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3225_PEM_write_bio")
external fun PEM_write_bio(
    bp: CValuesRef<BIO>?, @CCall.CString name: String?, @CCall.CString hdr: String?,
    data: CValuesRef<UByteVar>?,
    len: Long
): Int

@CCall("knifunptr_openssl3226_PEM_bytes_read_bio")
external fun PEM_bytes_read_bio(
    pdata: CValuesRef<CPointerVar<UByteVar>>?,
    plen: CValuesRef<LongVar>?,
    pnm: CValuesRef<CPointerVar<ByteVar>>?, @CCall.CString name: String?,
    bp: CValuesRef<BIO>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3227_PEM_ASN1_read_bio")
external fun PEM_ASN1_read_bio(
    d2i: CPointer<d2i_of_void>?, @CCall.CString name: String?,
    bp: CValuesRef<BIO>?,
    x: CValuesRef<COpaquePointerVar>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): COpaquePointer?

@CCall("knifunptr_openssl3228_PEM_ASN1_write_bio")
external fun PEM_ASN1_write_bio(
    i2d: CPointer<i2d_of_void>?, @CCall.CString name: String?,
    bp: CValuesRef<BIO>?,
    x: CValuesRef<*>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3229_PEM_X509_INFO_read_bio")
external fun PEM_X509_INFO_read_bio(
    bp: CValuesRef<BIO>?,
    sk: CValuesRef<stack_st_X509_INFO>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl3230_PEM_X509_INFO_write_bio")
external fun PEM_X509_INFO_write_bio(
    bp: CValuesRef<BIO>?,
    xi: CValuesRef<X509_INFO>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cd: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3231_PEM_read")
external fun PEM_read(
    fp: CValuesRef<FILE>?,
    name: CValuesRef<CPointerVar<ByteVar>>?,
    header: CValuesRef<CPointerVar<ByteVar>>?,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<LongVar>?
): Int

@CCall("knifunptr_openssl3232_PEM_write")
external fun PEM_write(
    fp: CValuesRef<FILE>?, @CCall.CString name: String?, @CCall.CString hdr: String?,
    data: CValuesRef<UByteVar>?,
    len: Long
): Int

@CCall("knifunptr_openssl3233_PEM_ASN1_read")
external fun PEM_ASN1_read(
    d2i: CPointer<d2i_of_void>?, @CCall.CString name: String?,
    fp: CValuesRef<FILE>?,
    x: CValuesRef<COpaquePointerVar>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): COpaquePointer?

@CCall("knifunptr_openssl3234_PEM_ASN1_write")
external fun PEM_ASN1_write(
    i2d: CPointer<i2d_of_void>?, @CCall.CString name: String?,
    fp: CValuesRef<FILE>?,
    x: CValuesRef<*>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    callback: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3235_PEM_X509_INFO_read")
external fun PEM_X509_INFO_read(
    fp: CValuesRef<FILE>?,
    sk: CValuesRef<stack_st_X509_INFO>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<stack_st_X509_INFO>?

@CCall("knifunptr_openssl3236_PEM_SignInit")
external fun PEM_SignInit(ctx: CValuesRef<EVP_MD_CTX>?, type: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl3237_PEM_SignUpdate")
external fun PEM_SignUpdate(ctx: CValuesRef<EVP_MD_CTX>?, d: CValuesRef<UByteVar>?, cnt: UInt): Int

@CCall("knifunptr_openssl3238_PEM_SignFinal")
external fun PEM_SignFinal(
    ctx: CValuesRef<EVP_MD_CTX>?,
    sigret: CValuesRef<UByteVar>?,
    siglen: CValuesRef<UIntVar>?,
    pkey: CValuesRef<EVP_PKEY>?
): Int

@CCall("knifunptr_openssl3239_PEM_def_callback")
external fun PEM_def_callback(buf: CValuesRef<ByteVar>?, num: Int, rwflag: Int, userdata: CValuesRef<*>?): Int

@CCall("knifunptr_openssl3240_PEM_proc_type")
external fun PEM_proc_type(buf: CValuesRef<ByteVar>?, type: Int): Unit

@CCall("knifunptr_openssl3241_PEM_dek_info")
external fun PEM_dek_info(
    buf: CValuesRef<ByteVar>?, @CCall.CString type: String?,
    len: Int,
    str: CValuesRef<ByteVar>?
): Unit

@CCall("knifunptr_openssl3242_PEM_read_bio_X509")
external fun PEM_read_bio_X509(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<X509>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509>?

@CCall("knifunptr_openssl3243_PEM_read_X509")
external fun PEM_read_X509(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<X509>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509>?

@CCall("knifunptr_openssl3244_PEM_write_bio_X509")
external fun PEM_write_bio_X509(bp: CValuesRef<BIO>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3245_PEM_write_X509")
external fun PEM_write_X509(fp: CValuesRef<FILE>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3246_PEM_read_bio_X509_AUX")
external fun PEM_read_bio_X509_AUX(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<X509>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509>?

@CCall("knifunptr_openssl3247_PEM_read_X509_AUX")
external fun PEM_read_X509_AUX(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<X509>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509>?

@CCall("knifunptr_openssl3248_PEM_write_bio_X509_AUX")
external fun PEM_write_bio_X509_AUX(bp: CValuesRef<BIO>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3249_PEM_write_X509_AUX")
external fun PEM_write_X509_AUX(fp: CValuesRef<FILE>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3250_PEM_read_bio_X509_REQ")
external fun PEM_read_bio_X509_REQ(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<X509_REQ>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509_REQ>?

@CCall("knifunptr_openssl3251_PEM_read_X509_REQ")
external fun PEM_read_X509_REQ(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<X509_REQ>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509_REQ>?

@CCall("knifunptr_openssl3252_PEM_write_bio_X509_REQ")
external fun PEM_write_bio_X509_REQ(bp: CValuesRef<BIO>?, x: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3253_PEM_write_X509_REQ")
external fun PEM_write_X509_REQ(fp: CValuesRef<FILE>?, x: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3254_PEM_write_bio_X509_REQ_NEW")
external fun PEM_write_bio_X509_REQ_NEW(bp: CValuesRef<BIO>?, x: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3255_PEM_write_X509_REQ_NEW")
external fun PEM_write_X509_REQ_NEW(fp: CValuesRef<FILE>?, x: CValuesRef<X509_REQ>?): Int

@CCall("knifunptr_openssl3256_PEM_read_bio_X509_CRL")
external fun PEM_read_bio_X509_CRL(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<X509_CRL>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509_CRL>?

@CCall("knifunptr_openssl3257_PEM_read_X509_CRL")
external fun PEM_read_X509_CRL(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<X509_CRL>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509_CRL>?

@CCall("knifunptr_openssl3258_PEM_write_bio_X509_CRL")
external fun PEM_write_bio_X509_CRL(bp: CValuesRef<BIO>?, x: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3259_PEM_write_X509_CRL")
external fun PEM_write_X509_CRL(fp: CValuesRef<FILE>?, x: CValuesRef<X509_CRL>?): Int

@CCall("knifunptr_openssl3260_PEM_read_bio_PKCS7")
external fun PEM_read_bio_PKCS7(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<PKCS7>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<PKCS7>?

@CCall("knifunptr_openssl3261_PEM_read_PKCS7")
external fun PEM_read_PKCS7(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<PKCS7>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<PKCS7>?

@CCall("knifunptr_openssl3262_PEM_write_bio_PKCS7")
external fun PEM_write_bio_PKCS7(bp: CValuesRef<BIO>?, x: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl3263_PEM_write_PKCS7")
external fun PEM_write_PKCS7(fp: CValuesRef<FILE>?, x: CValuesRef<PKCS7>?): Int

@CCall("knifunptr_openssl3264_PEM_read_bio_NETSCAPE_CERT_SEQUENCE")
external fun PEM_read_bio_NETSCAPE_CERT_SEQUENCE(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<NETSCAPE_CERT_SEQUENCE>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<NETSCAPE_CERT_SEQUENCE>?

@CCall("knifunptr_openssl3265_PEM_read_NETSCAPE_CERT_SEQUENCE")
external fun PEM_read_NETSCAPE_CERT_SEQUENCE(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<NETSCAPE_CERT_SEQUENCE>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<NETSCAPE_CERT_SEQUENCE>?

@CCall("knifunptr_openssl3266_PEM_write_bio_NETSCAPE_CERT_SEQUENCE")
external fun PEM_write_bio_NETSCAPE_CERT_SEQUENCE(bp: CValuesRef<BIO>?, x: CValuesRef<NETSCAPE_CERT_SEQUENCE>?): Int

@CCall("knifunptr_openssl3267_PEM_write_NETSCAPE_CERT_SEQUENCE")
external fun PEM_write_NETSCAPE_CERT_SEQUENCE(fp: CValuesRef<FILE>?, x: CValuesRef<NETSCAPE_CERT_SEQUENCE>?): Int

@CCall("knifunptr_openssl3268_PEM_read_bio_PKCS8")
external fun PEM_read_bio_PKCS8(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<X509_SIG>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509_SIG>?

@CCall("knifunptr_openssl3269_PEM_read_PKCS8")
external fun PEM_read_PKCS8(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<X509_SIG>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<X509_SIG>?

@CCall("knifunptr_openssl3270_PEM_write_bio_PKCS8")
external fun PEM_write_bio_PKCS8(bp: CValuesRef<BIO>?, x: CValuesRef<X509_SIG>?): Int

@CCall("knifunptr_openssl3271_PEM_write_PKCS8")
external fun PEM_write_PKCS8(fp: CValuesRef<FILE>?, x: CValuesRef<X509_SIG>?): Int

@CCall("knifunptr_openssl3272_PEM_read_bio_PKCS8_PRIV_KEY_INFO")
external fun PEM_read_bio_PKCS8_PRIV_KEY_INFO(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<PKCS8_PRIV_KEY_INFO>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl3273_PEM_read_PKCS8_PRIV_KEY_INFO")
external fun PEM_read_PKCS8_PRIV_KEY_INFO(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<PKCS8_PRIV_KEY_INFO>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl3274_PEM_write_bio_PKCS8_PRIV_KEY_INFO")
external fun PEM_write_bio_PKCS8_PRIV_KEY_INFO(bp: CValuesRef<BIO>?, x: CValuesRef<PKCS8_PRIV_KEY_INFO>?): Int

@CCall("knifunptr_openssl3275_PEM_write_PKCS8_PRIV_KEY_INFO")
external fun PEM_write_PKCS8_PRIV_KEY_INFO(fp: CValuesRef<FILE>?, x: CValuesRef<PKCS8_PRIV_KEY_INFO>?): Int

@CCall("knifunptr_openssl3276_PEM_read_bio_RSAPrivateKey")
external fun PEM_read_bio_RSAPrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<RSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl3277_PEM_read_RSAPrivateKey")
external fun PEM_read_RSAPrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<RSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl3278_PEM_write_bio_RSAPrivateKey")
external fun PEM_write_bio_RSAPrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<RSA>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3279_PEM_write_RSAPrivateKey")
external fun PEM_write_RSAPrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<RSA>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3280_PEM_read_bio_RSAPublicKey")
external fun PEM_read_bio_RSAPublicKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<RSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl3281_PEM_read_RSAPublicKey")
external fun PEM_read_RSAPublicKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<RSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl3282_PEM_write_bio_RSAPublicKey")
external fun PEM_write_bio_RSAPublicKey(bp: CValuesRef<BIO>?, x: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl3283_PEM_write_RSAPublicKey")
external fun PEM_write_RSAPublicKey(fp: CValuesRef<FILE>?, x: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl3284_PEM_read_bio_RSA_PUBKEY")
external fun PEM_read_bio_RSA_PUBKEY(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<RSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl3285_PEM_read_RSA_PUBKEY")
external fun PEM_read_RSA_PUBKEY(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<RSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<RSA>?

@CCall("knifunptr_openssl3286_PEM_write_bio_RSA_PUBKEY")
external fun PEM_write_bio_RSA_PUBKEY(bp: CValuesRef<BIO>?, x: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl3287_PEM_write_RSA_PUBKEY")
external fun PEM_write_RSA_PUBKEY(fp: CValuesRef<FILE>?, x: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl3288_PEM_read_bio_DSAPrivateKey")
external fun PEM_read_bio_DSAPrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<DSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl3289_PEM_read_DSAPrivateKey")
external fun PEM_read_DSAPrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<DSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl3290_PEM_write_bio_DSAPrivateKey")
external fun PEM_write_bio_DSAPrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<DSA>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3291_PEM_write_DSAPrivateKey")
external fun PEM_write_DSAPrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<DSA>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3292_PEM_read_bio_DSA_PUBKEY")
external fun PEM_read_bio_DSA_PUBKEY(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<DSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl3293_PEM_read_DSA_PUBKEY")
external fun PEM_read_DSA_PUBKEY(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<DSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl3294_PEM_write_bio_DSA_PUBKEY")
external fun PEM_write_bio_DSA_PUBKEY(bp: CValuesRef<BIO>?, x: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl3295_PEM_write_DSA_PUBKEY")
external fun PEM_write_DSA_PUBKEY(fp: CValuesRef<FILE>?, x: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl3296_PEM_read_bio_DSAparams")
external fun PEM_read_bio_DSAparams(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<DSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl3297_PEM_read_DSAparams")
external fun PEM_read_DSAparams(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<DSA>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DSA>?

@CCall("knifunptr_openssl3298_PEM_write_bio_DSAparams")
external fun PEM_write_bio_DSAparams(bp: CValuesRef<BIO>?, x: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl3299_PEM_write_DSAparams")
external fun PEM_write_DSAparams(fp: CValuesRef<FILE>?, x: CValuesRef<DSA>?): Int

@CCall("knifunptr_openssl3300_PEM_read_bio_ECPKParameters")
external fun PEM_read_bio_ECPKParameters(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<EC_GROUP>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl3301_PEM_read_ECPKParameters")
external fun PEM_read_ECPKParameters(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<EC_GROUP>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EC_GROUP>?

@CCall("knifunptr_openssl3302_PEM_write_bio_ECPKParameters")
external fun PEM_write_bio_ECPKParameters(bp: CValuesRef<BIO>?, x: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl3303_PEM_write_ECPKParameters")
external fun PEM_write_ECPKParameters(fp: CValuesRef<FILE>?, x: CValuesRef<EC_GROUP>?): Int

@CCall("knifunptr_openssl3304_PEM_read_bio_ECPrivateKey")
external fun PEM_read_bio_ECPrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<EC_KEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl3305_PEM_read_ECPrivateKey")
external fun PEM_read_ECPrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<EC_KEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl3306_PEM_write_bio_ECPrivateKey")
external fun PEM_write_bio_ECPrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<EC_KEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3307_PEM_write_ECPrivateKey")
external fun PEM_write_ECPrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<EC_KEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3308_PEM_read_bio_EC_PUBKEY")
external fun PEM_read_bio_EC_PUBKEY(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<EC_KEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl3309_PEM_read_EC_PUBKEY")
external fun PEM_read_EC_PUBKEY(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<EC_KEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EC_KEY>?

@CCall("knifunptr_openssl3310_PEM_write_bio_EC_PUBKEY")
external fun PEM_write_bio_EC_PUBKEY(bp: CValuesRef<BIO>?, x: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl3311_PEM_write_EC_PUBKEY")
external fun PEM_write_EC_PUBKEY(fp: CValuesRef<FILE>?, x: CValuesRef<EC_KEY>?): Int

@CCall("knifunptr_openssl3312_PEM_read_bio_DHparams")
external fun PEM_read_bio_DHparams(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<DH>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DH>?

@CCall("knifunptr_openssl3313_PEM_read_DHparams")
external fun PEM_read_DHparams(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<DH>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<DH>?

@CCall("knifunptr_openssl3314_PEM_write_bio_DHparams")
external fun PEM_write_bio_DHparams(bp: CValuesRef<BIO>?, x: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl3315_PEM_write_DHparams")
external fun PEM_write_DHparams(fp: CValuesRef<FILE>?, x: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl3316_PEM_write_bio_DHxparams")
external fun PEM_write_bio_DHxparams(bp: CValuesRef<BIO>?, x: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl3317_PEM_write_DHxparams")
external fun PEM_write_DHxparams(fp: CValuesRef<FILE>?, x: CValuesRef<DH>?): Int

@CCall("knifunptr_openssl3318_PEM_read_bio_PrivateKey")
external fun PEM_read_bio_PrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3319_PEM_read_PrivateKey")
external fun PEM_read_PrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3320_PEM_write_bio_PrivateKey")
external fun PEM_write_bio_PrivateKey(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<EVP_PKEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3321_PEM_write_PrivateKey")
external fun PEM_write_PrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<EVP_PKEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3322_PEM_read_bio_PUBKEY")
external fun PEM_read_bio_PUBKEY(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3323_PEM_read_PUBKEY")
external fun PEM_read_PUBKEY(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3324_PEM_write_bio_PUBKEY")
external fun PEM_write_bio_PUBKEY(bp: CValuesRef<BIO>?, x: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3325_PEM_write_PUBKEY")
external fun PEM_write_PUBKEY(fp: CValuesRef<FILE>?, x: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3326_PEM_write_bio_PrivateKey_traditional")
external fun PEM_write_bio_PrivateKey_traditional(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<EVP_PKEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<UByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3327_PEM_write_bio_PKCS8PrivateKey_nid")
external fun PEM_write_bio_PKCS8PrivateKey_nid(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<EVP_PKEY>?,
    nid: Int,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3328_PEM_write_bio_PKCS8PrivateKey")
external fun PEM_write_bio_PKCS8PrivateKey(
    arg0: CValuesRef<BIO>?,
    arg1: CValuesRef<EVP_PKEY>?,
    arg2: CValuesRef<EVP_CIPHER>?,
    arg3: CValuesRef<ByteVar>?,
    arg4: Int,
    arg5: CPointer<pem_password_cb>?,
    arg6: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3329_i2d_PKCS8PrivateKey_bio")
external fun i2d_PKCS8PrivateKey_bio(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<EVP_PKEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3330_i2d_PKCS8PrivateKey_nid_bio")
external fun i2d_PKCS8PrivateKey_nid_bio(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<EVP_PKEY>?,
    nid: Int,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3331_d2i_PKCS8PrivateKey_bio")
external fun d2i_PKCS8PrivateKey_bio(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3332_i2d_PKCS8PrivateKey_fp")
external fun i2d_PKCS8PrivateKey_fp(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<EVP_PKEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3333_i2d_PKCS8PrivateKey_nid_fp")
external fun i2d_PKCS8PrivateKey_nid_fp(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<EVP_PKEY>?,
    nid: Int,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3334_PEM_write_PKCS8PrivateKey_nid")
external fun PEM_write_PKCS8PrivateKey_nid(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<EVP_PKEY>?,
    nid: Int,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3335_d2i_PKCS8PrivateKey_fp")
external fun d2i_PKCS8PrivateKey_fp(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3336_PEM_write_PKCS8PrivateKey")
external fun PEM_write_PKCS8PrivateKey(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<EVP_PKEY>?,
    enc: CValuesRef<EVP_CIPHER>?,
    kstr: CValuesRef<ByteVar>?,
    klen: Int,
    cd: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3337_PEM_read_bio_Parameters")
external fun PEM_read_bio_Parameters(bp: CValuesRef<BIO>?, x: CValuesRef<CPointerVar<EVP_PKEY>>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3338_PEM_write_bio_Parameters")
external fun PEM_write_bio_Parameters(bp: CValuesRef<BIO>?, x: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3339_b2i_PrivateKey")
external fun b2i_PrivateKey(`in`: CValuesRef<CPointerVar<UByteVar>>?, length: Long): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3340_b2i_PublicKey")
external fun b2i_PublicKey(`in`: CValuesRef<CPointerVar<UByteVar>>?, length: Long): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3341_b2i_PrivateKey_bio")
external fun b2i_PrivateKey_bio(`in`: CValuesRef<BIO>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3342_b2i_PublicKey_bio")
external fun b2i_PublicKey_bio(`in`: CValuesRef<BIO>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3343_i2b_PrivateKey_bio")
external fun i2b_PrivateKey_bio(out: CValuesRef<BIO>?, pk: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3344_i2b_PublicKey_bio")
external fun i2b_PublicKey_bio(out: CValuesRef<BIO>?, pk: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3345_b2i_PVK_bio")
external fun b2i_PVK_bio(`in`: CValuesRef<BIO>?, cb: CPointer<pem_password_cb>?, u: CValuesRef<*>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3346_i2b_PVK_bio")
external fun i2b_PVK_bio(
    out: CValuesRef<BIO>?,
    pk: CValuesRef<EVP_PKEY>?,
    enclevel: Int,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3347_HMAC_size")
external fun HMAC_size(e: CValuesRef<HMAC_CTX>?): size_t

@CCall("knifunptr_openssl3348_HMAC_CTX_new")
external fun HMAC_CTX_new(): CPointer<HMAC_CTX>?

@CCall("knifunptr_openssl3349_HMAC_CTX_reset")
external fun HMAC_CTX_reset(ctx: CValuesRef<HMAC_CTX>?): Int

@CCall("knifunptr_openssl3350_HMAC_CTX_free")
external fun HMAC_CTX_free(ctx: CValuesRef<HMAC_CTX>?): Unit

@CCall("knifunptr_openssl3351_HMAC_Init")
external fun HMAC_Init(ctx: CValuesRef<HMAC_CTX>?, key: CValuesRef<*>?, len: Int, md: CValuesRef<EVP_MD>?): Int

@CCall("knifunptr_openssl3352_HMAC_Init_ex")
external fun HMAC_Init_ex(
    ctx: CValuesRef<HMAC_CTX>?,
    key: CValuesRef<*>?,
    len: Int,
    md: CValuesRef<EVP_MD>?,
    impl: CValuesRef<ENGINE>?
): Int

@CCall("knifunptr_openssl3353_HMAC_Update")
external fun HMAC_Update(ctx: CValuesRef<HMAC_CTX>?, data: CValuesRef<UByteVar>?, len: size_t): Int

@CCall("knifunptr_openssl3354_HMAC_Final")
external fun HMAC_Final(ctx: CValuesRef<HMAC_CTX>?, md: CValuesRef<UByteVar>?, len: CValuesRef<UIntVar>?): Int

@CCall("knifunptr_openssl3355_HMAC")
external fun HMAC(
    evp_md: CValuesRef<EVP_MD>?,
    key: CValuesRef<*>?,
    key_len: Int,
    d: CValuesRef<UByteVar>?,
    n: size_t,
    md: CValuesRef<UByteVar>?,
    md_len: CValuesRef<UIntVar>?
): CPointer<UByteVar>?

@CCall("knifunptr_openssl3356_HMAC_CTX_copy")
external fun HMAC_CTX_copy(dctx: CValuesRef<HMAC_CTX>?, sctx: CValuesRef<HMAC_CTX>?): Int

@CCall("knifunptr_openssl3357_HMAC_CTX_set_flags")
external fun HMAC_CTX_set_flags(ctx: CValuesRef<HMAC_CTX>?, flags: ULong): Unit

@CCall("knifunptr_openssl3358_HMAC_CTX_get_md")
external fun HMAC_CTX_get_md(ctx: CValuesRef<HMAC_CTX>?): CPointer<EVP_MD>?

@CCall("knifunptr_openssl3359_ERR_load_ASYNC_strings")
external fun ERR_load_ASYNC_strings(): Int

@CCall("knifunptr_openssl3360_ASYNC_init_thread")
external fun ASYNC_init_thread(max_size: size_t, init_size: size_t): Int

@CCall("knifunptr_openssl3361_ASYNC_cleanup_thread")
external fun ASYNC_cleanup_thread(): Unit

@CCall("knifunptr_openssl3362_ASYNC_WAIT_CTX_new")
external fun ASYNC_WAIT_CTX_new(): CPointer<ASYNC_WAIT_CTX>?

@CCall("knifunptr_openssl3363_ASYNC_WAIT_CTX_free")
external fun ASYNC_WAIT_CTX_free(ctx: CValuesRef<ASYNC_WAIT_CTX>?): Unit

@CCall("knifunptr_openssl3364_ASYNC_WAIT_CTX_set_wait_fd")
external fun ASYNC_WAIT_CTX_set_wait_fd(
    ctx: CValuesRef<ASYNC_WAIT_CTX>?,
    key: CValuesRef<*>?,
    fd: Int,
    custom_data: CValuesRef<*>?,
    cleanup: CPointer<CFunction<(CPointer<ASYNC_WAIT_CTX>?, COpaquePointer?, Int, COpaquePointer?) -> Unit>>?
): Int

@CCall("knifunptr_openssl3365_ASYNC_WAIT_CTX_get_fd")
external fun ASYNC_WAIT_CTX_get_fd(
    ctx: CValuesRef<ASYNC_WAIT_CTX>?,
    key: CValuesRef<*>?,
    fd: CValuesRef<IntVar>?,
    custom_data: CValuesRef<COpaquePointerVar>?
): Int

@CCall("knifunptr_openssl3366_ASYNC_WAIT_CTX_get_all_fds")
external fun ASYNC_WAIT_CTX_get_all_fds(
    ctx: CValuesRef<ASYNC_WAIT_CTX>?,
    fd: CValuesRef<IntVar>?,
    numfds: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3367_ASYNC_WAIT_CTX_get_changed_fds")
external fun ASYNC_WAIT_CTX_get_changed_fds(
    ctx: CValuesRef<ASYNC_WAIT_CTX>?,
    addfd: CValuesRef<IntVar>?,
    numaddfds: CValuesRef<size_tVar>?,
    delfd: CValuesRef<IntVar>?,
    numdelfds: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3368_ASYNC_WAIT_CTX_clear_fd")
external fun ASYNC_WAIT_CTX_clear_fd(ctx: CValuesRef<ASYNC_WAIT_CTX>?, key: CValuesRef<*>?): Int

@CCall("knifunptr_openssl3369_ASYNC_is_capable")
external fun ASYNC_is_capable(): Int

@CCall("knifunptr_openssl3370_ASYNC_start_job")
external fun ASYNC_start_job(
    job: CValuesRef<CPointerVar<ASYNC_JOB>>?,
    ctx: CValuesRef<ASYNC_WAIT_CTX>?,
    ret: CValuesRef<IntVar>?,
    func: CPointer<CFunction<(COpaquePointer?) -> Int>>?,
    args: CValuesRef<*>?,
    size: size_t
): Int

@CCall("knifunptr_openssl3371_ASYNC_pause_job")
external fun ASYNC_pause_job(): Int

@CCall("knifunptr_openssl3372_ASYNC_get_current_job")
external fun ASYNC_get_current_job(): CPointer<ASYNC_JOB>?

@CCall("knifunptr_openssl3373_ASYNC_get_wait_ctx")
external fun ASYNC_get_wait_ctx(job: CValuesRef<ASYNC_JOB>?): CPointer<ASYNC_WAIT_CTX>?

@CCall("knifunptr_openssl3374_ASYNC_block_pause")
external fun ASYNC_block_pause(): Unit

@CCall("knifunptr_openssl3375_ASYNC_unblock_pause")
external fun ASYNC_unblock_pause(): Unit

@CCall("knifunptr_openssl3376_ERR_load_CT_strings")
external fun ERR_load_CT_strings(): Int

@CCall("knifunptr_openssl3377_sk_SCT_num")
external fun sk_SCT_num(sk: CValuesRef<stack_st_SCT>?): Int

@CCall("knifunptr_openssl3378_sk_SCT_value")
external fun sk_SCT_value(sk: CValuesRef<stack_st_SCT>?, idx: Int): CPointer<SCT>?

@CCall("knifunptr_openssl3379_sk_SCT_new")
external fun sk_SCT_new(compare: sk_SCT_compfunc?): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3380_sk_SCT_new_null")
external fun sk_SCT_new_null(): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3381_sk_SCT_new_reserve")
external fun sk_SCT_new_reserve(compare: sk_SCT_compfunc?, n: Int): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3382_sk_SCT_reserve")
external fun sk_SCT_reserve(sk: CValuesRef<stack_st_SCT>?, n: Int): Int

@CCall("knifunptr_openssl3383_sk_SCT_free")
external fun sk_SCT_free(sk: CValuesRef<stack_st_SCT>?): Unit

@CCall("knifunptr_openssl3384_sk_SCT_zero")
external fun sk_SCT_zero(sk: CValuesRef<stack_st_SCT>?): Unit

@CCall("knifunptr_openssl3385_sk_SCT_delete")
external fun sk_SCT_delete(sk: CValuesRef<stack_st_SCT>?, i: Int): CPointer<SCT>?

@CCall("knifunptr_openssl3386_sk_SCT_delete_ptr")
external fun sk_SCT_delete_ptr(sk: CValuesRef<stack_st_SCT>?, ptr: CValuesRef<SCT>?): CPointer<SCT>?

@CCall("knifunptr_openssl3387_sk_SCT_push")
external fun sk_SCT_push(sk: CValuesRef<stack_st_SCT>?, ptr: CValuesRef<SCT>?): Int

@CCall("knifunptr_openssl3388_sk_SCT_unshift")
external fun sk_SCT_unshift(sk: CValuesRef<stack_st_SCT>?, ptr: CValuesRef<SCT>?): Int

@CCall("knifunptr_openssl3389_sk_SCT_pop")
external fun sk_SCT_pop(sk: CValuesRef<stack_st_SCT>?): CPointer<SCT>?

@CCall("knifunptr_openssl3390_sk_SCT_shift")
external fun sk_SCT_shift(sk: CValuesRef<stack_st_SCT>?): CPointer<SCT>?

@CCall("knifunptr_openssl3391_sk_SCT_pop_free")
external fun sk_SCT_pop_free(sk: CValuesRef<stack_st_SCT>?, freefunc: sk_SCT_freefunc?): Unit

@CCall("knifunptr_openssl3392_sk_SCT_insert")
external fun sk_SCT_insert(sk: CValuesRef<stack_st_SCT>?, ptr: CValuesRef<SCT>?, idx: Int): Int

@CCall("knifunptr_openssl3393_sk_SCT_set")
external fun sk_SCT_set(sk: CValuesRef<stack_st_SCT>?, idx: Int, ptr: CValuesRef<SCT>?): CPointer<SCT>?

@CCall("knifunptr_openssl3394_sk_SCT_find")
external fun sk_SCT_find(sk: CValuesRef<stack_st_SCT>?, ptr: CValuesRef<SCT>?): Int

@CCall("knifunptr_openssl3395_sk_SCT_find_ex")
external fun sk_SCT_find_ex(sk: CValuesRef<stack_st_SCT>?, ptr: CValuesRef<SCT>?): Int

@CCall("knifunptr_openssl3396_sk_SCT_sort")
external fun sk_SCT_sort(sk: CValuesRef<stack_st_SCT>?): Unit

@CCall("knifunptr_openssl3397_sk_SCT_is_sorted")
external fun sk_SCT_is_sorted(sk: CValuesRef<stack_st_SCT>?): Int

@CCall("knifunptr_openssl3398_sk_SCT_dup")
external fun sk_SCT_dup(sk: CValuesRef<stack_st_SCT>?): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3399_sk_SCT_deep_copy")
external fun sk_SCT_deep_copy(
    sk: CValuesRef<stack_st_SCT>?,
    copyfunc: sk_SCT_copyfunc?,
    freefunc: sk_SCT_freefunc?
): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3400_sk_SCT_set_cmp_func")
external fun sk_SCT_set_cmp_func(sk: CValuesRef<stack_st_SCT>?, compare: sk_SCT_compfunc?): sk_SCT_compfunc?

@CCall("knifunptr_openssl3401_sk_CTLOG_num")
external fun sk_CTLOG_num(sk: CValuesRef<stack_st_CTLOG>?): Int

@CCall("knifunptr_openssl3402_sk_CTLOG_value")
external fun sk_CTLOG_value(sk: CValuesRef<stack_st_CTLOG>?, idx: Int): CPointer<CTLOG>?

@CCall("knifunptr_openssl3403_sk_CTLOG_new")
external fun sk_CTLOG_new(compare: sk_CTLOG_compfunc?): CPointer<stack_st_CTLOG>?

@CCall("knifunptr_openssl3404_sk_CTLOG_new_null")
external fun sk_CTLOG_new_null(): CPointer<stack_st_CTLOG>?

@CCall("knifunptr_openssl3405_sk_CTLOG_new_reserve")
external fun sk_CTLOG_new_reserve(compare: sk_CTLOG_compfunc?, n: Int): CPointer<stack_st_CTLOG>?

@CCall("knifunptr_openssl3406_sk_CTLOG_reserve")
external fun sk_CTLOG_reserve(sk: CValuesRef<stack_st_CTLOG>?, n: Int): Int

@CCall("knifunptr_openssl3407_sk_CTLOG_free")
external fun sk_CTLOG_free(sk: CValuesRef<stack_st_CTLOG>?): Unit

@CCall("knifunptr_openssl3408_sk_CTLOG_zero")
external fun sk_CTLOG_zero(sk: CValuesRef<stack_st_CTLOG>?): Unit

@CCall("knifunptr_openssl3409_sk_CTLOG_delete")
external fun sk_CTLOG_delete(sk: CValuesRef<stack_st_CTLOG>?, i: Int): CPointer<CTLOG>?

@CCall("knifunptr_openssl3410_sk_CTLOG_delete_ptr")
external fun sk_CTLOG_delete_ptr(sk: CValuesRef<stack_st_CTLOG>?, ptr: CValuesRef<CTLOG>?): CPointer<CTLOG>?

@CCall("knifunptr_openssl3411_sk_CTLOG_push")
external fun sk_CTLOG_push(sk: CValuesRef<stack_st_CTLOG>?, ptr: CValuesRef<CTLOG>?): Int

@CCall("knifunptr_openssl3412_sk_CTLOG_unshift")
external fun sk_CTLOG_unshift(sk: CValuesRef<stack_st_CTLOG>?, ptr: CValuesRef<CTLOG>?): Int

@CCall("knifunptr_openssl3413_sk_CTLOG_pop")
external fun sk_CTLOG_pop(sk: CValuesRef<stack_st_CTLOG>?): CPointer<CTLOG>?

@CCall("knifunptr_openssl3414_sk_CTLOG_shift")
external fun sk_CTLOG_shift(sk: CValuesRef<stack_st_CTLOG>?): CPointer<CTLOG>?

@CCall("knifunptr_openssl3415_sk_CTLOG_pop_free")
external fun sk_CTLOG_pop_free(sk: CValuesRef<stack_st_CTLOG>?, freefunc: sk_CTLOG_freefunc?): Unit

@CCall("knifunptr_openssl3416_sk_CTLOG_insert")
external fun sk_CTLOG_insert(sk: CValuesRef<stack_st_CTLOG>?, ptr: CValuesRef<CTLOG>?, idx: Int): Int

@CCall("knifunptr_openssl3417_sk_CTLOG_set")
external fun sk_CTLOG_set(sk: CValuesRef<stack_st_CTLOG>?, idx: Int, ptr: CValuesRef<CTLOG>?): CPointer<CTLOG>?

@CCall("knifunptr_openssl3418_sk_CTLOG_find")
external fun sk_CTLOG_find(sk: CValuesRef<stack_st_CTLOG>?, ptr: CValuesRef<CTLOG>?): Int

@CCall("knifunptr_openssl3419_sk_CTLOG_find_ex")
external fun sk_CTLOG_find_ex(sk: CValuesRef<stack_st_CTLOG>?, ptr: CValuesRef<CTLOG>?): Int

@CCall("knifunptr_openssl3420_sk_CTLOG_sort")
external fun sk_CTLOG_sort(sk: CValuesRef<stack_st_CTLOG>?): Unit

@CCall("knifunptr_openssl3421_sk_CTLOG_is_sorted")
external fun sk_CTLOG_is_sorted(sk: CValuesRef<stack_st_CTLOG>?): Int

@CCall("knifunptr_openssl3422_sk_CTLOG_dup")
external fun sk_CTLOG_dup(sk: CValuesRef<stack_st_CTLOG>?): CPointer<stack_st_CTLOG>?

@CCall("knifunptr_openssl3423_sk_CTLOG_deep_copy")
external fun sk_CTLOG_deep_copy(
    sk: CValuesRef<stack_st_CTLOG>?,
    copyfunc: sk_CTLOG_copyfunc?,
    freefunc: sk_CTLOG_freefunc?
): CPointer<stack_st_CTLOG>?

@CCall("knifunptr_openssl3424_sk_CTLOG_set_cmp_func")
external fun sk_CTLOG_set_cmp_func(sk: CValuesRef<stack_st_CTLOG>?, compare: sk_CTLOG_compfunc?): sk_CTLOG_compfunc?

@CCall("knifunptr_openssl3425_CT_POLICY_EVAL_CTX_new")
external fun CT_POLICY_EVAL_CTX_new(): CPointer<CT_POLICY_EVAL_CTX>?

@CCall("knifunptr_openssl3426_CT_POLICY_EVAL_CTX_free")
external fun CT_POLICY_EVAL_CTX_free(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): Unit

@CCall("knifunptr_openssl3427_CT_POLICY_EVAL_CTX_get0_cert")
external fun CT_POLICY_EVAL_CTX_get0_cert(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): CPointer<X509>?

@CCall("knifunptr_openssl3428_CT_POLICY_EVAL_CTX_set1_cert")
external fun CT_POLICY_EVAL_CTX_set1_cert(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?, cert: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3429_CT_POLICY_EVAL_CTX_get0_issuer")
external fun CT_POLICY_EVAL_CTX_get0_issuer(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): CPointer<X509>?

@CCall("knifunptr_openssl3430_CT_POLICY_EVAL_CTX_set1_issuer")
external fun CT_POLICY_EVAL_CTX_set1_issuer(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?, issuer: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3431_CT_POLICY_EVAL_CTX_get0_log_store")
external fun CT_POLICY_EVAL_CTX_get0_log_store(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): CPointer<CTLOG_STORE>?

@CCall("knifunptr_openssl3432_CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE")
external fun CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE(
    ctx: CValuesRef<CT_POLICY_EVAL_CTX>?,
    log_store: CValuesRef<CTLOG_STORE>?
): Unit

@CCall("knifunptr_openssl3433_CT_POLICY_EVAL_CTX_get_time")
external fun CT_POLICY_EVAL_CTX_get_time(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): uint64_t

@CCall("knifunptr_openssl3434_CT_POLICY_EVAL_CTX_set_time")
external fun CT_POLICY_EVAL_CTX_set_time(ctx: CValuesRef<CT_POLICY_EVAL_CTX>?, time_in_ms: uint64_t): Unit

@CCall("knifunptr_openssl3435_SCT_new")
external fun SCT_new(): CPointer<SCT>?

@CCall("knifunptr_openssl3436_SCT_new_from_base64")
external fun SCT_new_from_base64(
    version: UByte, @CCall.CString logid_base64: String?,
    entry_type: ct_log_entry_type_t,
    timestamp: uint64_t, @CCall.CString extensions_base64: String?, @CCall.CString signature_base64: String?
): CPointer<SCT>?

@CCall("knifunptr_openssl3437_SCT_free")
external fun SCT_free(sct: CValuesRef<SCT>?): Unit

@CCall("knifunptr_openssl3438_SCT_LIST_free")
external fun SCT_LIST_free(a: CValuesRef<stack_st_SCT>?): Unit

@CCall("knifunptr_openssl3439_SCT_get_version")
external fun SCT_get_version(sct: CValuesRef<SCT>?): sct_version_t

@CCall("knifunptr_openssl3440_SCT_set_version")
external fun SCT_set_version(sct: CValuesRef<SCT>?, version: sct_version_t): Int

@CCall("knifunptr_openssl3441_SCT_get_log_entry_type")
external fun SCT_get_log_entry_type(sct: CValuesRef<SCT>?): ct_log_entry_type_t

@CCall("knifunptr_openssl3442_SCT_set_log_entry_type")
external fun SCT_set_log_entry_type(sct: CValuesRef<SCT>?, entry_type: ct_log_entry_type_t): Int

@CCall("knifunptr_openssl3443_SCT_get0_log_id")
external fun SCT_get0_log_id(sct: CValuesRef<SCT>?, log_id: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl3444_SCT_set0_log_id")
external fun SCT_set0_log_id(sct: CValuesRef<SCT>?, log_id: CValuesRef<UByteVar>?, log_id_len: size_t): Int

@CCall("knifunptr_openssl3445_SCT_set1_log_id")
external fun SCT_set1_log_id(sct: CValuesRef<SCT>?, log_id: CValuesRef<UByteVar>?, log_id_len: size_t): Int

@CCall("knifunptr_openssl3446_SCT_get_timestamp")
external fun SCT_get_timestamp(sct: CValuesRef<SCT>?): uint64_t

@CCall("knifunptr_openssl3447_SCT_set_timestamp")
external fun SCT_set_timestamp(sct: CValuesRef<SCT>?, timestamp: uint64_t): Unit

@CCall("knifunptr_openssl3448_SCT_get_signature_nid")
external fun SCT_get_signature_nid(sct: CValuesRef<SCT>?): Int

@CCall("knifunptr_openssl3449_SCT_set_signature_nid")
external fun SCT_set_signature_nid(sct: CValuesRef<SCT>?, nid: Int): Int

@CCall("knifunptr_openssl3450_SCT_get0_extensions")
external fun SCT_get0_extensions(sct: CValuesRef<SCT>?, ext: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl3451_SCT_set0_extensions")
external fun SCT_set0_extensions(sct: CValuesRef<SCT>?, ext: CValuesRef<UByteVar>?, ext_len: size_t): Unit

@CCall("knifunptr_openssl3452_SCT_set1_extensions")
external fun SCT_set1_extensions(sct: CValuesRef<SCT>?, ext: CValuesRef<UByteVar>?, ext_len: size_t): Int

@CCall("knifunptr_openssl3453_SCT_get0_signature")
external fun SCT_get0_signature(sct: CValuesRef<SCT>?, sig: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl3454_SCT_set0_signature")
external fun SCT_set0_signature(sct: CValuesRef<SCT>?, sig: CValuesRef<UByteVar>?, sig_len: size_t): Unit

@CCall("knifunptr_openssl3455_SCT_set1_signature")
external fun SCT_set1_signature(sct: CValuesRef<SCT>?, sig: CValuesRef<UByteVar>?, sig_len: size_t): Int

@CCall("knifunptr_openssl3456_SCT_get_source")
external fun SCT_get_source(sct: CValuesRef<SCT>?): sct_source_t

@CCall("knifunptr_openssl3457_SCT_set_source")
external fun SCT_set_source(sct: CValuesRef<SCT>?, source: sct_source_t): Int

@CCall("knifunptr_openssl3458_SCT_validation_status_string")
external fun SCT_validation_status_string(sct: CValuesRef<SCT>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3459_SCT_print")
external fun SCT_print(sct: CValuesRef<SCT>?, out: CValuesRef<BIO>?, indent: Int, logs: CValuesRef<CTLOG_STORE>?): Unit

@CCall("knifunptr_openssl3460_SCT_LIST_print")
external fun SCT_LIST_print(
    sct_list: CValuesRef<stack_st_SCT>?,
    out: CValuesRef<BIO>?,
    indent: Int, @CCall.CString separator: String?,
    logs: CValuesRef<CTLOG_STORE>?
): Unit

@CCall("knifunptr_openssl3461_SCT_get_validation_status")
external fun SCT_get_validation_status(sct: CValuesRef<SCT>?): sct_validation_status_t

@CCall("knifunptr_openssl3462_SCT_validate")
external fun SCT_validate(sct: CValuesRef<SCT>?, ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): Int

@CCall("knifunptr_openssl3463_SCT_LIST_validate")
external fun SCT_LIST_validate(scts: CValuesRef<stack_st_SCT>?, ctx: CValuesRef<CT_POLICY_EVAL_CTX>?): Int

@CCall("knifunptr_openssl3464_i2o_SCT_LIST")
external fun i2o_SCT_LIST(a: CValuesRef<stack_st_SCT>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3465_o2i_SCT_LIST")
external fun o2i_SCT_LIST(
    a: CValuesRef<CPointerVar<stack_st_SCT>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    len: size_t
): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3466_i2d_SCT_LIST")
external fun i2d_SCT_LIST(a: CValuesRef<stack_st_SCT>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3467_d2i_SCT_LIST")
external fun d2i_SCT_LIST(
    a: CValuesRef<CPointerVar<stack_st_SCT>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl3468_i2o_SCT")
external fun i2o_SCT(sct: CValuesRef<SCT>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3469_o2i_SCT")
external fun o2i_SCT(
    psct: CValuesRef<CPointerVar<SCT>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: size_t
): CPointer<SCT>?

@CCall("knifunptr_openssl3470_CTLOG_new")
external fun CTLOG_new(public_key: CValuesRef<EVP_PKEY>?, @CCall.CString name: String?): CPointer<CTLOG>?

@CCall("knifunptr_openssl3471_CTLOG_new_from_base64")
external fun CTLOG_new_from_base64(ct_log: CValuesRef<CPointerVar<CTLOG>>?, @CCall.CString pkey_base64: String?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl3472_CTLOG_free")
external fun CTLOG_free(log: CValuesRef<CTLOG>?): Unit

@CCall("knifunptr_openssl3473_CTLOG_get0_name")
external fun CTLOG_get0_name(log: CValuesRef<CTLOG>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3474_CTLOG_get0_log_id")
external fun CTLOG_get0_log_id(
    log: CValuesRef<CTLOG>?,
    log_id: CValuesRef<CPointerVar<uint8_tVar>>?,
    log_id_len: CValuesRef<size_tVar>?
): Unit

@CCall("knifunptr_openssl3475_CTLOG_get0_public_key")
external fun CTLOG_get0_public_key(log: CValuesRef<CTLOG>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3476_CTLOG_STORE_new")
external fun CTLOG_STORE_new(): CPointer<CTLOG_STORE>?

@CCall("knifunptr_openssl3477_CTLOG_STORE_free")
external fun CTLOG_STORE_free(store: CValuesRef<CTLOG_STORE>?): Unit

@CCall("knifunptr_openssl3478_CTLOG_STORE_get0_log_by_id")
external fun CTLOG_STORE_get0_log_by_id(
    store: CValuesRef<CTLOG_STORE>?,
    log_id: CValuesRef<uint8_tVar>?,
    log_id_len: size_t
): CPointer<CTLOG>?

@CCall("knifunptr_openssl3479_CTLOG_STORE_load_file")
external fun CTLOG_STORE_load_file(store: CValuesRef<CTLOG_STORE>?, @CCall.CString file: String?): Int

@CCall("knifunptr_openssl3480_CTLOG_STORE_load_default_file")
external fun CTLOG_STORE_load_default_file(store: CValuesRef<CTLOG_STORE>?): Int

@CCall("knifunptr_openssl3481_ERR_load_SSL_strings")
external fun ERR_load_SSL_strings(): Int

@CCall("knifunptr_openssl3482_sk_SRTP_PROTECTION_PROFILE_num")
external fun sk_SRTP_PROTECTION_PROFILE_num(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): Int

@CCall("knifunptr_openssl3483_sk_SRTP_PROTECTION_PROFILE_value")
external fun sk_SRTP_PROTECTION_PROFILE_value(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    idx: Int
): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3484_sk_SRTP_PROTECTION_PROFILE_new")
external fun sk_SRTP_PROTECTION_PROFILE_new(compare: sk_SRTP_PROTECTION_PROFILE_compfunc?): CPointer<stack_st_SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3485_sk_SRTP_PROTECTION_PROFILE_new_null")
external fun sk_SRTP_PROTECTION_PROFILE_new_null(): CPointer<stack_st_SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3486_sk_SRTP_PROTECTION_PROFILE_new_reserve")
external fun sk_SRTP_PROTECTION_PROFILE_new_reserve(
    compare: sk_SRTP_PROTECTION_PROFILE_compfunc?,
    n: Int
): CPointer<stack_st_SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3487_sk_SRTP_PROTECTION_PROFILE_reserve")
external fun sk_SRTP_PROTECTION_PROFILE_reserve(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?, n: Int): Int

@CCall("knifunptr_openssl3488_sk_SRTP_PROTECTION_PROFILE_free")
external fun sk_SRTP_PROTECTION_PROFILE_free(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): Unit

@CCall("knifunptr_openssl3489_sk_SRTP_PROTECTION_PROFILE_zero")
external fun sk_SRTP_PROTECTION_PROFILE_zero(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): Unit

@CCall("knifunptr_openssl3490_sk_SRTP_PROTECTION_PROFILE_delete")
external fun sk_SRTP_PROTECTION_PROFILE_delete(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    i: Int
): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3491_sk_SRTP_PROTECTION_PROFILE_delete_ptr")
external fun sk_SRTP_PROTECTION_PROFILE_delete_ptr(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?
): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3492_sk_SRTP_PROTECTION_PROFILE_push")
external fun sk_SRTP_PROTECTION_PROFILE_push(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?
): Int

@CCall("knifunptr_openssl3493_sk_SRTP_PROTECTION_PROFILE_unshift")
external fun sk_SRTP_PROTECTION_PROFILE_unshift(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?
): Int

@CCall("knifunptr_openssl3494_sk_SRTP_PROTECTION_PROFILE_pop")
external fun sk_SRTP_PROTECTION_PROFILE_pop(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3495_sk_SRTP_PROTECTION_PROFILE_shift")
external fun sk_SRTP_PROTECTION_PROFILE_shift(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3496_sk_SRTP_PROTECTION_PROFILE_pop_free")
external fun sk_SRTP_PROTECTION_PROFILE_pop_free(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    freefunc: sk_SRTP_PROTECTION_PROFILE_freefunc?
): Unit

@CCall("knifunptr_openssl3497_sk_SRTP_PROTECTION_PROFILE_insert")
external fun sk_SRTP_PROTECTION_PROFILE_insert(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?,
    idx: Int
): Int

@CCall("knifunptr_openssl3498_sk_SRTP_PROTECTION_PROFILE_set")
external fun sk_SRTP_PROTECTION_PROFILE_set(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    idx: Int,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?
): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3499_sk_SRTP_PROTECTION_PROFILE_find")
external fun sk_SRTP_PROTECTION_PROFILE_find(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?
): Int

@CCall("knifunptr_openssl3500_sk_SRTP_PROTECTION_PROFILE_find_ex")
external fun sk_SRTP_PROTECTION_PROFILE_find_ex(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    ptr: CValuesRef<SRTP_PROTECTION_PROFILE>?
): Int

@CCall("knifunptr_openssl3501_sk_SRTP_PROTECTION_PROFILE_sort")
external fun sk_SRTP_PROTECTION_PROFILE_sort(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): Unit

@CCall("knifunptr_openssl3502_sk_SRTP_PROTECTION_PROFILE_is_sorted")
external fun sk_SRTP_PROTECTION_PROFILE_is_sorted(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): Int

@CCall("knifunptr_openssl3503_sk_SRTP_PROTECTION_PROFILE_dup")
external fun sk_SRTP_PROTECTION_PROFILE_dup(sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?): CPointer<stack_st_SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3504_sk_SRTP_PROTECTION_PROFILE_deep_copy")
external fun sk_SRTP_PROTECTION_PROFILE_deep_copy(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    copyfunc: sk_SRTP_PROTECTION_PROFILE_copyfunc?,
    freefunc: sk_SRTP_PROTECTION_PROFILE_freefunc?
): CPointer<stack_st_SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3505_sk_SRTP_PROTECTION_PROFILE_set_cmp_func")
external fun sk_SRTP_PROTECTION_PROFILE_set_cmp_func(
    sk: CValuesRef<stack_st_SRTP_PROTECTION_PROFILE>?,
    compare: sk_SRTP_PROTECTION_PROFILE_compfunc?
): sk_SRTP_PROTECTION_PROFILE_compfunc?

@CCall("knifunptr_openssl3506_SSL_CTX_get_options")
external fun SSL_CTX_get_options(ctx: CValuesRef<SSL_CTX>?): ULong

@CCall("knifunptr_openssl3507_SSL_get_options")
external fun SSL_get_options(s: CValuesRef<SSL>?): ULong

@CCall("knifunptr_openssl3508_SSL_CTX_clear_options")
external fun SSL_CTX_clear_options(ctx: CValuesRef<SSL_CTX>?, op: ULong): ULong

@CCall("knifunptr_openssl3509_SSL_clear_options")
external fun SSL_clear_options(s: CValuesRef<SSL>?, op: ULong): ULong

@CCall("knifunptr_openssl3510_SSL_CTX_set_options")
external fun SSL_CTX_set_options(ctx: CValuesRef<SSL_CTX>?, op: ULong): ULong

@CCall("knifunptr_openssl3511_SSL_set_options")
external fun SSL_set_options(s: CValuesRef<SSL>?, op: ULong): ULong

@CCall("knifunptr_openssl3512_SSL_CTX_set_msg_callback")
external fun SSL_CTX_set_msg_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(Int, Int, Int, COpaquePointer?, size_t, CPointer<SSL>?, COpaquePointer?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl3513_SSL_set_msg_callback")
external fun SSL_set_msg_callback(
    ssl: CValuesRef<SSL>?,
    cb: CPointer<CFunction<(Int, Int, Int, COpaquePointer?, size_t, CPointer<SSL>?, COpaquePointer?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl3514_SSL_SRP_CTX_init")
external fun SSL_SRP_CTX_init(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3515_SSL_CTX_SRP_CTX_init")
external fun SSL_CTX_SRP_CTX_init(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3516_SSL_SRP_CTX_free")
external fun SSL_SRP_CTX_free(ctx: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3517_SSL_CTX_SRP_CTX_free")
external fun SSL_CTX_SRP_CTX_free(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3518_SSL_srp_server_param_with_username")
external fun SSL_srp_server_param_with_username(s: CValuesRef<SSL>?, ad: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl3519_SRP_Calc_A_param")
external fun SRP_Calc_A_param(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3520_SSL_CTX_sessions")
external fun SSL_CTX_sessions(ctx: CValuesRef<SSL_CTX>?): CPointer<lhash_st_SSL_SESSION>?

@CCall("knifunptr_openssl3521_SSL_CTX_sess_set_new_cb")
external fun SSL_CTX_sess_set_new_cb(
    ctx: CValuesRef<SSL_CTX>?,
    new_session_cb: CPointer<CFunction<(CPointer<ssl_st>?, CPointer<SSL_SESSION>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl3522_SSL_CTX_sess_get_new_cb")
external fun SSL_CTX_sess_get_new_cb(ctx: CValuesRef<SSL_CTX>?): CPointer<CFunction<(CPointer<ssl_st>?, CPointer<SSL_SESSION>?) -> Int>>?

@CCall("knifunptr_openssl3523_SSL_CTX_sess_set_remove_cb")
external fun SSL_CTX_sess_set_remove_cb(
    ctx: CValuesRef<SSL_CTX>?,
    remove_session_cb: CPointer<CFunction<(CPointer<ssl_ctx_st>?, CPointer<SSL_SESSION>?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl3524_SSL_CTX_sess_get_remove_cb")
external fun SSL_CTX_sess_get_remove_cb(ctx: CValuesRef<SSL_CTX>?): CPointer<CFunction<(CPointer<ssl_ctx_st>?, CPointer<SSL_SESSION>?) -> Unit>>?

@CCall("knifunptr_openssl3525_SSL_CTX_sess_set_get_cb")
external fun SSL_CTX_sess_set_get_cb(
    ctx: CValuesRef<SSL_CTX>?,
    get_session_cb: CPointer<CFunction<(CPointer<ssl_st>?, CPointer<UByteVar>?, Int, CPointer<IntVar>?) -> CPointer<SSL_SESSION>?>>?
): Unit

@CCall("knifunptr_openssl3526_SSL_CTX_sess_get_get_cb")
external fun SSL_CTX_sess_get_get_cb(ctx: CValuesRef<SSL_CTX>?): CPointer<CFunction<(CPointer<ssl_st>?, CPointer<UByteVar>?, Int, CPointer<IntVar>?) -> CPointer<SSL_SESSION>?>>?

@CCall("knifunptr_openssl3527_SSL_CTX_set_info_callback")
external fun SSL_CTX_set_info_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, Int, Int) -> Unit>>?
): Unit

@CCall("knifunptr_openssl3528_SSL_CTX_get_info_callback")
external fun SSL_CTX_get_info_callback(ctx: CValuesRef<SSL_CTX>?): CPointer<CFunction<(CPointer<SSL>?, Int, Int) -> Unit>>?

@CCall("knifunptr_openssl3529_SSL_CTX_set_client_cert_cb")
external fun SSL_CTX_set_client_cert_cb(
    ctx: CValuesRef<SSL_CTX>?,
    client_cert_cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<X509>>?, CPointer<CPointerVar<EVP_PKEY>>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl3530_SSL_CTX_get_client_cert_cb")
external fun SSL_CTX_get_client_cert_cb(ctx: CValuesRef<SSL_CTX>?): CPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<X509>>?, CPointer<CPointerVar<EVP_PKEY>>?) -> Int>>?

@CCall("knifunptr_openssl3531_SSL_CTX_set_client_cert_engine")
external fun SSL_CTX_set_client_cert_engine(ctx: CValuesRef<SSL_CTX>?, e: CValuesRef<ENGINE>?): Int

@CCall("knifunptr_openssl3532_SSL_CTX_set_cookie_generate_cb")
external fun SSL_CTX_set_cookie_generate_cb(
    ctx: CValuesRef<SSL_CTX>?,
    app_gen_cookie_cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, CPointer<UIntVar>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl3533_SSL_CTX_set_cookie_verify_cb")
external fun SSL_CTX_set_cookie_verify_cb(
    ctx: CValuesRef<SSL_CTX>?,
    app_verify_cookie_cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, UInt) -> Int>>?
): Unit

@CCall("knifunptr_openssl3534_SSL_CTX_set_stateless_cookie_generate_cb")
external fun SSL_CTX_set_stateless_cookie_generate_cb(
    ctx: CValuesRef<SSL_CTX>?,
    gen_stateless_cookie_cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, CPointer<size_tVar>?) -> Int>>?
): Unit

@CCall("knifunptr_openssl3535_SSL_CTX_set_stateless_cookie_verify_cb")
external fun SSL_CTX_set_stateless_cookie_verify_cb(
    ctx: CValuesRef<SSL_CTX>?,
    verify_stateless_cookie_cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, size_t) -> Int>>?
): Unit

@CCall("knifunptr_openssl3536_SSL_CTX_set_next_protos_advertised_cb")
external fun SSL_CTX_set_next_protos_advertised_cb(
    s: CValuesRef<SSL_CTX>?,
    cb: SSL_CTX_npn_advertised_cb_func?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3537_SSL_CTX_set_next_proto_select_cb")
external fun SSL_CTX_set_next_proto_select_cb(
    s: CValuesRef<SSL_CTX>?,
    cb: SSL_CTX_npn_select_cb_func?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3538_SSL_get0_next_proto_negotiated")
external fun SSL_get0_next_proto_negotiated(
    s: CValuesRef<SSL>?,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<UIntVar>?
): Unit

@CCall("knifunptr_openssl3539_SSL_select_next_proto")
external fun SSL_select_next_proto(
    out: CValuesRef<CPointerVar<UByteVar>>?,
    outlen: CValuesRef<UByteVar>?,
    `in`: CValuesRef<UByteVar>?,
    inlen: UInt,
    client: CValuesRef<UByteVar>?,
    client_len: UInt
): Int

@CCall("knifunptr_openssl3540_SSL_CTX_set_alpn_protos")
external fun SSL_CTX_set_alpn_protos(ctx: CValuesRef<SSL_CTX>?, protos: CValuesRef<UByteVar>?, protos_len: UInt): Int

@CCall("knifunptr_openssl3541_SSL_set_alpn_protos")
external fun SSL_set_alpn_protos(ssl: CValuesRef<SSL>?, protos: CValuesRef<UByteVar>?, protos_len: UInt): Int

@CCall("knifunptr_openssl3542_SSL_CTX_set_alpn_select_cb")
external fun SSL_CTX_set_alpn_select_cb(
    ctx: CValuesRef<SSL_CTX>?,
    cb: SSL_CTX_alpn_select_cb_func?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3543_SSL_get0_alpn_selected")
external fun SSL_get0_alpn_selected(
    ssl: CValuesRef<SSL>?,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<UIntVar>?
): Unit

@CCall("knifunptr_openssl3544_SSL_CTX_set_psk_client_callback")
external fun SSL_CTX_set_psk_client_callback(ctx: CValuesRef<SSL_CTX>?, cb: SSL_psk_client_cb_func?): Unit

@CCall("knifunptr_openssl3545_SSL_set_psk_client_callback")
external fun SSL_set_psk_client_callback(ssl: CValuesRef<SSL>?, cb: SSL_psk_client_cb_func?): Unit

@CCall("knifunptr_openssl3546_SSL_CTX_set_psk_server_callback")
external fun SSL_CTX_set_psk_server_callback(ctx: CValuesRef<SSL_CTX>?, cb: SSL_psk_server_cb_func?): Unit

@CCall("knifunptr_openssl3547_SSL_set_psk_server_callback")
external fun SSL_set_psk_server_callback(ssl: CValuesRef<SSL>?, cb: SSL_psk_server_cb_func?): Unit

@CCall("knifunptr_openssl3548_SSL_CTX_use_psk_identity_hint")
external fun SSL_CTX_use_psk_identity_hint(ctx: CValuesRef<SSL_CTX>?, @CCall.CString identity_hint: String?): Int

@CCall("knifunptr_openssl3549_SSL_use_psk_identity_hint")
external fun SSL_use_psk_identity_hint(s: CValuesRef<SSL>?, @CCall.CString identity_hint: String?): Int

@CCall("knifunptr_openssl3550_SSL_get_psk_identity_hint")
external fun SSL_get_psk_identity_hint(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3551_SSL_get_psk_identity")
external fun SSL_get_psk_identity(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3552_SSL_set_psk_find_session_callback")
external fun SSL_set_psk_find_session_callback(s: CValuesRef<SSL>?, cb: SSL_psk_find_session_cb_func?): Unit

@CCall("knifunptr_openssl3553_SSL_CTX_set_psk_find_session_callback")
external fun SSL_CTX_set_psk_find_session_callback(ctx: CValuesRef<SSL_CTX>?, cb: SSL_psk_find_session_cb_func?): Unit

@CCall("knifunptr_openssl3554_SSL_set_psk_use_session_callback")
external fun SSL_set_psk_use_session_callback(s: CValuesRef<SSL>?, cb: SSL_psk_use_session_cb_func?): Unit

@CCall("knifunptr_openssl3555_SSL_CTX_set_psk_use_session_callback")
external fun SSL_CTX_set_psk_use_session_callback(ctx: CValuesRef<SSL_CTX>?, cb: SSL_psk_use_session_cb_func?): Unit

@CCall("knifunptr_openssl3556_SSL_CTX_has_client_custom_ext")
external fun SSL_CTX_has_client_custom_ext(ctx: CValuesRef<SSL_CTX>?, ext_type: UInt): Int

@CCall("knifunptr_openssl3557_SSL_CTX_add_client_custom_ext")
external fun SSL_CTX_add_client_custom_ext(
    ctx: CValuesRef<SSL_CTX>?,
    ext_type: UInt,
    add_cb: custom_ext_add_cb?,
    free_cb: custom_ext_free_cb?,
    add_arg: CValuesRef<*>?,
    parse_cb: custom_ext_parse_cb?,
    parse_arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3558_SSL_CTX_add_server_custom_ext")
external fun SSL_CTX_add_server_custom_ext(
    ctx: CValuesRef<SSL_CTX>?,
    ext_type: UInt,
    add_cb: custom_ext_add_cb?,
    free_cb: custom_ext_free_cb?,
    add_arg: CValuesRef<*>?,
    parse_cb: custom_ext_parse_cb?,
    parse_arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3559_SSL_CTX_add_custom_ext")
external fun SSL_CTX_add_custom_ext(
    ctx: CValuesRef<SSL_CTX>?,
    ext_type: UInt,
    context: UInt,
    add_cb: SSL_custom_ext_add_cb_ex?,
    free_cb: SSL_custom_ext_free_cb_ex?,
    add_arg: CValuesRef<*>?,
    parse_cb: SSL_custom_ext_parse_cb_ex?,
    parse_arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3560_SSL_extension_supported")
external fun SSL_extension_supported(ext_type: UInt): Int

@CCall("knifunptr_openssl3561_SSL_CTX_set_keylog_callback")
external fun SSL_CTX_set_keylog_callback(ctx: CValuesRef<SSL_CTX>?, cb: SSL_CTX_keylog_cb_func?): Unit

@CCall("knifunptr_openssl3562_SSL_CTX_get_keylog_callback")
external fun SSL_CTX_get_keylog_callback(ctx: CValuesRef<SSL_CTX>?): SSL_CTX_keylog_cb_func?

@CCall("knifunptr_openssl3563_SSL_CTX_set_max_early_data")
external fun SSL_CTX_set_max_early_data(ctx: CValuesRef<SSL_CTX>?, max_early_data: uint32_t): Int

@CCall("knifunptr_openssl3564_SSL_CTX_get_max_early_data")
external fun SSL_CTX_get_max_early_data(ctx: CValuesRef<SSL_CTX>?): uint32_t

@CCall("knifunptr_openssl3565_SSL_set_max_early_data")
external fun SSL_set_max_early_data(s: CValuesRef<SSL>?, max_early_data: uint32_t): Int

@CCall("knifunptr_openssl3566_SSL_get_max_early_data")
external fun SSL_get_max_early_data(s: CValuesRef<SSL>?): uint32_t

@CCall("knifunptr_openssl3567_SSL_CTX_set_recv_max_early_data")
external fun SSL_CTX_set_recv_max_early_data(ctx: CValuesRef<SSL_CTX>?, recv_max_early_data: uint32_t): Int

@CCall("knifunptr_openssl3568_SSL_CTX_get_recv_max_early_data")
external fun SSL_CTX_get_recv_max_early_data(ctx: CValuesRef<SSL_CTX>?): uint32_t

@CCall("knifunptr_openssl3569_SSL_set_recv_max_early_data")
external fun SSL_set_recv_max_early_data(s: CValuesRef<SSL>?, recv_max_early_data: uint32_t): Int

@CCall("knifunptr_openssl3570_SSL_get_recv_max_early_data")
external fun SSL_get_recv_max_early_data(s: CValuesRef<SSL>?): uint32_t

@CCall("knifunptr_openssl3571_SSL_CTX_set_tlsext_max_fragment_length")
external fun SSL_CTX_set_tlsext_max_fragment_length(ctx: CValuesRef<SSL_CTX>?, mode: uint8_t): Int

@CCall("knifunptr_openssl3572_SSL_set_tlsext_max_fragment_length")
external fun SSL_set_tlsext_max_fragment_length(ssl: CValuesRef<SSL>?, mode: uint8_t): Int

@CCall("knifunptr_openssl3573_SSL_get_servername")
external fun SSL_get_servername(s: CValuesRef<SSL>?, type: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3574_SSL_get_servername_type")
external fun SSL_get_servername_type(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3575_SSL_export_keying_material")
external fun SSL_export_keying_material(
    s: CValuesRef<SSL>?,
    out: CValuesRef<UByteVar>?,
    olen: size_t, @CCall.CString label: String?,
    llen: size_t,
    context: CValuesRef<UByteVar>?,
    contextlen: size_t,
    use_context: Int
): Int

@CCall("knifunptr_openssl3576_SSL_export_keying_material_early")
external fun SSL_export_keying_material_early(
    s: CValuesRef<SSL>?,
    out: CValuesRef<UByteVar>?,
    olen: size_t, @CCall.CString label: String?,
    llen: size_t,
    context: CValuesRef<UByteVar>?,
    contextlen: size_t
): Int

@CCall("knifunptr_openssl3577_SSL_get_peer_signature_type_nid")
external fun SSL_get_peer_signature_type_nid(s: CValuesRef<SSL>?, pnid: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl3578_SSL_get_signature_type_nid")
external fun SSL_get_signature_type_nid(s: CValuesRef<SSL>?, pnid: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl3579_SSL_get_sigalgs")
external fun SSL_get_sigalgs(
    s: CValuesRef<SSL>?,
    idx: Int,
    psign: CValuesRef<IntVar>?,
    phash: CValuesRef<IntVar>?,
    psignandhash: CValuesRef<IntVar>?,
    rsig: CValuesRef<UByteVar>?,
    rhash: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl3580_SSL_get_shared_sigalgs")
external fun SSL_get_shared_sigalgs(
    s: CValuesRef<SSL>?,
    idx: Int,
    psign: CValuesRef<IntVar>?,
    phash: CValuesRef<IntVar>?,
    psignandhash: CValuesRef<IntVar>?,
    rsig: CValuesRef<UByteVar>?,
    rhash: CValuesRef<UByteVar>?
): Int

@CCall("knifunptr_openssl3581_SSL_check_chain")
external fun SSL_check_chain(
    s: CValuesRef<SSL>?,
    x: CValuesRef<X509>?,
    pk: CValuesRef<EVP_PKEY>?,
    chain: CValuesRef<stack_st_X509>?
): Int

@CCall("knifunptr_openssl3582_SSL_CTX_set_tlsext_use_srtp")
external fun SSL_CTX_set_tlsext_use_srtp(ctx: CValuesRef<SSL_CTX>?, @CCall.CString profiles: String?): Int

@CCall("knifunptr_openssl3583_SSL_set_tlsext_use_srtp")
external fun SSL_set_tlsext_use_srtp(ssl: CValuesRef<SSL>?, @CCall.CString profiles: String?): Int

@CCall("knifunptr_openssl3584_SSL_get_srtp_profiles")
external fun SSL_get_srtp_profiles(ssl: CValuesRef<SSL>?): CPointer<stack_st_SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3585_SSL_get_selected_srtp_profile")
external fun SSL_get_selected_srtp_profile(s: CValuesRef<SSL>?): CPointer<SRTP_PROTECTION_PROFILE>?

@CCall("knifunptr_openssl3586_sk_SSL_CIPHER_num")
external fun sk_SSL_CIPHER_num(sk: CValuesRef<stack_st_SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3587_sk_SSL_CIPHER_value")
external fun sk_SSL_CIPHER_value(sk: CValuesRef<stack_st_SSL_CIPHER>?, idx: Int): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3588_sk_SSL_CIPHER_new")
external fun sk_SSL_CIPHER_new(compare: sk_SSL_CIPHER_compfunc?): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3589_sk_SSL_CIPHER_new_null")
external fun sk_SSL_CIPHER_new_null(): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3590_sk_SSL_CIPHER_new_reserve")
external fun sk_SSL_CIPHER_new_reserve(compare: sk_SSL_CIPHER_compfunc?, n: Int): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3591_sk_SSL_CIPHER_reserve")
external fun sk_SSL_CIPHER_reserve(sk: CValuesRef<stack_st_SSL_CIPHER>?, n: Int): Int

@CCall("knifunptr_openssl3592_sk_SSL_CIPHER_free")
external fun sk_SSL_CIPHER_free(sk: CValuesRef<stack_st_SSL_CIPHER>?): Unit

@CCall("knifunptr_openssl3593_sk_SSL_CIPHER_zero")
external fun sk_SSL_CIPHER_zero(sk: CValuesRef<stack_st_SSL_CIPHER>?): Unit

@CCall("knifunptr_openssl3594_sk_SSL_CIPHER_delete")
external fun sk_SSL_CIPHER_delete(sk: CValuesRef<stack_st_SSL_CIPHER>?, i: Int): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3595_sk_SSL_CIPHER_delete_ptr")
external fun sk_SSL_CIPHER_delete_ptr(
    sk: CValuesRef<stack_st_SSL_CIPHER>?,
    ptr: CValuesRef<SSL_CIPHER>?
): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3596_sk_SSL_CIPHER_push")
external fun sk_SSL_CIPHER_push(sk: CValuesRef<stack_st_SSL_CIPHER>?, ptr: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3597_sk_SSL_CIPHER_unshift")
external fun sk_SSL_CIPHER_unshift(sk: CValuesRef<stack_st_SSL_CIPHER>?, ptr: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3598_sk_SSL_CIPHER_pop")
external fun sk_SSL_CIPHER_pop(sk: CValuesRef<stack_st_SSL_CIPHER>?): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3599_sk_SSL_CIPHER_shift")
external fun sk_SSL_CIPHER_shift(sk: CValuesRef<stack_st_SSL_CIPHER>?): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3600_sk_SSL_CIPHER_pop_free")
external fun sk_SSL_CIPHER_pop_free(sk: CValuesRef<stack_st_SSL_CIPHER>?, freefunc: sk_SSL_CIPHER_freefunc?): Unit

@CCall("knifunptr_openssl3601_sk_SSL_CIPHER_insert")
external fun sk_SSL_CIPHER_insert(sk: CValuesRef<stack_st_SSL_CIPHER>?, ptr: CValuesRef<SSL_CIPHER>?, idx: Int): Int

@CCall("knifunptr_openssl3602_sk_SSL_CIPHER_set")
external fun sk_SSL_CIPHER_set(
    sk: CValuesRef<stack_st_SSL_CIPHER>?,
    idx: Int,
    ptr: CValuesRef<SSL_CIPHER>?
): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3603_sk_SSL_CIPHER_find")
external fun sk_SSL_CIPHER_find(sk: CValuesRef<stack_st_SSL_CIPHER>?, ptr: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3604_sk_SSL_CIPHER_find_ex")
external fun sk_SSL_CIPHER_find_ex(sk: CValuesRef<stack_st_SSL_CIPHER>?, ptr: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3605_sk_SSL_CIPHER_sort")
external fun sk_SSL_CIPHER_sort(sk: CValuesRef<stack_st_SSL_CIPHER>?): Unit

@CCall("knifunptr_openssl3606_sk_SSL_CIPHER_is_sorted")
external fun sk_SSL_CIPHER_is_sorted(sk: CValuesRef<stack_st_SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3607_sk_SSL_CIPHER_dup")
external fun sk_SSL_CIPHER_dup(sk: CValuesRef<stack_st_SSL_CIPHER>?): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3608_sk_SSL_CIPHER_deep_copy")
external fun sk_SSL_CIPHER_deep_copy(
    sk: CValuesRef<stack_st_SSL_CIPHER>?,
    copyfunc: sk_SSL_CIPHER_copyfunc?,
    freefunc: sk_SSL_CIPHER_freefunc?
): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3609_sk_SSL_CIPHER_set_cmp_func")
external fun sk_SSL_CIPHER_set_cmp_func(
    sk: CValuesRef<stack_st_SSL_CIPHER>?,
    compare: sk_SSL_CIPHER_compfunc?
): sk_SSL_CIPHER_compfunc?

@CCall("knifunptr_openssl3610_sk_SSL_COMP_num")
external fun sk_SSL_COMP_num(sk: CValuesRef<stack_st_SSL_COMP>?): Int

@CCall("knifunptr_openssl3611_sk_SSL_COMP_value")
external fun sk_SSL_COMP_value(sk: CValuesRef<stack_st_SSL_COMP>?, idx: Int): CPointer<SSL_COMP>?

@CCall("knifunptr_openssl3612_sk_SSL_COMP_new")
external fun sk_SSL_COMP_new(compare: sk_SSL_COMP_compfunc?): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3613_sk_SSL_COMP_new_null")
external fun sk_SSL_COMP_new_null(): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3614_sk_SSL_COMP_new_reserve")
external fun sk_SSL_COMP_new_reserve(compare: sk_SSL_COMP_compfunc?, n: Int): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3615_sk_SSL_COMP_reserve")
external fun sk_SSL_COMP_reserve(sk: CValuesRef<stack_st_SSL_COMP>?, n: Int): Int

@CCall("knifunptr_openssl3616_sk_SSL_COMP_free")
external fun sk_SSL_COMP_free(sk: CValuesRef<stack_st_SSL_COMP>?): Unit

@CCall("knifunptr_openssl3617_sk_SSL_COMP_zero")
external fun sk_SSL_COMP_zero(sk: CValuesRef<stack_st_SSL_COMP>?): Unit

@CCall("knifunptr_openssl3618_sk_SSL_COMP_delete")
external fun sk_SSL_COMP_delete(sk: CValuesRef<stack_st_SSL_COMP>?, i: Int): CPointer<SSL_COMP>?

@CCall("knifunptr_openssl3619_sk_SSL_COMP_delete_ptr")
external fun sk_SSL_COMP_delete_ptr(sk: CValuesRef<stack_st_SSL_COMP>?, ptr: CValuesRef<SSL_COMP>?): CPointer<SSL_COMP>?

@CCall("knifunptr_openssl3620_sk_SSL_COMP_push")
external fun sk_SSL_COMP_push(sk: CValuesRef<stack_st_SSL_COMP>?, ptr: CValuesRef<SSL_COMP>?): Int

@CCall("knifunptr_openssl3621_sk_SSL_COMP_unshift")
external fun sk_SSL_COMP_unshift(sk: CValuesRef<stack_st_SSL_COMP>?, ptr: CValuesRef<SSL_COMP>?): Int

@CCall("knifunptr_openssl3622_sk_SSL_COMP_pop")
external fun sk_SSL_COMP_pop(sk: CValuesRef<stack_st_SSL_COMP>?): CPointer<SSL_COMP>?

@CCall("knifunptr_openssl3623_sk_SSL_COMP_shift")
external fun sk_SSL_COMP_shift(sk: CValuesRef<stack_st_SSL_COMP>?): CPointer<SSL_COMP>?

@CCall("knifunptr_openssl3624_sk_SSL_COMP_pop_free")
external fun sk_SSL_COMP_pop_free(sk: CValuesRef<stack_st_SSL_COMP>?, freefunc: sk_SSL_COMP_freefunc?): Unit

@CCall("knifunptr_openssl3625_sk_SSL_COMP_insert")
external fun sk_SSL_COMP_insert(sk: CValuesRef<stack_st_SSL_COMP>?, ptr: CValuesRef<SSL_COMP>?, idx: Int): Int

@CCall("knifunptr_openssl3626_sk_SSL_COMP_set")
external fun sk_SSL_COMP_set(
    sk: CValuesRef<stack_st_SSL_COMP>?,
    idx: Int,
    ptr: CValuesRef<SSL_COMP>?
): CPointer<SSL_COMP>?

@CCall("knifunptr_openssl3627_sk_SSL_COMP_find")
external fun sk_SSL_COMP_find(sk: CValuesRef<stack_st_SSL_COMP>?, ptr: CValuesRef<SSL_COMP>?): Int

@CCall("knifunptr_openssl3628_sk_SSL_COMP_find_ex")
external fun sk_SSL_COMP_find_ex(sk: CValuesRef<stack_st_SSL_COMP>?, ptr: CValuesRef<SSL_COMP>?): Int

@CCall("knifunptr_openssl3629_sk_SSL_COMP_sort")
external fun sk_SSL_COMP_sort(sk: CValuesRef<stack_st_SSL_COMP>?): Unit

@CCall("knifunptr_openssl3630_sk_SSL_COMP_is_sorted")
external fun sk_SSL_COMP_is_sorted(sk: CValuesRef<stack_st_SSL_COMP>?): Int

@CCall("knifunptr_openssl3631_sk_SSL_COMP_dup")
external fun sk_SSL_COMP_dup(sk: CValuesRef<stack_st_SSL_COMP>?): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3632_sk_SSL_COMP_deep_copy")
external fun sk_SSL_COMP_deep_copy(
    sk: CValuesRef<stack_st_SSL_COMP>?,
    copyfunc: sk_SSL_COMP_copyfunc?,
    freefunc: sk_SSL_COMP_freefunc?
): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3633_sk_SSL_COMP_set_cmp_func")
external fun sk_SSL_COMP_set_cmp_func(
    sk: CValuesRef<stack_st_SSL_COMP>?,
    compare: sk_SSL_COMP_compfunc?
): sk_SSL_COMP_compfunc?

@CCall("knifunptr_openssl3634_SSL_set_debug")
external fun SSL_set_debug(s: CValuesRef<SSL>?, debug: Int): Unit

@CCall("knifunptr_openssl3635_SSL_in_init")
external fun SSL_in_init(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3636_SSL_in_before")
external fun SSL_in_before(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3637_SSL_is_init_finished")
external fun SSL_is_init_finished(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3638_SSL_get_finished")
external fun SSL_get_finished(s: CValuesRef<SSL>?, buf: CValuesRef<*>?, count: size_t): size_t

@CCall("knifunptr_openssl3639_SSL_get_peer_finished")
external fun SSL_get_peer_finished(s: CValuesRef<SSL>?, buf: CValuesRef<*>?, count: size_t): size_t

@CCall("knifunptr_openssl3640_PEM_read_bio_SSL_SESSION")
external fun PEM_read_bio_SSL_SESSION(
    bp: CValuesRef<BIO>?,
    x: CValuesRef<CPointerVar<SSL_SESSION>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3641_PEM_read_SSL_SESSION")
external fun PEM_read_SSL_SESSION(
    fp: CValuesRef<FILE>?,
    x: CValuesRef<CPointerVar<SSL_SESSION>>?,
    cb: CPointer<pem_password_cb>?,
    u: CValuesRef<*>?
): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3642_PEM_write_bio_SSL_SESSION")
external fun PEM_write_bio_SSL_SESSION(bp: CValuesRef<BIO>?, x: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3643_PEM_write_SSL_SESSION")
external fun PEM_write_SSL_SESSION(fp: CValuesRef<FILE>?, x: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3644_BIO_f_ssl")
external fun BIO_f_ssl(): CPointer<BIO_METHOD>?

@CCall("knifunptr_openssl3645_BIO_new_ssl")
external fun BIO_new_ssl(ctx: CValuesRef<SSL_CTX>?, client: Int): CPointer<BIO>?

@CCall("knifunptr_openssl3646_BIO_new_ssl_connect")
external fun BIO_new_ssl_connect(ctx: CValuesRef<SSL_CTX>?): CPointer<BIO>?

@CCall("knifunptr_openssl3647_BIO_new_buffer_ssl_connect")
external fun BIO_new_buffer_ssl_connect(ctx: CValuesRef<SSL_CTX>?): CPointer<BIO>?

@CCall("knifunptr_openssl3648_BIO_ssl_copy_session_id")
external fun BIO_ssl_copy_session_id(to: CValuesRef<BIO>?, from: CValuesRef<BIO>?): Int

@CCall("knifunptr_openssl3649_BIO_ssl_shutdown")
external fun BIO_ssl_shutdown(ssl_bio: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl3650_SSL_CTX_set_cipher_list")
external fun SSL_CTX_set_cipher_list(arg0: CValuesRef<SSL_CTX>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl3651_SSL_CTX_new")
external fun SSL_CTX_new(meth: CValuesRef<SSL_METHOD>?): CPointer<SSL_CTX>?

@CCall("knifunptr_openssl3652_SSL_CTX_up_ref")
external fun SSL_CTX_up_ref(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3653_SSL_CTX_free")
external fun SSL_CTX_free(arg0: CValuesRef<SSL_CTX>?): Unit

@CCall("knifunptr_openssl3654_SSL_CTX_set_timeout")
external fun SSL_CTX_set_timeout(ctx: CValuesRef<SSL_CTX>?, t: Long): Long

@CCall("knifunptr_openssl3655_SSL_CTX_get_timeout")
external fun SSL_CTX_get_timeout(ctx: CValuesRef<SSL_CTX>?): Long

@CCall("knifunptr_openssl3656_SSL_CTX_get_cert_store")
external fun SSL_CTX_get_cert_store(arg0: CValuesRef<SSL_CTX>?): CPointer<X509_STORE>?

@CCall("knifunptr_openssl3657_SSL_CTX_set_cert_store")
external fun SSL_CTX_set_cert_store(arg0: CValuesRef<SSL_CTX>?, arg1: CValuesRef<X509_STORE>?): Unit

@CCall("knifunptr_openssl3658_SSL_CTX_set1_cert_store")
external fun SSL_CTX_set1_cert_store(arg0: CValuesRef<SSL_CTX>?, arg1: CValuesRef<X509_STORE>?): Unit

@CCall("knifunptr_openssl3659_SSL_want")
external fun SSL_want(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3660_SSL_clear")
external fun SSL_clear(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3661_SSL_CTX_flush_sessions")
external fun SSL_CTX_flush_sessions(ctx: CValuesRef<SSL_CTX>?, tm: Long): Unit

@CCall("knifunptr_openssl3662_SSL_get_current_cipher")
external fun SSL_get_current_cipher(s: CValuesRef<SSL>?): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3663_SSL_get_pending_cipher")
external fun SSL_get_pending_cipher(s: CValuesRef<SSL>?): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3664_SSL_CIPHER_get_bits")
external fun SSL_CIPHER_get_bits(c: CValuesRef<SSL_CIPHER>?, alg_bits: CValuesRef<IntVar>?): Int

@CCall("knifunptr_openssl3665_SSL_CIPHER_get_version")
external fun SSL_CIPHER_get_version(c: CValuesRef<SSL_CIPHER>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3666_SSL_CIPHER_get_name")
external fun SSL_CIPHER_get_name(c: CValuesRef<SSL_CIPHER>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3667_SSL_CIPHER_standard_name")
external fun SSL_CIPHER_standard_name(c: CValuesRef<SSL_CIPHER>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3668_OPENSSL_cipher_name")
external fun OPENSSL_cipher_name(@CCall.CString rfc_name: String?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3669_SSL_CIPHER_get_id")
external fun SSL_CIPHER_get_id(c: CValuesRef<SSL_CIPHER>?): uint32_t

@CCall("knifunptr_openssl3670_SSL_CIPHER_get_protocol_id")
external fun SSL_CIPHER_get_protocol_id(c: CValuesRef<SSL_CIPHER>?): uint16_t

@CCall("knifunptr_openssl3671_SSL_CIPHER_get_kx_nid")
external fun SSL_CIPHER_get_kx_nid(c: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3672_SSL_CIPHER_get_auth_nid")
external fun SSL_CIPHER_get_auth_nid(c: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3673_SSL_CIPHER_get_handshake_digest")
external fun SSL_CIPHER_get_handshake_digest(c: CValuesRef<SSL_CIPHER>?): CPointer<EVP_MD>?

@CCall("knifunptr_openssl3674_SSL_CIPHER_is_aead")
external fun SSL_CIPHER_is_aead(c: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3675_SSL_get_fd")
external fun SSL_get_fd(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3676_SSL_get_rfd")
external fun SSL_get_rfd(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3677_SSL_get_wfd")
external fun SSL_get_wfd(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3678_SSL_get_cipher_list")
external fun SSL_get_cipher_list(s: CValuesRef<SSL>?, n: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3679_SSL_get_shared_ciphers")
external fun SSL_get_shared_ciphers(s: CValuesRef<SSL>?, buf: CValuesRef<ByteVar>?, size: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3680_SSL_get_read_ahead")
external fun SSL_get_read_ahead(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3681_SSL_pending")
external fun SSL_pending(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3682_SSL_has_pending")
external fun SSL_has_pending(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3683_SSL_set_fd")
external fun SSL_set_fd(s: CValuesRef<SSL>?, fd: Int): Int

@CCall("knifunptr_openssl3684_SSL_set_rfd")
external fun SSL_set_rfd(s: CValuesRef<SSL>?, fd: Int): Int

@CCall("knifunptr_openssl3685_SSL_set_wfd")
external fun SSL_set_wfd(s: CValuesRef<SSL>?, fd: Int): Int

@CCall("knifunptr_openssl3686_SSL_set0_rbio")
external fun SSL_set0_rbio(s: CValuesRef<SSL>?, rbio: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl3687_SSL_set0_wbio")
external fun SSL_set0_wbio(s: CValuesRef<SSL>?, wbio: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl3688_SSL_set_bio")
external fun SSL_set_bio(s: CValuesRef<SSL>?, rbio: CValuesRef<BIO>?, wbio: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl3689_SSL_get_rbio")
external fun SSL_get_rbio(s: CValuesRef<SSL>?): CPointer<BIO>?

@CCall("knifunptr_openssl3690_SSL_get_wbio")
external fun SSL_get_wbio(s: CValuesRef<SSL>?): CPointer<BIO>?

@CCall("knifunptr_openssl3691_SSL_set_cipher_list")
external fun SSL_set_cipher_list(s: CValuesRef<SSL>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl3692_SSL_CTX_set_ciphersuites")
external fun SSL_CTX_set_ciphersuites(ctx: CValuesRef<SSL_CTX>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl3693_SSL_set_ciphersuites")
external fun SSL_set_ciphersuites(s: CValuesRef<SSL>?, @CCall.CString str: String?): Int

@CCall("knifunptr_openssl3694_SSL_set_read_ahead")
external fun SSL_set_read_ahead(s: CValuesRef<SSL>?, yes: Int): Unit

@CCall("knifunptr_openssl3695_SSL_get_verify_mode")
external fun SSL_get_verify_mode(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3696_SSL_get_verify_depth")
external fun SSL_get_verify_depth(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3697_SSL_get_verify_callback")
external fun SSL_get_verify_callback(s: CValuesRef<SSL>?): SSL_verify_cb?

@CCall("knifunptr_openssl3698_SSL_set_verify")
external fun SSL_set_verify(s: CValuesRef<SSL>?, mode: Int, callback: SSL_verify_cb?): Unit

@CCall("knifunptr_openssl3699_SSL_set_verify_depth")
external fun SSL_set_verify_depth(s: CValuesRef<SSL>?, depth: Int): Unit

@CCall("knifunptr_openssl3700_SSL_set_cert_cb")
external fun SSL_set_cert_cb(
    s: CValuesRef<SSL>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?) -> Int>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3701_SSL_use_RSAPrivateKey")
external fun SSL_use_RSAPrivateKey(ssl: CValuesRef<SSL>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl3702_SSL_use_RSAPrivateKey_ASN1")
external fun SSL_use_RSAPrivateKey_ASN1(ssl: CValuesRef<SSL>?, d: CValuesRef<UByteVar>?, len: Long): Int

@CCall("knifunptr_openssl3703_SSL_use_PrivateKey")
external fun SSL_use_PrivateKey(ssl: CValuesRef<SSL>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3704_SSL_use_PrivateKey_ASN1")
external fun SSL_use_PrivateKey_ASN1(pk: Int, ssl: CValuesRef<SSL>?, d: CValuesRef<UByteVar>?, len: Long): Int

@CCall("knifunptr_openssl3705_SSL_use_certificate")
external fun SSL_use_certificate(ssl: CValuesRef<SSL>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3706_SSL_use_certificate_ASN1")
external fun SSL_use_certificate_ASN1(ssl: CValuesRef<SSL>?, d: CValuesRef<UByteVar>?, len: Int): Int

@CCall("knifunptr_openssl3707_SSL_use_cert_and_key")
external fun SSL_use_cert_and_key(
    ssl: CValuesRef<SSL>?,
    x509: CValuesRef<X509>?,
    privatekey: CValuesRef<EVP_PKEY>?,
    chain: CValuesRef<stack_st_X509>?,
    override: Int
): Int

@CCall("knifunptr_openssl3708_SSL_CTX_use_serverinfo")
external fun SSL_CTX_use_serverinfo(
    ctx: CValuesRef<SSL_CTX>?,
    serverinfo: CValuesRef<UByteVar>?,
    serverinfo_length: size_t
): Int

@CCall("knifunptr_openssl3709_SSL_CTX_use_serverinfo_ex")
external fun SSL_CTX_use_serverinfo_ex(
    ctx: CValuesRef<SSL_CTX>?,
    version: UInt,
    serverinfo: CValuesRef<UByteVar>?,
    serverinfo_length: size_t
): Int

@CCall("knifunptr_openssl3710_SSL_CTX_use_serverinfo_file")
external fun SSL_CTX_use_serverinfo_file(ctx: CValuesRef<SSL_CTX>?, @CCall.CString file: String?): Int

@CCall("knifunptr_openssl3711_SSL_use_RSAPrivateKey_file")
external fun SSL_use_RSAPrivateKey_file(ssl: CValuesRef<SSL>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl3712_SSL_use_PrivateKey_file")
external fun SSL_use_PrivateKey_file(ssl: CValuesRef<SSL>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl3713_SSL_use_certificate_file")
external fun SSL_use_certificate_file(ssl: CValuesRef<SSL>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl3714_SSL_CTX_use_RSAPrivateKey_file")
external fun SSL_CTX_use_RSAPrivateKey_file(ctx: CValuesRef<SSL_CTX>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl3715_SSL_CTX_use_PrivateKey_file")
external fun SSL_CTX_use_PrivateKey_file(ctx: CValuesRef<SSL_CTX>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl3716_SSL_CTX_use_certificate_file")
external fun SSL_CTX_use_certificate_file(ctx: CValuesRef<SSL_CTX>?, @CCall.CString file: String?, type: Int): Int

@CCall("knifunptr_openssl3717_SSL_CTX_use_certificate_chain_file")
external fun SSL_CTX_use_certificate_chain_file(ctx: CValuesRef<SSL_CTX>?, @CCall.CString file: String?): Int

@CCall("knifunptr_openssl3718_SSL_use_certificate_chain_file")
external fun SSL_use_certificate_chain_file(ssl: CValuesRef<SSL>?, @CCall.CString file: String?): Int

@CCall("knifunptr_openssl3719_SSL_load_client_CA_file")
external fun SSL_load_client_CA_file(@CCall.CString file: String?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3720_SSL_add_file_cert_subjects_to_stack")
external fun SSL_add_file_cert_subjects_to_stack(stackCAs: CValuesRef<stack_st_X509_NAME>?, @CCall.CString file: String?): Int

@CCall("knifunptr_openssl3721_SSL_add_dir_cert_subjects_to_stack")
external fun SSL_add_dir_cert_subjects_to_stack(stackCAs: CValuesRef<stack_st_X509_NAME>?, @CCall.CString dir: String?): Int

@CCall("knifunptr_openssl3722_SSL_state_string")
external fun SSL_state_string(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3723_SSL_rstate_string")
external fun SSL_rstate_string(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3724_SSL_state_string_long")
external fun SSL_state_string_long(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3725_SSL_rstate_string_long")
external fun SSL_rstate_string_long(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3726_SSL_SESSION_get_time")
external fun SSL_SESSION_get_time(s: CValuesRef<SSL_SESSION>?): Long

@CCall("knifunptr_openssl3727_SSL_SESSION_set_time")
external fun SSL_SESSION_set_time(s: CValuesRef<SSL_SESSION>?, t: Long): Long

@CCall("knifunptr_openssl3728_SSL_SESSION_get_timeout")
external fun SSL_SESSION_get_timeout(s: CValuesRef<SSL_SESSION>?): Long

@CCall("knifunptr_openssl3729_SSL_SESSION_set_timeout")
external fun SSL_SESSION_set_timeout(s: CValuesRef<SSL_SESSION>?, t: Long): Long

@CCall("knifunptr_openssl3730_SSL_SESSION_get_protocol_version")
external fun SSL_SESSION_get_protocol_version(s: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3731_SSL_SESSION_set_protocol_version")
external fun SSL_SESSION_set_protocol_version(s: CValuesRef<SSL_SESSION>?, version: Int): Int

@CCall("knifunptr_openssl3732_SSL_SESSION_get0_hostname")
external fun SSL_SESSION_get0_hostname(s: CValuesRef<SSL_SESSION>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3733_SSL_SESSION_set1_hostname")
external fun SSL_SESSION_set1_hostname(s: CValuesRef<SSL_SESSION>?, @CCall.CString hostname: String?): Int

@CCall("knifunptr_openssl3734_SSL_SESSION_get0_alpn_selected")
external fun SSL_SESSION_get0_alpn_selected(
    s: CValuesRef<SSL_SESSION>?,
    alpn: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<size_tVar>?
): Unit

@CCall("knifunptr_openssl3735_SSL_SESSION_set1_alpn_selected")
external fun SSL_SESSION_set1_alpn_selected(s: CValuesRef<SSL_SESSION>?, alpn: CValuesRef<UByteVar>?, len: size_t): Int

@CCall("knifunptr_openssl3736_SSL_SESSION_get0_cipher")
external fun SSL_SESSION_get0_cipher(s: CValuesRef<SSL_SESSION>?): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3737_SSL_SESSION_set_cipher")
external fun SSL_SESSION_set_cipher(s: CValuesRef<SSL_SESSION>?, cipher: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3738_SSL_SESSION_has_ticket")
external fun SSL_SESSION_has_ticket(s: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3739_SSL_SESSION_get_ticket_lifetime_hint")
external fun SSL_SESSION_get_ticket_lifetime_hint(s: CValuesRef<SSL_SESSION>?): ULong

@CCall("knifunptr_openssl3740_SSL_SESSION_get0_ticket")
external fun SSL_SESSION_get0_ticket(
    s: CValuesRef<SSL_SESSION>?,
    tick: CValuesRef<CPointerVar<UByteVar>>?,
    len: CValuesRef<size_tVar>?
): Unit

@CCall("knifunptr_openssl3741_SSL_SESSION_get_max_early_data")
external fun SSL_SESSION_get_max_early_data(s: CValuesRef<SSL_SESSION>?): uint32_t

@CCall("knifunptr_openssl3742_SSL_SESSION_set_max_early_data")
external fun SSL_SESSION_set_max_early_data(s: CValuesRef<SSL_SESSION>?, max_early_data: uint32_t): Int

@CCall("knifunptr_openssl3743_SSL_copy_session_id")
external fun SSL_copy_session_id(to: CValuesRef<SSL>?, from: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3744_SSL_SESSION_get0_peer")
external fun SSL_SESSION_get0_peer(s: CValuesRef<SSL_SESSION>?): CPointer<X509>?

@CCall("knifunptr_openssl3745_SSL_SESSION_set1_id_context")
external fun SSL_SESSION_set1_id_context(
    s: CValuesRef<SSL_SESSION>?,
    sid_ctx: CValuesRef<UByteVar>?,
    sid_ctx_len: UInt
): Int

@CCall("knifunptr_openssl3746_SSL_SESSION_set1_id")
external fun SSL_SESSION_set1_id(s: CValuesRef<SSL_SESSION>?, sid: CValuesRef<UByteVar>?, sid_len: UInt): Int

@CCall("knifunptr_openssl3747_SSL_SESSION_is_resumable")
external fun SSL_SESSION_is_resumable(s: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3748_SSL_SESSION_new")
external fun SSL_SESSION_new(): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3749_SSL_SESSION_dup")
external fun SSL_SESSION_dup(src: CValuesRef<SSL_SESSION>?): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3750_SSL_SESSION_get_id")
external fun SSL_SESSION_get_id(s: CValuesRef<SSL_SESSION>?, len: CValuesRef<UIntVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl3751_SSL_SESSION_get0_id_context")
external fun SSL_SESSION_get0_id_context(s: CValuesRef<SSL_SESSION>?, len: CValuesRef<UIntVar>?): CPointer<UByteVar>?

@CCall("knifunptr_openssl3752_SSL_SESSION_get_compress_id")
external fun SSL_SESSION_get_compress_id(s: CValuesRef<SSL_SESSION>?): UInt

@CCall("knifunptr_openssl3753_SSL_SESSION_print_fp")
external fun SSL_SESSION_print_fp(fp: CValuesRef<FILE>?, ses: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3754_SSL_SESSION_print")
external fun SSL_SESSION_print(fp: CValuesRef<BIO>?, ses: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3755_SSL_SESSION_print_keylog")
external fun SSL_SESSION_print_keylog(bp: CValuesRef<BIO>?, x: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3756_SSL_SESSION_up_ref")
external fun SSL_SESSION_up_ref(ses: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3757_SSL_SESSION_free")
external fun SSL_SESSION_free(ses: CValuesRef<SSL_SESSION>?): Unit

@CCall("knifunptr_openssl3758_i2d_SSL_SESSION")
external fun i2d_SSL_SESSION(`in`: CValuesRef<SSL_SESSION>?, pp: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl3759_SSL_set_session")
external fun SSL_set_session(to: CValuesRef<SSL>?, session: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3760_SSL_CTX_add_session")
external fun SSL_CTX_add_session(ctx: CValuesRef<SSL_CTX>?, session: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3761_SSL_CTX_remove_session")
external fun SSL_CTX_remove_session(ctx: CValuesRef<SSL_CTX>?, session: CValuesRef<SSL_SESSION>?): Int

@CCall("knifunptr_openssl3762_SSL_CTX_set_generate_session_id")
external fun SSL_CTX_set_generate_session_id(ctx: CValuesRef<SSL_CTX>?, cb: GEN_SESSION_CB?): Int

@CCall("knifunptr_openssl3763_SSL_set_generate_session_id")
external fun SSL_set_generate_session_id(s: CValuesRef<SSL>?, cb: GEN_SESSION_CB?): Int

@CCall("knifunptr_openssl3764_SSL_has_matching_session_id")
external fun SSL_has_matching_session_id(s: CValuesRef<SSL>?, id: CValuesRef<UByteVar>?, id_len: UInt): Int

@CCall("knifunptr_openssl3765_d2i_SSL_SESSION")
external fun d2i_SSL_SESSION(
    a: CValuesRef<CPointerVar<SSL_SESSION>>?,
    pp: CValuesRef<CPointerVar<UByteVar>>?,
    length: Long
): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3766_SSL_get_peer_certificate")
external fun SSL_get_peer_certificate(s: CValuesRef<SSL>?): CPointer<X509>?

@CCall("knifunptr_openssl3767_SSL_get_peer_cert_chain")
external fun SSL_get_peer_cert_chain(s: CValuesRef<SSL>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl3768_SSL_CTX_get_verify_mode")
external fun SSL_CTX_get_verify_mode(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3769_SSL_CTX_get_verify_depth")
external fun SSL_CTX_get_verify_depth(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3770_SSL_CTX_get_verify_callback")
external fun SSL_CTX_get_verify_callback(ctx: CValuesRef<SSL_CTX>?): SSL_verify_cb?

@CCall("knifunptr_openssl3771_SSL_CTX_set_verify")
external fun SSL_CTX_set_verify(ctx: CValuesRef<SSL_CTX>?, mode: Int, callback: SSL_verify_cb?): Unit

@CCall("knifunptr_openssl3772_SSL_CTX_set_verify_depth")
external fun SSL_CTX_set_verify_depth(ctx: CValuesRef<SSL_CTX>?, depth: Int): Unit

@CCall("knifunptr_openssl3773_SSL_CTX_set_cert_verify_callback")
external fun SSL_CTX_set_cert_verify_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, COpaquePointer?) -> Int>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3774_SSL_CTX_set_cert_cb")
external fun SSL_CTX_set_cert_cb(
    c: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?) -> Int>>?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3775_SSL_CTX_use_RSAPrivateKey")
external fun SSL_CTX_use_RSAPrivateKey(ctx: CValuesRef<SSL_CTX>?, rsa: CValuesRef<RSA>?): Int

@CCall("knifunptr_openssl3776_SSL_CTX_use_RSAPrivateKey_ASN1")
external fun SSL_CTX_use_RSAPrivateKey_ASN1(ctx: CValuesRef<SSL_CTX>?, d: CValuesRef<UByteVar>?, len: Long): Int

@CCall("knifunptr_openssl3777_SSL_CTX_use_PrivateKey")
external fun SSL_CTX_use_PrivateKey(ctx: CValuesRef<SSL_CTX>?, pkey: CValuesRef<EVP_PKEY>?): Int

@CCall("knifunptr_openssl3778_SSL_CTX_use_PrivateKey_ASN1")
external fun SSL_CTX_use_PrivateKey_ASN1(pk: Int, ctx: CValuesRef<SSL_CTX>?, d: CValuesRef<UByteVar>?, len: Long): Int

@CCall("knifunptr_openssl3779_SSL_CTX_use_certificate")
external fun SSL_CTX_use_certificate(ctx: CValuesRef<SSL_CTX>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3780_SSL_CTX_use_certificate_ASN1")
external fun SSL_CTX_use_certificate_ASN1(ctx: CValuesRef<SSL_CTX>?, len: Int, d: CValuesRef<UByteVar>?): Int

@CCall("knifunptr_openssl3781_SSL_CTX_use_cert_and_key")
external fun SSL_CTX_use_cert_and_key(
    ctx: CValuesRef<SSL_CTX>?,
    x509: CValuesRef<X509>?,
    privatekey: CValuesRef<EVP_PKEY>?,
    chain: CValuesRef<stack_st_X509>?,
    override: Int
): Int

@CCall("knifunptr_openssl3782_SSL_CTX_set_default_passwd_cb")
external fun SSL_CTX_set_default_passwd_cb(ctx: CValuesRef<SSL_CTX>?, cb: CPointer<pem_password_cb>?): Unit

@CCall("knifunptr_openssl3783_SSL_CTX_set_default_passwd_cb_userdata")
external fun SSL_CTX_set_default_passwd_cb_userdata(ctx: CValuesRef<SSL_CTX>?, u: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl3784_SSL_CTX_get_default_passwd_cb")
external fun SSL_CTX_get_default_passwd_cb(ctx: CValuesRef<SSL_CTX>?): CPointer<pem_password_cb>?

@CCall("knifunptr_openssl3785_SSL_CTX_get_default_passwd_cb_userdata")
external fun SSL_CTX_get_default_passwd_cb_userdata(ctx: CValuesRef<SSL_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl3786_SSL_set_default_passwd_cb")
external fun SSL_set_default_passwd_cb(s: CValuesRef<SSL>?, cb: CPointer<pem_password_cb>?): Unit

@CCall("knifunptr_openssl3787_SSL_set_default_passwd_cb_userdata")
external fun SSL_set_default_passwd_cb_userdata(s: CValuesRef<SSL>?, u: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl3788_SSL_get_default_passwd_cb")
external fun SSL_get_default_passwd_cb(s: CValuesRef<SSL>?): CPointer<pem_password_cb>?

@CCall("knifunptr_openssl3789_SSL_get_default_passwd_cb_userdata")
external fun SSL_get_default_passwd_cb_userdata(s: CValuesRef<SSL>?): COpaquePointer?

@CCall("knifunptr_openssl3790_SSL_CTX_check_private_key")
external fun SSL_CTX_check_private_key(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3791_SSL_check_private_key")
external fun SSL_check_private_key(ctx: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3792_SSL_CTX_set_session_id_context")
external fun SSL_CTX_set_session_id_context(
    ctx: CValuesRef<SSL_CTX>?,
    sid_ctx: CValuesRef<UByteVar>?,
    sid_ctx_len: UInt
): Int

@CCall("knifunptr_openssl3793_SSL_new")
external fun SSL_new(ctx: CValuesRef<SSL_CTX>?): CPointer<SSL>?

@CCall("knifunptr_openssl3794_SSL_up_ref")
external fun SSL_up_ref(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3795_SSL_is_dtls")
external fun SSL_is_dtls(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3796_SSL_set_session_id_context")
external fun SSL_set_session_id_context(ssl: CValuesRef<SSL>?, sid_ctx: CValuesRef<UByteVar>?, sid_ctx_len: UInt): Int

@CCall("knifunptr_openssl3797_SSL_CTX_set_purpose")
external fun SSL_CTX_set_purpose(ctx: CValuesRef<SSL_CTX>?, purpose: Int): Int

@CCall("knifunptr_openssl3798_SSL_set_purpose")
external fun SSL_set_purpose(ssl: CValuesRef<SSL>?, purpose: Int): Int

@CCall("knifunptr_openssl3799_SSL_CTX_set_trust")
external fun SSL_CTX_set_trust(ctx: CValuesRef<SSL_CTX>?, trust: Int): Int

@CCall("knifunptr_openssl3800_SSL_set_trust")
external fun SSL_set_trust(ssl: CValuesRef<SSL>?, trust: Int): Int

@CCall("knifunptr_openssl3801_SSL_set1_host")
external fun SSL_set1_host(s: CValuesRef<SSL>?, @CCall.CString hostname: String?): Int

@CCall("knifunptr_openssl3802_SSL_add1_host")
external fun SSL_add1_host(s: CValuesRef<SSL>?, @CCall.CString hostname: String?): Int

@CCall("knifunptr_openssl3803_SSL_get0_peername")
external fun SSL_get0_peername(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3804_SSL_set_hostflags")
external fun SSL_set_hostflags(s: CValuesRef<SSL>?, flags: UInt): Unit

@CCall("knifunptr_openssl3805_SSL_CTX_dane_enable")
external fun SSL_CTX_dane_enable(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3806_SSL_CTX_dane_mtype_set")
external fun SSL_CTX_dane_mtype_set(
    ctx: CValuesRef<SSL_CTX>?,
    md: CValuesRef<EVP_MD>?,
    mtype: uint8_t,
    ord: uint8_t
): Int

@CCall("knifunptr_openssl3807_SSL_dane_enable")
external fun SSL_dane_enable(s: CValuesRef<SSL>?, @CCall.CString basedomain: String?): Int

@CCall("knifunptr_openssl3808_SSL_dane_tlsa_add")
external fun SSL_dane_tlsa_add(
    s: CValuesRef<SSL>?,
    usage: uint8_t,
    selector: uint8_t,
    mtype: uint8_t,
    data: CValuesRef<UByteVar>?,
    dlen: size_t
): Int

@CCall("knifunptr_openssl3809_SSL_get0_dane_authority")
external fun SSL_get0_dane_authority(
    s: CValuesRef<SSL>?,
    mcert: CValuesRef<CPointerVar<X509>>?,
    mspki: CValuesRef<CPointerVar<EVP_PKEY>>?
): Int

@CCall("knifunptr_openssl3810_SSL_get0_dane_tlsa")
external fun SSL_get0_dane_tlsa(
    s: CValuesRef<SSL>?,
    usage: CValuesRef<uint8_tVar>?,
    selector: CValuesRef<uint8_tVar>?,
    mtype: CValuesRef<uint8_tVar>?,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    dlen: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3811_SSL_get0_dane")
external fun SSL_get0_dane(ssl: CValuesRef<SSL>?): CPointer<SSL_DANE>?

@CCall("knifunptr_openssl3812_SSL_CTX_dane_set_flags")
external fun SSL_CTX_dane_set_flags(ctx: CValuesRef<SSL_CTX>?, flags: ULong): ULong

@CCall("knifunptr_openssl3813_SSL_CTX_dane_clear_flags")
external fun SSL_CTX_dane_clear_flags(ctx: CValuesRef<SSL_CTX>?, flags: ULong): ULong

@CCall("knifunptr_openssl3814_SSL_dane_set_flags")
external fun SSL_dane_set_flags(ssl: CValuesRef<SSL>?, flags: ULong): ULong

@CCall("knifunptr_openssl3815_SSL_dane_clear_flags")
external fun SSL_dane_clear_flags(ssl: CValuesRef<SSL>?, flags: ULong): ULong

@CCall("knifunptr_openssl3816_SSL_CTX_set1_param")
external fun SSL_CTX_set1_param(ctx: CValuesRef<SSL_CTX>?, vpm: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl3817_SSL_set1_param")
external fun SSL_set1_param(ssl: CValuesRef<SSL>?, vpm: CValuesRef<X509_VERIFY_PARAM>?): Int

@CCall("knifunptr_openssl3818_SSL_CTX_get0_param")
external fun SSL_CTX_get0_param(ctx: CValuesRef<SSL_CTX>?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl3819_SSL_get0_param")
external fun SSL_get0_param(ssl: CValuesRef<SSL>?): CPointer<X509_VERIFY_PARAM>?

@CCall("knifunptr_openssl3820_SSL_CTX_set_srp_username")
external fun SSL_CTX_set_srp_username(ctx: CValuesRef<SSL_CTX>?, name: CValuesRef<ByteVar>?): Int

@CCall("knifunptr_openssl3821_SSL_CTX_set_srp_password")
external fun SSL_CTX_set_srp_password(ctx: CValuesRef<SSL_CTX>?, password: CValuesRef<ByteVar>?): Int

@CCall("knifunptr_openssl3822_SSL_CTX_set_srp_strength")
external fun SSL_CTX_set_srp_strength(ctx: CValuesRef<SSL_CTX>?, strength: Int): Int

@CCall("knifunptr_openssl3823_SSL_CTX_set_srp_client_pwd_callback")
external fun SSL_CTX_set_srp_client_pwd_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?) -> CPointer<ByteVar>?>>?
): Int

@CCall("knifunptr_openssl3824_SSL_CTX_set_srp_verify_param_callback")
external fun SSL_CTX_set_srp_verify_param_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?) -> Int>>?
): Int

@CCall("knifunptr_openssl3825_SSL_CTX_set_srp_username_callback")
external fun SSL_CTX_set_srp_username_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<IntVar>?, COpaquePointer?) -> Int>>?
): Int

@CCall("knifunptr_openssl3826_SSL_CTX_set_srp_cb_arg")
external fun SSL_CTX_set_srp_cb_arg(ctx: CValuesRef<SSL_CTX>?, arg: CValuesRef<*>?): Int

@CCall("knifunptr_openssl3827_SSL_set_srp_server_param")
external fun SSL_set_srp_server_param(
    s: CValuesRef<SSL>?,
    N: CValuesRef<BIGNUM>?,
    g: CValuesRef<BIGNUM>?,
    sa: CValuesRef<BIGNUM>?,
    v: CValuesRef<BIGNUM>?,
    info: CValuesRef<ByteVar>?
): Int

@CCall("knifunptr_openssl3828_SSL_set_srp_server_param_pw")
external fun SSL_set_srp_server_param_pw(s: CValuesRef<SSL>?, @CCall.CString user: String?, @CCall.CString pass: String?, @CCall.CString grp: String?): Int

@CCall("knifunptr_openssl3829_SSL_get_srp_g")
external fun SSL_get_srp_g(s: CValuesRef<SSL>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl3830_SSL_get_srp_N")
external fun SSL_get_srp_N(s: CValuesRef<SSL>?): CPointer<BIGNUM>?

@CCall("knifunptr_openssl3831_SSL_get_srp_username")
external fun SSL_get_srp_username(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3832_SSL_get_srp_userinfo")
external fun SSL_get_srp_userinfo(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3833_SSL_CTX_set_client_hello_cb")
external fun SSL_CTX_set_client_hello_cb(
    c: CValuesRef<SSL_CTX>?,
    cb: SSL_client_hello_cb_fn?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl3834_SSL_client_hello_isv2")
external fun SSL_client_hello_isv2(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3835_SSL_client_hello_get0_legacy_version")
external fun SSL_client_hello_get0_legacy_version(s: CValuesRef<SSL>?): UInt

@CCall("knifunptr_openssl3836_SSL_client_hello_get0_random")
external fun SSL_client_hello_get0_random(s: CValuesRef<SSL>?, out: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl3837_SSL_client_hello_get0_session_id")
external fun SSL_client_hello_get0_session_id(s: CValuesRef<SSL>?, out: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl3838_SSL_client_hello_get0_ciphers")
external fun SSL_client_hello_get0_ciphers(s: CValuesRef<SSL>?, out: CValuesRef<CPointerVar<UByteVar>>?): size_t

@CCall("knifunptr_openssl3839_SSL_client_hello_get0_compression_methods")
external fun SSL_client_hello_get0_compression_methods(
    s: CValuesRef<SSL>?,
    out: CValuesRef<CPointerVar<UByteVar>>?
): size_t

@CCall("knifunptr_openssl3840_SSL_client_hello_get1_extensions_present")
external fun SSL_client_hello_get1_extensions_present(
    s: CValuesRef<SSL>?,
    out: CValuesRef<CPointerVar<IntVar>>?,
    outlen: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3841_SSL_client_hello_get0_ext")
external fun SSL_client_hello_get0_ext(
    s: CValuesRef<SSL>?,
    type: UInt,
    out: CValuesRef<CPointerVar<UByteVar>>?,
    outlen: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3842_SSL_certs_clear")
external fun SSL_certs_clear(s: CValuesRef<SSL>?): Unit

@CCall("knifunptr_openssl3843_SSL_free")
external fun SSL_free(ssl: CValuesRef<SSL>?): Unit

@CCall("knifunptr_openssl3844_SSL_waiting_for_async")
external fun SSL_waiting_for_async(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3845_SSL_get_all_async_fds")
external fun SSL_get_all_async_fds(s: CValuesRef<SSL>?, fds: CValuesRef<IntVar>?, numfds: CValuesRef<size_tVar>?): Int

@CCall("knifunptr_openssl3846_SSL_get_changed_async_fds")
external fun SSL_get_changed_async_fds(
    s: CValuesRef<SSL>?,
    addfd: CValuesRef<IntVar>?,
    numaddfds: CValuesRef<size_tVar>?,
    delfd: CValuesRef<IntVar>?,
    numdelfds: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3847_SSL_accept")
external fun SSL_accept(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3848_SSL_stateless")
external fun SSL_stateless(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3849_SSL_connect")
external fun SSL_connect(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3850_SSL_read")
external fun SSL_read(ssl: CValuesRef<SSL>?, buf: CValuesRef<*>?, num: Int): Int

@CCall("knifunptr_openssl3851_SSL_read_ex")
external fun SSL_read_ex(
    ssl: CValuesRef<SSL>?,
    buf: CValuesRef<*>?,
    num: size_t,
    readbytes: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3852_SSL_read_early_data")
external fun SSL_read_early_data(
    s: CValuesRef<SSL>?,
    buf: CValuesRef<*>?,
    num: size_t,
    readbytes: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3853_SSL_peek")
external fun SSL_peek(ssl: CValuesRef<SSL>?, buf: CValuesRef<*>?, num: Int): Int

@CCall("knifunptr_openssl3854_SSL_peek_ex")
external fun SSL_peek_ex(
    ssl: CValuesRef<SSL>?,
    buf: CValuesRef<*>?,
    num: size_t,
    readbytes: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3855_SSL_write")
external fun SSL_write(ssl: CValuesRef<SSL>?, buf: CValuesRef<*>?, num: Int): Int

@CCall("knifunptr_openssl3856_SSL_write_ex")
external fun SSL_write_ex(s: CValuesRef<SSL>?, buf: CValuesRef<*>?, num: size_t, written: CValuesRef<size_tVar>?): Int

@CCall("knifunptr_openssl3857_SSL_write_early_data")
external fun SSL_write_early_data(
    s: CValuesRef<SSL>?,
    buf: CValuesRef<*>?,
    num: size_t,
    written: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl3858_SSL_ctrl")
external fun SSL_ctrl(ssl: CValuesRef<SSL>?, cmd: Int, larg: Long, parg: CValuesRef<*>?): Long

@CCall("knifunptr_openssl3859_SSL_callback_ctrl")
external fun SSL_callback_ctrl(arg0: CValuesRef<SSL>?, arg1: Int, arg2: CPointer<CFunction<() -> Unit>>?): Long

@CCall("knifunptr_openssl3860_SSL_CTX_ctrl")
external fun SSL_CTX_ctrl(ctx: CValuesRef<SSL_CTX>?, cmd: Int, larg: Long, parg: CValuesRef<*>?): Long

@CCall("knifunptr_openssl3861_SSL_CTX_callback_ctrl")
external fun SSL_CTX_callback_ctrl(arg0: CValuesRef<SSL_CTX>?, arg1: Int, arg2: CPointer<CFunction<() -> Unit>>?): Long

@CCall("knifunptr_openssl3862_SSL_get_early_data_status")
external fun SSL_get_early_data_status(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3863_SSL_get_error")
external fun SSL_get_error(s: CValuesRef<SSL>?, ret_code: Int): Int

@CCall("knifunptr_openssl3864_SSL_get_version")
external fun SSL_get_version(s: CValuesRef<SSL>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3865_SSL_CTX_set_ssl_version")
external fun SSL_CTX_set_ssl_version(ctx: CValuesRef<SSL_CTX>?, meth: CValuesRef<SSL_METHOD>?): Int

@CCall("knifunptr_openssl3866_TLS_method")
external fun TLS_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3867_TLS_server_method")
external fun TLS_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3868_TLS_client_method")
external fun TLS_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3869_TLSv1_method")
external fun TLSv1_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3870_TLSv1_server_method")
external fun TLSv1_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3871_TLSv1_client_method")
external fun TLSv1_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3872_TLSv1_1_method")
external fun TLSv1_1_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3873_TLSv1_1_server_method")
external fun TLSv1_1_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3874_TLSv1_1_client_method")
external fun TLSv1_1_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3875_TLSv1_2_method")
external fun TLSv1_2_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3876_TLSv1_2_server_method")
external fun TLSv1_2_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3877_TLSv1_2_client_method")
external fun TLSv1_2_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3878_DTLSv1_method")
external fun DTLSv1_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3879_DTLSv1_server_method")
external fun DTLSv1_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3880_DTLSv1_client_method")
external fun DTLSv1_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3881_DTLSv1_2_method")
external fun DTLSv1_2_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3882_DTLSv1_2_server_method")
external fun DTLSv1_2_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3883_DTLSv1_2_client_method")
external fun DTLSv1_2_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3884_DTLS_method")
external fun DTLS_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3885_DTLS_server_method")
external fun DTLS_server_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3886_DTLS_client_method")
external fun DTLS_client_method(): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3887_DTLS_get_data_mtu")
external fun DTLS_get_data_mtu(s: CValuesRef<SSL>?): size_t

@CCall("knifunptr_openssl3888_SSL_get_ciphers")
external fun SSL_get_ciphers(s: CValuesRef<SSL>?): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3889_SSL_CTX_get_ciphers")
external fun SSL_CTX_get_ciphers(ctx: CValuesRef<SSL_CTX>?): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3890_SSL_get_client_ciphers")
external fun SSL_get_client_ciphers(s: CValuesRef<SSL>?): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3891_SSL_get1_supported_ciphers")
external fun SSL_get1_supported_ciphers(s: CValuesRef<SSL>?): CPointer<stack_st_SSL_CIPHER>?

@CCall("knifunptr_openssl3892_SSL_do_handshake")
external fun SSL_do_handshake(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3893_SSL_key_update")
external fun SSL_key_update(s: CValuesRef<SSL>?, updatetype: Int): Int

@CCall("knifunptr_openssl3894_SSL_get_key_update_type")
external fun SSL_get_key_update_type(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3895_SSL_renegotiate")
external fun SSL_renegotiate(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3896_SSL_renegotiate_abbreviated")
external fun SSL_renegotiate_abbreviated(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3897_SSL_renegotiate_pending")
external fun SSL_renegotiate_pending(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3898_SSL_shutdown")
external fun SSL_shutdown(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3899_SSL_verify_client_post_handshake")
external fun SSL_verify_client_post_handshake(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3900_SSL_CTX_set_post_handshake_auth")
external fun SSL_CTX_set_post_handshake_auth(ctx: CValuesRef<SSL_CTX>?, `val`: Int): Unit

@CCall("knifunptr_openssl3901_SSL_set_post_handshake_auth")
external fun SSL_set_post_handshake_auth(s: CValuesRef<SSL>?, `val`: Int): Unit

@CCall("knifunptr_openssl3902_SSL_CTX_get_ssl_method")
external fun SSL_CTX_get_ssl_method(ctx: CValuesRef<SSL_CTX>?): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3903_SSL_get_ssl_method")
external fun SSL_get_ssl_method(s: CValuesRef<SSL>?): CPointer<SSL_METHOD>?

@CCall("knifunptr_openssl3904_SSL_set_ssl_method")
external fun SSL_set_ssl_method(s: CValuesRef<SSL>?, method: CValuesRef<SSL_METHOD>?): Int

@CCall("knifunptr_openssl3905_SSL_alert_type_string_long")
external fun SSL_alert_type_string_long(value: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3906_SSL_alert_type_string")
external fun SSL_alert_type_string(value: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3907_SSL_alert_desc_string_long")
external fun SSL_alert_desc_string_long(value: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3908_SSL_alert_desc_string")
external fun SSL_alert_desc_string(value: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl3909_SSL_set0_CA_list")
external fun SSL_set0_CA_list(s: CValuesRef<SSL>?, name_list: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl3910_SSL_CTX_set0_CA_list")
external fun SSL_CTX_set0_CA_list(ctx: CValuesRef<SSL_CTX>?, name_list: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl3911_SSL_get0_CA_list")
external fun SSL_get0_CA_list(s: CValuesRef<SSL>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3912_SSL_CTX_get0_CA_list")
external fun SSL_CTX_get0_CA_list(ctx: CValuesRef<SSL_CTX>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3913_SSL_add1_to_CA_list")
external fun SSL_add1_to_CA_list(ssl: CValuesRef<SSL>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3914_SSL_CTX_add1_to_CA_list")
external fun SSL_CTX_add1_to_CA_list(ctx: CValuesRef<SSL_CTX>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3915_SSL_get0_peer_CA_list")
external fun SSL_get0_peer_CA_list(s: CValuesRef<SSL>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3916_SSL_set_client_CA_list")
external fun SSL_set_client_CA_list(s: CValuesRef<SSL>?, name_list: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl3917_SSL_CTX_set_client_CA_list")
external fun SSL_CTX_set_client_CA_list(ctx: CValuesRef<SSL_CTX>?, name_list: CValuesRef<stack_st_X509_NAME>?): Unit

@CCall("knifunptr_openssl3918_SSL_get_client_CA_list")
external fun SSL_get_client_CA_list(s: CValuesRef<SSL>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3919_SSL_CTX_get_client_CA_list")
external fun SSL_CTX_get_client_CA_list(s: CValuesRef<SSL_CTX>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3920_SSL_add_client_CA")
external fun SSL_add_client_CA(ssl: CValuesRef<SSL>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3921_SSL_CTX_add_client_CA")
external fun SSL_CTX_add_client_CA(ctx: CValuesRef<SSL_CTX>?, x: CValuesRef<X509>?): Int

@CCall("knifunptr_openssl3922_SSL_set_connect_state")
external fun SSL_set_connect_state(s: CValuesRef<SSL>?): Unit

@CCall("knifunptr_openssl3923_SSL_set_accept_state")
external fun SSL_set_accept_state(s: CValuesRef<SSL>?): Unit

@CCall("knifunptr_openssl3924_SSL_get_default_timeout")
external fun SSL_get_default_timeout(s: CValuesRef<SSL>?): Long

@CCall("knifunptr_openssl3925_SSL_CIPHER_description")
external fun SSL_CIPHER_description(
    arg0: CValuesRef<SSL_CIPHER>?,
    buf: CValuesRef<ByteVar>?,
    size: Int
): CPointer<ByteVar>?

@CCall("knifunptr_openssl3926_SSL_dup_CA_list")
external fun SSL_dup_CA_list(sk: CValuesRef<stack_st_X509_NAME>?): CPointer<stack_st_X509_NAME>?

@CCall("knifunptr_openssl3927_SSL_dup")
external fun SSL_dup(ssl: CValuesRef<SSL>?): CPointer<SSL>?

@CCall("knifunptr_openssl3928_SSL_get_certificate")
external fun SSL_get_certificate(ssl: CValuesRef<SSL>?): CPointer<X509>?

@CCall("knifunptr_openssl3929_SSL_get_privatekey")
external fun SSL_get_privatekey(ssl: CValuesRef<SSL>?): CPointer<evp_pkey_st>?

@CCall("knifunptr_openssl3930_SSL_CTX_get0_certificate")
external fun SSL_CTX_get0_certificate(ctx: CValuesRef<SSL_CTX>?): CPointer<X509>?

@CCall("knifunptr_openssl3931_SSL_CTX_get0_privatekey")
external fun SSL_CTX_get0_privatekey(ctx: CValuesRef<SSL_CTX>?): CPointer<EVP_PKEY>?

@CCall("knifunptr_openssl3932_SSL_CTX_set_quiet_shutdown")
external fun SSL_CTX_set_quiet_shutdown(ctx: CValuesRef<SSL_CTX>?, mode: Int): Unit

@CCall("knifunptr_openssl3933_SSL_CTX_get_quiet_shutdown")
external fun SSL_CTX_get_quiet_shutdown(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3934_SSL_set_quiet_shutdown")
external fun SSL_set_quiet_shutdown(ssl: CValuesRef<SSL>?, mode: Int): Unit

@CCall("knifunptr_openssl3935_SSL_get_quiet_shutdown")
external fun SSL_get_quiet_shutdown(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3936_SSL_set_shutdown")
external fun SSL_set_shutdown(ssl: CValuesRef<SSL>?, mode: Int): Unit

@CCall("knifunptr_openssl3937_SSL_get_shutdown")
external fun SSL_get_shutdown(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3938_SSL_version")
external fun SSL_version(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3939_SSL_client_version")
external fun SSL_client_version(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl3940_SSL_CTX_set_default_verify_paths")
external fun SSL_CTX_set_default_verify_paths(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3941_SSL_CTX_set_default_verify_dir")
external fun SSL_CTX_set_default_verify_dir(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3942_SSL_CTX_set_default_verify_file")
external fun SSL_CTX_set_default_verify_file(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl3943_SSL_CTX_load_verify_locations")
external fun SSL_CTX_load_verify_locations(ctx: CValuesRef<SSL_CTX>?, @CCall.CString CAfile: String?, @CCall.CString CApath: String?): Int

@CCall("knifunptr_openssl3944_SSL_get_session")
external fun SSL_get_session(ssl: CValuesRef<SSL>?): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3945_SSL_get1_session")
external fun SSL_get1_session(ssl: CValuesRef<SSL>?): CPointer<SSL_SESSION>?

@CCall("knifunptr_openssl3946_SSL_get_SSL_CTX")
external fun SSL_get_SSL_CTX(ssl: CValuesRef<SSL>?): CPointer<SSL_CTX>?

@CCall("knifunptr_openssl3947_SSL_set_SSL_CTX")
external fun SSL_set_SSL_CTX(ssl: CValuesRef<SSL>?, ctx: CValuesRef<SSL_CTX>?): CPointer<SSL_CTX>?

@CCall("knifunptr_openssl3948_SSL_set_info_callback")
external fun SSL_set_info_callback(
    ssl: CValuesRef<SSL>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, Int, Int) -> Unit>>?
): Unit

@CCall("knifunptr_openssl3949_SSL_get_info_callback")
external fun SSL_get_info_callback(ssl: CValuesRef<SSL>?): CPointer<CFunction<(CPointer<SSL>?, Int, Int) -> Unit>>?

@CCall("knifunptr_openssl3950_SSL_get_state")
external fun SSL_get_state(ssl: CValuesRef<SSL>?): OSSL_HANDSHAKE_STATE

@CCall("knifunptr_openssl3951_SSL_set_verify_result")
external fun SSL_set_verify_result(ssl: CValuesRef<SSL>?, v: Long): Unit

@CCall("knifunptr_openssl3952_SSL_get_verify_result")
external fun SSL_get_verify_result(ssl: CValuesRef<SSL>?): Long

@CCall("knifunptr_openssl3953_SSL_get0_verified_chain")
external fun SSL_get0_verified_chain(s: CValuesRef<SSL>?): CPointer<stack_st_X509>?

@CCall("knifunptr_openssl3954_SSL_get_client_random")
external fun SSL_get_client_random(ssl: CValuesRef<SSL>?, out: CValuesRef<UByteVar>?, outlen: size_t): size_t

@CCall("knifunptr_openssl3955_SSL_get_server_random")
external fun SSL_get_server_random(ssl: CValuesRef<SSL>?, out: CValuesRef<UByteVar>?, outlen: size_t): size_t

@CCall("knifunptr_openssl3956_SSL_SESSION_get_master_key")
external fun SSL_SESSION_get_master_key(
    sess: CValuesRef<SSL_SESSION>?,
    out: CValuesRef<UByteVar>?,
    outlen: size_t
): size_t

@CCall("knifunptr_openssl3957_SSL_SESSION_set1_master_key")
external fun SSL_SESSION_set1_master_key(sess: CValuesRef<SSL_SESSION>?, `in`: CValuesRef<UByteVar>?, len: size_t): Int

@CCall("knifunptr_openssl3958_SSL_SESSION_get_max_fragment_length")
external fun SSL_SESSION_get_max_fragment_length(sess: CValuesRef<SSL_SESSION>?): uint8_t

@CCall("knifunptr_openssl3959_SSL_set_ex_data")
external fun SSL_set_ex_data(ssl: CValuesRef<SSL>?, idx: Int, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl3960_SSL_get_ex_data")
external fun SSL_get_ex_data(ssl: CValuesRef<SSL>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl3961_SSL_SESSION_set_ex_data")
external fun SSL_SESSION_set_ex_data(ss: CValuesRef<SSL_SESSION>?, idx: Int, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl3962_SSL_SESSION_get_ex_data")
external fun SSL_SESSION_get_ex_data(ss: CValuesRef<SSL_SESSION>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl3963_SSL_CTX_set_ex_data")
external fun SSL_CTX_set_ex_data(ssl: CValuesRef<SSL_CTX>?, idx: Int, data: CValuesRef<*>?): Int

@CCall("knifunptr_openssl3964_SSL_CTX_get_ex_data")
external fun SSL_CTX_get_ex_data(ssl: CValuesRef<SSL_CTX>?, idx: Int): COpaquePointer?

@CCall("knifunptr_openssl3965_SSL_get_ex_data_X509_STORE_CTX_idx")
external fun SSL_get_ex_data_X509_STORE_CTX_idx(): Int

@CCall("knifunptr_openssl3966_SSL_CTX_set_default_read_buffer_len")
external fun SSL_CTX_set_default_read_buffer_len(ctx: CValuesRef<SSL_CTX>?, len: size_t): Unit

@CCall("knifunptr_openssl3967_SSL_set_default_read_buffer_len")
external fun SSL_set_default_read_buffer_len(s: CValuesRef<SSL>?, len: size_t): Unit

@CCall("knifunptr_openssl3968_SSL_CTX_set_tmp_dh_callback")
external fun SSL_CTX_set_tmp_dh_callback(
    ctx: CValuesRef<SSL_CTX>?,
    dh: CPointer<CFunction<(CPointer<SSL>?, Int, Int) -> CPointer<DH>?>>?
): Unit

@CCall("knifunptr_openssl3969_SSL_set_tmp_dh_callback")
external fun SSL_set_tmp_dh_callback(
    ssl: CValuesRef<SSL>?,
    dh: CPointer<CFunction<(CPointer<SSL>?, Int, Int) -> CPointer<DH>?>>?
): Unit

@CCall("knifunptr_openssl3970_SSL_get_current_compression")
external fun SSL_get_current_compression(s: CValuesRef<SSL>?): CPointer<COMP_METHOD>?

@CCall("knifunptr_openssl3971_SSL_get_current_expansion")
external fun SSL_get_current_expansion(s: CValuesRef<SSL>?): CPointer<COMP_METHOD>?

@CCall("knifunptr_openssl3972_SSL_COMP_get_name")
external fun SSL_COMP_get_name(comp: CValuesRef<COMP_METHOD>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3973_SSL_COMP_get0_name")
external fun SSL_COMP_get0_name(comp: CValuesRef<SSL_COMP>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl3974_SSL_COMP_get_id")
external fun SSL_COMP_get_id(comp: CValuesRef<SSL_COMP>?): Int

@CCall("knifunptr_openssl3975_SSL_COMP_get_compression_methods")
external fun SSL_COMP_get_compression_methods(): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3976_SSL_COMP_set0_compression_methods")
external fun SSL_COMP_set0_compression_methods(meths: CValuesRef<stack_st_SSL_COMP>?): CPointer<stack_st_SSL_COMP>?

@CCall("knifunptr_openssl3977_SSL_COMP_add_compression_method")
external fun SSL_COMP_add_compression_method(id: Int, cm: CValuesRef<COMP_METHOD>?): Int

@CCall("knifunptr_openssl3978_SSL_CIPHER_find")
external fun SSL_CIPHER_find(ssl: CValuesRef<SSL>?, ptr: CValuesRef<UByteVar>?): CPointer<SSL_CIPHER>?

@CCall("knifunptr_openssl3979_SSL_CIPHER_get_cipher_nid")
external fun SSL_CIPHER_get_cipher_nid(c: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3980_SSL_CIPHER_get_digest_nid")
external fun SSL_CIPHER_get_digest_nid(c: CValuesRef<SSL_CIPHER>?): Int

@CCall("knifunptr_openssl3981_SSL_bytes_to_cipher_list")
external fun SSL_bytes_to_cipher_list(
    s: CValuesRef<SSL>?,
    bytes: CValuesRef<UByteVar>?,
    len: size_t,
    isv2format: Int,
    sk: CValuesRef<CPointerVar<stack_st_SSL_CIPHER>>?,
    scsvs: CValuesRef<CPointerVar<stack_st_SSL_CIPHER>>?
): Int

@CCall("knifunptr_openssl3982_SSL_set_session_ticket_ext")
external fun SSL_set_session_ticket_ext(s: CValuesRef<SSL>?, ext_data: CValuesRef<*>?, ext_len: Int): Int

@CCall("knifunptr_openssl3983_SSL_set_session_ticket_ext_cb")
external fun SSL_set_session_ticket_ext_cb(
    s: CValuesRef<SSL>?,
    cb: tls_session_ticket_ext_cb_fn?,
    arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3984_SSL_set_session_secret_cb")
external fun SSL_set_session_secret_cb(
    s: CValuesRef<SSL>?,
    session_secret_cb: tls_session_secret_cb_fn?,
    arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl3985_SSL_CTX_set_not_resumable_session_callback")
external fun SSL_CTX_set_not_resumable_session_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, Int) -> Int>>?
): Unit

@CCall("knifunptr_openssl3986_SSL_set_not_resumable_session_callback")
external fun SSL_set_not_resumable_session_callback(
    ssl: CValuesRef<SSL>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, Int) -> Int>>?
): Unit

@CCall("knifunptr_openssl3987_SSL_CTX_set_record_padding_callback")
external fun SSL_CTX_set_record_padding_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, Int, size_t, COpaquePointer?) -> size_t>>?
): Unit

@CCall("knifunptr_openssl3988_SSL_CTX_set_record_padding_callback_arg")
external fun SSL_CTX_set_record_padding_callback_arg(ctx: CValuesRef<SSL_CTX>?, arg: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl3989_SSL_CTX_get_record_padding_callback_arg")
external fun SSL_CTX_get_record_padding_callback_arg(ctx: CValuesRef<SSL_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl3990_SSL_CTX_set_block_padding")
external fun SSL_CTX_set_block_padding(ctx: CValuesRef<SSL_CTX>?, block_size: size_t): Int

@CCall("knifunptr_openssl3991_SSL_set_record_padding_callback")
external fun SSL_set_record_padding_callback(
    ssl: CValuesRef<SSL>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, Int, size_t, COpaquePointer?) -> size_t>>?
): Unit

@CCall("knifunptr_openssl3992_SSL_set_record_padding_callback_arg")
external fun SSL_set_record_padding_callback_arg(ssl: CValuesRef<SSL>?, arg: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl3993_SSL_get_record_padding_callback_arg")
external fun SSL_get_record_padding_callback_arg(ssl: CValuesRef<SSL>?): COpaquePointer?

@CCall("knifunptr_openssl3994_SSL_set_block_padding")
external fun SSL_set_block_padding(ssl: CValuesRef<SSL>?, block_size: size_t): Int

@CCall("knifunptr_openssl3995_SSL_set_num_tickets")
external fun SSL_set_num_tickets(s: CValuesRef<SSL>?, num_tickets: size_t): Int

@CCall("knifunptr_openssl3996_SSL_get_num_tickets")
external fun SSL_get_num_tickets(s: CValuesRef<SSL>?): size_t

@CCall("knifunptr_openssl3997_SSL_CTX_set_num_tickets")
external fun SSL_CTX_set_num_tickets(ctx: CValuesRef<SSL_CTX>?, num_tickets: size_t): Int

@CCall("knifunptr_openssl3998_SSL_CTX_get_num_tickets")
external fun SSL_CTX_get_num_tickets(ctx: CValuesRef<SSL_CTX>?): size_t

@CCall("knifunptr_openssl3999_SSL_session_reused")
external fun SSL_session_reused(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl4000_SSL_is_server")
external fun SSL_is_server(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl4001_SSL_CONF_CTX_new")
external fun SSL_CONF_CTX_new(): CPointer<SSL_CONF_CTX>?

@CCall("knifunptr_openssl4002_SSL_CONF_CTX_finish")
external fun SSL_CONF_CTX_finish(cctx: CValuesRef<SSL_CONF_CTX>?): Int

@CCall("knifunptr_openssl4003_SSL_CONF_CTX_free")
external fun SSL_CONF_CTX_free(cctx: CValuesRef<SSL_CONF_CTX>?): Unit

@CCall("knifunptr_openssl4004_SSL_CONF_CTX_set_flags")
external fun SSL_CONF_CTX_set_flags(cctx: CValuesRef<SSL_CONF_CTX>?, flags: UInt): UInt

@CCall("knifunptr_openssl4005_SSL_CONF_CTX_clear_flags")
external fun SSL_CONF_CTX_clear_flags(cctx: CValuesRef<SSL_CONF_CTX>?, flags: UInt): UInt

@CCall("knifunptr_openssl4006_SSL_CONF_CTX_set1_prefix")
external fun SSL_CONF_CTX_set1_prefix(cctx: CValuesRef<SSL_CONF_CTX>?, @CCall.CString pre: String?): Int

@CCall("knifunptr_openssl4007_SSL_CONF_CTX_set_ssl")
external fun SSL_CONF_CTX_set_ssl(cctx: CValuesRef<SSL_CONF_CTX>?, ssl: CValuesRef<SSL>?): Unit

@CCall("knifunptr_openssl4008_SSL_CONF_CTX_set_ssl_ctx")
external fun SSL_CONF_CTX_set_ssl_ctx(cctx: CValuesRef<SSL_CONF_CTX>?, ctx: CValuesRef<SSL_CTX>?): Unit

@CCall("knifunptr_openssl4009_SSL_CONF_cmd")
external fun SSL_CONF_cmd(cctx: CValuesRef<SSL_CONF_CTX>?, @CCall.CString cmd: String?, @CCall.CString value: String?): Int

@CCall("knifunptr_openssl4010_SSL_CONF_cmd_argv")
external fun SSL_CONF_cmd_argv(
    cctx: CValuesRef<SSL_CONF_CTX>?,
    pargc: CValuesRef<IntVar>?,
    pargv: CValuesRef<CPointerVar<CPointerVar<ByteVar>>>?
): Int

@CCall("knifunptr_openssl4011_SSL_CONF_cmd_value_type")
external fun SSL_CONF_cmd_value_type(cctx: CValuesRef<SSL_CONF_CTX>?, @CCall.CString cmd: String?): Int

@CCall("knifunptr_openssl4012_SSL_add_ssl_module")
external fun SSL_add_ssl_module(): Unit

@CCall("knifunptr_openssl4013_SSL_config")
external fun SSL_config(s: CValuesRef<SSL>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl4014_SSL_CTX_config")
external fun SSL_CTX_config(ctx: CValuesRef<SSL_CTX>?, @CCall.CString name: String?): Int

@CCall("knifunptr_openssl4015_DTLSv1_listen")
external fun DTLSv1_listen(s: CValuesRef<SSL>?, client: CValuesRef<BIO_ADDR>?): Int

@CCall("knifunptr_openssl4016_SSL_set_ct_validation_callback")
external fun SSL_set_ct_validation_callback(
    s: CValuesRef<SSL>?,
    callback: ssl_ct_validation_cb?,
    arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl4017_SSL_CTX_set_ct_validation_callback")
external fun SSL_CTX_set_ct_validation_callback(
    ctx: CValuesRef<SSL_CTX>?,
    callback: ssl_ct_validation_cb?,
    arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl4018_SSL_enable_ct")
external fun SSL_enable_ct(s: CValuesRef<SSL>?, validation_mode: Int): Int

@CCall("knifunptr_openssl4019_SSL_CTX_enable_ct")
external fun SSL_CTX_enable_ct(ctx: CValuesRef<SSL_CTX>?, validation_mode: Int): Int

@CCall("knifunptr_openssl4020_SSL_ct_is_enabled")
external fun SSL_ct_is_enabled(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl4021_SSL_CTX_ct_is_enabled")
external fun SSL_CTX_ct_is_enabled(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl4022_SSL_get0_peer_scts")
external fun SSL_get0_peer_scts(s: CValuesRef<SSL>?): CPointer<stack_st_SCT>?

@CCall("knifunptr_openssl4023_SSL_CTX_set_default_ctlog_list_file")
external fun SSL_CTX_set_default_ctlog_list_file(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl4024_SSL_CTX_set_ctlog_list_file")
external fun SSL_CTX_set_ctlog_list_file(ctx: CValuesRef<SSL_CTX>?, @CCall.CString path: String?): Int

@CCall("knifunptr_openssl4025_SSL_CTX_set0_ctlog_store")
external fun SSL_CTX_set0_ctlog_store(ctx: CValuesRef<SSL_CTX>?, logs: CValuesRef<CTLOG_STORE>?): Unit

@CCall("knifunptr_openssl4026_SSL_CTX_get0_ctlog_store")
external fun SSL_CTX_get0_ctlog_store(ctx: CValuesRef<SSL_CTX>?): CPointer<CTLOG_STORE>?

@CCall("knifunptr_openssl4027_SSL_set_security_level")
external fun SSL_set_security_level(s: CValuesRef<SSL>?, level: Int): Unit

@CCall("knifunptr_openssl4028_SSL_get_security_level")
external fun SSL_get_security_level(s: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl4029_SSL_set_security_callback")
external fun SSL_set_security_callback(
    s: CValuesRef<SSL>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<SSL_CTX>?, Int, Int, Int, COpaquePointer?, COpaquePointer?) -> Int>>?
): Unit

@CCall("knifunptr_openssl4030_SSL_get_security_callback")
external fun SSL_get_security_callback(s: CValuesRef<SSL>?): CPointer<CFunction<(CPointer<SSL>?, CPointer<SSL_CTX>?, Int, Int, Int, COpaquePointer?, COpaquePointer?) -> Int>>?

@CCall("knifunptr_openssl4031_SSL_set0_security_ex_data")
external fun SSL_set0_security_ex_data(s: CValuesRef<SSL>?, ex: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl4032_SSL_get0_security_ex_data")
external fun SSL_get0_security_ex_data(s: CValuesRef<SSL>?): COpaquePointer?

@CCall("knifunptr_openssl4033_SSL_CTX_set_security_level")
external fun SSL_CTX_set_security_level(ctx: CValuesRef<SSL_CTX>?, level: Int): Unit

@CCall("knifunptr_openssl4034_SSL_CTX_get_security_level")
external fun SSL_CTX_get_security_level(ctx: CValuesRef<SSL_CTX>?): Int

@CCall("knifunptr_openssl4035_SSL_CTX_set_security_callback")
external fun SSL_CTX_set_security_callback(
    ctx: CValuesRef<SSL_CTX>?,
    cb: CPointer<CFunction<(CPointer<SSL>?, CPointer<SSL_CTX>?, Int, Int, Int, COpaquePointer?, COpaquePointer?) -> Int>>?
): Unit

@CCall("knifunptr_openssl4036_SSL_CTX_get_security_callback")
external fun SSL_CTX_get_security_callback(ctx: CValuesRef<SSL_CTX>?): CPointer<CFunction<(CPointer<SSL>?, CPointer<SSL_CTX>?, Int, Int, Int, COpaquePointer?, COpaquePointer?) -> Int>>?

@CCall("knifunptr_openssl4037_SSL_CTX_set0_security_ex_data")
external fun SSL_CTX_set0_security_ex_data(ctx: CValuesRef<SSL_CTX>?, ex: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl4038_SSL_CTX_get0_security_ex_data")
external fun SSL_CTX_get0_security_ex_data(ctx: CValuesRef<SSL_CTX>?): COpaquePointer?

@CCall("knifunptr_openssl4039_OPENSSL_init_ssl")
external fun OPENSSL_init_ssl(opts: uint64_t, settings: CValuesRef<OPENSSL_INIT_SETTINGS>?): Int

@CCall("knifunptr_openssl4040_SSL_free_buffers")
external fun SSL_free_buffers(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl4041_SSL_alloc_buffers")
external fun SSL_alloc_buffers(ssl: CValuesRef<SSL>?): Int

@CCall("knifunptr_openssl4042_SSL_CTX_set_session_ticket_cb")
external fun SSL_CTX_set_session_ticket_cb(
    ctx: CValuesRef<SSL_CTX>?,
    gen_cb: SSL_CTX_generate_session_ticket_fn?,
    dec_cb: SSL_CTX_decrypt_session_ticket_fn?,
    arg: CValuesRef<*>?
): Int

@CCall("knifunptr_openssl4043_SSL_SESSION_set1_ticket_appdata")
external fun SSL_SESSION_set1_ticket_appdata(ss: CValuesRef<SSL_SESSION>?, data: CValuesRef<*>?, len: size_t): Int

@CCall("knifunptr_openssl4044_SSL_SESSION_get0_ticket_appdata")
external fun SSL_SESSION_get0_ticket_appdata(
    ss: CValuesRef<SSL_SESSION>?,
    data: CValuesRef<COpaquePointerVar>?,
    len: CValuesRef<size_tVar>?
): Int

@CCall("knifunptr_openssl4045_DTLS_set_timer_cb")
external fun DTLS_set_timer_cb(s: CValuesRef<SSL>?, cb: DTLS_timer_cb?): Unit

@CCall("knifunptr_openssl4046_SSL_CTX_set_allow_early_data_cb")
external fun SSL_CTX_set_allow_early_data_cb(
    ctx: CValuesRef<SSL_CTX>?,
    cb: SSL_allow_early_data_cb_fn?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl4047_SSL_set_allow_early_data_cb")
external fun SSL_set_allow_early_data_cb(
    s: CValuesRef<SSL>?,
    cb: SSL_allow_early_data_cb_fn?,
    arg: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl4048_lh_ERR_STRING_DATA_new")
external fun lh_ERR_STRING_DATA_new(
    hfn: CPointer<CFunction<(CPointer<ERR_STRING_DATA>?) -> ULong>>?,
    cfn: CPointer<CFunction<(CPointer<ERR_STRING_DATA>?, CPointer<ERR_STRING_DATA>?) -> Int>>?
): CPointer<lhash_st_ERR_STRING_DATA>?

@CCall("knifunptr_openssl4049_lh_ERR_STRING_DATA_free")
external fun lh_ERR_STRING_DATA_free(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?): Unit

@CCall("knifunptr_openssl4050_lh_ERR_STRING_DATA_insert")
external fun lh_ERR_STRING_DATA_insert(
    lh: CValuesRef<lhash_st_ERR_STRING_DATA>?,
    d: CValuesRef<ERR_STRING_DATA>?
): CPointer<ERR_STRING_DATA>?

@CCall("knifunptr_openssl4051_lh_ERR_STRING_DATA_delete")
external fun lh_ERR_STRING_DATA_delete(
    lh: CValuesRef<lhash_st_ERR_STRING_DATA>?,
    d: CValuesRef<ERR_STRING_DATA>?
): CPointer<ERR_STRING_DATA>?

@CCall("knifunptr_openssl4052_lh_ERR_STRING_DATA_retrieve")
external fun lh_ERR_STRING_DATA_retrieve(
    lh: CValuesRef<lhash_st_ERR_STRING_DATA>?,
    d: CValuesRef<ERR_STRING_DATA>?
): CPointer<ERR_STRING_DATA>?

@CCall("knifunptr_openssl4053_lh_ERR_STRING_DATA_error")
external fun lh_ERR_STRING_DATA_error(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?): Int

@CCall("knifunptr_openssl4054_lh_ERR_STRING_DATA_num_items")
external fun lh_ERR_STRING_DATA_num_items(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?): ULong

@CCall("knifunptr_openssl4055_lh_ERR_STRING_DATA_node_stats_bio")
external fun lh_ERR_STRING_DATA_node_stats_bio(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl4056_lh_ERR_STRING_DATA_node_usage_stats_bio")
external fun lh_ERR_STRING_DATA_node_usage_stats_bio(
    lh: CValuesRef<lhash_st_ERR_STRING_DATA>?,
    out: CValuesRef<BIO>?
): Unit

@CCall("knifunptr_openssl4057_lh_ERR_STRING_DATA_stats_bio")
external fun lh_ERR_STRING_DATA_stats_bio(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?, out: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl4058_lh_ERR_STRING_DATA_get_down_load")
external fun lh_ERR_STRING_DATA_get_down_load(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?): ULong

@CCall("knifunptr_openssl4059_lh_ERR_STRING_DATA_set_down_load")
external fun lh_ERR_STRING_DATA_set_down_load(lh: CValuesRef<lhash_st_ERR_STRING_DATA>?, dl: ULong): Unit

@CCall("knifunptr_openssl4060_lh_ERR_STRING_DATA_doall")
external fun lh_ERR_STRING_DATA_doall(
    lh: CValuesRef<lhash_st_ERR_STRING_DATA>?,
    doall: CPointer<CFunction<(CPointer<ERR_STRING_DATA>?) -> Unit>>?
): Unit

@CCall("knifunptr_openssl4061_ERR_put_error")
external fun ERR_put_error(lib: Int, func: Int, reason: Int, @CCall.CString file: String?, line: Int): Unit

@CCall("knifunptr_openssl4062_ERR_set_error_data")
external fun ERR_set_error_data(data: CValuesRef<ByteVar>?, flags: Int): Unit

@CCall("knifunptr_openssl4063_ERR_get_error")
external fun ERR_get_error(): ULong

@CCall("knifunptr_openssl4064_ERR_get_error_line")
external fun ERR_get_error_line(file: CValuesRef<CPointerVar<ByteVar>>?, line: CValuesRef<IntVar>?): ULong

@CCall("knifunptr_openssl4065_ERR_get_error_line_data")
external fun ERR_get_error_line_data(
    file: CValuesRef<CPointerVar<ByteVar>>?,
    line: CValuesRef<IntVar>?,
    data: CValuesRef<CPointerVar<ByteVar>>?,
    flags: CValuesRef<IntVar>?
): ULong

@CCall("knifunptr_openssl4066_ERR_peek_error")
external fun ERR_peek_error(): ULong

@CCall("knifunptr_openssl4067_ERR_peek_error_line")
external fun ERR_peek_error_line(file: CValuesRef<CPointerVar<ByteVar>>?, line: CValuesRef<IntVar>?): ULong

@CCall("knifunptr_openssl4068_ERR_peek_error_line_data")
external fun ERR_peek_error_line_data(
    file: CValuesRef<CPointerVar<ByteVar>>?,
    line: CValuesRef<IntVar>?,
    data: CValuesRef<CPointerVar<ByteVar>>?,
    flags: CValuesRef<IntVar>?
): ULong

@CCall("knifunptr_openssl4069_ERR_peek_last_error")
external fun ERR_peek_last_error(): ULong

@CCall("knifunptr_openssl4070_ERR_peek_last_error_line")
external fun ERR_peek_last_error_line(file: CValuesRef<CPointerVar<ByteVar>>?, line: CValuesRef<IntVar>?): ULong

@CCall("knifunptr_openssl4071_ERR_peek_last_error_line_data")
external fun ERR_peek_last_error_line_data(
    file: CValuesRef<CPointerVar<ByteVar>>?,
    line: CValuesRef<IntVar>?,
    data: CValuesRef<CPointerVar<ByteVar>>?,
    flags: CValuesRef<IntVar>?
): ULong

@CCall("knifunptr_openssl4072_ERR_clear_error")
external fun ERR_clear_error(): Unit

@CCall("knifunptr_openssl4073_ERR_error_string")
external fun ERR_error_string(e: ULong, buf: CValuesRef<ByteVar>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl4074_ERR_error_string_n")
external fun ERR_error_string_n(e: ULong, buf: CValuesRef<ByteVar>?, len: size_t): Unit

@CCall("knifunptr_openssl4075_ERR_lib_error_string")
external fun ERR_lib_error_string(e: ULong): CPointer<ByteVar>?

@CCall("knifunptr_openssl4076_ERR_func_error_string")
external fun ERR_func_error_string(e: ULong): CPointer<ByteVar>?

@CCall("knifunptr_openssl4077_ERR_reason_error_string")
external fun ERR_reason_error_string(e: ULong): CPointer<ByteVar>?

@CCall("knifunptr_openssl4078_ERR_print_errors_cb")
external fun ERR_print_errors_cb(
    cb: CPointer<CFunction<(CPointer<ByteVar>?, size_t, COpaquePointer?) -> Int>>?,
    u: CValuesRef<*>?
): Unit

@CCall("knifunptr_openssl4079_ERR_print_errors_fp")
external fun ERR_print_errors_fp(fp: CValuesRef<FILE>?): Unit

@CCall("knifunptr_openssl4080_ERR_print_errors")
external fun ERR_print_errors(bp: CValuesRef<BIO>?): Unit

@CCall("knifunptr_openssl4081_ERR_add_error_data")
external fun ERR_add_error_data(num: Int, vararg variadicArguments: Any?): Unit

@CCall("knifunptr_openssl4082_ERR_add_error_vdata")
external fun ERR_add_error_vdata(num: Int, args: va_list?): Unit

@CCall("knifunptr_openssl4083_ERR_load_strings")
external fun ERR_load_strings(lib: Int, str: CValuesRef<ERR_STRING_DATA>?): Int

@CCall("knifunptr_openssl4084_ERR_load_strings_const")
external fun ERR_load_strings_const(str: CValuesRef<ERR_STRING_DATA>?): Int

@CCall("knifunptr_openssl4085_ERR_unload_strings")
external fun ERR_unload_strings(lib: Int, str: CValuesRef<ERR_STRING_DATA>?): Int

@CCall("knifunptr_openssl4086_ERR_load_ERR_strings")
external fun ERR_load_ERR_strings(): Int

@CCall("knifunptr_openssl4087_ERR_remove_thread_state")
external fun ERR_remove_thread_state(arg0: CValuesRef<*>?): Unit

@CCall("knifunptr_openssl4088_ERR_remove_state")
external fun ERR_remove_state(pid: ULong): Unit

@CCall("knifunptr_openssl4089_ERR_get_state")
external fun ERR_get_state(): CPointer<ERR_STATE>?

@CCall("knifunptr_openssl4090_ERR_get_next_error_library")
external fun ERR_get_next_error_library(): Int

@CCall("knifunptr_openssl4091_ERR_set_mark")
external fun ERR_set_mark(): Int

@CCall("knifunptr_openssl4092_ERR_pop_to_mark")
external fun ERR_pop_to_mark(): Int

@CCall("knifunptr_openssl4093_ERR_clear_last_mark")
external fun ERR_clear_last_mark(): Int

@CCall("knifunptr_openssl4094_ERR_load_PKCS12_strings")
external fun ERR_load_PKCS12_strings(): Int

@CCall("knifunptr_openssl4095_sk_PKCS12_SAFEBAG_num")
external fun sk_PKCS12_SAFEBAG_num(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4096_sk_PKCS12_SAFEBAG_value")
external fun sk_PKCS12_SAFEBAG_value(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, idx: Int): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4097_sk_PKCS12_SAFEBAG_new")
external fun sk_PKCS12_SAFEBAG_new(compare: sk_PKCS12_SAFEBAG_compfunc?): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4098_sk_PKCS12_SAFEBAG_new_null")
external fun sk_PKCS12_SAFEBAG_new_null(): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4099_sk_PKCS12_SAFEBAG_new_reserve")
external fun sk_PKCS12_SAFEBAG_new_reserve(
    compare: sk_PKCS12_SAFEBAG_compfunc?,
    n: Int
): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4100_sk_PKCS12_SAFEBAG_reserve")
external fun sk_PKCS12_SAFEBAG_reserve(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, n: Int): Int

@CCall("knifunptr_openssl4101_sk_PKCS12_SAFEBAG_free")
external fun sk_PKCS12_SAFEBAG_free(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): Unit

@CCall("knifunptr_openssl4102_sk_PKCS12_SAFEBAG_zero")
external fun sk_PKCS12_SAFEBAG_zero(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): Unit

@CCall("knifunptr_openssl4103_sk_PKCS12_SAFEBAG_delete")
external fun sk_PKCS12_SAFEBAG_delete(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, i: Int): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4104_sk_PKCS12_SAFEBAG_delete_ptr")
external fun sk_PKCS12_SAFEBAG_delete_ptr(
    sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    ptr: CValuesRef<PKCS12_SAFEBAG>?
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4105_sk_PKCS12_SAFEBAG_push")
external fun sk_PKCS12_SAFEBAG_push(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, ptr: CValuesRef<PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4106_sk_PKCS12_SAFEBAG_unshift")
external fun sk_PKCS12_SAFEBAG_unshift(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, ptr: CValuesRef<PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4107_sk_PKCS12_SAFEBAG_pop")
external fun sk_PKCS12_SAFEBAG_pop(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4108_sk_PKCS12_SAFEBAG_shift")
external fun sk_PKCS12_SAFEBAG_shift(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4109_sk_PKCS12_SAFEBAG_pop_free")
external fun sk_PKCS12_SAFEBAG_pop_free(
    sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    freefunc: sk_PKCS12_SAFEBAG_freefunc?
): Unit

@CCall("knifunptr_openssl4110_sk_PKCS12_SAFEBAG_insert")
external fun sk_PKCS12_SAFEBAG_insert(
    sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    ptr: CValuesRef<PKCS12_SAFEBAG>?,
    idx: Int
): Int

@CCall("knifunptr_openssl4111_sk_PKCS12_SAFEBAG_set")
external fun sk_PKCS12_SAFEBAG_set(
    sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    idx: Int,
    ptr: CValuesRef<PKCS12_SAFEBAG>?
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4112_sk_PKCS12_SAFEBAG_find")
external fun sk_PKCS12_SAFEBAG_find(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, ptr: CValuesRef<PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4113_sk_PKCS12_SAFEBAG_find_ex")
external fun sk_PKCS12_SAFEBAG_find_ex(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?, ptr: CValuesRef<PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4114_sk_PKCS12_SAFEBAG_sort")
external fun sk_PKCS12_SAFEBAG_sort(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): Unit

@CCall("knifunptr_openssl4115_sk_PKCS12_SAFEBAG_is_sorted")
external fun sk_PKCS12_SAFEBAG_is_sorted(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4116_sk_PKCS12_SAFEBAG_dup")
external fun sk_PKCS12_SAFEBAG_dup(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4117_sk_PKCS12_SAFEBAG_deep_copy")
external fun sk_PKCS12_SAFEBAG_deep_copy(
    sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    copyfunc: sk_PKCS12_SAFEBAG_copyfunc?,
    freefunc: sk_PKCS12_SAFEBAG_freefunc?
): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4118_sk_PKCS12_SAFEBAG_set_cmp_func")
external fun sk_PKCS12_SAFEBAG_set_cmp_func(
    sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    compare: sk_PKCS12_SAFEBAG_compfunc?
): sk_PKCS12_SAFEBAG_compfunc?

@CCall("knifunptr_openssl4119_PKCS12_get_attr")
external fun PKCS12_get_attr(bag: CValuesRef<PKCS12_SAFEBAG>?, attr_nid: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl4120_PKCS8_get_attr")
external fun PKCS8_get_attr(p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?, attr_nid: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl4121_PKCS12_mac_present")
external fun PKCS12_mac_present(p12: CValuesRef<PKCS12>?): Int

@CCall("knifunptr_openssl4122_PKCS12_get0_mac")
external fun PKCS12_get0_mac(
    pmac: CValuesRef<CPointerVar<ASN1_OCTET_STRING>>?,
    pmacalg: CValuesRef<CPointerVar<X509_ALGOR>>?,
    psalt: CValuesRef<CPointerVar<ASN1_OCTET_STRING>>?,
    piter: CValuesRef<CPointerVar<ASN1_INTEGER>>?,
    p12: CValuesRef<PKCS12>?
): Unit

@CCall("knifunptr_openssl4123_PKCS12_SAFEBAG_get0_attr")
external fun PKCS12_SAFEBAG_get0_attr(bag: CValuesRef<PKCS12_SAFEBAG>?, attr_nid: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl4124_PKCS12_SAFEBAG_get0_type")
external fun PKCS12_SAFEBAG_get0_type(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<ASN1_OBJECT>?

@CCall("knifunptr_openssl4125_PKCS12_SAFEBAG_get_nid")
external fun PKCS12_SAFEBAG_get_nid(bag: CValuesRef<PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4126_PKCS12_SAFEBAG_get_bag_nid")
external fun PKCS12_SAFEBAG_get_bag_nid(bag: CValuesRef<PKCS12_SAFEBAG>?): Int

@CCall("knifunptr_openssl4127_PKCS12_SAFEBAG_get1_cert")
external fun PKCS12_SAFEBAG_get1_cert(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<X509>?

@CCall("knifunptr_openssl4128_PKCS12_SAFEBAG_get1_crl")
external fun PKCS12_SAFEBAG_get1_crl(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<X509_CRL>?

@CCall("knifunptr_openssl4129_PKCS12_SAFEBAG_get0_safes")
external fun PKCS12_SAFEBAG_get0_safes(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4130_PKCS12_SAFEBAG_get0_p8inf")
external fun PKCS12_SAFEBAG_get0_p8inf(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl4131_PKCS12_SAFEBAG_get0_pkcs8")
external fun PKCS12_SAFEBAG_get0_pkcs8(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<X509_SIG>?

@CCall("knifunptr_openssl4132_PKCS12_SAFEBAG_create_cert")
external fun PKCS12_SAFEBAG_create_cert(x509: CValuesRef<X509>?): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4133_PKCS12_SAFEBAG_create_crl")
external fun PKCS12_SAFEBAG_create_crl(crl: CValuesRef<X509_CRL>?): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4134_PKCS12_SAFEBAG_create0_p8inf")
external fun PKCS12_SAFEBAG_create0_p8inf(p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4135_PKCS12_SAFEBAG_create0_pkcs8")
external fun PKCS12_SAFEBAG_create0_pkcs8(p8: CValuesRef<X509_SIG>?): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4136_PKCS12_SAFEBAG_create_pkcs8_encrypt")
external fun PKCS12_SAFEBAG_create_pkcs8_encrypt(
    pbe_nid: Int, @CCall.CString pass: String?,
    passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    iter: Int,
    p8inf: CValuesRef<PKCS8_PRIV_KEY_INFO>?
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4137_PKCS12_item_pack_safebag")
external fun PKCS12_item_pack_safebag(
    obj: CValuesRef<*>?,
    it: CValuesRef<ASN1_ITEM>?,
    nid1: Int,
    nid2: Int
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4138_PKCS8_decrypt")
external fun PKCS8_decrypt(
    p8: CValuesRef<X509_SIG>?, @CCall.CString pass: String?,
    passlen: Int
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl4139_PKCS12_decrypt_skey")
external fun PKCS12_decrypt_skey(
    bag: CValuesRef<PKCS12_SAFEBAG>?, @CCall.CString pass: String?,
    passlen: Int
): CPointer<PKCS8_PRIV_KEY_INFO>?

@CCall("knifunptr_openssl4140_PKCS8_encrypt")
external fun PKCS8_encrypt(
    pbe_nid: Int,
    cipher: CValuesRef<EVP_CIPHER>?, @CCall.CString pass: String?,
    passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    iter: Int,
    p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?
): CPointer<X509_SIG>?

@CCall("knifunptr_openssl4141_PKCS8_set0_pbe")
external fun PKCS8_set0_pbe(
    @CCall.CString pass: String?, passlen: Int,
    p8inf: CValuesRef<PKCS8_PRIV_KEY_INFO>?,
    pbe: CValuesRef<X509_ALGOR>?
): CPointer<X509_SIG>?

@CCall("knifunptr_openssl4142_PKCS12_pack_p7data")
external fun PKCS12_pack_p7data(sk: CValuesRef<stack_st_PKCS12_SAFEBAG>?): CPointer<PKCS7>?

@CCall("knifunptr_openssl4143_PKCS12_unpack_p7data")
external fun PKCS12_unpack_p7data(p7: CValuesRef<PKCS7>?): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4144_PKCS12_pack_p7encdata")
external fun PKCS12_pack_p7encdata(
    pbe_nid: Int, @CCall.CString pass: String?,
    passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    iter: Int,
    bags: CValuesRef<stack_st_PKCS12_SAFEBAG>?
): CPointer<PKCS7>?

@CCall("knifunptr_openssl4145_PKCS12_unpack_p7encdata")
external fun PKCS12_unpack_p7encdata(
    p7: CValuesRef<PKCS7>?, @CCall.CString pass: String?,
    passlen: Int
): CPointer<stack_st_PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4146_PKCS12_pack_authsafes")
external fun PKCS12_pack_authsafes(p12: CValuesRef<PKCS12>?, safes: CValuesRef<stack_st_PKCS7>?): Int

@CCall("knifunptr_openssl4147_PKCS12_unpack_authsafes")
external fun PKCS12_unpack_authsafes(p12: CValuesRef<PKCS12>?): CPointer<stack_st_PKCS7>?

@CCall("knifunptr_openssl4148_PKCS12_add_localkeyid")
external fun PKCS12_add_localkeyid(bag: CValuesRef<PKCS12_SAFEBAG>?, name: CValuesRef<UByteVar>?, namelen: Int): Int

@CCall("knifunptr_openssl4149_PKCS12_add_friendlyname_asc")
external fun PKCS12_add_friendlyname_asc(
    bag: CValuesRef<PKCS12_SAFEBAG>?, @CCall.CString name: String?,
    namelen: Int
): Int

@CCall("knifunptr_openssl4150_PKCS12_add_friendlyname_utf8")
external fun PKCS12_add_friendlyname_utf8(
    bag: CValuesRef<PKCS12_SAFEBAG>?, @CCall.CString name: String?,
    namelen: Int
): Int

@CCall("knifunptr_openssl4151_PKCS12_add_CSPName_asc")
external fun PKCS12_add_CSPName_asc(bag: CValuesRef<PKCS12_SAFEBAG>?, @CCall.CString name: String?, namelen: Int): Int

@CCall("knifunptr_openssl4152_PKCS12_add_friendlyname_uni")
external fun PKCS12_add_friendlyname_uni(
    bag: CValuesRef<PKCS12_SAFEBAG>?,
    name: CValuesRef<UByteVar>?,
    namelen: Int
): Int

@CCall("knifunptr_openssl4153_PKCS8_add_keyusage")
external fun PKCS8_add_keyusage(p8: CValuesRef<PKCS8_PRIV_KEY_INFO>?, usage: Int): Int

@CCall("knifunptr_openssl4154_PKCS12_get_attr_gen")
external fun PKCS12_get_attr_gen(attrs: CValuesRef<stack_st_X509_ATTRIBUTE>?, attr_nid: Int): CPointer<ASN1_TYPE>?

@CCall("knifunptr_openssl4155_PKCS12_get_friendlyname")
external fun PKCS12_get_friendlyname(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<ByteVar>?

@CCall("knifunptr_openssl4156_PKCS12_SAFEBAG_get0_attrs")
external fun PKCS12_SAFEBAG_get0_attrs(bag: CValuesRef<PKCS12_SAFEBAG>?): CPointer<stack_st_X509_ATTRIBUTE>?

@CCall("knifunptr_openssl4157_PKCS12_pbe_crypt")
external fun PKCS12_pbe_crypt(
    algor: CValuesRef<X509_ALGOR>?, @CCall.CString pass: String?,
    passlen: Int,
    `in`: CValuesRef<UByteVar>?,
    inlen: Int,
    data: CValuesRef<CPointerVar<UByteVar>>?,
    datalen: CValuesRef<IntVar>?,
    en_de: Int
): CPointer<UByteVar>?

@CCall("knifunptr_openssl4158_PKCS12_item_decrypt_d2i")
external fun PKCS12_item_decrypt_d2i(
    algor: CValuesRef<X509_ALGOR>?,
    it: CValuesRef<ASN1_ITEM>?, @CCall.CString pass: String?,
    passlen: Int,
    oct: CValuesRef<ASN1_OCTET_STRING>?,
    zbuf: Int
): COpaquePointer?

@CCall("knifunptr_openssl4159_PKCS12_item_i2d_encrypt")
external fun PKCS12_item_i2d_encrypt(
    algor: CValuesRef<X509_ALGOR>?,
    it: CValuesRef<ASN1_ITEM>?, @CCall.CString pass: String?,
    passlen: Int,
    obj: CValuesRef<*>?,
    zbuf: Int
): CPointer<ASN1_OCTET_STRING>?

@CCall("knifunptr_openssl4160_PKCS12_init")
external fun PKCS12_init(mode: Int): CPointer<PKCS12>?

@CCall("knifunptr_openssl4161_PKCS12_key_gen_asc")
external fun PKCS12_key_gen_asc(
    @CCall.CString pass: String?, passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    id: Int,
    iter: Int,
    n: Int,
    out: CValuesRef<UByteVar>?,
    md_type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl4162_PKCS12_key_gen_uni")
external fun PKCS12_key_gen_uni(
    pass: CValuesRef<UByteVar>?,
    passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    id: Int,
    iter: Int,
    n: Int,
    out: CValuesRef<UByteVar>?,
    md_type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl4163_PKCS12_key_gen_utf8")
external fun PKCS12_key_gen_utf8(
    @CCall.CString pass: String?, passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    id: Int,
    iter: Int,
    n: Int,
    out: CValuesRef<UByteVar>?,
    md_type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl4164_PKCS12_PBE_keyivgen")
external fun PKCS12_PBE_keyivgen(
    ctx: CValuesRef<EVP_CIPHER_CTX>?, @CCall.CString pass: String?,
    passlen: Int,
    param: CValuesRef<ASN1_TYPE>?,
    cipher: CValuesRef<EVP_CIPHER>?,
    md_type: CValuesRef<EVP_MD>?,
    en_de: Int
): Int

@CCall("knifunptr_openssl4165_PKCS12_gen_mac")
external fun PKCS12_gen_mac(
    p12: CValuesRef<PKCS12>?, @CCall.CString pass: String?,
    passlen: Int,
    mac: CValuesRef<UByteVar>?,
    maclen: CValuesRef<UIntVar>?
): Int

@CCall("knifunptr_openssl4166_PKCS12_verify_mac")
external fun PKCS12_verify_mac(p12: CValuesRef<PKCS12>?, @CCall.CString pass: String?, passlen: Int): Int

@CCall("knifunptr_openssl4167_PKCS12_set_mac")
external fun PKCS12_set_mac(
    p12: CValuesRef<PKCS12>?, @CCall.CString pass: String?,
    passlen: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    iter: Int,
    md_type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl4168_PKCS12_setup_mac")
external fun PKCS12_setup_mac(
    p12: CValuesRef<PKCS12>?,
    iter: Int,
    salt: CValuesRef<UByteVar>?,
    saltlen: Int,
    md_type: CValuesRef<EVP_MD>?
): Int

@CCall("knifunptr_openssl4169_OPENSSL_asc2uni")
external fun OPENSSL_asc2uni(
    @CCall.CString asc: String?, asclen: Int,
    uni: CValuesRef<CPointerVar<UByteVar>>?,
    unilen: CValuesRef<IntVar>?
): CPointer<UByteVar>?

@CCall("knifunptr_openssl4170_OPENSSL_uni2asc")
external fun OPENSSL_uni2asc(uni: CValuesRef<UByteVar>?, unilen: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl4171_OPENSSL_utf82uni")
external fun OPENSSL_utf82uni(
    @CCall.CString asc: String?, asclen: Int,
    uni: CValuesRef<CPointerVar<UByteVar>>?,
    unilen: CValuesRef<IntVar>?
): CPointer<UByteVar>?

@CCall("knifunptr_openssl4172_OPENSSL_uni2utf8")
external fun OPENSSL_uni2utf8(uni: CValuesRef<UByteVar>?, unilen: Int): CPointer<ByteVar>?

@CCall("knifunptr_openssl4173_PKCS12_new")
external fun PKCS12_new(): CPointer<PKCS12>?

@CCall("knifunptr_openssl4174_PKCS12_free")
external fun PKCS12_free(a: CValuesRef<PKCS12>?): Unit

@CCall("knifunptr_openssl4175_d2i_PKCS12")
external fun d2i_PKCS12(
    a: CValuesRef<CPointerVar<PKCS12>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS12>?

@CCall("knifunptr_openssl4176_i2d_PKCS12")
external fun i2d_PKCS12(a: CValuesRef<PKCS12>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl4177_PKCS12_MAC_DATA_new")
external fun PKCS12_MAC_DATA_new(): CPointer<PKCS12_MAC_DATA>?

@CCall("knifunptr_openssl4178_PKCS12_MAC_DATA_free")
external fun PKCS12_MAC_DATA_free(a: CValuesRef<PKCS12_MAC_DATA>?): Unit

@CCall("knifunptr_openssl4179_d2i_PKCS12_MAC_DATA")
external fun d2i_PKCS12_MAC_DATA(
    a: CValuesRef<CPointerVar<PKCS12_MAC_DATA>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS12_MAC_DATA>?

@CCall("knifunptr_openssl4180_i2d_PKCS12_MAC_DATA")
external fun i2d_PKCS12_MAC_DATA(a: CValuesRef<PKCS12_MAC_DATA>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl4181_PKCS12_SAFEBAG_new")
external fun PKCS12_SAFEBAG_new(): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4182_PKCS12_SAFEBAG_free")
external fun PKCS12_SAFEBAG_free(a: CValuesRef<PKCS12_SAFEBAG>?): Unit

@CCall("knifunptr_openssl4183_d2i_PKCS12_SAFEBAG")
external fun d2i_PKCS12_SAFEBAG(
    a: CValuesRef<CPointerVar<PKCS12_SAFEBAG>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4184_i2d_PKCS12_SAFEBAG")
external fun i2d_PKCS12_SAFEBAG(a: CValuesRef<PKCS12_SAFEBAG>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl4185_PKCS12_BAGS_new")
external fun PKCS12_BAGS_new(): CPointer<PKCS12_BAGS>?

@CCall("knifunptr_openssl4186_PKCS12_BAGS_free")
external fun PKCS12_BAGS_free(a: CValuesRef<PKCS12_BAGS>?): Unit

@CCall("knifunptr_openssl4187_d2i_PKCS12_BAGS")
external fun d2i_PKCS12_BAGS(
    a: CValuesRef<CPointerVar<PKCS12_BAGS>>?,
    `in`: CValuesRef<CPointerVar<UByteVar>>?,
    len: Long
): CPointer<PKCS12_BAGS>?

@CCall("knifunptr_openssl4188_i2d_PKCS12_BAGS")
external fun i2d_PKCS12_BAGS(a: CValuesRef<PKCS12_BAGS>?, out: CValuesRef<CPointerVar<UByteVar>>?): Int

@CCall("knifunptr_openssl4189_PKCS12_PBE_add")
external fun PKCS12_PBE_add(): Unit

@CCall("knifunptr_openssl4190_PKCS12_parse")
external fun PKCS12_parse(
    p12: CValuesRef<PKCS12>?, @CCall.CString pass: String?,
    pkey: CValuesRef<CPointerVar<EVP_PKEY>>?,
    cert: CValuesRef<CPointerVar<X509>>?,
    ca: CValuesRef<CPointerVar<stack_st_X509>>?
): Int

@CCall("knifunptr_openssl4191_PKCS12_create")
external fun PKCS12_create(
    @CCall.CString pass: String?, @CCall.CString name: String?, pkey: CValuesRef<EVP_PKEY>?,
    cert: CValuesRef<X509>?,
    ca: CValuesRef<stack_st_X509>?,
    nid_key: Int,
    nid_cert: Int,
    iter: Int,
    mac_iter: Int,
    keytype: Int
): CPointer<PKCS12>?

@CCall("knifunptr_openssl4192_PKCS12_add_cert")
external fun PKCS12_add_cert(
    pbags: CValuesRef<CPointerVar<stack_st_PKCS12_SAFEBAG>>?,
    cert: CValuesRef<X509>?
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4193_PKCS12_add_key")
external fun PKCS12_add_key(
    pbags: CValuesRef<CPointerVar<stack_st_PKCS12_SAFEBAG>>?,
    key: CValuesRef<EVP_PKEY>?,
    key_usage: Int,
    iter: Int,
    key_nid: Int, @CCall.CString pass: String?
): CPointer<PKCS12_SAFEBAG>?

@CCall("knifunptr_openssl4194_PKCS12_add_safe")
external fun PKCS12_add_safe(
    psafes: CValuesRef<CPointerVar<stack_st_PKCS7>>?,
    bags: CValuesRef<stack_st_PKCS12_SAFEBAG>?,
    safe_nid: Int,
    iter: Int, @CCall.CString pass: String?
): Int

@CCall("knifunptr_openssl4195_PKCS12_add_safes")
external fun PKCS12_add_safes(safes: CValuesRef<stack_st_PKCS7>?, p7_nid: Int): CPointer<PKCS12>?

@CCall("knifunptr_openssl4196_i2d_PKCS12_bio")
external fun i2d_PKCS12_bio(bp: CValuesRef<BIO>?, p12: CValuesRef<PKCS12>?): Int

@CCall("knifunptr_openssl4197_i2d_PKCS12_fp")
external fun i2d_PKCS12_fp(fp: CValuesRef<FILE>?, p12: CValuesRef<PKCS12>?): Int

@CCall("knifunptr_openssl4198_d2i_PKCS12_bio")
external fun d2i_PKCS12_bio(bp: CValuesRef<BIO>?, p12: CValuesRef<CPointerVar<PKCS12>>?): CPointer<PKCS12>?

@CCall("knifunptr_openssl4199_d2i_PKCS12_fp")
external fun d2i_PKCS12_fp(fp: CValuesRef<FILE>?, p12: CValuesRef<CPointerVar<PKCS12>>?): CPointer<PKCS12>?

@CCall("knifunptr_openssl4200_PKCS12_newpass")
external fun PKCS12_newpass(p12: CValuesRef<PKCS12>?, @CCall.CString oldpass: String?, @CCall.CString newpass: String?): Int

val ASN1_SEQUENCE_ANY_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge0())

val ASN1_SET_ANY_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge1())

val ASN1_ANY_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge2())

val ASN1_OBJECT_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge3())

val ASN1_BIT_STRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge4())

val ASN1_INTEGER_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge5())

val ASN1_ENUMERATED_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge6())

val ASN1_OCTET_STRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge7())

val ASN1_VISIBLESTRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge8())

val ASN1_UNIVERSALSTRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge9())

val ASN1_UTF8STRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge10())

val ASN1_NULL_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge11())

val ASN1_BMPSTRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge12())

val ASN1_PRINTABLE_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge13())

val DIRECTORYSTRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge14())

val DISPLAYTEXT_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge15())

val ASN1_PRINTABLESTRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge16())

val ASN1_T61STRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge17())

val ASN1_IA5STRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge18())

val ASN1_GENERALSTRING_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge19())

val ASN1_UTCTIME_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge20())

val ASN1_GENERALIZEDTIME_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge21())

val ASN1_TIME_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge22())

val ASN1_OCTET_STRING_NDEF_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge23())

val ECPKPARAMETERS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge24())

val ECPARAMETERS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge25())

val RSAPublicKey_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge26())

val RSAPrivateKey_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge27())

val RSA_PSS_PARAMS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge28())

val RSA_OAEP_PARAMS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge29())

val DHparams_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge30())

val PKCS7_ISSUER_AND_SERIAL_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge31())

val PKCS7_SIGNER_INFO_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge32())

val PKCS7_RECIP_INFO_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge33())

val PKCS7_SIGNED_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge34())

val PKCS7_ENC_CONTENT_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge35())

val PKCS7_ENVELOPE_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge36())

val PKCS7_SIGN_ENVELOPE_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge37())

val PKCS7_DIGEST_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge38())

val PKCS7_ENCRYPT_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge39())

val PKCS7_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge40())

val PKCS7_ATTR_SIGN_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge41())

val PKCS7_ATTR_VERIFY_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge42())

val X509_ALGOR_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge43())

val X509_ALGORS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge44())

val X509_VAL_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge45())

val X509_PUBKEY_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge46())

val X509_SIG_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge47())

val X509_REQ_INFO_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge48())

val X509_REQ_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge49())

val X509_ATTRIBUTE_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge50())

val X509_EXTENSION_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge51())

val X509_EXTENSIONS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge52())

val X509_NAME_ENTRY_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge53())

val X509_NAME_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge54())

val X509_CINF_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge55())

val X509_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge56())

val X509_CERT_AUX_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge57())

val X509_REVOKED_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge58())

val X509_CRL_INFO_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge59())

val X509_CRL_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge60())

val NETSCAPE_SPKI_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge61())

val NETSCAPE_SPKAC_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge62())

val NETSCAPE_CERT_SEQUENCE_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge63())

val PBEPARAM_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge64())

val PBE2PARAM_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge65())

val PBKDF2PARAM_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge66())

val SCRYPT_PARAMS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge67())

val PKCS8_PRIV_KEY_INFO_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge68())

val SSL_version_str: CArrayPointer<ByteVar>
    get() = interpretCPointer<ByteVar>(kniBridge69())!!

val PKCS12_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge70())

val PKCS12_MAC_DATA_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge71())

val PKCS12_SAFEBAG_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge72())

val PKCS12_BAGS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge73())

val PKCS12_SAFEBAGS_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge74())

val PKCS12_AUTHSAFES_it: ASN1_ITEM
    get() = interpretPointed<ASN1_ITEM>(kniBridge75())

const val OPENSSL_VERSION_NUMBER: Long = 269488207

val OPENSSL_VERSION_TEXT: String get() = "OpenSSL 1.1.1d  10 Sep 2019"

val SHLIB_VERSION_HISTORY: String get() = ""

val SHLIB_VERSION_NUMBER: String get() = "1.1"

val OPENSSL_FILE: String get() = "\u002Ftmp\u002Ftmp5986906205915591224.c"

const val OPENSSL_LINE: Int = 104

const val OPENSSL_MIN_API: Int = 0

const val OPENSSL_API_COMPAT: Int = 0

const val OSSL_SSIZE_MAX: ssize_t = 9223372036854775807

const val CRYPTO_F_CMAC_CTX_NEW: Int = 120

const val CRYPTO_F_CRYPTO_DUP_EX_DATA: Int = 110

const val CRYPTO_F_CRYPTO_FREE_EX_DATA: Int = 111

const val CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX: Int = 100

const val CRYPTO_F_CRYPTO_MEMDUP: Int = 115

const val CRYPTO_F_CRYPTO_NEW_EX_DATA: Int = 112

const val CRYPTO_F_CRYPTO_OCB128_COPY_CTX: Int = 121

const val CRYPTO_F_CRYPTO_OCB128_INIT: Int = 122

const val CRYPTO_F_CRYPTO_SET_EX_DATA: Int = 102

const val CRYPTO_F_FIPS_MODE_SET: Int = 109

const val CRYPTO_F_GET_AND_LOCK: Int = 113

const val CRYPTO_F_OPENSSL_ATEXIT: Int = 114

const val CRYPTO_F_OPENSSL_BUF2HEXSTR: Int = 117

const val CRYPTO_F_OPENSSL_FOPEN: Int = 119

const val CRYPTO_F_OPENSSL_HEXSTR2BUF: Int = 118

const val CRYPTO_F_OPENSSL_INIT_CRYPTO: Int = 116

const val CRYPTO_F_OPENSSL_LH_NEW: Int = 126

const val CRYPTO_F_OPENSSL_SK_DEEP_COPY: Int = 127

const val CRYPTO_F_OPENSSL_SK_DUP: Int = 128

const val CRYPTO_F_PKEY_HMAC_INIT: Int = 123

const val CRYPTO_F_PKEY_POLY1305_INIT: Int = 124

const val CRYPTO_F_PKEY_SIPHASH_INIT: Int = 125

const val CRYPTO_F_SK_RESERVE: Int = 129

const val CRYPTO_R_FIPS_MODE_NOT_SUPPORTED: Int = 101

const val CRYPTO_R_ILLEGAL_HEX_DIGIT: Int = 102

const val CRYPTO_R_ODD_NUMBER_OF_DIGITS: Int = 103

const val SSLEAY_VERSION_NUMBER: Long = 269488207

const val SSLEAY_VERSION: Int = 0

const val SSLEAY_CFLAGS: Int = 1

const val SSLEAY_BUILT_ON: Int = 2

const val SSLEAY_PLATFORM: Int = 3

const val SSLEAY_DIR: Int = 4

const val CRYPTO_MEM_CHECK_OFF: Int = 0

const val CRYPTO_MEM_CHECK_ON: Int = 1

const val CRYPTO_MEM_CHECK_ENABLE: Int = 2

const val CRYPTO_MEM_CHECK_DISABLE: Int = 3

const val CRYPTO_EX_INDEX_SSL: Int = 0

const val CRYPTO_EX_INDEX_SSL_CTX: Int = 1

const val CRYPTO_EX_INDEX_SSL_SESSION: Int = 2

const val CRYPTO_EX_INDEX_X509: Int = 3

const val CRYPTO_EX_INDEX_X509_STORE: Int = 4

const val CRYPTO_EX_INDEX_X509_STORE_CTX: Int = 5

const val CRYPTO_EX_INDEX_DH: Int = 6

const val CRYPTO_EX_INDEX_DSA: Int = 7

const val CRYPTO_EX_INDEX_EC_KEY: Int = 8

const val CRYPTO_EX_INDEX_RSA: Int = 9

const val CRYPTO_EX_INDEX_ENGINE: Int = 10

const val CRYPTO_EX_INDEX_UI: Int = 11

const val CRYPTO_EX_INDEX_BIO: Int = 12

const val CRYPTO_EX_INDEX_APP: Int = 13

const val CRYPTO_EX_INDEX_UI_METHOD: Int = 14

const val CRYPTO_EX_INDEX_DRBG: Int = 15

const val CRYPTO_EX_INDEX__COUNT: Int = 16

const val OPENSSL_VERSION: Int = 0

const val OPENSSL_CFLAGS: Int = 1

const val OPENSSL_BUILT_ON: Int = 2

const val OPENSSL_PLATFORM: Int = 3

const val OPENSSL_DIR: Int = 4

const val OPENSSL_ENGINES_DIR: Int = 5

const val CRYPTO_LOCK: Int = 1

const val CRYPTO_UNLOCK: Int = 2

const val CRYPTO_READ: Int = 4

const val CRYPTO_WRITE: Int = 8

const val OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS: Long = 1

const val OPENSSL_INIT_LOAD_CRYPTO_STRINGS: Long = 2

const val OPENSSL_INIT_ADD_ALL_CIPHERS: Long = 4

const val OPENSSL_INIT_ADD_ALL_DIGESTS: Long = 8

const val OPENSSL_INIT_NO_ADD_ALL_CIPHERS: Long = 16

const val OPENSSL_INIT_NO_ADD_ALL_DIGESTS: Long = 32

const val OPENSSL_INIT_LOAD_CONFIG: Long = 64

const val OPENSSL_INIT_NO_LOAD_CONFIG: Long = 128

const val OPENSSL_INIT_ASYNC: Long = 256

const val OPENSSL_INIT_ENGINE_RDRAND: Long = 512

const val OPENSSL_INIT_ENGINE_DYNAMIC: Long = 1024

const val OPENSSL_INIT_ENGINE_OPENSSL: Long = 2048

const val OPENSSL_INIT_ENGINE_CRYPTODEV: Long = 4096

const val OPENSSL_INIT_ENGINE_CAPI: Long = 8192

const val OPENSSL_INIT_ENGINE_PADLOCK: Long = 16384

const val OPENSSL_INIT_ENGINE_AFALG: Long = 32768

const val OPENSSL_INIT_ATFORK: Long = 131072

const val OPENSSL_INIT_NO_ATEXIT: Long = 524288

const val OPENSSL_INIT_ENGINE_ALL_BUILTIN: Long = 30208

const val CRYPTO_ONCE_STATIC_INIT: Int = 0

const val COMP_F_BIO_ZLIB_FLUSH: Int = 99

const val COMP_F_BIO_ZLIB_NEW: Int = 100

const val COMP_F_BIO_ZLIB_READ: Int = 101

const val COMP_F_BIO_ZLIB_WRITE: Int = 102

const val COMP_F_COMP_CTX_NEW: Int = 103

const val COMP_R_ZLIB_DEFLATE_ERROR: Int = 99

const val COMP_R_ZLIB_INFLATE_ERROR: Int = 100

const val COMP_R_ZLIB_NOT_SUPPORTED: Int = 101

const val BIO_F_ACPT_STATE: Int = 100

const val BIO_F_ADDRINFO_WRAP: Int = 148

const val BIO_F_ADDR_STRINGS: Int = 134

const val BIO_F_BIO_ACCEPT: Int = 101

const val BIO_F_BIO_ACCEPT_EX: Int = 137

const val BIO_F_BIO_ACCEPT_NEW: Int = 152

const val BIO_F_BIO_ADDR_NEW: Int = 144

const val BIO_F_BIO_BIND: Int = 147

const val BIO_F_BIO_CALLBACK_CTRL: Int = 131

const val BIO_F_BIO_CONNECT: Int = 138

const val BIO_F_BIO_CONNECT_NEW: Int = 153

const val BIO_F_BIO_CTRL: Int = 103

const val BIO_F_BIO_GETS: Int = 104

const val BIO_F_BIO_GET_HOST_IP: Int = 106

const val BIO_F_BIO_GET_NEW_INDEX: Int = 102

const val BIO_F_BIO_GET_PORT: Int = 107

const val BIO_F_BIO_LISTEN: Int = 139

const val BIO_F_BIO_LOOKUP: Int = 135

const val BIO_F_BIO_LOOKUP_EX: Int = 143

const val BIO_F_BIO_MAKE_PAIR: Int = 121

const val BIO_F_BIO_METH_NEW: Int = 146

const val BIO_F_BIO_NEW: Int = 108

const val BIO_F_BIO_NEW_DGRAM_SCTP: Int = 145

const val BIO_F_BIO_NEW_FILE: Int = 109

const val BIO_F_BIO_NEW_MEM_BUF: Int = 126

const val BIO_F_BIO_NREAD: Int = 123

const val BIO_F_BIO_NREAD0: Int = 124

const val BIO_F_BIO_NWRITE: Int = 125

const val BIO_F_BIO_NWRITE0: Int = 122

const val BIO_F_BIO_PARSE_HOSTSERV: Int = 136

const val BIO_F_BIO_PUTS: Int = 110

const val BIO_F_BIO_READ: Int = 111

const val BIO_F_BIO_READ_EX: Int = 105

const val BIO_F_BIO_READ_INTERN: Int = 120

const val BIO_F_BIO_SOCKET: Int = 140

const val BIO_F_BIO_SOCKET_NBIO: Int = 142

const val BIO_F_BIO_SOCK_INFO: Int = 141

const val BIO_F_BIO_SOCK_INIT: Int = 112

const val BIO_F_BIO_WRITE: Int = 113

const val BIO_F_BIO_WRITE_EX: Int = 119

const val BIO_F_BIO_WRITE_INTERN: Int = 128

const val BIO_F_BUFFER_CTRL: Int = 114

const val BIO_F_CONN_CTRL: Int = 127

const val BIO_F_CONN_STATE: Int = 115

const val BIO_F_DGRAM_SCTP_NEW: Int = 149

const val BIO_F_DGRAM_SCTP_READ: Int = 132

const val BIO_F_DGRAM_SCTP_WRITE: Int = 133

const val BIO_F_DOAPR_OUTCH: Int = 150

const val BIO_F_FILE_CTRL: Int = 116

const val BIO_F_FILE_READ: Int = 130

const val BIO_F_LINEBUFFER_CTRL: Int = 129

const val BIO_F_LINEBUFFER_NEW: Int = 151

const val BIO_F_MEM_WRITE: Int = 117

const val BIO_F_NBIOF_NEW: Int = 154

const val BIO_F_SLG_WRITE: Int = 155

const val BIO_F_SSL_NEW: Int = 118

const val BIO_R_ACCEPT_ERROR: Int = 100

const val BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET: Int = 141

const val BIO_R_AMBIGUOUS_HOST_OR_SERVICE: Int = 129

const val BIO_R_BAD_FOPEN_MODE: Int = 101

const val BIO_R_BROKEN_PIPE: Int = 124

const val BIO_R_CONNECT_ERROR: Int = 103

const val BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET: Int = 107

const val BIO_R_GETSOCKNAME_ERROR: Int = 132

const val BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS: Int = 133

const val BIO_R_GETTING_SOCKTYPE: Int = 134

const val BIO_R_INVALID_ARGUMENT: Int = 125

const val BIO_R_INVALID_SOCKET: Int = 135

const val BIO_R_IN_USE: Int = 123

const val BIO_R_LENGTH_TOO_LONG: Int = 102

const val BIO_R_LISTEN_V6_ONLY: Int = 136

const val BIO_R_LOOKUP_RETURNED_NOTHING: Int = 142

const val BIO_R_MALFORMED_HOST_OR_SERVICE: Int = 130

const val BIO_R_NBIO_CONNECT_ERROR: Int = 110

const val BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED: Int = 143

const val BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED: Int = 144

const val BIO_R_NO_PORT_DEFINED: Int = 113

const val BIO_R_NO_SUCH_FILE: Int = 128

const val BIO_R_NULL_PARAMETER: Int = 115

const val BIO_R_UNABLE_TO_BIND_SOCKET: Int = 117

const val BIO_R_UNABLE_TO_CREATE_SOCKET: Int = 118

const val BIO_R_UNABLE_TO_KEEPALIVE: Int = 137

const val BIO_R_UNABLE_TO_LISTEN_SOCKET: Int = 119

const val BIO_R_UNABLE_TO_NODELAY: Int = 138

const val BIO_R_UNABLE_TO_REUSEADDR: Int = 139

const val BIO_R_UNAVAILABLE_IP_FAMILY: Int = 145

const val BIO_R_UNINITIALIZED: Int = 120

const val BIO_R_UNKNOWN_INFO_TYPE: Int = 140

const val BIO_R_UNSUPPORTED_IP_FAMILY: Int = 146

const val BIO_R_UNSUPPORTED_METHOD: Int = 121

const val BIO_R_UNSUPPORTED_PROTOCOL_FAMILY: Int = 131

const val BIO_R_WRITE_TO_READ_ONLY_BIO: Int = 126

const val BIO_R_WSASTARTUP: Int = 122

const val BIO_TYPE_DESCRIPTOR: Int = 256

const val BIO_TYPE_FILTER: Int = 512

const val BIO_TYPE_SOURCE_SINK: Int = 1024

const val BIO_TYPE_NONE: Int = 0

const val BIO_TYPE_MEM: Int = 1025

const val BIO_TYPE_FILE: Int = 1026

const val BIO_TYPE_FD: Int = 1284

const val BIO_TYPE_SOCKET: Int = 1285

const val BIO_TYPE_NULL: Int = 1030

const val BIO_TYPE_SSL: Int = 519

const val BIO_TYPE_MD: Int = 520

const val BIO_TYPE_BUFFER: Int = 521

const val BIO_TYPE_CIPHER: Int = 522

const val BIO_TYPE_BASE64: Int = 523

const val BIO_TYPE_CONNECT: Int = 1292

const val BIO_TYPE_ACCEPT: Int = 1293

const val BIO_TYPE_NBIO_TEST: Int = 528

const val BIO_TYPE_NULL_FILTER: Int = 529

const val BIO_TYPE_BIO: Int = 1043

const val BIO_TYPE_LINEBUFFER: Int = 532

const val BIO_TYPE_DGRAM: Int = 1301

const val BIO_TYPE_ASN1: Int = 534

const val BIO_TYPE_COMP: Int = 535

const val BIO_TYPE_START: Int = 128

const val BIO_NOCLOSE: Int = 0

const val BIO_CLOSE: Int = 1

const val BIO_CTRL_RESET: Int = 1

const val BIO_CTRL_EOF: Int = 2

const val BIO_CTRL_INFO: Int = 3

const val BIO_CTRL_SET: Int = 4

const val BIO_CTRL_GET: Int = 5

const val BIO_CTRL_PUSH: Int = 6

const val BIO_CTRL_POP: Int = 7

const val BIO_CTRL_GET_CLOSE: Int = 8

const val BIO_CTRL_SET_CLOSE: Int = 9

const val BIO_CTRL_PENDING: Int = 10

const val BIO_CTRL_FLUSH: Int = 11

const val BIO_CTRL_DUP: Int = 12

const val BIO_CTRL_WPENDING: Int = 13

const val BIO_CTRL_SET_CALLBACK: Int = 14

const val BIO_CTRL_GET_CALLBACK: Int = 15

const val BIO_CTRL_PEEK: Int = 29

const val BIO_CTRL_SET_FILENAME: Int = 30

const val BIO_CTRL_DGRAM_CONNECT: Int = 31

const val BIO_CTRL_DGRAM_SET_CONNECTED: Int = 32

const val BIO_CTRL_DGRAM_SET_RECV_TIMEOUT: Int = 33

const val BIO_CTRL_DGRAM_GET_RECV_TIMEOUT: Int = 34

const val BIO_CTRL_DGRAM_SET_SEND_TIMEOUT: Int = 35

const val BIO_CTRL_DGRAM_GET_SEND_TIMEOUT: Int = 36

const val BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP: Int = 37

const val BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP: Int = 38

const val BIO_CTRL_DGRAM_MTU_DISCOVER: Int = 39

const val BIO_CTRL_DGRAM_QUERY_MTU: Int = 40

const val BIO_CTRL_DGRAM_GET_FALLBACK_MTU: Int = 47

const val BIO_CTRL_DGRAM_GET_MTU: Int = 41

const val BIO_CTRL_DGRAM_SET_MTU: Int = 42

const val BIO_CTRL_DGRAM_MTU_EXCEEDED: Int = 43

const val BIO_CTRL_DGRAM_GET_PEER: Int = 46

const val BIO_CTRL_DGRAM_SET_PEER: Int = 44

const val BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT: Int = 45

const val BIO_CTRL_DGRAM_SET_DONT_FRAG: Int = 48

const val BIO_CTRL_DGRAM_GET_MTU_OVERHEAD: Int = 49

const val BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE: Int = 50

const val BIO_CTRL_DGRAM_SET_PEEK_MODE: Int = 71

const val BIO_FP_READ: Int = 2

const val BIO_FP_WRITE: Int = 4

const val BIO_FP_APPEND: Int = 8

const val BIO_FP_TEXT: Int = 16

const val BIO_FLAGS_READ: Int = 1

const val BIO_FLAGS_WRITE: Int = 2

const val BIO_FLAGS_IO_SPECIAL: Int = 4

const val BIO_FLAGS_RWS: Int = 7

const val BIO_FLAGS_SHOULD_RETRY: Int = 8

const val BIO_FLAGS_UPLINK: Int = 0

const val BIO_FLAGS_BASE64_NO_NL: Int = 256

const val BIO_FLAGS_MEM_RDONLY: Int = 512

const val BIO_FLAGS_NONCLEAR_RST: Int = 1024

const val BIO_RR_SSL_X509_LOOKUP: Int = 1

const val BIO_RR_CONNECT: Int = 2

const val BIO_RR_ACCEPT: Int = 3

const val BIO_CB_FREE: Int = 1

const val BIO_CB_READ: Int = 2

const val BIO_CB_WRITE: Int = 3

const val BIO_CB_PUTS: Int = 4

const val BIO_CB_GETS: Int = 5

const val BIO_CB_CTRL: Int = 6

const val BIO_CB_RETURN: Int = 128

const val BIO_C_SET_CONNECT: Int = 100

const val BIO_C_DO_STATE_MACHINE: Int = 101

const val BIO_C_SET_NBIO: Int = 102

const val BIO_C_SET_FD: Int = 104

const val BIO_C_GET_FD: Int = 105

const val BIO_C_SET_FILE_PTR: Int = 106

const val BIO_C_GET_FILE_PTR: Int = 107

const val BIO_C_SET_FILENAME: Int = 108

const val BIO_C_SET_SSL: Int = 109

const val BIO_C_GET_SSL: Int = 110

const val BIO_C_SET_MD: Int = 111

const val BIO_C_GET_MD: Int = 112

const val BIO_C_GET_CIPHER_STATUS: Int = 113

const val BIO_C_SET_BUF_MEM: Int = 114

const val BIO_C_GET_BUF_MEM_PTR: Int = 115

const val BIO_C_GET_BUFF_NUM_LINES: Int = 116

const val BIO_C_SET_BUFF_SIZE: Int = 117

const val BIO_C_SET_ACCEPT: Int = 118

const val BIO_C_SSL_MODE: Int = 119

const val BIO_C_GET_MD_CTX: Int = 120

const val BIO_C_SET_BUFF_READ_DATA: Int = 122

const val BIO_C_GET_CONNECT: Int = 123

const val BIO_C_GET_ACCEPT: Int = 124

const val BIO_C_SET_SSL_RENEGOTIATE_BYTES: Int = 125

const val BIO_C_GET_SSL_NUM_RENEGOTIATES: Int = 126

const val BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT: Int = 127

const val BIO_C_FILE_SEEK: Int = 128

const val BIO_C_GET_CIPHER_CTX: Int = 129

const val BIO_C_SET_BUF_MEM_EOF_RETURN: Int = 130

const val BIO_C_SET_BIND_MODE: Int = 131

const val BIO_C_GET_BIND_MODE: Int = 132

const val BIO_C_FILE_TELL: Int = 133

const val BIO_C_GET_SOCKS: Int = 134

const val BIO_C_SET_SOCKS: Int = 135

const val BIO_C_SET_WRITE_BUF_SIZE: Int = 136

const val BIO_C_GET_WRITE_BUF_SIZE: Int = 137

const val BIO_C_MAKE_BIO_PAIR: Int = 138

const val BIO_C_DESTROY_BIO_PAIR: Int = 139

const val BIO_C_GET_WRITE_GUARANTEE: Int = 140

const val BIO_C_GET_READ_REQUEST: Int = 141

const val BIO_C_SHUTDOWN_WR: Int = 142

const val BIO_C_NREAD0: Int = 143

const val BIO_C_NREAD: Int = 144

const val BIO_C_NWRITE0: Int = 145

const val BIO_C_NWRITE: Int = 146

const val BIO_C_RESET_READ_REQUEST: Int = 147

const val BIO_C_SET_MD_CTX: Int = 148

const val BIO_C_SET_PREFIX: Int = 149

const val BIO_C_GET_PREFIX: Int = 150

const val BIO_C_SET_SUFFIX: Int = 151

const val BIO_C_GET_SUFFIX: Int = 152

const val BIO_C_SET_EX_ARG: Int = 153

const val BIO_C_GET_EX_ARG: Int = 154

const val BIO_C_SET_CONNECT_MODE: Int = 155

const val BIO_FAMILY_IPV4: Int = 4

const val BIO_FAMILY_IPV6: Int = 6

const val BIO_FAMILY_IPANY: Int = 256

const val BIO_BIND_NORMAL: Int = 0

const val BIO_BIND_REUSEADDR: Int = 1

const val BIO_BIND_REUSEADDR_IF_UNUSED: Int = 1

const val BIO_SOCK_REUSEADDR: Int = 1

const val BIO_SOCK_V6_ONLY: Int = 2

const val BIO_SOCK_KEEPALIVE: Int = 4

const val BIO_SOCK_NONBLOCK: Int = 8

const val BIO_SOCK_NODELAY: Int = 16

const val BUF_F_BUF_MEM_GROW: Int = 100

const val BUF_F_BUF_MEM_GROW_CLEAN: Int = 105

const val BUF_F_BUF_MEM_NEW: Int = 101

const val BUF_MEM_FLAG_SECURE: Int = 1

const val EVP_F_AESNI_INIT_KEY: Int = 165

const val EVP_F_AESNI_XTS_INIT_KEY: Int = 207

const val EVP_F_AES_GCM_CTRL: Int = 196

const val EVP_F_AES_INIT_KEY: Int = 133

const val EVP_F_AES_OCB_CIPHER: Int = 169

const val EVP_F_AES_T4_INIT_KEY: Int = 178

const val EVP_F_AES_T4_XTS_INIT_KEY: Int = 208

const val EVP_F_AES_WRAP_CIPHER: Int = 170

const val EVP_F_AES_XTS_INIT_KEY: Int = 209

const val EVP_F_ALG_MODULE_INIT: Int = 177

const val EVP_F_ARIA_CCM_INIT_KEY: Int = 175

const val EVP_F_ARIA_GCM_CTRL: Int = 197

const val EVP_F_ARIA_GCM_INIT_KEY: Int = 176

const val EVP_F_ARIA_INIT_KEY: Int = 185

const val EVP_F_B64_NEW: Int = 198

const val EVP_F_CAMELLIA_INIT_KEY: Int = 159

const val EVP_F_CHACHA20_POLY1305_CTRL: Int = 182

const val EVP_F_CMLL_T4_INIT_KEY: Int = 179

const val EVP_F_DES_EDE3_WRAP_CIPHER: Int = 171

const val EVP_F_DO_SIGVER_INIT: Int = 161

const val EVP_F_ENC_NEW: Int = 199

const val EVP_F_EVP_CIPHERINIT_EX: Int = 123

const val EVP_F_EVP_CIPHER_ASN1_TO_PARAM: Int = 204

const val EVP_F_EVP_CIPHER_CTX_COPY: Int = 163

const val EVP_F_EVP_CIPHER_CTX_CTRL: Int = 124

const val EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH: Int = 122

const val EVP_F_EVP_CIPHER_PARAM_TO_ASN1: Int = 205

const val EVP_F_EVP_DECRYPTFINAL_EX: Int = 101

const val EVP_F_EVP_DECRYPTUPDATE: Int = 166

const val EVP_F_EVP_DIGESTFINALXOF: Int = 174

const val EVP_F_EVP_DIGESTINIT_EX: Int = 128

const val EVP_F_EVP_ENCRYPTDECRYPTUPDATE: Int = 219

const val EVP_F_EVP_ENCRYPTFINAL_EX: Int = 127

const val EVP_F_EVP_ENCRYPTUPDATE: Int = 167

const val EVP_F_EVP_MD_CTX_COPY_EX: Int = 110

const val EVP_F_EVP_MD_SIZE: Int = 162

const val EVP_F_EVP_OPENINIT: Int = 102

const val EVP_F_EVP_PBE_ALG_ADD: Int = 115

const val EVP_F_EVP_PBE_ALG_ADD_TYPE: Int = 160

const val EVP_F_EVP_PBE_CIPHERINIT: Int = 116

const val EVP_F_EVP_PBE_SCRYPT: Int = 181

const val EVP_F_EVP_PKCS82PKEY: Int = 111

const val EVP_F_EVP_PKEY2PKCS8: Int = 113

const val EVP_F_EVP_PKEY_ASN1_ADD0: Int = 188

const val EVP_F_EVP_PKEY_CHECK: Int = 186

const val EVP_F_EVP_PKEY_COPY_PARAMETERS: Int = 103

const val EVP_F_EVP_PKEY_CTX_CTRL: Int = 137

const val EVP_F_EVP_PKEY_CTX_CTRL_STR: Int = 150

const val EVP_F_EVP_PKEY_CTX_DUP: Int = 156

const val EVP_F_EVP_PKEY_CTX_MD: Int = 168

const val EVP_F_EVP_PKEY_DECRYPT: Int = 104

const val EVP_F_EVP_PKEY_DECRYPT_INIT: Int = 138

const val EVP_F_EVP_PKEY_DECRYPT_OLD: Int = 151

const val EVP_F_EVP_PKEY_DERIVE: Int = 153

const val EVP_F_EVP_PKEY_DERIVE_INIT: Int = 154

const val EVP_F_EVP_PKEY_DERIVE_SET_PEER: Int = 155

const val EVP_F_EVP_PKEY_ENCRYPT: Int = 105

const val EVP_F_EVP_PKEY_ENCRYPT_INIT: Int = 139

const val EVP_F_EVP_PKEY_ENCRYPT_OLD: Int = 152

const val EVP_F_EVP_PKEY_GET0_DH: Int = 119

const val EVP_F_EVP_PKEY_GET0_DSA: Int = 120

const val EVP_F_EVP_PKEY_GET0_EC_KEY: Int = 131

const val EVP_F_EVP_PKEY_GET0_HMAC: Int = 183

const val EVP_F_EVP_PKEY_GET0_POLY1305: Int = 184

const val EVP_F_EVP_PKEY_GET0_RSA: Int = 121

const val EVP_F_EVP_PKEY_GET0_SIPHASH: Int = 172

const val EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY: Int = 202

const val EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY: Int = 203

const val EVP_F_EVP_PKEY_KEYGEN: Int = 146

const val EVP_F_EVP_PKEY_KEYGEN_INIT: Int = 147

const val EVP_F_EVP_PKEY_METH_ADD0: Int = 194

const val EVP_F_EVP_PKEY_METH_NEW: Int = 195

const val EVP_F_EVP_PKEY_NEW: Int = 106

const val EVP_F_EVP_PKEY_NEW_CMAC_KEY: Int = 193

const val EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY: Int = 191

const val EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY: Int = 192

const val EVP_F_EVP_PKEY_PARAMGEN: Int = 148

const val EVP_F_EVP_PKEY_PARAMGEN_INIT: Int = 149

const val EVP_F_EVP_PKEY_PARAM_CHECK: Int = 189

const val EVP_F_EVP_PKEY_PUBLIC_CHECK: Int = 190

const val EVP_F_EVP_PKEY_SET1_ENGINE: Int = 187

const val EVP_F_EVP_PKEY_SET_ALIAS_TYPE: Int = 206

const val EVP_F_EVP_PKEY_SIGN: Int = 140

const val EVP_F_EVP_PKEY_SIGN_INIT: Int = 141

const val EVP_F_EVP_PKEY_VERIFY: Int = 142

const val EVP_F_EVP_PKEY_VERIFY_INIT: Int = 143

const val EVP_F_EVP_PKEY_VERIFY_RECOVER: Int = 144

const val EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT: Int = 145

const val EVP_F_EVP_SIGNFINAL: Int = 107

const val EVP_F_EVP_VERIFYFINAL: Int = 108

const val EVP_F_INT_CTX_NEW: Int = 157

const val EVP_F_OK_NEW: Int = 200

const val EVP_F_PKCS5_PBE_KEYIVGEN: Int = 117

const val EVP_F_PKCS5_V2_PBE_KEYIVGEN: Int = 118

const val EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN: Int = 164

const val EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN: Int = 180

const val EVP_F_PKEY_SET_TYPE: Int = 158

const val EVP_F_RC2_MAGIC_TO_METH: Int = 109

const val EVP_F_RC5_CTRL: Int = 125

const val EVP_F_R_32_12_16_INIT_KEY: Int = 242

const val EVP_F_S390X_AES_GCM_CTRL: Int = 201

const val EVP_F_UPDATE: Int = 173

const val EVP_R_AES_KEY_SETUP_FAILED: Int = 143

const val EVP_R_ARIA_KEY_SETUP_FAILED: Int = 176

const val EVP_R_BAD_DECRYPT: Int = 100

const val EVP_R_BAD_KEY_LENGTH: Int = 195

const val EVP_R_BUFFER_TOO_SMALL: Int = 155

const val EVP_R_CAMELLIA_KEY_SETUP_FAILED: Int = 157

const val EVP_R_CIPHER_PARAMETER_ERROR: Int = 122

const val EVP_R_COMMAND_NOT_SUPPORTED: Int = 147

const val EVP_R_COPY_ERROR: Int = 173

const val EVP_R_CTRL_NOT_IMPLEMENTED: Int = 132

const val EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED: Int = 133

const val EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH: Int = 138

const val EVP_R_DECODE_ERROR: Int = 114

const val EVP_R_DIFFERENT_KEY_TYPES: Int = 101

const val EVP_R_DIFFERENT_PARAMETERS: Int = 153

const val EVP_R_ERROR_LOADING_SECTION: Int = 165

const val EVP_R_ERROR_SETTING_FIPS_MODE: Int = 166

const val EVP_R_EXPECTING_AN_HMAC_KEY: Int = 174

const val EVP_R_EXPECTING_AN_RSA_KEY: Int = 127

const val EVP_R_EXPECTING_A_DH_KEY: Int = 128

const val EVP_R_EXPECTING_A_DSA_KEY: Int = 129

const val EVP_R_EXPECTING_A_EC_KEY: Int = 142

const val EVP_R_EXPECTING_A_POLY1305_KEY: Int = 164

const val EVP_R_EXPECTING_A_SIPHASH_KEY: Int = 175

const val EVP_R_FIPS_MODE_NOT_SUPPORTED: Int = 167

const val EVP_R_GET_RAW_KEY_FAILED: Int = 182

const val EVP_R_ILLEGAL_SCRYPT_PARAMETERS: Int = 171

const val EVP_R_INITIALIZATION_ERROR: Int = 134

const val EVP_R_INPUT_NOT_INITIALIZED: Int = 111

const val EVP_R_INVALID_DIGEST: Int = 152

const val EVP_R_INVALID_FIPS_MODE: Int = 168

const val EVP_R_INVALID_KEY: Int = 163

const val EVP_R_INVALID_KEY_LENGTH: Int = 130

const val EVP_R_INVALID_OPERATION: Int = 148

const val EVP_R_KEYGEN_FAILURE: Int = 120

const val EVP_R_KEY_SETUP_FAILED: Int = 180

const val EVP_R_MEMORY_LIMIT_EXCEEDED: Int = 172

const val EVP_R_MESSAGE_DIGEST_IS_NULL: Int = 159

const val EVP_R_METHOD_NOT_SUPPORTED: Int = 144

const val EVP_R_MISSING_PARAMETERS: Int = 103

const val EVP_R_NOT_XOF_OR_INVALID_LENGTH: Int = 178

const val EVP_R_NO_CIPHER_SET: Int = 131

const val EVP_R_NO_DEFAULT_DIGEST: Int = 158

const val EVP_R_NO_DIGEST_SET: Int = 139

const val EVP_R_NO_KEY_SET: Int = 154

const val EVP_R_NO_OPERATION_SET: Int = 149

const val EVP_R_ONLY_ONESHOT_SUPPORTED: Int = 177

const val EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE: Int = 150

const val EVP_R_OPERATON_NOT_INITIALIZED: Int = 151

const val EVP_R_PARTIALLY_OVERLAPPING: Int = 162

const val EVP_R_PBKDF2_ERROR: Int = 181

const val EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED: Int = 179

const val EVP_R_PRIVATE_KEY_DECODE_ERROR: Int = 145

const val EVP_R_PRIVATE_KEY_ENCODE_ERROR: Int = 146

const val EVP_R_PUBLIC_KEY_NOT_RSA: Int = 106

const val EVP_R_UNKNOWN_CIPHER: Int = 160

const val EVP_R_UNKNOWN_DIGEST: Int = 161

const val EVP_R_UNKNOWN_OPTION: Int = 169

const val EVP_R_UNKNOWN_PBE_ALGORITHM: Int = 121

const val EVP_R_UNSUPPORTED_ALGORITHM: Int = 156

const val EVP_R_UNSUPPORTED_CIPHER: Int = 107

const val EVP_R_UNSUPPORTED_KEYLENGTH: Int = 123

const val EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION: Int = 124

const val EVP_R_UNSUPPORTED_KEY_SIZE: Int = 108

const val EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS: Int = 135

const val EVP_R_UNSUPPORTED_PRF: Int = 125

const val EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM: Int = 118

const val EVP_R_UNSUPPORTED_SALT_TYPE: Int = 126

const val EVP_R_WRAP_MODE_NOT_ALLOWED: Int = 170

const val EVP_R_WRONG_FINAL_BLOCK_LENGTH: Int = 109

const val EVP_R_XTS_DUPLICATED_KEYS: Int = 183

const val EVP_MAX_MD_SIZE: Int = 64

const val EVP_MAX_KEY_LENGTH: Int = 64

const val EVP_MAX_IV_LENGTH: Int = 16

const val EVP_MAX_BLOCK_LENGTH: Int = 32

const val PKCS5_SALT_LEN: Int = 8

const val PKCS5_DEFAULT_ITER: Int = 2048

val SN_undef: String get() = "UNDEF"

val LN_undef: String get() = "undefined"

const val NID_undef: Int = 0

const val OBJ_undef: Long = 0

val SN_itu_t: String get() = "ITU\u002DT"

val LN_itu_t: String get() = "itu\u002Dt"

const val NID_itu_t: Int = 645

const val OBJ_itu_t: Long = 0

const val NID_ccitt: Int = 404

const val OBJ_ccitt: Long = 0

val SN_iso: String get() = "ISO"

val LN_iso: String get() = "iso"

const val NID_iso: Int = 181

const val OBJ_iso: Long = 1

val SN_joint_iso_itu_t: String get() = "JOINT\u002DISO\u002DITU\u002DT"

val LN_joint_iso_itu_t: String get() = "joint\u002Diso\u002Ditu\u002Dt"

const val NID_joint_iso_itu_t: Int = 646

const val OBJ_joint_iso_itu_t: Long = 2

const val NID_joint_iso_ccitt: Int = 393

const val OBJ_joint_iso_ccitt: Long = 2

val SN_member_body: String get() = "member\u002Dbody"

val LN_member_body: String get() = "ISO Member Body"

const val NID_member_body: Int = 182

val SN_identified_organization: String get() = "identified\u002Dorganization"

const val NID_identified_organization: Int = 676

val SN_hmac_md5: String get() = "HMAC\u002DMD5"

val LN_hmac_md5: String get() = "hmac\u002Dmd5"

const val NID_hmac_md5: Int = 780

val SN_hmac_sha1: String get() = "HMAC\u002DSHA1"

val LN_hmac_sha1: String get() = "hmac\u002Dsha1"

const val NID_hmac_sha1: Int = 781

val SN_x509ExtAdmission: String get() = "x509ExtAdmission"

val LN_x509ExtAdmission: String get() = "Professional Information or basis for Admission"

const val NID_x509ExtAdmission: Int = 1093

val SN_certicom_arc: String get() = "certicom\u002Darc"

const val NID_certicom_arc: Int = 677

val SN_ieee: String get() = "ieee"

const val NID_ieee: Int = 1170

val SN_ieee_siswg: String get() = "ieee\u002Dsiswg"

val LN_ieee_siswg: String get() = "IEEE Security in Storage Working Group"

const val NID_ieee_siswg: Int = 1171

val SN_international_organizations: String get() = "international\u002Dorganizations"

val LN_international_organizations: String get() = "International Organizations"

const val NID_international_organizations: Int = 647

val SN_wap: String get() = "wap"

const val NID_wap: Int = 678

val SN_wap_wsg: String get() = "wap\u002Dwsg"

const val NID_wap_wsg: Int = 679

val SN_selected_attribute_types: String get() = "selected\u002Dattribute\u002Dtypes"

val LN_selected_attribute_types: String get() = "Selected Attribute Types"

const val NID_selected_attribute_types: Int = 394

val SN_clearance: String get() = "clearance"

const val NID_clearance: Int = 395

val SN_ISO_US: String get() = "ISO\u002DUS"

val LN_ISO_US: String get() = "ISO US Member Body"

const val NID_ISO_US: Int = 183

val SN_X9_57: String get() = "X9\u002D57"

val LN_X9_57: String get() = "X9.57"

const val NID_X9_57: Int = 184

val SN_X9cm: String get() = "X9cm"

val LN_X9cm: String get() = "X9.57 CM \u003F"

const val NID_X9cm: Int = 185

val SN_ISO_CN: String get() = "ISO\u002DCN"

val LN_ISO_CN: String get() = "ISO CN Member Body"

const val NID_ISO_CN: Int = 1140

val SN_oscca: String get() = "oscca"

const val NID_oscca: Int = 1141

val SN_sm_scheme: String get() = "sm\u002Dscheme"

const val NID_sm_scheme: Int = 1142

val SN_dsa: String get() = "DSA"

val LN_dsa: String get() = "dsaEncryption"

const val NID_dsa: Int = 116

val SN_dsaWithSHA1: String get() = "DSA\u002DSHA1"

val LN_dsaWithSHA1: String get() = "dsaWithSHA1"

const val NID_dsaWithSHA1: Int = 113

val SN_ansi_X9_62: String get() = "ansi\u002DX9\u002D62"

val LN_ansi_X9_62: String get() = "ANSI X9.62"

const val NID_ansi_X9_62: Int = 405

val SN_X9_62_prime_field: String get() = "prime\u002Dfield"

const val NID_X9_62_prime_field: Int = 406

val SN_X9_62_characteristic_two_field: String get() = "characteristic\u002Dtwo\u002Dfield"

const val NID_X9_62_characteristic_two_field: Int = 407

val SN_X9_62_id_characteristic_two_basis: String get() = "id\u002Dcharacteristic\u002Dtwo\u002Dbasis"

const val NID_X9_62_id_characteristic_two_basis: Int = 680

val SN_X9_62_onBasis: String get() = "onBasis"

const val NID_X9_62_onBasis: Int = 681

val SN_X9_62_tpBasis: String get() = "tpBasis"

const val NID_X9_62_tpBasis: Int = 682

val SN_X9_62_ppBasis: String get() = "ppBasis"

const val NID_X9_62_ppBasis: Int = 683

val SN_X9_62_id_ecPublicKey: String get() = "id\u002DecPublicKey"

const val NID_X9_62_id_ecPublicKey: Int = 408

val SN_X9_62_c2pnb163v1: String get() = "c2pnb163v1"

const val NID_X9_62_c2pnb163v1: Int = 684

val SN_X9_62_c2pnb163v2: String get() = "c2pnb163v2"

const val NID_X9_62_c2pnb163v2: Int = 685

val SN_X9_62_c2pnb163v3: String get() = "c2pnb163v3"

const val NID_X9_62_c2pnb163v3: Int = 686

val SN_X9_62_c2pnb176v1: String get() = "c2pnb176v1"

const val NID_X9_62_c2pnb176v1: Int = 687

val SN_X9_62_c2tnb191v1: String get() = "c2tnb191v1"

const val NID_X9_62_c2tnb191v1: Int = 688

val SN_X9_62_c2tnb191v2: String get() = "c2tnb191v2"

const val NID_X9_62_c2tnb191v2: Int = 689

val SN_X9_62_c2tnb191v3: String get() = "c2tnb191v3"

const val NID_X9_62_c2tnb191v3: Int = 690

val SN_X9_62_c2onb191v4: String get() = "c2onb191v4"

const val NID_X9_62_c2onb191v4: Int = 691

val SN_X9_62_c2onb191v5: String get() = "c2onb191v5"

const val NID_X9_62_c2onb191v5: Int = 692

val SN_X9_62_c2pnb208w1: String get() = "c2pnb208w1"

const val NID_X9_62_c2pnb208w1: Int = 693

val SN_X9_62_c2tnb239v1: String get() = "c2tnb239v1"

const val NID_X9_62_c2tnb239v1: Int = 694

val SN_X9_62_c2tnb239v2: String get() = "c2tnb239v2"

const val NID_X9_62_c2tnb239v2: Int = 695

val SN_X9_62_c2tnb239v3: String get() = "c2tnb239v3"

const val NID_X9_62_c2tnb239v3: Int = 696

val SN_X9_62_c2onb239v4: String get() = "c2onb239v4"

const val NID_X9_62_c2onb239v4: Int = 697

val SN_X9_62_c2onb239v5: String get() = "c2onb239v5"

const val NID_X9_62_c2onb239v5: Int = 698

val SN_X9_62_c2pnb272w1: String get() = "c2pnb272w1"

const val NID_X9_62_c2pnb272w1: Int = 699

val SN_X9_62_c2pnb304w1: String get() = "c2pnb304w1"

const val NID_X9_62_c2pnb304w1: Int = 700

val SN_X9_62_c2tnb359v1: String get() = "c2tnb359v1"

const val NID_X9_62_c2tnb359v1: Int = 701

val SN_X9_62_c2pnb368w1: String get() = "c2pnb368w1"

const val NID_X9_62_c2pnb368w1: Int = 702

val SN_X9_62_c2tnb431r1: String get() = "c2tnb431r1"

const val NID_X9_62_c2tnb431r1: Int = 703

val SN_X9_62_prime192v1: String get() = "prime192v1"

const val NID_X9_62_prime192v1: Int = 409

val SN_X9_62_prime192v2: String get() = "prime192v2"

const val NID_X9_62_prime192v2: Int = 410

val SN_X9_62_prime192v3: String get() = "prime192v3"

const val NID_X9_62_prime192v3: Int = 411

val SN_X9_62_prime239v1: String get() = "prime239v1"

const val NID_X9_62_prime239v1: Int = 412

val SN_X9_62_prime239v2: String get() = "prime239v2"

const val NID_X9_62_prime239v2: Int = 413

val SN_X9_62_prime239v3: String get() = "prime239v3"

const val NID_X9_62_prime239v3: Int = 414

val SN_X9_62_prime256v1: String get() = "prime256v1"

const val NID_X9_62_prime256v1: Int = 415

val SN_ecdsa_with_SHA1: String get() = "ecdsa\u002Dwith\u002DSHA1"

const val NID_ecdsa_with_SHA1: Int = 416

val SN_ecdsa_with_Recommended: String get() = "ecdsa\u002Dwith\u002DRecommended"

const val NID_ecdsa_with_Recommended: Int = 791

val SN_ecdsa_with_Specified: String get() = "ecdsa\u002Dwith\u002DSpecified"

const val NID_ecdsa_with_Specified: Int = 792

val SN_ecdsa_with_SHA224: String get() = "ecdsa\u002Dwith\u002DSHA224"

const val NID_ecdsa_with_SHA224: Int = 793

val SN_ecdsa_with_SHA256: String get() = "ecdsa\u002Dwith\u002DSHA256"

const val NID_ecdsa_with_SHA256: Int = 794

val SN_ecdsa_with_SHA384: String get() = "ecdsa\u002Dwith\u002DSHA384"

const val NID_ecdsa_with_SHA384: Int = 795

val SN_ecdsa_with_SHA512: String get() = "ecdsa\u002Dwith\u002DSHA512"

const val NID_ecdsa_with_SHA512: Int = 796

val SN_secp112r1: String get() = "secp112r1"

const val NID_secp112r1: Int = 704

val SN_secp112r2: String get() = "secp112r2"

const val NID_secp112r2: Int = 705

val SN_secp128r1: String get() = "secp128r1"

const val NID_secp128r1: Int = 706

val SN_secp128r2: String get() = "secp128r2"

const val NID_secp128r2: Int = 707

val SN_secp160k1: String get() = "secp160k1"

const val NID_secp160k1: Int = 708

val SN_secp160r1: String get() = "secp160r1"

const val NID_secp160r1: Int = 709

val SN_secp160r2: String get() = "secp160r2"

const val NID_secp160r2: Int = 710

val SN_secp192k1: String get() = "secp192k1"

const val NID_secp192k1: Int = 711

val SN_secp224k1: String get() = "secp224k1"

const val NID_secp224k1: Int = 712

val SN_secp224r1: String get() = "secp224r1"

const val NID_secp224r1: Int = 713

val SN_secp256k1: String get() = "secp256k1"

const val NID_secp256k1: Int = 714

val SN_secp384r1: String get() = "secp384r1"

const val NID_secp384r1: Int = 715

val SN_secp521r1: String get() = "secp521r1"

const val NID_secp521r1: Int = 716

val SN_sect113r1: String get() = "sect113r1"

const val NID_sect113r1: Int = 717

val SN_sect113r2: String get() = "sect113r2"

const val NID_sect113r2: Int = 718

val SN_sect131r1: String get() = "sect131r1"

const val NID_sect131r1: Int = 719

val SN_sect131r2: String get() = "sect131r2"

const val NID_sect131r2: Int = 720

val SN_sect163k1: String get() = "sect163k1"

const val NID_sect163k1: Int = 721

val SN_sect163r1: String get() = "sect163r1"

const val NID_sect163r1: Int = 722

val SN_sect163r2: String get() = "sect163r2"

const val NID_sect163r2: Int = 723

val SN_sect193r1: String get() = "sect193r1"

const val NID_sect193r1: Int = 724

val SN_sect193r2: String get() = "sect193r2"

const val NID_sect193r2: Int = 725

val SN_sect233k1: String get() = "sect233k1"

const val NID_sect233k1: Int = 726

val SN_sect233r1: String get() = "sect233r1"

const val NID_sect233r1: Int = 727

val SN_sect239k1: String get() = "sect239k1"

const val NID_sect239k1: Int = 728

val SN_sect283k1: String get() = "sect283k1"

const val NID_sect283k1: Int = 729

val SN_sect283r1: String get() = "sect283r1"

const val NID_sect283r1: Int = 730

val SN_sect409k1: String get() = "sect409k1"

const val NID_sect409k1: Int = 731

val SN_sect409r1: String get() = "sect409r1"

const val NID_sect409r1: Int = 732

val SN_sect571k1: String get() = "sect571k1"

const val NID_sect571k1: Int = 733

val SN_sect571r1: String get() = "sect571r1"

const val NID_sect571r1: Int = 734

val SN_wap_wsg_idm_ecid_wtls1: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls1"

const val NID_wap_wsg_idm_ecid_wtls1: Int = 735

val SN_wap_wsg_idm_ecid_wtls3: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls3"

const val NID_wap_wsg_idm_ecid_wtls3: Int = 736

val SN_wap_wsg_idm_ecid_wtls4: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls4"

const val NID_wap_wsg_idm_ecid_wtls4: Int = 737

val SN_wap_wsg_idm_ecid_wtls5: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls5"

const val NID_wap_wsg_idm_ecid_wtls5: Int = 738

val SN_wap_wsg_idm_ecid_wtls6: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls6"

const val NID_wap_wsg_idm_ecid_wtls6: Int = 739

val SN_wap_wsg_idm_ecid_wtls7: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls7"

const val NID_wap_wsg_idm_ecid_wtls7: Int = 740

val SN_wap_wsg_idm_ecid_wtls8: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls8"

const val NID_wap_wsg_idm_ecid_wtls8: Int = 741

val SN_wap_wsg_idm_ecid_wtls9: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls9"

const val NID_wap_wsg_idm_ecid_wtls9: Int = 742

val SN_wap_wsg_idm_ecid_wtls10: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls10"

const val NID_wap_wsg_idm_ecid_wtls10: Int = 743

val SN_wap_wsg_idm_ecid_wtls11: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls11"

const val NID_wap_wsg_idm_ecid_wtls11: Int = 744

val SN_wap_wsg_idm_ecid_wtls12: String get() = "wap\u002Dwsg\u002Didm\u002Decid\u002Dwtls12"

const val NID_wap_wsg_idm_ecid_wtls12: Int = 745

val SN_cast5_cbc: String get() = "CAST5\u002DCBC"

val LN_cast5_cbc: String get() = "cast5\u002Dcbc"

const val NID_cast5_cbc: Int = 108

val SN_cast5_ecb: String get() = "CAST5\u002DECB"

val LN_cast5_ecb: String get() = "cast5\u002Decb"

const val NID_cast5_ecb: Int = 109

val SN_cast5_cfb64: String get() = "CAST5\u002DCFB"

val LN_cast5_cfb64: String get() = "cast5\u002Dcfb"

const val NID_cast5_cfb64: Int = 110

val SN_cast5_ofb64: String get() = "CAST5\u002DOFB"

val LN_cast5_ofb64: String get() = "cast5\u002Dofb"

const val NID_cast5_ofb64: Int = 111

val LN_pbeWithMD5AndCast5_CBC: String get() = "pbeWithMD5AndCast5CBC"

const val NID_pbeWithMD5AndCast5_CBC: Int = 112

val SN_id_PasswordBasedMAC: String get() = "id\u002DPasswordBasedMAC"

val LN_id_PasswordBasedMAC: String get() = "password based MAC"

const val NID_id_PasswordBasedMAC: Int = 782

val SN_id_DHBasedMac: String get() = "id\u002DDHBasedMac"

val LN_id_DHBasedMac: String get() = "Diffie\u002DHellman based MAC"

const val NID_id_DHBasedMac: Int = 783

val SN_rsadsi: String get() = "rsadsi"

val LN_rsadsi: String get() = "RSA Data Security, Inc."

const val NID_rsadsi: Int = 1

val SN_pkcs: String get() = "pkcs"

val LN_pkcs: String get() = "RSA Data Security, Inc. PKCS"

const val NID_pkcs: Int = 2

val SN_pkcs1: String get() = "pkcs1"

const val NID_pkcs1: Int = 186

val LN_rsaEncryption: String get() = "rsaEncryption"

const val NID_rsaEncryption: Int = 6

val SN_md2WithRSAEncryption: String get() = "RSA\u002DMD2"

val LN_md2WithRSAEncryption: String get() = "md2WithRSAEncryption"

const val NID_md2WithRSAEncryption: Int = 7

val SN_md4WithRSAEncryption: String get() = "RSA\u002DMD4"

val LN_md4WithRSAEncryption: String get() = "md4WithRSAEncryption"

const val NID_md4WithRSAEncryption: Int = 396

val SN_md5WithRSAEncryption: String get() = "RSA\u002DMD5"

val LN_md5WithRSAEncryption: String get() = "md5WithRSAEncryption"

const val NID_md5WithRSAEncryption: Int = 8

val SN_sha1WithRSAEncryption: String get() = "RSA\u002DSHA1"

val LN_sha1WithRSAEncryption: String get() = "sha1WithRSAEncryption"

const val NID_sha1WithRSAEncryption: Int = 65

val SN_rsaesOaep: String get() = "RSAES\u002DOAEP"

val LN_rsaesOaep: String get() = "rsaesOaep"

const val NID_rsaesOaep: Int = 919

val SN_mgf1: String get() = "MGF1"

val LN_mgf1: String get() = "mgf1"

const val NID_mgf1: Int = 911

val SN_pSpecified: String get() = "PSPECIFIED"

val LN_pSpecified: String get() = "pSpecified"

const val NID_pSpecified: Int = 935

val SN_rsassaPss: String get() = "RSASSA\u002DPSS"

val LN_rsassaPss: String get() = "rsassaPss"

const val NID_rsassaPss: Int = 912

val SN_sha256WithRSAEncryption: String get() = "RSA\u002DSHA256"

val LN_sha256WithRSAEncryption: String get() = "sha256WithRSAEncryption"

const val NID_sha256WithRSAEncryption: Int = 668

val SN_sha384WithRSAEncryption: String get() = "RSA\u002DSHA384"

val LN_sha384WithRSAEncryption: String get() = "sha384WithRSAEncryption"

const val NID_sha384WithRSAEncryption: Int = 669

val SN_sha512WithRSAEncryption: String get() = "RSA\u002DSHA512"

val LN_sha512WithRSAEncryption: String get() = "sha512WithRSAEncryption"

const val NID_sha512WithRSAEncryption: Int = 670

val SN_sha224WithRSAEncryption: String get() = "RSA\u002DSHA224"

val LN_sha224WithRSAEncryption: String get() = "sha224WithRSAEncryption"

const val NID_sha224WithRSAEncryption: Int = 671

val SN_sha512_224WithRSAEncryption: String get() = "RSA\u002DSHA512\u002F224"

val LN_sha512_224WithRSAEncryption: String get() = "sha512\u002D224WithRSAEncryption"

const val NID_sha512_224WithRSAEncryption: Int = 1145

val SN_sha512_256WithRSAEncryption: String get() = "RSA\u002DSHA512\u002F256"

val LN_sha512_256WithRSAEncryption: String get() = "sha512\u002D256WithRSAEncryption"

const val NID_sha512_256WithRSAEncryption: Int = 1146

val SN_pkcs3: String get() = "pkcs3"

const val NID_pkcs3: Int = 27

val LN_dhKeyAgreement: String get() = "dhKeyAgreement"

const val NID_dhKeyAgreement: Int = 28

val SN_pkcs5: String get() = "pkcs5"

const val NID_pkcs5: Int = 187

val SN_pbeWithMD2AndDES_CBC: String get() = "PBE\u002DMD2\u002DDES"

val LN_pbeWithMD2AndDES_CBC: String get() = "pbeWithMD2AndDES\u002DCBC"

const val NID_pbeWithMD2AndDES_CBC: Int = 9

val SN_pbeWithMD5AndDES_CBC: String get() = "PBE\u002DMD5\u002DDES"

val LN_pbeWithMD5AndDES_CBC: String get() = "pbeWithMD5AndDES\u002DCBC"

const val NID_pbeWithMD5AndDES_CBC: Int = 10

val SN_pbeWithMD2AndRC2_CBC: String get() = "PBE\u002DMD2\u002DRC2\u002D64"

val LN_pbeWithMD2AndRC2_CBC: String get() = "pbeWithMD2AndRC2\u002DCBC"

const val NID_pbeWithMD2AndRC2_CBC: Int = 168

val SN_pbeWithMD5AndRC2_CBC: String get() = "PBE\u002DMD5\u002DRC2\u002D64"

val LN_pbeWithMD5AndRC2_CBC: String get() = "pbeWithMD5AndRC2\u002DCBC"

const val NID_pbeWithMD5AndRC2_CBC: Int = 169

val SN_pbeWithSHA1AndDES_CBC: String get() = "PBE\u002DSHA1\u002DDES"

val LN_pbeWithSHA1AndDES_CBC: String get() = "pbeWithSHA1AndDES\u002DCBC"

const val NID_pbeWithSHA1AndDES_CBC: Int = 170

val SN_pbeWithSHA1AndRC2_CBC: String get() = "PBE\u002DSHA1\u002DRC2\u002D64"

val LN_pbeWithSHA1AndRC2_CBC: String get() = "pbeWithSHA1AndRC2\u002DCBC"

const val NID_pbeWithSHA1AndRC2_CBC: Int = 68

val LN_id_pbkdf2: String get() = "PBKDF2"

const val NID_id_pbkdf2: Int = 69

val LN_pbes2: String get() = "PBES2"

const val NID_pbes2: Int = 161

val LN_pbmac1: String get() = "PBMAC1"

const val NID_pbmac1: Int = 162

val SN_pkcs7: String get() = "pkcs7"

const val NID_pkcs7: Int = 20

val LN_pkcs7_data: String get() = "pkcs7\u002Ddata"

const val NID_pkcs7_data: Int = 21

val LN_pkcs7_signed: String get() = "pkcs7\u002DsignedData"

const val NID_pkcs7_signed: Int = 22

val LN_pkcs7_enveloped: String get() = "pkcs7\u002DenvelopedData"

const val NID_pkcs7_enveloped: Int = 23

val LN_pkcs7_signedAndEnveloped: String get() = "pkcs7\u002DsignedAndEnvelopedData"

const val NID_pkcs7_signedAndEnveloped: Int = 24

val LN_pkcs7_digest: String get() = "pkcs7\u002DdigestData"

const val NID_pkcs7_digest: Int = 25

val LN_pkcs7_encrypted: String get() = "pkcs7\u002DencryptedData"

const val NID_pkcs7_encrypted: Int = 26

val SN_pkcs9: String get() = "pkcs9"

const val NID_pkcs9: Int = 47

val LN_pkcs9_emailAddress: String get() = "emailAddress"

const val NID_pkcs9_emailAddress: Int = 48

val LN_pkcs9_unstructuredName: String get() = "unstructuredName"

const val NID_pkcs9_unstructuredName: Int = 49

val LN_pkcs9_contentType: String get() = "contentType"

const val NID_pkcs9_contentType: Int = 50

val LN_pkcs9_messageDigest: String get() = "messageDigest"

const val NID_pkcs9_messageDigest: Int = 51

val LN_pkcs9_signingTime: String get() = "signingTime"

const val NID_pkcs9_signingTime: Int = 52

val LN_pkcs9_countersignature: String get() = "countersignature"

const val NID_pkcs9_countersignature: Int = 53

val LN_pkcs9_challengePassword: String get() = "challengePassword"

const val NID_pkcs9_challengePassword: Int = 54

val LN_pkcs9_unstructuredAddress: String get() = "unstructuredAddress"

const val NID_pkcs9_unstructuredAddress: Int = 55

val LN_pkcs9_extCertAttributes: String get() = "extendedCertificateAttributes"

const val NID_pkcs9_extCertAttributes: Int = 56

val SN_ext_req: String get() = "extReq"

val LN_ext_req: String get() = "Extension Request"

const val NID_ext_req: Int = 172

val SN_SMIMECapabilities: String get() = "SMIME\u002DCAPS"

val LN_SMIMECapabilities: String get() = "S\u002FMIME Capabilities"

const val NID_SMIMECapabilities: Int = 167

val SN_SMIME: String get() = "SMIME"

val LN_SMIME: String get() = "S\u002FMIME"

const val NID_SMIME: Int = 188

val SN_id_smime_mod: String get() = "id\u002Dsmime\u002Dmod"

const val NID_id_smime_mod: Int = 189

val SN_id_smime_ct: String get() = "id\u002Dsmime\u002Dct"

const val NID_id_smime_ct: Int = 190

val SN_id_smime_aa: String get() = "id\u002Dsmime\u002Daa"

const val NID_id_smime_aa: Int = 191

val SN_id_smime_alg: String get() = "id\u002Dsmime\u002Dalg"

const val NID_id_smime_alg: Int = 192

val SN_id_smime_cd: String get() = "id\u002Dsmime\u002Dcd"

const val NID_id_smime_cd: Int = 193

val SN_id_smime_spq: String get() = "id\u002Dsmime\u002Dspq"

const val NID_id_smime_spq: Int = 194

val SN_id_smime_cti: String get() = "id\u002Dsmime\u002Dcti"

const val NID_id_smime_cti: Int = 195

val SN_id_smime_mod_cms: String get() = "id\u002Dsmime\u002Dmod\u002Dcms"

const val NID_id_smime_mod_cms: Int = 196

val SN_id_smime_mod_ess: String get() = "id\u002Dsmime\u002Dmod\u002Dess"

const val NID_id_smime_mod_ess: Int = 197

val SN_id_smime_mod_oid: String get() = "id\u002Dsmime\u002Dmod\u002Doid"

const val NID_id_smime_mod_oid: Int = 198

val SN_id_smime_mod_msg_v3: String get() = "id\u002Dsmime\u002Dmod\u002Dmsg\u002Dv3"

const val NID_id_smime_mod_msg_v3: Int = 199

val SN_id_smime_mod_ets_eSignature_88: String get() = "id\u002Dsmime\u002Dmod\u002Dets\u002DeSignature\u002D88"

const val NID_id_smime_mod_ets_eSignature_88: Int = 200

val SN_id_smime_mod_ets_eSignature_97: String get() = "id\u002Dsmime\u002Dmod\u002Dets\u002DeSignature\u002D97"

const val NID_id_smime_mod_ets_eSignature_97: Int = 201

val SN_id_smime_mod_ets_eSigPolicy_88: String get() = "id\u002Dsmime\u002Dmod\u002Dets\u002DeSigPolicy\u002D88"

const val NID_id_smime_mod_ets_eSigPolicy_88: Int = 202

val SN_id_smime_mod_ets_eSigPolicy_97: String get() = "id\u002Dsmime\u002Dmod\u002Dets\u002DeSigPolicy\u002D97"

const val NID_id_smime_mod_ets_eSigPolicy_97: Int = 203

val SN_id_smime_ct_receipt: String get() = "id\u002Dsmime\u002Dct\u002Dreceipt"

const val NID_id_smime_ct_receipt: Int = 204

val SN_id_smime_ct_authData: String get() = "id\u002Dsmime\u002Dct\u002DauthData"

const val NID_id_smime_ct_authData: Int = 205

val SN_id_smime_ct_publishCert: String get() = "id\u002Dsmime\u002Dct\u002DpublishCert"

const val NID_id_smime_ct_publishCert: Int = 206

val SN_id_smime_ct_TSTInfo: String get() = "id\u002Dsmime\u002Dct\u002DTSTInfo"

const val NID_id_smime_ct_TSTInfo: Int = 207

val SN_id_smime_ct_TDTInfo: String get() = "id\u002Dsmime\u002Dct\u002DTDTInfo"

const val NID_id_smime_ct_TDTInfo: Int = 208

val SN_id_smime_ct_contentInfo: String get() = "id\u002Dsmime\u002Dct\u002DcontentInfo"

const val NID_id_smime_ct_contentInfo: Int = 209

val SN_id_smime_ct_DVCSRequestData: String get() = "id\u002Dsmime\u002Dct\u002DDVCSRequestData"

const val NID_id_smime_ct_DVCSRequestData: Int = 210

val SN_id_smime_ct_DVCSResponseData: String get() = "id\u002Dsmime\u002Dct\u002DDVCSResponseData"

const val NID_id_smime_ct_DVCSResponseData: Int = 211

val SN_id_smime_ct_compressedData: String get() = "id\u002Dsmime\u002Dct\u002DcompressedData"

const val NID_id_smime_ct_compressedData: Int = 786

val SN_id_smime_ct_contentCollection: String get() = "id\u002Dsmime\u002Dct\u002DcontentCollection"

const val NID_id_smime_ct_contentCollection: Int = 1058

val SN_id_smime_ct_authEnvelopedData: String get() = "id\u002Dsmime\u002Dct\u002DauthEnvelopedData"

const val NID_id_smime_ct_authEnvelopedData: Int = 1059

val SN_id_ct_asciiTextWithCRLF: String get() = "id\u002Dct\u002DasciiTextWithCRLF"

const val NID_id_ct_asciiTextWithCRLF: Int = 787

val SN_id_ct_xml: String get() = "id\u002Dct\u002Dxml"

const val NID_id_ct_xml: Int = 1060

val SN_id_smime_aa_receiptRequest: String get() = "id\u002Dsmime\u002Daa\u002DreceiptRequest"

const val NID_id_smime_aa_receiptRequest: Int = 212

val SN_id_smime_aa_securityLabel: String get() = "id\u002Dsmime\u002Daa\u002DsecurityLabel"

const val NID_id_smime_aa_securityLabel: Int = 213

val SN_id_smime_aa_mlExpandHistory: String get() = "id\u002Dsmime\u002Daa\u002DmlExpandHistory"

const val NID_id_smime_aa_mlExpandHistory: Int = 214

val SN_id_smime_aa_contentHint: String get() = "id\u002Dsmime\u002Daa\u002DcontentHint"

const val NID_id_smime_aa_contentHint: Int = 215

val SN_id_smime_aa_msgSigDigest: String get() = "id\u002Dsmime\u002Daa\u002DmsgSigDigest"

const val NID_id_smime_aa_msgSigDigest: Int = 216

val SN_id_smime_aa_encapContentType: String get() = "id\u002Dsmime\u002Daa\u002DencapContentType"

const val NID_id_smime_aa_encapContentType: Int = 217

val SN_id_smime_aa_contentIdentifier: String get() = "id\u002Dsmime\u002Daa\u002DcontentIdentifier"

const val NID_id_smime_aa_contentIdentifier: Int = 218

val SN_id_smime_aa_macValue: String get() = "id\u002Dsmime\u002Daa\u002DmacValue"

const val NID_id_smime_aa_macValue: Int = 219

val SN_id_smime_aa_equivalentLabels: String get() = "id\u002Dsmime\u002Daa\u002DequivalentLabels"

const val NID_id_smime_aa_equivalentLabels: Int = 220

val SN_id_smime_aa_contentReference: String get() = "id\u002Dsmime\u002Daa\u002DcontentReference"

const val NID_id_smime_aa_contentReference: Int = 221

val SN_id_smime_aa_encrypKeyPref: String get() = "id\u002Dsmime\u002Daa\u002DencrypKeyPref"

const val NID_id_smime_aa_encrypKeyPref: Int = 222

val SN_id_smime_aa_signingCertificate: String get() = "id\u002Dsmime\u002Daa\u002DsigningCertificate"

const val NID_id_smime_aa_signingCertificate: Int = 223

val SN_id_smime_aa_smimeEncryptCerts: String get() = "id\u002Dsmime\u002Daa\u002DsmimeEncryptCerts"

const val NID_id_smime_aa_smimeEncryptCerts: Int = 224

val SN_id_smime_aa_timeStampToken: String get() = "id\u002Dsmime\u002Daa\u002DtimeStampToken"

const val NID_id_smime_aa_timeStampToken: Int = 225

val SN_id_smime_aa_ets_sigPolicyId: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DsigPolicyId"

const val NID_id_smime_aa_ets_sigPolicyId: Int = 226

val SN_id_smime_aa_ets_commitmentType: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DcommitmentType"

const val NID_id_smime_aa_ets_commitmentType: Int = 227

val SN_id_smime_aa_ets_signerLocation: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DsignerLocation"

const val NID_id_smime_aa_ets_signerLocation: Int = 228

val SN_id_smime_aa_ets_signerAttr: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DsignerAttr"

const val NID_id_smime_aa_ets_signerAttr: Int = 229

val SN_id_smime_aa_ets_otherSigCert: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DotherSigCert"

const val NID_id_smime_aa_ets_otherSigCert: Int = 230

val SN_id_smime_aa_ets_contentTimestamp: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DcontentTimestamp"

const val NID_id_smime_aa_ets_contentTimestamp: Int = 231

val SN_id_smime_aa_ets_CertificateRefs: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DCertificateRefs"

const val NID_id_smime_aa_ets_CertificateRefs: Int = 232

val SN_id_smime_aa_ets_RevocationRefs: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DRevocationRefs"

const val NID_id_smime_aa_ets_RevocationRefs: Int = 233

val SN_id_smime_aa_ets_certValues: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DcertValues"

const val NID_id_smime_aa_ets_certValues: Int = 234

val SN_id_smime_aa_ets_revocationValues: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DrevocationValues"

const val NID_id_smime_aa_ets_revocationValues: Int = 235

val SN_id_smime_aa_ets_escTimeStamp: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DescTimeStamp"

const val NID_id_smime_aa_ets_escTimeStamp: Int = 236

val SN_id_smime_aa_ets_certCRLTimestamp: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DcertCRLTimestamp"

const val NID_id_smime_aa_ets_certCRLTimestamp: Int = 237

val SN_id_smime_aa_ets_archiveTimeStamp: String get() = "id\u002Dsmime\u002Daa\u002Dets\u002DarchiveTimeStamp"

const val NID_id_smime_aa_ets_archiveTimeStamp: Int = 238

val SN_id_smime_aa_signatureType: String get() = "id\u002Dsmime\u002Daa\u002DsignatureType"

const val NID_id_smime_aa_signatureType: Int = 239

val SN_id_smime_aa_dvcs_dvc: String get() = "id\u002Dsmime\u002Daa\u002Ddvcs\u002Ddvc"

const val NID_id_smime_aa_dvcs_dvc: Int = 240

val SN_id_smime_aa_signingCertificateV2: String get() = "id\u002Dsmime\u002Daa\u002DsigningCertificateV2"

const val NID_id_smime_aa_signingCertificateV2: Int = 1086

val SN_id_smime_alg_ESDHwith3DES: String get() = "id\u002Dsmime\u002Dalg\u002DESDHwith3DES"

const val NID_id_smime_alg_ESDHwith3DES: Int = 241

val SN_id_smime_alg_ESDHwithRC2: String get() = "id\u002Dsmime\u002Dalg\u002DESDHwithRC2"

const val NID_id_smime_alg_ESDHwithRC2: Int = 242

val SN_id_smime_alg_3DESwrap: String get() = "id\u002Dsmime\u002Dalg\u002D3DESwrap"

const val NID_id_smime_alg_3DESwrap: Int = 243

val SN_id_smime_alg_RC2wrap: String get() = "id\u002Dsmime\u002Dalg\u002DRC2wrap"

const val NID_id_smime_alg_RC2wrap: Int = 244

val SN_id_smime_alg_ESDH: String get() = "id\u002Dsmime\u002Dalg\u002DESDH"

const val NID_id_smime_alg_ESDH: Int = 245

val SN_id_smime_alg_CMS3DESwrap: String get() = "id\u002Dsmime\u002Dalg\u002DCMS3DESwrap"

const val NID_id_smime_alg_CMS3DESwrap: Int = 246

val SN_id_smime_alg_CMSRC2wrap: String get() = "id\u002Dsmime\u002Dalg\u002DCMSRC2wrap"

const val NID_id_smime_alg_CMSRC2wrap: Int = 247

val SN_id_alg_PWRI_KEK: String get() = "id\u002Dalg\u002DPWRI\u002DKEK"

const val NID_id_alg_PWRI_KEK: Int = 893

val SN_id_smime_cd_ldap: String get() = "id\u002Dsmime\u002Dcd\u002Dldap"

const val NID_id_smime_cd_ldap: Int = 248

val SN_id_smime_spq_ets_sqt_uri: String get() = "id\u002Dsmime\u002Dspq\u002Dets\u002Dsqt\u002Duri"

const val NID_id_smime_spq_ets_sqt_uri: Int = 249

val SN_id_smime_spq_ets_sqt_unotice: String get() = "id\u002Dsmime\u002Dspq\u002Dets\u002Dsqt\u002Dunotice"

const val NID_id_smime_spq_ets_sqt_unotice: Int = 250

val SN_id_smime_cti_ets_proofOfOrigin: String get() = "id\u002Dsmime\u002Dcti\u002Dets\u002DproofOfOrigin"

const val NID_id_smime_cti_ets_proofOfOrigin: Int = 251

val SN_id_smime_cti_ets_proofOfReceipt: String get() = "id\u002Dsmime\u002Dcti\u002Dets\u002DproofOfReceipt"

const val NID_id_smime_cti_ets_proofOfReceipt: Int = 252

val SN_id_smime_cti_ets_proofOfDelivery: String get() = "id\u002Dsmime\u002Dcti\u002Dets\u002DproofOfDelivery"

const val NID_id_smime_cti_ets_proofOfDelivery: Int = 253

val SN_id_smime_cti_ets_proofOfSender: String get() = "id\u002Dsmime\u002Dcti\u002Dets\u002DproofOfSender"

const val NID_id_smime_cti_ets_proofOfSender: Int = 254

val SN_id_smime_cti_ets_proofOfApproval: String get() = "id\u002Dsmime\u002Dcti\u002Dets\u002DproofOfApproval"

const val NID_id_smime_cti_ets_proofOfApproval: Int = 255

val SN_id_smime_cti_ets_proofOfCreation: String get() = "id\u002Dsmime\u002Dcti\u002Dets\u002DproofOfCreation"

const val NID_id_smime_cti_ets_proofOfCreation: Int = 256

val LN_friendlyName: String get() = "friendlyName"

const val NID_friendlyName: Int = 156

val LN_localKeyID: String get() = "localKeyID"

const val NID_localKeyID: Int = 157

val SN_ms_csp_name: String get() = "CSPName"

val LN_ms_csp_name: String get() = "Microsoft CSP Name"

const val NID_ms_csp_name: Int = 417

val SN_LocalKeySet: String get() = "LocalKeySet"

val LN_LocalKeySet: String get() = "Microsoft Local Key set"

const val NID_LocalKeySet: Int = 856

val LN_x509Certificate: String get() = "x509Certificate"

const val NID_x509Certificate: Int = 158

val LN_sdsiCertificate: String get() = "sdsiCertificate"

const val NID_sdsiCertificate: Int = 159

val LN_x509Crl: String get() = "x509Crl"

const val NID_x509Crl: Int = 160

val SN_pbe_WithSHA1And128BitRC4: String get() = "PBE\u002DSHA1\u002DRC4\u002D128"

val LN_pbe_WithSHA1And128BitRC4: String get() = "pbeWithSHA1And128BitRC4"

const val NID_pbe_WithSHA1And128BitRC4: Int = 144

val SN_pbe_WithSHA1And40BitRC4: String get() = "PBE\u002DSHA1\u002DRC4\u002D40"

val LN_pbe_WithSHA1And40BitRC4: String get() = "pbeWithSHA1And40BitRC4"

const val NID_pbe_WithSHA1And40BitRC4: Int = 145

val SN_pbe_WithSHA1And3_Key_TripleDES_CBC: String get() = "PBE\u002DSHA1\u002D3DES"

val LN_pbe_WithSHA1And3_Key_TripleDES_CBC: String get() = "pbeWithSHA1And3\u002DKeyTripleDES\u002DCBC"

const val NID_pbe_WithSHA1And3_Key_TripleDES_CBC: Int = 146

val SN_pbe_WithSHA1And2_Key_TripleDES_CBC: String get() = "PBE\u002DSHA1\u002D2DES"

val LN_pbe_WithSHA1And2_Key_TripleDES_CBC: String get() = "pbeWithSHA1And2\u002DKeyTripleDES\u002DCBC"

const val NID_pbe_WithSHA1And2_Key_TripleDES_CBC: Int = 147

val SN_pbe_WithSHA1And128BitRC2_CBC: String get() = "PBE\u002DSHA1\u002DRC2\u002D128"

val LN_pbe_WithSHA1And128BitRC2_CBC: String get() = "pbeWithSHA1And128BitRC2\u002DCBC"

const val NID_pbe_WithSHA1And128BitRC2_CBC: Int = 148

val SN_pbe_WithSHA1And40BitRC2_CBC: String get() = "PBE\u002DSHA1\u002DRC2\u002D40"

val LN_pbe_WithSHA1And40BitRC2_CBC: String get() = "pbeWithSHA1And40BitRC2\u002DCBC"

const val NID_pbe_WithSHA1And40BitRC2_CBC: Int = 149

val LN_keyBag: String get() = "keyBag"

const val NID_keyBag: Int = 150

val LN_pkcs8ShroudedKeyBag: String get() = "pkcs8ShroudedKeyBag"

const val NID_pkcs8ShroudedKeyBag: Int = 151

val LN_certBag: String get() = "certBag"

const val NID_certBag: Int = 152

val LN_crlBag: String get() = "crlBag"

const val NID_crlBag: Int = 153

val LN_secretBag: String get() = "secretBag"

const val NID_secretBag: Int = 154

val LN_safeContentsBag: String get() = "safeContentsBag"

const val NID_safeContentsBag: Int = 155

val SN_md2: String get() = "MD2"

val LN_md2: String get() = "md2"

const val NID_md2: Int = 3

val SN_md4: String get() = "MD4"

val LN_md4: String get() = "md4"

const val NID_md4: Int = 257

val SN_md5: String get() = "MD5"

val LN_md5: String get() = "md5"

const val NID_md5: Int = 4

val SN_md5_sha1: String get() = "MD5\u002DSHA1"

val LN_md5_sha1: String get() = "md5\u002Dsha1"

const val NID_md5_sha1: Int = 114

val LN_hmacWithMD5: String get() = "hmacWithMD5"

const val NID_hmacWithMD5: Int = 797

val LN_hmacWithSHA1: String get() = "hmacWithSHA1"

const val NID_hmacWithSHA1: Int = 163

val SN_sm2: String get() = "SM2"

val LN_sm2: String get() = "sm2"

const val NID_sm2: Int = 1172

val SN_sm3: String get() = "SM3"

val LN_sm3: String get() = "sm3"

const val NID_sm3: Int = 1143

val SN_sm3WithRSAEncryption: String get() = "RSA\u002DSM3"

val LN_sm3WithRSAEncryption: String get() = "sm3WithRSAEncryption"

const val NID_sm3WithRSAEncryption: Int = 1144

val LN_hmacWithSHA224: String get() = "hmacWithSHA224"

const val NID_hmacWithSHA224: Int = 798

val LN_hmacWithSHA256: String get() = "hmacWithSHA256"

const val NID_hmacWithSHA256: Int = 799

val LN_hmacWithSHA384: String get() = "hmacWithSHA384"

const val NID_hmacWithSHA384: Int = 800

val LN_hmacWithSHA512: String get() = "hmacWithSHA512"

const val NID_hmacWithSHA512: Int = 801

val LN_hmacWithSHA512_224: String get() = "hmacWithSHA512\u002D224"

const val NID_hmacWithSHA512_224: Int = 1193

val LN_hmacWithSHA512_256: String get() = "hmacWithSHA512\u002D256"

const val NID_hmacWithSHA512_256: Int = 1194

val SN_rc2_cbc: String get() = "RC2\u002DCBC"

val LN_rc2_cbc: String get() = "rc2\u002Dcbc"

const val NID_rc2_cbc: Int = 37

val SN_rc2_ecb: String get() = "RC2\u002DECB"

val LN_rc2_ecb: String get() = "rc2\u002Decb"

const val NID_rc2_ecb: Int = 38

val SN_rc2_cfb64: String get() = "RC2\u002DCFB"

val LN_rc2_cfb64: String get() = "rc2\u002Dcfb"

const val NID_rc2_cfb64: Int = 39

val SN_rc2_ofb64: String get() = "RC2\u002DOFB"

val LN_rc2_ofb64: String get() = "rc2\u002Dofb"

const val NID_rc2_ofb64: Int = 40

val SN_rc2_40_cbc: String get() = "RC2\u002D40\u002DCBC"

val LN_rc2_40_cbc: String get() = "rc2\u002D40\u002Dcbc"

const val NID_rc2_40_cbc: Int = 98

val SN_rc2_64_cbc: String get() = "RC2\u002D64\u002DCBC"

val LN_rc2_64_cbc: String get() = "rc2\u002D64\u002Dcbc"

const val NID_rc2_64_cbc: Int = 166

val SN_rc4: String get() = "RC4"

val LN_rc4: String get() = "rc4"

const val NID_rc4: Int = 5

val SN_rc4_40: String get() = "RC4\u002D40"

val LN_rc4_40: String get() = "rc4\u002D40"

const val NID_rc4_40: Int = 97

val SN_des_ede3_cbc: String get() = "DES\u002DEDE3\u002DCBC"

val LN_des_ede3_cbc: String get() = "des\u002Dede3\u002Dcbc"

const val NID_des_ede3_cbc: Int = 44

val SN_rc5_cbc: String get() = "RC5\u002DCBC"

val LN_rc5_cbc: String get() = "rc5\u002Dcbc"

const val NID_rc5_cbc: Int = 120

val SN_rc5_ecb: String get() = "RC5\u002DECB"

val LN_rc5_ecb: String get() = "rc5\u002Decb"

const val NID_rc5_ecb: Int = 121

val SN_rc5_cfb64: String get() = "RC5\u002DCFB"

val LN_rc5_cfb64: String get() = "rc5\u002Dcfb"

const val NID_rc5_cfb64: Int = 122

val SN_rc5_ofb64: String get() = "RC5\u002DOFB"

val LN_rc5_ofb64: String get() = "rc5\u002Dofb"

const val NID_rc5_ofb64: Int = 123

val SN_ms_ext_req: String get() = "msExtReq"

val LN_ms_ext_req: String get() = "Microsoft Extension Request"

const val NID_ms_ext_req: Int = 171

val SN_ms_code_ind: String get() = "msCodeInd"

val LN_ms_code_ind: String get() = "Microsoft Individual Code Signing"

const val NID_ms_code_ind: Int = 134

val SN_ms_code_com: String get() = "msCodeCom"

val LN_ms_code_com: String get() = "Microsoft Commercial Code Signing"

const val NID_ms_code_com: Int = 135

val SN_ms_ctl_sign: String get() = "msCTLSign"

val LN_ms_ctl_sign: String get() = "Microsoft Trust List Signing"

const val NID_ms_ctl_sign: Int = 136

val SN_ms_sgc: String get() = "msSGC"

val LN_ms_sgc: String get() = "Microsoft Server Gated Crypto"

const val NID_ms_sgc: Int = 137

val SN_ms_efs: String get() = "msEFS"

val LN_ms_efs: String get() = "Microsoft Encrypted File System"

const val NID_ms_efs: Int = 138

val SN_ms_smartcard_login: String get() = "msSmartcardLogin"

val LN_ms_smartcard_login: String get() = "Microsoft Smartcardlogin"

const val NID_ms_smartcard_login: Int = 648

val SN_ms_upn: String get() = "msUPN"

val LN_ms_upn: String get() = "Microsoft Universal Principal Name"

const val NID_ms_upn: Int = 649

val SN_idea_cbc: String get() = "IDEA\u002DCBC"

val LN_idea_cbc: String get() = "idea\u002Dcbc"

const val NID_idea_cbc: Int = 34

val SN_idea_ecb: String get() = "IDEA\u002DECB"

val LN_idea_ecb: String get() = "idea\u002Decb"

const val NID_idea_ecb: Int = 36

val SN_idea_cfb64: String get() = "IDEA\u002DCFB"

val LN_idea_cfb64: String get() = "idea\u002Dcfb"

const val NID_idea_cfb64: Int = 35

val SN_idea_ofb64: String get() = "IDEA\u002DOFB"

val LN_idea_ofb64: String get() = "idea\u002Dofb"

const val NID_idea_ofb64: Int = 46

val SN_bf_cbc: String get() = "BF\u002DCBC"

val LN_bf_cbc: String get() = "bf\u002Dcbc"

const val NID_bf_cbc: Int = 91

val SN_bf_ecb: String get() = "BF\u002DECB"

val LN_bf_ecb: String get() = "bf\u002Decb"

const val NID_bf_ecb: Int = 92

val SN_bf_cfb64: String get() = "BF\u002DCFB"

val LN_bf_cfb64: String get() = "bf\u002Dcfb"

const val NID_bf_cfb64: Int = 93

val SN_bf_ofb64: String get() = "BF\u002DOFB"

val LN_bf_ofb64: String get() = "bf\u002Dofb"

const val NID_bf_ofb64: Int = 94

val SN_id_pkix: String get() = "PKIX"

const val NID_id_pkix: Int = 127

val SN_id_pkix_mod: String get() = "id\u002Dpkix\u002Dmod"

const val NID_id_pkix_mod: Int = 258

val SN_id_pe: String get() = "id\u002Dpe"

const val NID_id_pe: Int = 175

val SN_id_qt: String get() = "id\u002Dqt"

const val NID_id_qt: Int = 259

val SN_id_kp: String get() = "id\u002Dkp"

const val NID_id_kp: Int = 128

val SN_id_it: String get() = "id\u002Dit"

const val NID_id_it: Int = 260

val SN_id_pkip: String get() = "id\u002Dpkip"

const val NID_id_pkip: Int = 261

val SN_id_alg: String get() = "id\u002Dalg"

const val NID_id_alg: Int = 262

val SN_id_cmc: String get() = "id\u002Dcmc"

const val NID_id_cmc: Int = 263

val SN_id_on: String get() = "id\u002Don"

const val NID_id_on: Int = 264

val SN_id_pda: String get() = "id\u002Dpda"

const val NID_id_pda: Int = 265

val SN_id_aca: String get() = "id\u002Daca"

const val NID_id_aca: Int = 266

val SN_id_qcs: String get() = "id\u002Dqcs"

const val NID_id_qcs: Int = 267

val SN_id_cct: String get() = "id\u002Dcct"

const val NID_id_cct: Int = 268

val SN_id_ppl: String get() = "id\u002Dppl"

const val NID_id_ppl: Int = 662

val SN_id_ad: String get() = "id\u002Dad"

const val NID_id_ad: Int = 176

val SN_id_pkix1_explicit_88: String get() = "id\u002Dpkix1\u002Dexplicit\u002D88"

const val NID_id_pkix1_explicit_88: Int = 269

val SN_id_pkix1_implicit_88: String get() = "id\u002Dpkix1\u002Dimplicit\u002D88"

const val NID_id_pkix1_implicit_88: Int = 270

val SN_id_pkix1_explicit_93: String get() = "id\u002Dpkix1\u002Dexplicit\u002D93"

const val NID_id_pkix1_explicit_93: Int = 271

val SN_id_pkix1_implicit_93: String get() = "id\u002Dpkix1\u002Dimplicit\u002D93"

const val NID_id_pkix1_implicit_93: Int = 272

val SN_id_mod_crmf: String get() = "id\u002Dmod\u002Dcrmf"

const val NID_id_mod_crmf: Int = 273

val SN_id_mod_cmc: String get() = "id\u002Dmod\u002Dcmc"

const val NID_id_mod_cmc: Int = 274

val SN_id_mod_kea_profile_88: String get() = "id\u002Dmod\u002Dkea\u002Dprofile\u002D88"

const val NID_id_mod_kea_profile_88: Int = 275

val SN_id_mod_kea_profile_93: String get() = "id\u002Dmod\u002Dkea\u002Dprofile\u002D93"

const val NID_id_mod_kea_profile_93: Int = 276

val SN_id_mod_cmp: String get() = "id\u002Dmod\u002Dcmp"

const val NID_id_mod_cmp: Int = 277

val SN_id_mod_qualified_cert_88: String get() = "id\u002Dmod\u002Dqualified\u002Dcert\u002D88"

const val NID_id_mod_qualified_cert_88: Int = 278

val SN_id_mod_qualified_cert_93: String get() = "id\u002Dmod\u002Dqualified\u002Dcert\u002D93"

const val NID_id_mod_qualified_cert_93: Int = 279

val SN_id_mod_attribute_cert: String get() = "id\u002Dmod\u002Dattribute\u002Dcert"

const val NID_id_mod_attribute_cert: Int = 280

val SN_id_mod_timestamp_protocol: String get() = "id\u002Dmod\u002Dtimestamp\u002Dprotocol"

const val NID_id_mod_timestamp_protocol: Int = 281

val SN_id_mod_ocsp: String get() = "id\u002Dmod\u002Docsp"

const val NID_id_mod_ocsp: Int = 282

val SN_id_mod_dvcs: String get() = "id\u002Dmod\u002Ddvcs"

const val NID_id_mod_dvcs: Int = 283

val SN_id_mod_cmp2000: String get() = "id\u002Dmod\u002Dcmp2000"

const val NID_id_mod_cmp2000: Int = 284

val SN_info_access: String get() = "authorityInfoAccess"

val LN_info_access: String get() = "Authority Information Access"

const val NID_info_access: Int = 177

val SN_biometricInfo: String get() = "biometricInfo"

val LN_biometricInfo: String get() = "Biometric Info"

const val NID_biometricInfo: Int = 285

val SN_qcStatements: String get() = "qcStatements"

const val NID_qcStatements: Int = 286

val SN_ac_auditEntity: String get() = "ac\u002DauditEntity"

const val NID_ac_auditEntity: Int = 287

val SN_ac_targeting: String get() = "ac\u002Dtargeting"

const val NID_ac_targeting: Int = 288

val SN_aaControls: String get() = "aaControls"

const val NID_aaControls: Int = 289

val SN_sbgp_ipAddrBlock: String get() = "sbgp\u002DipAddrBlock"

const val NID_sbgp_ipAddrBlock: Int = 290

val SN_sbgp_autonomousSysNum: String get() = "sbgp\u002DautonomousSysNum"

const val NID_sbgp_autonomousSysNum: Int = 291

val SN_sbgp_routerIdentifier: String get() = "sbgp\u002DrouterIdentifier"

const val NID_sbgp_routerIdentifier: Int = 292

val SN_ac_proxying: String get() = "ac\u002Dproxying"

const val NID_ac_proxying: Int = 397

val SN_sinfo_access: String get() = "subjectInfoAccess"

val LN_sinfo_access: String get() = "Subject Information Access"

const val NID_sinfo_access: Int = 398

val SN_proxyCertInfo: String get() = "proxyCertInfo"

val LN_proxyCertInfo: String get() = "Proxy Certificate Information"

const val NID_proxyCertInfo: Int = 663

val SN_tlsfeature: String get() = "tlsfeature"

val LN_tlsfeature: String get() = "TLS Feature"

const val NID_tlsfeature: Int = 1020

val SN_id_qt_cps: String get() = "id\u002Dqt\u002Dcps"

val LN_id_qt_cps: String get() = "Policy Qualifier CPS"

const val NID_id_qt_cps: Int = 164

val SN_id_qt_unotice: String get() = "id\u002Dqt\u002Dunotice"

val LN_id_qt_unotice: String get() = "Policy Qualifier User Notice"

const val NID_id_qt_unotice: Int = 165

val SN_textNotice: String get() = "textNotice"

const val NID_textNotice: Int = 293

val SN_server_auth: String get() = "serverAuth"

val LN_server_auth: String get() = "TLS Web Server Authentication"

const val NID_server_auth: Int = 129

val SN_client_auth: String get() = "clientAuth"

val LN_client_auth: String get() = "TLS Web Client Authentication"

const val NID_client_auth: Int = 130

val SN_code_sign: String get() = "codeSigning"

val LN_code_sign: String get() = "Code Signing"

const val NID_code_sign: Int = 131

val SN_email_protect: String get() = "emailProtection"

val LN_email_protect: String get() = "E\u002Dmail Protection"

const val NID_email_protect: Int = 132

val SN_ipsecEndSystem: String get() = "ipsecEndSystem"

val LN_ipsecEndSystem: String get() = "IPSec End System"

const val NID_ipsecEndSystem: Int = 294

val SN_ipsecTunnel: String get() = "ipsecTunnel"

val LN_ipsecTunnel: String get() = "IPSec Tunnel"

const val NID_ipsecTunnel: Int = 295

val SN_ipsecUser: String get() = "ipsecUser"

val LN_ipsecUser: String get() = "IPSec User"

const val NID_ipsecUser: Int = 296

val SN_time_stamp: String get() = "timeStamping"

val LN_time_stamp: String get() = "Time Stamping"

const val NID_time_stamp: Int = 133

val SN_OCSP_sign: String get() = "OCSPSigning"

val LN_OCSP_sign: String get() = "OCSP Signing"

const val NID_OCSP_sign: Int = 180

val SN_dvcs: String get() = "DVCS"

val LN_dvcs: String get() = "dvcs"

const val NID_dvcs: Int = 297

val SN_ipsec_IKE: String get() = "ipsecIKE"

val LN_ipsec_IKE: String get() = "ipsec Internet Key Exchange"

const val NID_ipsec_IKE: Int = 1022

val SN_capwapAC: String get() = "capwapAC"

val LN_capwapAC: String get() = "Ctrl\u002Fprovision WAP Access"

const val NID_capwapAC: Int = 1023

val SN_capwapWTP: String get() = "capwapWTP"

val LN_capwapWTP: String get() = "Ctrl\u002FProvision WAP Termination"

const val NID_capwapWTP: Int = 1024

val SN_sshClient: String get() = "secureShellClient"

val LN_sshClient: String get() = "SSH Client"

const val NID_sshClient: Int = 1025

val SN_sshServer: String get() = "secureShellServer"

val LN_sshServer: String get() = "SSH Server"

const val NID_sshServer: Int = 1026

val SN_sendRouter: String get() = "sendRouter"

val LN_sendRouter: String get() = "Send Router"

const val NID_sendRouter: Int = 1027

val SN_sendProxiedRouter: String get() = "sendProxiedRouter"

val LN_sendProxiedRouter: String get() = "Send Proxied Router"

const val NID_sendProxiedRouter: Int = 1028

val SN_sendOwner: String get() = "sendOwner"

val LN_sendOwner: String get() = "Send Owner"

const val NID_sendOwner: Int = 1029

val SN_sendProxiedOwner: String get() = "sendProxiedOwner"

val LN_sendProxiedOwner: String get() = "Send Proxied Owner"

const val NID_sendProxiedOwner: Int = 1030

val SN_cmcCA: String get() = "cmcCA"

val LN_cmcCA: String get() = "CMC Certificate Authority"

const val NID_cmcCA: Int = 1131

val SN_cmcRA: String get() = "cmcRA"

val LN_cmcRA: String get() = "CMC Registration Authority"

const val NID_cmcRA: Int = 1132

val SN_id_it_caProtEncCert: String get() = "id\u002Dit\u002DcaProtEncCert"

const val NID_id_it_caProtEncCert: Int = 298

val SN_id_it_signKeyPairTypes: String get() = "id\u002Dit\u002DsignKeyPairTypes"

const val NID_id_it_signKeyPairTypes: Int = 299

val SN_id_it_encKeyPairTypes: String get() = "id\u002Dit\u002DencKeyPairTypes"

const val NID_id_it_encKeyPairTypes: Int = 300

val SN_id_it_preferredSymmAlg: String get() = "id\u002Dit\u002DpreferredSymmAlg"

const val NID_id_it_preferredSymmAlg: Int = 301

val SN_id_it_caKeyUpdateInfo: String get() = "id\u002Dit\u002DcaKeyUpdateInfo"

const val NID_id_it_caKeyUpdateInfo: Int = 302

val SN_id_it_currentCRL: String get() = "id\u002Dit\u002DcurrentCRL"

const val NID_id_it_currentCRL: Int = 303

val SN_id_it_unsupportedOIDs: String get() = "id\u002Dit\u002DunsupportedOIDs"

const val NID_id_it_unsupportedOIDs: Int = 304

val SN_id_it_subscriptionRequest: String get() = "id\u002Dit\u002DsubscriptionRequest"

const val NID_id_it_subscriptionRequest: Int = 305

val SN_id_it_subscriptionResponse: String get() = "id\u002Dit\u002DsubscriptionResponse"

const val NID_id_it_subscriptionResponse: Int = 306

val SN_id_it_keyPairParamReq: String get() = "id\u002Dit\u002DkeyPairParamReq"

const val NID_id_it_keyPairParamReq: Int = 307

val SN_id_it_keyPairParamRep: String get() = "id\u002Dit\u002DkeyPairParamRep"

const val NID_id_it_keyPairParamRep: Int = 308

val SN_id_it_revPassphrase: String get() = "id\u002Dit\u002DrevPassphrase"

const val NID_id_it_revPassphrase: Int = 309

val SN_id_it_implicitConfirm: String get() = "id\u002Dit\u002DimplicitConfirm"

const val NID_id_it_implicitConfirm: Int = 310

val SN_id_it_confirmWaitTime: String get() = "id\u002Dit\u002DconfirmWaitTime"

const val NID_id_it_confirmWaitTime: Int = 311

val SN_id_it_origPKIMessage: String get() = "id\u002Dit\u002DorigPKIMessage"

const val NID_id_it_origPKIMessage: Int = 312

val SN_id_it_suppLangTags: String get() = "id\u002Dit\u002DsuppLangTags"

const val NID_id_it_suppLangTags: Int = 784

val SN_id_regCtrl: String get() = "id\u002DregCtrl"

const val NID_id_regCtrl: Int = 313

val SN_id_regInfo: String get() = "id\u002DregInfo"

const val NID_id_regInfo: Int = 314

val SN_id_regCtrl_regToken: String get() = "id\u002DregCtrl\u002DregToken"

const val NID_id_regCtrl_regToken: Int = 315

val SN_id_regCtrl_authenticator: String get() = "id\u002DregCtrl\u002Dauthenticator"

const val NID_id_regCtrl_authenticator: Int = 316

val SN_id_regCtrl_pkiPublicationInfo: String get() = "id\u002DregCtrl\u002DpkiPublicationInfo"

const val NID_id_regCtrl_pkiPublicationInfo: Int = 317

val SN_id_regCtrl_pkiArchiveOptions: String get() = "id\u002DregCtrl\u002DpkiArchiveOptions"

const val NID_id_regCtrl_pkiArchiveOptions: Int = 318

val SN_id_regCtrl_oldCertID: String get() = "id\u002DregCtrl\u002DoldCertID"

const val NID_id_regCtrl_oldCertID: Int = 319

val SN_id_regCtrl_protocolEncrKey: String get() = "id\u002DregCtrl\u002DprotocolEncrKey"

const val NID_id_regCtrl_protocolEncrKey: Int = 320

val SN_id_regInfo_utf8Pairs: String get() = "id\u002DregInfo\u002Dutf8Pairs"

const val NID_id_regInfo_utf8Pairs: Int = 321

val SN_id_regInfo_certReq: String get() = "id\u002DregInfo\u002DcertReq"

const val NID_id_regInfo_certReq: Int = 322

val SN_id_alg_des40: String get() = "id\u002Dalg\u002Ddes40"

const val NID_id_alg_des40: Int = 323

val SN_id_alg_noSignature: String get() = "id\u002Dalg\u002DnoSignature"

const val NID_id_alg_noSignature: Int = 324

val SN_id_alg_dh_sig_hmac_sha1: String get() = "id\u002Dalg\u002Ddh\u002Dsig\u002Dhmac\u002Dsha1"

const val NID_id_alg_dh_sig_hmac_sha1: Int = 325

val SN_id_alg_dh_pop: String get() = "id\u002Dalg\u002Ddh\u002Dpop"

const val NID_id_alg_dh_pop: Int = 326

val SN_id_cmc_statusInfo: String get() = "id\u002Dcmc\u002DstatusInfo"

const val NID_id_cmc_statusInfo: Int = 327

val SN_id_cmc_identification: String get() = "id\u002Dcmc\u002Didentification"

const val NID_id_cmc_identification: Int = 328

val SN_id_cmc_identityProof: String get() = "id\u002Dcmc\u002DidentityProof"

const val NID_id_cmc_identityProof: Int = 329

val SN_id_cmc_dataReturn: String get() = "id\u002Dcmc\u002DdataReturn"

const val NID_id_cmc_dataReturn: Int = 330

val SN_id_cmc_transactionId: String get() = "id\u002Dcmc\u002DtransactionId"

const val NID_id_cmc_transactionId: Int = 331

val SN_id_cmc_senderNonce: String get() = "id\u002Dcmc\u002DsenderNonce"

const val NID_id_cmc_senderNonce: Int = 332

val SN_id_cmc_recipientNonce: String get() = "id\u002Dcmc\u002DrecipientNonce"

const val NID_id_cmc_recipientNonce: Int = 333

val SN_id_cmc_addExtensions: String get() = "id\u002Dcmc\u002DaddExtensions"

const val NID_id_cmc_addExtensions: Int = 334

val SN_id_cmc_encryptedPOP: String get() = "id\u002Dcmc\u002DencryptedPOP"

const val NID_id_cmc_encryptedPOP: Int = 335

val SN_id_cmc_decryptedPOP: String get() = "id\u002Dcmc\u002DdecryptedPOP"

const val NID_id_cmc_decryptedPOP: Int = 336

val SN_id_cmc_lraPOPWitness: String get() = "id\u002Dcmc\u002DlraPOPWitness"

const val NID_id_cmc_lraPOPWitness: Int = 337

val SN_id_cmc_getCert: String get() = "id\u002Dcmc\u002DgetCert"

const val NID_id_cmc_getCert: Int = 338

val SN_id_cmc_getCRL: String get() = "id\u002Dcmc\u002DgetCRL"

const val NID_id_cmc_getCRL: Int = 339

val SN_id_cmc_revokeRequest: String get() = "id\u002Dcmc\u002DrevokeRequest"

const val NID_id_cmc_revokeRequest: Int = 340

val SN_id_cmc_regInfo: String get() = "id\u002Dcmc\u002DregInfo"

const val NID_id_cmc_regInfo: Int = 341

val SN_id_cmc_responseInfo: String get() = "id\u002Dcmc\u002DresponseInfo"

const val NID_id_cmc_responseInfo: Int = 342

val SN_id_cmc_queryPending: String get() = "id\u002Dcmc\u002DqueryPending"

const val NID_id_cmc_queryPending: Int = 343

val SN_id_cmc_popLinkRandom: String get() = "id\u002Dcmc\u002DpopLinkRandom"

const val NID_id_cmc_popLinkRandom: Int = 344

val SN_id_cmc_popLinkWitness: String get() = "id\u002Dcmc\u002DpopLinkWitness"

const val NID_id_cmc_popLinkWitness: Int = 345

val SN_id_cmc_confirmCertAcceptance: String get() = "id\u002Dcmc\u002DconfirmCertAcceptance"

const val NID_id_cmc_confirmCertAcceptance: Int = 346

val SN_id_on_personalData: String get() = "id\u002Don\u002DpersonalData"

const val NID_id_on_personalData: Int = 347

val SN_id_on_permanentIdentifier: String get() = "id\u002Don\u002DpermanentIdentifier"

val LN_id_on_permanentIdentifier: String get() = "Permanent Identifier"

const val NID_id_on_permanentIdentifier: Int = 858

val SN_id_pda_dateOfBirth: String get() = "id\u002Dpda\u002DdateOfBirth"

const val NID_id_pda_dateOfBirth: Int = 348

val SN_id_pda_placeOfBirth: String get() = "id\u002Dpda\u002DplaceOfBirth"

const val NID_id_pda_placeOfBirth: Int = 349

val SN_id_pda_gender: String get() = "id\u002Dpda\u002Dgender"

const val NID_id_pda_gender: Int = 351

val SN_id_pda_countryOfCitizenship: String get() = "id\u002Dpda\u002DcountryOfCitizenship"

const val NID_id_pda_countryOfCitizenship: Int = 352

val SN_id_pda_countryOfResidence: String get() = "id\u002Dpda\u002DcountryOfResidence"

const val NID_id_pda_countryOfResidence: Int = 353

val SN_id_aca_authenticationInfo: String get() = "id\u002Daca\u002DauthenticationInfo"

const val NID_id_aca_authenticationInfo: Int = 354

val SN_id_aca_accessIdentity: String get() = "id\u002Daca\u002DaccessIdentity"

const val NID_id_aca_accessIdentity: Int = 355

val SN_id_aca_chargingIdentity: String get() = "id\u002Daca\u002DchargingIdentity"

const val NID_id_aca_chargingIdentity: Int = 356

val SN_id_aca_group: String get() = "id\u002Daca\u002Dgroup"

const val NID_id_aca_group: Int = 357

val SN_id_aca_role: String get() = "id\u002Daca\u002Drole"

const val NID_id_aca_role: Int = 358

val SN_id_aca_encAttrs: String get() = "id\u002Daca\u002DencAttrs"

const val NID_id_aca_encAttrs: Int = 399

val SN_id_qcs_pkixQCSyntax_v1: String get() = "id\u002Dqcs\u002DpkixQCSyntax\u002Dv1"

const val NID_id_qcs_pkixQCSyntax_v1: Int = 359

val SN_id_cct_crs: String get() = "id\u002Dcct\u002Dcrs"

const val NID_id_cct_crs: Int = 360

val SN_id_cct_PKIData: String get() = "id\u002Dcct\u002DPKIData"

const val NID_id_cct_PKIData: Int = 361

val SN_id_cct_PKIResponse: String get() = "id\u002Dcct\u002DPKIResponse"

const val NID_id_cct_PKIResponse: Int = 362

val SN_id_ppl_anyLanguage: String get() = "id\u002Dppl\u002DanyLanguage"

val LN_id_ppl_anyLanguage: String get() = "Any language"

const val NID_id_ppl_anyLanguage: Int = 664

val SN_id_ppl_inheritAll: String get() = "id\u002Dppl\u002DinheritAll"

val LN_id_ppl_inheritAll: String get() = "Inherit all"

const val NID_id_ppl_inheritAll: Int = 665

val SN_Independent: String get() = "id\u002Dppl\u002Dindependent"

val LN_Independent: String get() = "Independent"

const val NID_Independent: Int = 667

val SN_ad_OCSP: String get() = "OCSP"

val LN_ad_OCSP: String get() = "OCSP"

const val NID_ad_OCSP: Int = 178

val SN_ad_ca_issuers: String get() = "caIssuers"

val LN_ad_ca_issuers: String get() = "CA Issuers"

const val NID_ad_ca_issuers: Int = 179

val SN_ad_timeStamping: String get() = "ad_timestamping"

val LN_ad_timeStamping: String get() = "AD Time Stamping"

const val NID_ad_timeStamping: Int = 363

val SN_ad_dvcs: String get() = "AD_DVCS"

val LN_ad_dvcs: String get() = "ad dvcs"

const val NID_ad_dvcs: Int = 364

val SN_caRepository: String get() = "caRepository"

val LN_caRepository: String get() = "CA Repository"

const val NID_caRepository: Int = 785

val SN_id_pkix_OCSP_basic: String get() = "basicOCSPResponse"

val LN_id_pkix_OCSP_basic: String get() = "Basic OCSP Response"

const val NID_id_pkix_OCSP_basic: Int = 365

val SN_id_pkix_OCSP_Nonce: String get() = "Nonce"

val LN_id_pkix_OCSP_Nonce: String get() = "OCSP Nonce"

const val NID_id_pkix_OCSP_Nonce: Int = 366

val SN_id_pkix_OCSP_CrlID: String get() = "CrlID"

val LN_id_pkix_OCSP_CrlID: String get() = "OCSP CRL ID"

const val NID_id_pkix_OCSP_CrlID: Int = 367

val SN_id_pkix_OCSP_acceptableResponses: String get() = "acceptableResponses"

val LN_id_pkix_OCSP_acceptableResponses: String get() = "Acceptable OCSP Responses"

const val NID_id_pkix_OCSP_acceptableResponses: Int = 368

val SN_id_pkix_OCSP_noCheck: String get() = "noCheck"

val LN_id_pkix_OCSP_noCheck: String get() = "OCSP No Check"

const val NID_id_pkix_OCSP_noCheck: Int = 369

val SN_id_pkix_OCSP_archiveCutoff: String get() = "archiveCutoff"

val LN_id_pkix_OCSP_archiveCutoff: String get() = "OCSP Archive Cutoff"

const val NID_id_pkix_OCSP_archiveCutoff: Int = 370

val SN_id_pkix_OCSP_serviceLocator: String get() = "serviceLocator"

val LN_id_pkix_OCSP_serviceLocator: String get() = "OCSP Service Locator"

const val NID_id_pkix_OCSP_serviceLocator: Int = 371

val SN_id_pkix_OCSP_extendedStatus: String get() = "extendedStatus"

val LN_id_pkix_OCSP_extendedStatus: String get() = "Extended OCSP Status"

const val NID_id_pkix_OCSP_extendedStatus: Int = 372

val SN_id_pkix_OCSP_valid: String get() = "valid"

const val NID_id_pkix_OCSP_valid: Int = 373

val SN_id_pkix_OCSP_path: String get() = "path"

const val NID_id_pkix_OCSP_path: Int = 374

val SN_id_pkix_OCSP_trustRoot: String get() = "trustRoot"

val LN_id_pkix_OCSP_trustRoot: String get() = "Trust Root"

const val NID_id_pkix_OCSP_trustRoot: Int = 375

val SN_algorithm: String get() = "algorithm"

val LN_algorithm: String get() = "algorithm"

const val NID_algorithm: Int = 376

val SN_md5WithRSA: String get() = "RSA\u002DNP\u002DMD5"

val LN_md5WithRSA: String get() = "md5WithRSA"

const val NID_md5WithRSA: Int = 104

val SN_des_ecb: String get() = "DES\u002DECB"

val LN_des_ecb: String get() = "des\u002Decb"

const val NID_des_ecb: Int = 29

val SN_des_cbc: String get() = "DES\u002DCBC"

val LN_des_cbc: String get() = "des\u002Dcbc"

const val NID_des_cbc: Int = 31

val SN_des_ofb64: String get() = "DES\u002DOFB"

val LN_des_ofb64: String get() = "des\u002Dofb"

const val NID_des_ofb64: Int = 45

val SN_des_cfb64: String get() = "DES\u002DCFB"

val LN_des_cfb64: String get() = "des\u002Dcfb"

const val NID_des_cfb64: Int = 30

val SN_rsaSignature: String get() = "rsaSignature"

const val NID_rsaSignature: Int = 377

val SN_dsa_2: String get() = "DSA\u002Dold"

val LN_dsa_2: String get() = "dsaEncryption\u002Dold"

const val NID_dsa_2: Int = 67

val SN_dsaWithSHA: String get() = "DSA\u002DSHA"

val LN_dsaWithSHA: String get() = "dsaWithSHA"

const val NID_dsaWithSHA: Int = 66

val SN_shaWithRSAEncryption: String get() = "RSA\u002DSHA"

val LN_shaWithRSAEncryption: String get() = "shaWithRSAEncryption"

const val NID_shaWithRSAEncryption: Int = 42

val SN_des_ede_ecb: String get() = "DES\u002DEDE"

val LN_des_ede_ecb: String get() = "des\u002Dede"

const val NID_des_ede_ecb: Int = 32

val SN_des_ede3_ecb: String get() = "DES\u002DEDE3"

val LN_des_ede3_ecb: String get() = "des\u002Dede3"

const val NID_des_ede3_ecb: Int = 33

val SN_des_ede_cbc: String get() = "DES\u002DEDE\u002DCBC"

val LN_des_ede_cbc: String get() = "des\u002Dede\u002Dcbc"

const val NID_des_ede_cbc: Int = 43

val SN_des_ede_cfb64: String get() = "DES\u002DEDE\u002DCFB"

val LN_des_ede_cfb64: String get() = "des\u002Dede\u002Dcfb"

const val NID_des_ede_cfb64: Int = 60

val SN_des_ede3_cfb64: String get() = "DES\u002DEDE3\u002DCFB"

val LN_des_ede3_cfb64: String get() = "des\u002Dede3\u002Dcfb"

const val NID_des_ede3_cfb64: Int = 61

val SN_des_ede_ofb64: String get() = "DES\u002DEDE\u002DOFB"

val LN_des_ede_ofb64: String get() = "des\u002Dede\u002Dofb"

const val NID_des_ede_ofb64: Int = 62

val SN_des_ede3_ofb64: String get() = "DES\u002DEDE3\u002DOFB"

val LN_des_ede3_ofb64: String get() = "des\u002Dede3\u002Dofb"

const val NID_des_ede3_ofb64: Int = 63

val SN_desx_cbc: String get() = "DESX\u002DCBC"

val LN_desx_cbc: String get() = "desx\u002Dcbc"

const val NID_desx_cbc: Int = 80

val SN_sha: String get() = "SHA"

val LN_sha: String get() = "sha"

const val NID_sha: Int = 41

val SN_sha1: String get() = "SHA1"

val LN_sha1: String get() = "sha1"

const val NID_sha1: Int = 64

val SN_dsaWithSHA1_2: String get() = "DSA\u002DSHA1\u002Dold"

val LN_dsaWithSHA1_2: String get() = "dsaWithSHA1\u002Dold"

const val NID_dsaWithSHA1_2: Int = 70

val SN_sha1WithRSA: String get() = "RSA\u002DSHA1\u002D2"

val LN_sha1WithRSA: String get() = "sha1WithRSA"

const val NID_sha1WithRSA: Int = 115

val SN_ripemd160: String get() = "RIPEMD160"

val LN_ripemd160: String get() = "ripemd160"

const val NID_ripemd160: Int = 117

val SN_ripemd160WithRSA: String get() = "RSA\u002DRIPEMD160"

val LN_ripemd160WithRSA: String get() = "ripemd160WithRSA"

const val NID_ripemd160WithRSA: Int = 119

val SN_blake2b512: String get() = "BLAKE2b512"

val LN_blake2b512: String get() = "blake2b512"

const val NID_blake2b512: Int = 1056

val SN_blake2s256: String get() = "BLAKE2s256"

val LN_blake2s256: String get() = "blake2s256"

const val NID_blake2s256: Int = 1057

val SN_sxnet: String get() = "SXNetID"

val LN_sxnet: String get() = "Strong Extranet ID"

const val NID_sxnet: Int = 143

val SN_X500: String get() = "X500"

val LN_X500: String get() = "directory services (X.500)"

const val NID_X500: Int = 11

val SN_X509: String get() = "X509"

const val NID_X509: Int = 12

val SN_commonName: String get() = "CN"

val LN_commonName: String get() = "commonName"

const val NID_commonName: Int = 13

val SN_surname: String get() = "SN"

val LN_surname: String get() = "surname"

const val NID_surname: Int = 100

val LN_serialNumber: String get() = "serialNumber"

const val NID_serialNumber: Int = 105

val SN_countryName: String get() = "C"

val LN_countryName: String get() = "countryName"

const val NID_countryName: Int = 14

val SN_localityName: String get() = "L"

val LN_localityName: String get() = "localityName"

const val NID_localityName: Int = 15

val SN_stateOrProvinceName: String get() = "ST"

val LN_stateOrProvinceName: String get() = "stateOrProvinceName"

const val NID_stateOrProvinceName: Int = 16

val SN_streetAddress: String get() = "street"

val LN_streetAddress: String get() = "streetAddress"

const val NID_streetAddress: Int = 660

val SN_organizationName: String get() = "O"

val LN_organizationName: String get() = "organizationName"

const val NID_organizationName: Int = 17

val SN_organizationalUnitName: String get() = "OU"

val LN_organizationalUnitName: String get() = "organizationalUnitName"

const val NID_organizationalUnitName: Int = 18

val SN_title: String get() = "title"

val LN_title: String get() = "title"

const val NID_title: Int = 106

val LN_description: String get() = "description"

const val NID_description: Int = 107

val LN_searchGuide: String get() = "searchGuide"

const val NID_searchGuide: Int = 859

val LN_businessCategory: String get() = "businessCategory"

const val NID_businessCategory: Int = 860

val LN_postalAddress: String get() = "postalAddress"

const val NID_postalAddress: Int = 861

val LN_postalCode: String get() = "postalCode"

const val NID_postalCode: Int = 661

val LN_postOfficeBox: String get() = "postOfficeBox"

const val NID_postOfficeBox: Int = 862

val LN_physicalDeliveryOfficeName: String get() = "physicalDeliveryOfficeName"

const val NID_physicalDeliveryOfficeName: Int = 863

val LN_telephoneNumber: String get() = "telephoneNumber"

const val NID_telephoneNumber: Int = 864

val LN_telexNumber: String get() = "telexNumber"

const val NID_telexNumber: Int = 865

val LN_teletexTerminalIdentifier: String get() = "teletexTerminalIdentifier"

const val NID_teletexTerminalIdentifier: Int = 866

val LN_facsimileTelephoneNumber: String get() = "facsimileTelephoneNumber"

const val NID_facsimileTelephoneNumber: Int = 867

val LN_x121Address: String get() = "x121Address"

const val NID_x121Address: Int = 868

val LN_internationaliSDNNumber: String get() = "internationaliSDNNumber"

const val NID_internationaliSDNNumber: Int = 869

val LN_registeredAddress: String get() = "registeredAddress"

const val NID_registeredAddress: Int = 870

val LN_destinationIndicator: String get() = "destinationIndicator"

const val NID_destinationIndicator: Int = 871

val LN_preferredDeliveryMethod: String get() = "preferredDeliveryMethod"

const val NID_preferredDeliveryMethod: Int = 872

val LN_presentationAddress: String get() = "presentationAddress"

const val NID_presentationAddress: Int = 873

val LN_supportedApplicationContext: String get() = "supportedApplicationContext"

const val NID_supportedApplicationContext: Int = 874

val SN_member: String get() = "member"

const val NID_member: Int = 875

val SN_owner: String get() = "owner"

const val NID_owner: Int = 876

val LN_roleOccupant: String get() = "roleOccupant"

const val NID_roleOccupant: Int = 877

val SN_seeAlso: String get() = "seeAlso"

const val NID_seeAlso: Int = 878

val LN_userPassword: String get() = "userPassword"

const val NID_userPassword: Int = 879

val LN_userCertificate: String get() = "userCertificate"

const val NID_userCertificate: Int = 880

val LN_cACertificate: String get() = "cACertificate"

const val NID_cACertificate: Int = 881

val LN_authorityRevocationList: String get() = "authorityRevocationList"

const val NID_authorityRevocationList: Int = 882

val LN_certificateRevocationList: String get() = "certificateRevocationList"

const val NID_certificateRevocationList: Int = 883

val LN_crossCertificatePair: String get() = "crossCertificatePair"

const val NID_crossCertificatePair: Int = 884

val SN_name: String get() = "name"

val LN_name: String get() = "name"

const val NID_name: Int = 173

val SN_givenName: String get() = "GN"

val LN_givenName: String get() = "givenName"

const val NID_givenName: Int = 99

val SN_initials: String get() = "initials"

val LN_initials: String get() = "initials"

const val NID_initials: Int = 101

val LN_generationQualifier: String get() = "generationQualifier"

const val NID_generationQualifier: Int = 509

val LN_x500UniqueIdentifier: String get() = "x500UniqueIdentifier"

const val NID_x500UniqueIdentifier: Int = 503

val SN_dnQualifier: String get() = "dnQualifier"

val LN_dnQualifier: String get() = "dnQualifier"

const val NID_dnQualifier: Int = 174

val LN_enhancedSearchGuide: String get() = "enhancedSearchGuide"

const val NID_enhancedSearchGuide: Int = 885

val LN_protocolInformation: String get() = "protocolInformation"

const val NID_protocolInformation: Int = 886

val LN_distinguishedName: String get() = "distinguishedName"

const val NID_distinguishedName: Int = 887

val LN_uniqueMember: String get() = "uniqueMember"

const val NID_uniqueMember: Int = 888

val LN_houseIdentifier: String get() = "houseIdentifier"

const val NID_houseIdentifier: Int = 889

val LN_supportedAlgorithms: String get() = "supportedAlgorithms"

const val NID_supportedAlgorithms: Int = 890

val LN_deltaRevocationList: String get() = "deltaRevocationList"

const val NID_deltaRevocationList: Int = 891

val SN_dmdName: String get() = "dmdName"

const val NID_dmdName: Int = 892

val LN_pseudonym: String get() = "pseudonym"

const val NID_pseudonym: Int = 510

val SN_role: String get() = "role"

val LN_role: String get() = "role"

const val NID_role: Int = 400

val LN_organizationIdentifier: String get() = "organizationIdentifier"

const val NID_organizationIdentifier: Int = 1089

val SN_countryCode3c: String get() = "c3"

val LN_countryCode3c: String get() = "countryCode3c"

const val NID_countryCode3c: Int = 1090

val SN_countryCode3n: String get() = "n3"

val LN_countryCode3n: String get() = "countryCode3n"

const val NID_countryCode3n: Int = 1091

val LN_dnsName: String get() = "dnsName"

const val NID_dnsName: Int = 1092

val SN_X500algorithms: String get() = "X500algorithms"

val LN_X500algorithms: String get() = "directory services \u002D algorithms"

const val NID_X500algorithms: Int = 378

val SN_rsa: String get() = "RSA"

val LN_rsa: String get() = "rsa"

const val NID_rsa: Int = 19

val SN_mdc2WithRSA: String get() = "RSA\u002DMDC2"

val LN_mdc2WithRSA: String get() = "mdc2WithRSA"

const val NID_mdc2WithRSA: Int = 96

val SN_mdc2: String get() = "MDC2"

val LN_mdc2: String get() = "mdc2"

const val NID_mdc2: Int = 95

val SN_id_ce: String get() = "id\u002Dce"

const val NID_id_ce: Int = 81

val SN_subject_directory_attributes: String get() = "subjectDirectoryAttributes"

val LN_subject_directory_attributes: String get() = "X509v3 Subject Directory Attributes"

const val NID_subject_directory_attributes: Int = 769

val SN_subject_key_identifier: String get() = "subjectKeyIdentifier"

val LN_subject_key_identifier: String get() = "X509v3 Subject Key Identifier"

const val NID_subject_key_identifier: Int = 82

val SN_key_usage: String get() = "keyUsage"

val LN_key_usage: String get() = "X509v3 Key Usage"

const val NID_key_usage: Int = 83

val SN_private_key_usage_period: String get() = "privateKeyUsagePeriod"

val LN_private_key_usage_period: String get() = "X509v3 Private Key Usage Period"

const val NID_private_key_usage_period: Int = 84

val SN_subject_alt_name: String get() = "subjectAltName"

val LN_subject_alt_name: String get() = "X509v3 Subject Alternative Name"

const val NID_subject_alt_name: Int = 85

val SN_issuer_alt_name: String get() = "issuerAltName"

val LN_issuer_alt_name: String get() = "X509v3 Issuer Alternative Name"

const val NID_issuer_alt_name: Int = 86

val SN_basic_constraints: String get() = "basicConstraints"

val LN_basic_constraints: String get() = "X509v3 Basic Constraints"

const val NID_basic_constraints: Int = 87

val SN_crl_number: String get() = "crlNumber"

val LN_crl_number: String get() = "X509v3 CRL Number"

const val NID_crl_number: Int = 88

val SN_crl_reason: String get() = "CRLReason"

val LN_crl_reason: String get() = "X509v3 CRL Reason Code"

const val NID_crl_reason: Int = 141

val SN_invalidity_date: String get() = "invalidityDate"

val LN_invalidity_date: String get() = "Invalidity Date"

const val NID_invalidity_date: Int = 142

val SN_delta_crl: String get() = "deltaCRL"

val LN_delta_crl: String get() = "X509v3 Delta CRL Indicator"

const val NID_delta_crl: Int = 140

val SN_issuing_distribution_point: String get() = "issuingDistributionPoint"

val LN_issuing_distribution_point: String get() = "X509v3 Issuing Distribution Point"

const val NID_issuing_distribution_point: Int = 770

val SN_certificate_issuer: String get() = "certificateIssuer"

val LN_certificate_issuer: String get() = "X509v3 Certificate Issuer"

const val NID_certificate_issuer: Int = 771

val SN_name_constraints: String get() = "nameConstraints"

val LN_name_constraints: String get() = "X509v3 Name Constraints"

const val NID_name_constraints: Int = 666

val SN_crl_distribution_points: String get() = "crlDistributionPoints"

val LN_crl_distribution_points: String get() = "X509v3 CRL Distribution Points"

const val NID_crl_distribution_points: Int = 103

val SN_certificate_policies: String get() = "certificatePolicies"

val LN_certificate_policies: String get() = "X509v3 Certificate Policies"

const val NID_certificate_policies: Int = 89

val SN_any_policy: String get() = "anyPolicy"

val LN_any_policy: String get() = "X509v3 Any Policy"

const val NID_any_policy: Int = 746

val SN_policy_mappings: String get() = "policyMappings"

val LN_policy_mappings: String get() = "X509v3 Policy Mappings"

const val NID_policy_mappings: Int = 747

val SN_authority_key_identifier: String get() = "authorityKeyIdentifier"

val LN_authority_key_identifier: String get() = "X509v3 Authority Key Identifier"

const val NID_authority_key_identifier: Int = 90

val SN_policy_constraints: String get() = "policyConstraints"

val LN_policy_constraints: String get() = "X509v3 Policy Constraints"

const val NID_policy_constraints: Int = 401

val SN_ext_key_usage: String get() = "extendedKeyUsage"

val LN_ext_key_usage: String get() = "X509v3 Extended Key Usage"

const val NID_ext_key_usage: Int = 126

val SN_freshest_crl: String get() = "freshestCRL"

val LN_freshest_crl: String get() = "X509v3 Freshest CRL"

const val NID_freshest_crl: Int = 857

val SN_inhibit_any_policy: String get() = "inhibitAnyPolicy"

val LN_inhibit_any_policy: String get() = "X509v3 Inhibit Any Policy"

const val NID_inhibit_any_policy: Int = 748

val SN_target_information: String get() = "targetInformation"

val LN_target_information: String get() = "X509v3 AC Targeting"

const val NID_target_information: Int = 402

val SN_no_rev_avail: String get() = "noRevAvail"

val LN_no_rev_avail: String get() = "X509v3 No Revocation Available"

const val NID_no_rev_avail: Int = 403

val SN_anyExtendedKeyUsage: String get() = "anyExtendedKeyUsage"

val LN_anyExtendedKeyUsage: String get() = "Any Extended Key Usage"

const val NID_anyExtendedKeyUsage: Int = 910

val SN_netscape: String get() = "Netscape"

val LN_netscape: String get() = "Netscape Communications Corp."

const val NID_netscape: Int = 57

val SN_netscape_cert_extension: String get() = "nsCertExt"

val LN_netscape_cert_extension: String get() = "Netscape Certificate Extension"

const val NID_netscape_cert_extension: Int = 58

val SN_netscape_data_type: String get() = "nsDataType"

val LN_netscape_data_type: String get() = "Netscape Data Type"

const val NID_netscape_data_type: Int = 59

val SN_netscape_cert_type: String get() = "nsCertType"

val LN_netscape_cert_type: String get() = "Netscape Cert Type"

const val NID_netscape_cert_type: Int = 71

val SN_netscape_base_url: String get() = "nsBaseUrl"

val LN_netscape_base_url: String get() = "Netscape Base Url"

const val NID_netscape_base_url: Int = 72

val SN_netscape_revocation_url: String get() = "nsRevocationUrl"

val LN_netscape_revocation_url: String get() = "Netscape Revocation Url"

const val NID_netscape_revocation_url: Int = 73

val SN_netscape_ca_revocation_url: String get() = "nsCaRevocationUrl"

val LN_netscape_ca_revocation_url: String get() = "Netscape CA Revocation Url"

const val NID_netscape_ca_revocation_url: Int = 74

val SN_netscape_renewal_url: String get() = "nsRenewalUrl"

val LN_netscape_renewal_url: String get() = "Netscape Renewal Url"

const val NID_netscape_renewal_url: Int = 75

val SN_netscape_ca_policy_url: String get() = "nsCaPolicyUrl"

val LN_netscape_ca_policy_url: String get() = "Netscape CA Policy Url"

const val NID_netscape_ca_policy_url: Int = 76

val SN_netscape_ssl_server_name: String get() = "nsSslServerName"

val LN_netscape_ssl_server_name: String get() = "Netscape SSL Server Name"

const val NID_netscape_ssl_server_name: Int = 77

val SN_netscape_comment: String get() = "nsComment"

val LN_netscape_comment: String get() = "Netscape Comment"

const val NID_netscape_comment: Int = 78

val SN_netscape_cert_sequence: String get() = "nsCertSequence"

val LN_netscape_cert_sequence: String get() = "Netscape Certificate Sequence"

const val NID_netscape_cert_sequence: Int = 79

val SN_ns_sgc: String get() = "nsSGC"

val LN_ns_sgc: String get() = "Netscape Server Gated Crypto"

const val NID_ns_sgc: Int = 139

val SN_org: String get() = "ORG"

val LN_org: String get() = "org"

const val NID_org: Int = 379

val SN_dod: String get() = "DOD"

val LN_dod: String get() = "dod"

const val NID_dod: Int = 380

val SN_iana: String get() = "IANA"

val LN_iana: String get() = "iana"

const val NID_iana: Int = 381

val SN_Directory: String get() = "directory"

val LN_Directory: String get() = "Directory"

const val NID_Directory: Int = 382

val SN_Management: String get() = "mgmt"

val LN_Management: String get() = "Management"

const val NID_Management: Int = 383

val SN_Experimental: String get() = "experimental"

val LN_Experimental: String get() = "Experimental"

const val NID_Experimental: Int = 384

val SN_Private: String get() = "private"

val LN_Private: String get() = "Private"

const val NID_Private: Int = 385

val SN_Security: String get() = "security"

val LN_Security: String get() = "Security"

const val NID_Security: Int = 386

val SN_SNMPv2: String get() = "snmpv2"

val LN_SNMPv2: String get() = "SNMPv2"

const val NID_SNMPv2: Int = 387

val LN_Mail: String get() = "Mail"

const val NID_Mail: Int = 388

val SN_Enterprises: String get() = "enterprises"

val LN_Enterprises: String get() = "Enterprises"

const val NID_Enterprises: Int = 389

val SN_dcObject: String get() = "dcobject"

val LN_dcObject: String get() = "dcObject"

const val NID_dcObject: Int = 390

val SN_mime_mhs: String get() = "mime\u002Dmhs"

val LN_mime_mhs: String get() = "MIME MHS"

const val NID_mime_mhs: Int = 504

val SN_mime_mhs_headings: String get() = "mime\u002Dmhs\u002Dheadings"

val LN_mime_mhs_headings: String get() = "mime\u002Dmhs\u002Dheadings"

const val NID_mime_mhs_headings: Int = 505

val SN_mime_mhs_bodies: String get() = "mime\u002Dmhs\u002Dbodies"

val LN_mime_mhs_bodies: String get() = "mime\u002Dmhs\u002Dbodies"

const val NID_mime_mhs_bodies: Int = 506

val SN_id_hex_partial_message: String get() = "id\u002Dhex\u002Dpartial\u002Dmessage"

val LN_id_hex_partial_message: String get() = "id\u002Dhex\u002Dpartial\u002Dmessage"

const val NID_id_hex_partial_message: Int = 507

val SN_id_hex_multipart_message: String get() = "id\u002Dhex\u002Dmultipart\u002Dmessage"

val LN_id_hex_multipart_message: String get() = "id\u002Dhex\u002Dmultipart\u002Dmessage"

const val NID_id_hex_multipart_message: Int = 508

val SN_zlib_compression: String get() = "ZLIB"

val LN_zlib_compression: String get() = "zlib compression"

const val NID_zlib_compression: Int = 125

val SN_aes_128_ecb: String get() = "AES\u002D128\u002DECB"

val LN_aes_128_ecb: String get() = "aes\u002D128\u002Decb"

const val NID_aes_128_ecb: Int = 418

val SN_aes_128_cbc: String get() = "AES\u002D128\u002DCBC"

val LN_aes_128_cbc: String get() = "aes\u002D128\u002Dcbc"

const val NID_aes_128_cbc: Int = 419

val SN_aes_128_ofb128: String get() = "AES\u002D128\u002DOFB"

val LN_aes_128_ofb128: String get() = "aes\u002D128\u002Dofb"

const val NID_aes_128_ofb128: Int = 420

val SN_aes_128_cfb128: String get() = "AES\u002D128\u002DCFB"

val LN_aes_128_cfb128: String get() = "aes\u002D128\u002Dcfb"

const val NID_aes_128_cfb128: Int = 421

val SN_id_aes128_wrap: String get() = "id\u002Daes128\u002Dwrap"

const val NID_id_aes128_wrap: Int = 788

val SN_aes_128_gcm: String get() = "id\u002Daes128\u002DGCM"

val LN_aes_128_gcm: String get() = "aes\u002D128\u002Dgcm"

const val NID_aes_128_gcm: Int = 895

val SN_aes_128_ccm: String get() = "id\u002Daes128\u002DCCM"

val LN_aes_128_ccm: String get() = "aes\u002D128\u002Dccm"

const val NID_aes_128_ccm: Int = 896

val SN_id_aes128_wrap_pad: String get() = "id\u002Daes128\u002Dwrap\u002Dpad"

const val NID_id_aes128_wrap_pad: Int = 897

val SN_aes_192_ecb: String get() = "AES\u002D192\u002DECB"

val LN_aes_192_ecb: String get() = "aes\u002D192\u002Decb"

const val NID_aes_192_ecb: Int = 422

val SN_aes_192_cbc: String get() = "AES\u002D192\u002DCBC"

val LN_aes_192_cbc: String get() = "aes\u002D192\u002Dcbc"

const val NID_aes_192_cbc: Int = 423

val SN_aes_192_ofb128: String get() = "AES\u002D192\u002DOFB"

val LN_aes_192_ofb128: String get() = "aes\u002D192\u002Dofb"

const val NID_aes_192_ofb128: Int = 424

val SN_aes_192_cfb128: String get() = "AES\u002D192\u002DCFB"

val LN_aes_192_cfb128: String get() = "aes\u002D192\u002Dcfb"

const val NID_aes_192_cfb128: Int = 425

val SN_id_aes192_wrap: String get() = "id\u002Daes192\u002Dwrap"

const val NID_id_aes192_wrap: Int = 789

val SN_aes_192_gcm: String get() = "id\u002Daes192\u002DGCM"

val LN_aes_192_gcm: String get() = "aes\u002D192\u002Dgcm"

const val NID_aes_192_gcm: Int = 898

val SN_aes_192_ccm: String get() = "id\u002Daes192\u002DCCM"

val LN_aes_192_ccm: String get() = "aes\u002D192\u002Dccm"

const val NID_aes_192_ccm: Int = 899

val SN_id_aes192_wrap_pad: String get() = "id\u002Daes192\u002Dwrap\u002Dpad"

const val NID_id_aes192_wrap_pad: Int = 900

val SN_aes_256_ecb: String get() = "AES\u002D256\u002DECB"

val LN_aes_256_ecb: String get() = "aes\u002D256\u002Decb"

const val NID_aes_256_ecb: Int = 426

val SN_aes_256_cbc: String get() = "AES\u002D256\u002DCBC"

val LN_aes_256_cbc: String get() = "aes\u002D256\u002Dcbc"

const val NID_aes_256_cbc: Int = 427

val SN_aes_256_ofb128: String get() = "AES\u002D256\u002DOFB"

val LN_aes_256_ofb128: String get() = "aes\u002D256\u002Dofb"

const val NID_aes_256_ofb128: Int = 428

val SN_aes_256_cfb128: String get() = "AES\u002D256\u002DCFB"

val LN_aes_256_cfb128: String get() = "aes\u002D256\u002Dcfb"

const val NID_aes_256_cfb128: Int = 429

val SN_id_aes256_wrap: String get() = "id\u002Daes256\u002Dwrap"

const val NID_id_aes256_wrap: Int = 790

val SN_aes_256_gcm: String get() = "id\u002Daes256\u002DGCM"

val LN_aes_256_gcm: String get() = "aes\u002D256\u002Dgcm"

const val NID_aes_256_gcm: Int = 901

val SN_aes_256_ccm: String get() = "id\u002Daes256\u002DCCM"

val LN_aes_256_ccm: String get() = "aes\u002D256\u002Dccm"

const val NID_aes_256_ccm: Int = 902

val SN_id_aes256_wrap_pad: String get() = "id\u002Daes256\u002Dwrap\u002Dpad"

const val NID_id_aes256_wrap_pad: Int = 903

val SN_aes_128_xts: String get() = "AES\u002D128\u002DXTS"

val LN_aes_128_xts: String get() = "aes\u002D128\u002Dxts"

const val NID_aes_128_xts: Int = 913

val SN_aes_256_xts: String get() = "AES\u002D256\u002DXTS"

val LN_aes_256_xts: String get() = "aes\u002D256\u002Dxts"

const val NID_aes_256_xts: Int = 914

val SN_aes_128_cfb1: String get() = "AES\u002D128\u002DCFB1"

val LN_aes_128_cfb1: String get() = "aes\u002D128\u002Dcfb1"

const val NID_aes_128_cfb1: Int = 650

val SN_aes_192_cfb1: String get() = "AES\u002D192\u002DCFB1"

val LN_aes_192_cfb1: String get() = "aes\u002D192\u002Dcfb1"

const val NID_aes_192_cfb1: Int = 651

val SN_aes_256_cfb1: String get() = "AES\u002D256\u002DCFB1"

val LN_aes_256_cfb1: String get() = "aes\u002D256\u002Dcfb1"

const val NID_aes_256_cfb1: Int = 652

val SN_aes_128_cfb8: String get() = "AES\u002D128\u002DCFB8"

val LN_aes_128_cfb8: String get() = "aes\u002D128\u002Dcfb8"

const val NID_aes_128_cfb8: Int = 653

val SN_aes_192_cfb8: String get() = "AES\u002D192\u002DCFB8"

val LN_aes_192_cfb8: String get() = "aes\u002D192\u002Dcfb8"

const val NID_aes_192_cfb8: Int = 654

val SN_aes_256_cfb8: String get() = "AES\u002D256\u002DCFB8"

val LN_aes_256_cfb8: String get() = "aes\u002D256\u002Dcfb8"

const val NID_aes_256_cfb8: Int = 655

val SN_aes_128_ctr: String get() = "AES\u002D128\u002DCTR"

val LN_aes_128_ctr: String get() = "aes\u002D128\u002Dctr"

const val NID_aes_128_ctr: Int = 904

val SN_aes_192_ctr: String get() = "AES\u002D192\u002DCTR"

val LN_aes_192_ctr: String get() = "aes\u002D192\u002Dctr"

const val NID_aes_192_ctr: Int = 905

val SN_aes_256_ctr: String get() = "AES\u002D256\u002DCTR"

val LN_aes_256_ctr: String get() = "aes\u002D256\u002Dctr"

const val NID_aes_256_ctr: Int = 906

val SN_aes_128_ocb: String get() = "AES\u002D128\u002DOCB"

val LN_aes_128_ocb: String get() = "aes\u002D128\u002Docb"

const val NID_aes_128_ocb: Int = 958

val SN_aes_192_ocb: String get() = "AES\u002D192\u002DOCB"

val LN_aes_192_ocb: String get() = "aes\u002D192\u002Docb"

const val NID_aes_192_ocb: Int = 959

val SN_aes_256_ocb: String get() = "AES\u002D256\u002DOCB"

val LN_aes_256_ocb: String get() = "aes\u002D256\u002Docb"

const val NID_aes_256_ocb: Int = 960

val SN_des_cfb1: String get() = "DES\u002DCFB1"

val LN_des_cfb1: String get() = "des\u002Dcfb1"

const val NID_des_cfb1: Int = 656

val SN_des_cfb8: String get() = "DES\u002DCFB8"

val LN_des_cfb8: String get() = "des\u002Dcfb8"

const val NID_des_cfb8: Int = 657

val SN_des_ede3_cfb1: String get() = "DES\u002DEDE3\u002DCFB1"

val LN_des_ede3_cfb1: String get() = "des\u002Dede3\u002Dcfb1"

const val NID_des_ede3_cfb1: Int = 658

val SN_des_ede3_cfb8: String get() = "DES\u002DEDE3\u002DCFB8"

val LN_des_ede3_cfb8: String get() = "des\u002Dede3\u002Dcfb8"

const val NID_des_ede3_cfb8: Int = 659

val SN_sha256: String get() = "SHA256"

val LN_sha256: String get() = "sha256"

const val NID_sha256: Int = 672

val SN_sha384: String get() = "SHA384"

val LN_sha384: String get() = "sha384"

const val NID_sha384: Int = 673

val SN_sha512: String get() = "SHA512"

val LN_sha512: String get() = "sha512"

const val NID_sha512: Int = 674

val SN_sha224: String get() = "SHA224"

val LN_sha224: String get() = "sha224"

const val NID_sha224: Int = 675

val SN_sha512_224: String get() = "SHA512\u002D224"

val LN_sha512_224: String get() = "sha512\u002D224"

const val NID_sha512_224: Int = 1094

val SN_sha512_256: String get() = "SHA512\u002D256"

val LN_sha512_256: String get() = "sha512\u002D256"

const val NID_sha512_256: Int = 1095

val SN_sha3_224: String get() = "SHA3\u002D224"

val LN_sha3_224: String get() = "sha3\u002D224"

const val NID_sha3_224: Int = 1096

val SN_sha3_256: String get() = "SHA3\u002D256"

val LN_sha3_256: String get() = "sha3\u002D256"

const val NID_sha3_256: Int = 1097

val SN_sha3_384: String get() = "SHA3\u002D384"

val LN_sha3_384: String get() = "sha3\u002D384"

const val NID_sha3_384: Int = 1098

val SN_sha3_512: String get() = "SHA3\u002D512"

val LN_sha3_512: String get() = "sha3\u002D512"

const val NID_sha3_512: Int = 1099

val SN_shake128: String get() = "SHAKE128"

val LN_shake128: String get() = "shake128"

const val NID_shake128: Int = 1100

val SN_shake256: String get() = "SHAKE256"

val LN_shake256: String get() = "shake256"

const val NID_shake256: Int = 1101

val SN_hmac_sha3_224: String get() = "id\u002DhmacWithSHA3\u002D224"

val LN_hmac_sha3_224: String get() = "hmac\u002Dsha3\u002D224"

const val NID_hmac_sha3_224: Int = 1102

val SN_hmac_sha3_256: String get() = "id\u002DhmacWithSHA3\u002D256"

val LN_hmac_sha3_256: String get() = "hmac\u002Dsha3\u002D256"

const val NID_hmac_sha3_256: Int = 1103

val SN_hmac_sha3_384: String get() = "id\u002DhmacWithSHA3\u002D384"

val LN_hmac_sha3_384: String get() = "hmac\u002Dsha3\u002D384"

const val NID_hmac_sha3_384: Int = 1104

val SN_hmac_sha3_512: String get() = "id\u002DhmacWithSHA3\u002D512"

val LN_hmac_sha3_512: String get() = "hmac\u002Dsha3\u002D512"

const val NID_hmac_sha3_512: Int = 1105

val SN_dsa_with_SHA224: String get() = "dsa_with_SHA224"

const val NID_dsa_with_SHA224: Int = 802

val SN_dsa_with_SHA256: String get() = "dsa_with_SHA256"

const val NID_dsa_with_SHA256: Int = 803

val SN_dsa_with_SHA384: String get() = "id\u002Ddsa\u002Dwith\u002Dsha384"

val LN_dsa_with_SHA384: String get() = "dsa_with_SHA384"

const val NID_dsa_with_SHA384: Int = 1106

val SN_dsa_with_SHA512: String get() = "id\u002Ddsa\u002Dwith\u002Dsha512"

val LN_dsa_with_SHA512: String get() = "dsa_with_SHA512"

const val NID_dsa_with_SHA512: Int = 1107

val SN_dsa_with_SHA3_224: String get() = "id\u002Ddsa\u002Dwith\u002Dsha3\u002D224"

val LN_dsa_with_SHA3_224: String get() = "dsa_with_SHA3\u002D224"

const val NID_dsa_with_SHA3_224: Int = 1108

val SN_dsa_with_SHA3_256: String get() = "id\u002Ddsa\u002Dwith\u002Dsha3\u002D256"

val LN_dsa_with_SHA3_256: String get() = "dsa_with_SHA3\u002D256"

const val NID_dsa_with_SHA3_256: Int = 1109

val SN_dsa_with_SHA3_384: String get() = "id\u002Ddsa\u002Dwith\u002Dsha3\u002D384"

val LN_dsa_with_SHA3_384: String get() = "dsa_with_SHA3\u002D384"

const val NID_dsa_with_SHA3_384: Int = 1110

val SN_dsa_with_SHA3_512: String get() = "id\u002Ddsa\u002Dwith\u002Dsha3\u002D512"

val LN_dsa_with_SHA3_512: String get() = "dsa_with_SHA3\u002D512"

const val NID_dsa_with_SHA3_512: Int = 1111

val SN_ecdsa_with_SHA3_224: String get() = "id\u002Decdsa\u002Dwith\u002Dsha3\u002D224"

val LN_ecdsa_with_SHA3_224: String get() = "ecdsa_with_SHA3\u002D224"

const val NID_ecdsa_with_SHA3_224: Int = 1112

val SN_ecdsa_with_SHA3_256: String get() = "id\u002Decdsa\u002Dwith\u002Dsha3\u002D256"

val LN_ecdsa_with_SHA3_256: String get() = "ecdsa_with_SHA3\u002D256"

const val NID_ecdsa_with_SHA3_256: Int = 1113

val SN_ecdsa_with_SHA3_384: String get() = "id\u002Decdsa\u002Dwith\u002Dsha3\u002D384"

val LN_ecdsa_with_SHA3_384: String get() = "ecdsa_with_SHA3\u002D384"

const val NID_ecdsa_with_SHA3_384: Int = 1114

val SN_ecdsa_with_SHA3_512: String get() = "id\u002Decdsa\u002Dwith\u002Dsha3\u002D512"

val LN_ecdsa_with_SHA3_512: String get() = "ecdsa_with_SHA3\u002D512"

const val NID_ecdsa_with_SHA3_512: Int = 1115

val SN_RSA_SHA3_224: String get() = "id\u002Drsassa\u002Dpkcs1\u002Dv1_5\u002Dwith\u002Dsha3\u002D224"

val LN_RSA_SHA3_224: String get() = "RSA\u002DSHA3\u002D224"

const val NID_RSA_SHA3_224: Int = 1116

val SN_RSA_SHA3_256: String get() = "id\u002Drsassa\u002Dpkcs1\u002Dv1_5\u002Dwith\u002Dsha3\u002D256"

val LN_RSA_SHA3_256: String get() = "RSA\u002DSHA3\u002D256"

const val NID_RSA_SHA3_256: Int = 1117

val SN_RSA_SHA3_384: String get() = "id\u002Drsassa\u002Dpkcs1\u002Dv1_5\u002Dwith\u002Dsha3\u002D384"

val LN_RSA_SHA3_384: String get() = "RSA\u002DSHA3\u002D384"

const val NID_RSA_SHA3_384: Int = 1118

val SN_RSA_SHA3_512: String get() = "id\u002Drsassa\u002Dpkcs1\u002Dv1_5\u002Dwith\u002Dsha3\u002D512"

val LN_RSA_SHA3_512: String get() = "RSA\u002DSHA3\u002D512"

const val NID_RSA_SHA3_512: Int = 1119

val SN_hold_instruction_code: String get() = "holdInstructionCode"

val LN_hold_instruction_code: String get() = "Hold Instruction Code"

const val NID_hold_instruction_code: Int = 430

val SN_hold_instruction_none: String get() = "holdInstructionNone"

val LN_hold_instruction_none: String get() = "Hold Instruction None"

const val NID_hold_instruction_none: Int = 431

val SN_hold_instruction_call_issuer: String get() = "holdInstructionCallIssuer"

val LN_hold_instruction_call_issuer: String get() = "Hold Instruction Call Issuer"

const val NID_hold_instruction_call_issuer: Int = 432

val SN_hold_instruction_reject: String get() = "holdInstructionReject"

val LN_hold_instruction_reject: String get() = "Hold Instruction Reject"

const val NID_hold_instruction_reject: Int = 433

val SN_data: String get() = "data"

const val NID_data: Int = 434

val SN_pss: String get() = "pss"

const val NID_pss: Int = 435

val SN_ucl: String get() = "ucl"

const val NID_ucl: Int = 436

val SN_pilot: String get() = "pilot"

const val NID_pilot: Int = 437

val LN_pilotAttributeType: String get() = "pilotAttributeType"

const val NID_pilotAttributeType: Int = 438

val LN_pilotAttributeSyntax: String get() = "pilotAttributeSyntax"

const val NID_pilotAttributeSyntax: Int = 439

val LN_pilotObjectClass: String get() = "pilotObjectClass"

const val NID_pilotObjectClass: Int = 440

val LN_pilotGroups: String get() = "pilotGroups"

const val NID_pilotGroups: Int = 441

val LN_iA5StringSyntax: String get() = "iA5StringSyntax"

const val NID_iA5StringSyntax: Int = 442

val LN_caseIgnoreIA5StringSyntax: String get() = "caseIgnoreIA5StringSyntax"

const val NID_caseIgnoreIA5StringSyntax: Int = 443

val LN_pilotObject: String get() = "pilotObject"

const val NID_pilotObject: Int = 444

val LN_pilotPerson: String get() = "pilotPerson"

const val NID_pilotPerson: Int = 445

val SN_account: String get() = "account"

const val NID_account: Int = 446

val SN_document: String get() = "document"

const val NID_document: Int = 447

val SN_room: String get() = "room"

const val NID_room: Int = 448

val LN_documentSeries: String get() = "documentSeries"

const val NID_documentSeries: Int = 449

val SN_Domain: String get() = "domain"

val LN_Domain: String get() = "Domain"

const val NID_Domain: Int = 392

val LN_rFC822localPart: String get() = "rFC822localPart"

const val NID_rFC822localPart: Int = 450

val LN_dNSDomain: String get() = "dNSDomain"

const val NID_dNSDomain: Int = 451

val LN_domainRelatedObject: String get() = "domainRelatedObject"

const val NID_domainRelatedObject: Int = 452

val LN_friendlyCountry: String get() = "friendlyCountry"

const val NID_friendlyCountry: Int = 453

val LN_simpleSecurityObject: String get() = "simpleSecurityObject"

const val NID_simpleSecurityObject: Int = 454

val LN_pilotOrganization: String get() = "pilotOrganization"

const val NID_pilotOrganization: Int = 455

val LN_pilotDSA: String get() = "pilotDSA"

const val NID_pilotDSA: Int = 456

val LN_qualityLabelledData: String get() = "qualityLabelledData"

const val NID_qualityLabelledData: Int = 457

val SN_userId: String get() = "UID"

val LN_userId: String get() = "userId"

const val NID_userId: Int = 458

val LN_textEncodedORAddress: String get() = "textEncodedORAddress"

const val NID_textEncodedORAddress: Int = 459

val SN_rfc822Mailbox: String get() = "mail"

val LN_rfc822Mailbox: String get() = "rfc822Mailbox"

const val NID_rfc822Mailbox: Int = 460

val SN_info: String get() = "info"

const val NID_info: Int = 461

val LN_favouriteDrink: String get() = "favouriteDrink"

const val NID_favouriteDrink: Int = 462

val LN_roomNumber: String get() = "roomNumber"

const val NID_roomNumber: Int = 463

val SN_photo: String get() = "photo"

const val NID_photo: Int = 464

val LN_userClass: String get() = "userClass"

const val NID_userClass: Int = 465

val SN_host: String get() = "host"

const val NID_host: Int = 466

val SN_manager: String get() = "manager"

const val NID_manager: Int = 467

val LN_documentIdentifier: String get() = "documentIdentifier"

const val NID_documentIdentifier: Int = 468

val LN_documentTitle: String get() = "documentTitle"

const val NID_documentTitle: Int = 469

val LN_documentVersion: String get() = "documentVersion"

const val NID_documentVersion: Int = 470

val LN_documentAuthor: String get() = "documentAuthor"

const val NID_documentAuthor: Int = 471

val LN_documentLocation: String get() = "documentLocation"

const val NID_documentLocation: Int = 472

val LN_homeTelephoneNumber: String get() = "homeTelephoneNumber"

const val NID_homeTelephoneNumber: Int = 473

val SN_secretary: String get() = "secretary"

const val NID_secretary: Int = 474

val LN_otherMailbox: String get() = "otherMailbox"

const val NID_otherMailbox: Int = 475

val LN_lastModifiedTime: String get() = "lastModifiedTime"

const val NID_lastModifiedTime: Int = 476

val LN_lastModifiedBy: String get() = "lastModifiedBy"

const val NID_lastModifiedBy: Int = 477

val SN_domainComponent: String get() = "DC"

val LN_domainComponent: String get() = "domainComponent"

const val NID_domainComponent: Int = 391

val LN_aRecord: String get() = "aRecord"

const val NID_aRecord: Int = 478

val LN_pilotAttributeType27: String get() = "pilotAttributeType27"

const val NID_pilotAttributeType27: Int = 479

val LN_mXRecord: String get() = "mXRecord"

const val NID_mXRecord: Int = 480

val LN_nSRecord: String get() = "nSRecord"

const val NID_nSRecord: Int = 481

val LN_sOARecord: String get() = "sOARecord"

const val NID_sOARecord: Int = 482

val LN_cNAMERecord: String get() = "cNAMERecord"

const val NID_cNAMERecord: Int = 483

val LN_associatedDomain: String get() = "associatedDomain"

const val NID_associatedDomain: Int = 484

val LN_associatedName: String get() = "associatedName"

const val NID_associatedName: Int = 485

val LN_homePostalAddress: String get() = "homePostalAddress"

const val NID_homePostalAddress: Int = 486

val LN_personalTitle: String get() = "personalTitle"

const val NID_personalTitle: Int = 487

val LN_mobileTelephoneNumber: String get() = "mobileTelephoneNumber"

const val NID_mobileTelephoneNumber: Int = 488

val LN_pagerTelephoneNumber: String get() = "pagerTelephoneNumber"

const val NID_pagerTelephoneNumber: Int = 489

val LN_friendlyCountryName: String get() = "friendlyCountryName"

const val NID_friendlyCountryName: Int = 490

val SN_uniqueIdentifier: String get() = "uid"

val LN_uniqueIdentifier: String get() = "uniqueIdentifier"

const val NID_uniqueIdentifier: Int = 102

val LN_organizationalStatus: String get() = "organizationalStatus"

const val NID_organizationalStatus: Int = 491

val LN_janetMailbox: String get() = "janetMailbox"

const val NID_janetMailbox: Int = 492

val LN_mailPreferenceOption: String get() = "mailPreferenceOption"

const val NID_mailPreferenceOption: Int = 493

val LN_buildingName: String get() = "buildingName"

const val NID_buildingName: Int = 494

val LN_dSAQuality: String get() = "dSAQuality"

const val NID_dSAQuality: Int = 495

val LN_singleLevelQuality: String get() = "singleLevelQuality"

const val NID_singleLevelQuality: Int = 496

val LN_subtreeMinimumQuality: String get() = "subtreeMinimumQuality"

const val NID_subtreeMinimumQuality: Int = 497

val LN_subtreeMaximumQuality: String get() = "subtreeMaximumQuality"

const val NID_subtreeMaximumQuality: Int = 498

val LN_personalSignature: String get() = "personalSignature"

const val NID_personalSignature: Int = 499

val LN_dITRedirect: String get() = "dITRedirect"

const val NID_dITRedirect: Int = 500

val SN_audio: String get() = "audio"

const val NID_audio: Int = 501

val LN_documentPublisher: String get() = "documentPublisher"

const val NID_documentPublisher: Int = 502

val SN_id_set: String get() = "id\u002Dset"

val LN_id_set: String get() = "Secure Electronic Transactions"

const val NID_id_set: Int = 512

val SN_set_ctype: String get() = "set\u002Dctype"

val LN_set_ctype: String get() = "content types"

const val NID_set_ctype: Int = 513

val SN_set_msgExt: String get() = "set\u002DmsgExt"

val LN_set_msgExt: String get() = "message extensions"

const val NID_set_msgExt: Int = 514

val SN_set_attr: String get() = "set\u002Dattr"

const val NID_set_attr: Int = 515

val SN_set_policy: String get() = "set\u002Dpolicy"

const val NID_set_policy: Int = 516

val SN_set_certExt: String get() = "set\u002DcertExt"

val LN_set_certExt: String get() = "certificate extensions"

const val NID_set_certExt: Int = 517

val SN_set_brand: String get() = "set\u002Dbrand"

const val NID_set_brand: Int = 518

val SN_setct_PANData: String get() = "setct\u002DPANData"

const val NID_setct_PANData: Int = 519

val SN_setct_PANToken: String get() = "setct\u002DPANToken"

const val NID_setct_PANToken: Int = 520

val SN_setct_PANOnly: String get() = "setct\u002DPANOnly"

const val NID_setct_PANOnly: Int = 521

val SN_setct_OIData: String get() = "setct\u002DOIData"

const val NID_setct_OIData: Int = 522

val SN_setct_PI: String get() = "setct\u002DPI"

const val NID_setct_PI: Int = 523

val SN_setct_PIData: String get() = "setct\u002DPIData"

const val NID_setct_PIData: Int = 524

val SN_setct_PIDataUnsigned: String get() = "setct\u002DPIDataUnsigned"

const val NID_setct_PIDataUnsigned: Int = 525

val SN_setct_HODInput: String get() = "setct\u002DHODInput"

const val NID_setct_HODInput: Int = 526

val SN_setct_AuthResBaggage: String get() = "setct\u002DAuthResBaggage"

const val NID_setct_AuthResBaggage: Int = 527

val SN_setct_AuthRevReqBaggage: String get() = "setct\u002DAuthRevReqBaggage"

const val NID_setct_AuthRevReqBaggage: Int = 528

val SN_setct_AuthRevResBaggage: String get() = "setct\u002DAuthRevResBaggage"

const val NID_setct_AuthRevResBaggage: Int = 529

val SN_setct_CapTokenSeq: String get() = "setct\u002DCapTokenSeq"

const val NID_setct_CapTokenSeq: Int = 530

val SN_setct_PInitResData: String get() = "setct\u002DPInitResData"

const val NID_setct_PInitResData: Int = 531

val SN_setct_PI_TBS: String get() = "setct\u002DPI\u002DTBS"

const val NID_setct_PI_TBS: Int = 532

val SN_setct_PResData: String get() = "setct\u002DPResData"

const val NID_setct_PResData: Int = 533

val SN_setct_AuthReqTBS: String get() = "setct\u002DAuthReqTBS"

const val NID_setct_AuthReqTBS: Int = 534

val SN_setct_AuthResTBS: String get() = "setct\u002DAuthResTBS"

const val NID_setct_AuthResTBS: Int = 535

val SN_setct_AuthResTBSX: String get() = "setct\u002DAuthResTBSX"

const val NID_setct_AuthResTBSX: Int = 536

val SN_setct_AuthTokenTBS: String get() = "setct\u002DAuthTokenTBS"

const val NID_setct_AuthTokenTBS: Int = 537

val SN_setct_CapTokenData: String get() = "setct\u002DCapTokenData"

const val NID_setct_CapTokenData: Int = 538

val SN_setct_CapTokenTBS: String get() = "setct\u002DCapTokenTBS"

const val NID_setct_CapTokenTBS: Int = 539

val SN_setct_AcqCardCodeMsg: String get() = "setct\u002DAcqCardCodeMsg"

const val NID_setct_AcqCardCodeMsg: Int = 540

val SN_setct_AuthRevReqTBS: String get() = "setct\u002DAuthRevReqTBS"

const val NID_setct_AuthRevReqTBS: Int = 541

val SN_setct_AuthRevResData: String get() = "setct\u002DAuthRevResData"

const val NID_setct_AuthRevResData: Int = 542

val SN_setct_AuthRevResTBS: String get() = "setct\u002DAuthRevResTBS"

const val NID_setct_AuthRevResTBS: Int = 543

val SN_setct_CapReqTBS: String get() = "setct\u002DCapReqTBS"

const val NID_setct_CapReqTBS: Int = 544

val SN_setct_CapReqTBSX: String get() = "setct\u002DCapReqTBSX"

const val NID_setct_CapReqTBSX: Int = 545

val SN_setct_CapResData: String get() = "setct\u002DCapResData"

const val NID_setct_CapResData: Int = 546

val SN_setct_CapRevReqTBS: String get() = "setct\u002DCapRevReqTBS"

const val NID_setct_CapRevReqTBS: Int = 547

val SN_setct_CapRevReqTBSX: String get() = "setct\u002DCapRevReqTBSX"

const val NID_setct_CapRevReqTBSX: Int = 548

val SN_setct_CapRevResData: String get() = "setct\u002DCapRevResData"

const val NID_setct_CapRevResData: Int = 549

val SN_setct_CredReqTBS: String get() = "setct\u002DCredReqTBS"

const val NID_setct_CredReqTBS: Int = 550

val SN_setct_CredReqTBSX: String get() = "setct\u002DCredReqTBSX"

const val NID_setct_CredReqTBSX: Int = 551

val SN_setct_CredResData: String get() = "setct\u002DCredResData"

const val NID_setct_CredResData: Int = 552

val SN_setct_CredRevReqTBS: String get() = "setct\u002DCredRevReqTBS"

const val NID_setct_CredRevReqTBS: Int = 553

val SN_setct_CredRevReqTBSX: String get() = "setct\u002DCredRevReqTBSX"

const val NID_setct_CredRevReqTBSX: Int = 554

val SN_setct_CredRevResData: String get() = "setct\u002DCredRevResData"

const val NID_setct_CredRevResData: Int = 555

val SN_setct_PCertReqData: String get() = "setct\u002DPCertReqData"

const val NID_setct_PCertReqData: Int = 556

val SN_setct_PCertResTBS: String get() = "setct\u002DPCertResTBS"

const val NID_setct_PCertResTBS: Int = 557

val SN_setct_BatchAdminReqData: String get() = "setct\u002DBatchAdminReqData"

const val NID_setct_BatchAdminReqData: Int = 558

val SN_setct_BatchAdminResData: String get() = "setct\u002DBatchAdminResData"

const val NID_setct_BatchAdminResData: Int = 559

val SN_setct_CardCInitResTBS: String get() = "setct\u002DCardCInitResTBS"

const val NID_setct_CardCInitResTBS: Int = 560

val SN_setct_MeAqCInitResTBS: String get() = "setct\u002DMeAqCInitResTBS"

const val NID_setct_MeAqCInitResTBS: Int = 561

val SN_setct_RegFormResTBS: String get() = "setct\u002DRegFormResTBS"

const val NID_setct_RegFormResTBS: Int = 562

val SN_setct_CertReqData: String get() = "setct\u002DCertReqData"

const val NID_setct_CertReqData: Int = 563

val SN_setct_CertReqTBS: String get() = "setct\u002DCertReqTBS"

const val NID_setct_CertReqTBS: Int = 564

val SN_setct_CertResData: String get() = "setct\u002DCertResData"

const val NID_setct_CertResData: Int = 565

val SN_setct_CertInqReqTBS: String get() = "setct\u002DCertInqReqTBS"

const val NID_setct_CertInqReqTBS: Int = 566

val SN_setct_ErrorTBS: String get() = "setct\u002DErrorTBS"

const val NID_setct_ErrorTBS: Int = 567

val SN_setct_PIDualSignedTBE: String get() = "setct\u002DPIDualSignedTBE"

const val NID_setct_PIDualSignedTBE: Int = 568

val SN_setct_PIUnsignedTBE: String get() = "setct\u002DPIUnsignedTBE"

const val NID_setct_PIUnsignedTBE: Int = 569

val SN_setct_AuthReqTBE: String get() = "setct\u002DAuthReqTBE"

const val NID_setct_AuthReqTBE: Int = 570

val SN_setct_AuthResTBE: String get() = "setct\u002DAuthResTBE"

const val NID_setct_AuthResTBE: Int = 571

val SN_setct_AuthResTBEX: String get() = "setct\u002DAuthResTBEX"

const val NID_setct_AuthResTBEX: Int = 572

val SN_setct_AuthTokenTBE: String get() = "setct\u002DAuthTokenTBE"

const val NID_setct_AuthTokenTBE: Int = 573

val SN_setct_CapTokenTBE: String get() = "setct\u002DCapTokenTBE"

const val NID_setct_CapTokenTBE: Int = 574

val SN_setct_CapTokenTBEX: String get() = "setct\u002DCapTokenTBEX"

const val NID_setct_CapTokenTBEX: Int = 575

val SN_setct_AcqCardCodeMsgTBE: String get() = "setct\u002DAcqCardCodeMsgTBE"

const val NID_setct_AcqCardCodeMsgTBE: Int = 576

val SN_setct_AuthRevReqTBE: String get() = "setct\u002DAuthRevReqTBE"

const val NID_setct_AuthRevReqTBE: Int = 577

val SN_setct_AuthRevResTBE: String get() = "setct\u002DAuthRevResTBE"

const val NID_setct_AuthRevResTBE: Int = 578

val SN_setct_AuthRevResTBEB: String get() = "setct\u002DAuthRevResTBEB"

const val NID_setct_AuthRevResTBEB: Int = 579

val SN_setct_CapReqTBE: String get() = "setct\u002DCapReqTBE"

const val NID_setct_CapReqTBE: Int = 580

val SN_setct_CapReqTBEX: String get() = "setct\u002DCapReqTBEX"

const val NID_setct_CapReqTBEX: Int = 581

val SN_setct_CapResTBE: String get() = "setct\u002DCapResTBE"

const val NID_setct_CapResTBE: Int = 582

val SN_setct_CapRevReqTBE: String get() = "setct\u002DCapRevReqTBE"

const val NID_setct_CapRevReqTBE: Int = 583

val SN_setct_CapRevReqTBEX: String get() = "setct\u002DCapRevReqTBEX"

const val NID_setct_CapRevReqTBEX: Int = 584

val SN_setct_CapRevResTBE: String get() = "setct\u002DCapRevResTBE"

const val NID_setct_CapRevResTBE: Int = 585

val SN_setct_CredReqTBE: String get() = "setct\u002DCredReqTBE"

const val NID_setct_CredReqTBE: Int = 586

val SN_setct_CredReqTBEX: String get() = "setct\u002DCredReqTBEX"

const val NID_setct_CredReqTBEX: Int = 587

val SN_setct_CredResTBE: String get() = "setct\u002DCredResTBE"

const val NID_setct_CredResTBE: Int = 588

val SN_setct_CredRevReqTBE: String get() = "setct\u002DCredRevReqTBE"

const val NID_setct_CredRevReqTBE: Int = 589

val SN_setct_CredRevReqTBEX: String get() = "setct\u002DCredRevReqTBEX"

const val NID_setct_CredRevReqTBEX: Int = 590

val SN_setct_CredRevResTBE: String get() = "setct\u002DCredRevResTBE"

const val NID_setct_CredRevResTBE: Int = 591

val SN_setct_BatchAdminReqTBE: String get() = "setct\u002DBatchAdminReqTBE"

const val NID_setct_BatchAdminReqTBE: Int = 592

val SN_setct_BatchAdminResTBE: String get() = "setct\u002DBatchAdminResTBE"

const val NID_setct_BatchAdminResTBE: Int = 593

val SN_setct_RegFormReqTBE: String get() = "setct\u002DRegFormReqTBE"

const val NID_setct_RegFormReqTBE: Int = 594

val SN_setct_CertReqTBE: String get() = "setct\u002DCertReqTBE"

const val NID_setct_CertReqTBE: Int = 595

val SN_setct_CertReqTBEX: String get() = "setct\u002DCertReqTBEX"

const val NID_setct_CertReqTBEX: Int = 596

val SN_setct_CertResTBE: String get() = "setct\u002DCertResTBE"

const val NID_setct_CertResTBE: Int = 597

val SN_setct_CRLNotificationTBS: String get() = "setct\u002DCRLNotificationTBS"

const val NID_setct_CRLNotificationTBS: Int = 598

val SN_setct_CRLNotificationResTBS: String get() = "setct\u002DCRLNotificationResTBS"

const val NID_setct_CRLNotificationResTBS: Int = 599

val SN_setct_BCIDistributionTBS: String get() = "setct\u002DBCIDistributionTBS"

const val NID_setct_BCIDistributionTBS: Int = 600

val SN_setext_genCrypt: String get() = "setext\u002DgenCrypt"

val LN_setext_genCrypt: String get() = "generic cryptogram"

const val NID_setext_genCrypt: Int = 601

val SN_setext_miAuth: String get() = "setext\u002DmiAuth"

val LN_setext_miAuth: String get() = "merchant initiated auth"

const val NID_setext_miAuth: Int = 602

val SN_setext_pinSecure: String get() = "setext\u002DpinSecure"

const val NID_setext_pinSecure: Int = 603

val SN_setext_pinAny: String get() = "setext\u002DpinAny"

const val NID_setext_pinAny: Int = 604

val SN_setext_track2: String get() = "setext\u002Dtrack2"

const val NID_setext_track2: Int = 605

val SN_setext_cv: String get() = "setext\u002Dcv"

val LN_setext_cv: String get() = "additional verification"

const val NID_setext_cv: Int = 606

val SN_set_policy_root: String get() = "set\u002Dpolicy\u002Droot"

const val NID_set_policy_root: Int = 607

val SN_setCext_hashedRoot: String get() = "setCext\u002DhashedRoot"

const val NID_setCext_hashedRoot: Int = 608

val SN_setCext_certType: String get() = "setCext\u002DcertType"

const val NID_setCext_certType: Int = 609

val SN_setCext_merchData: String get() = "setCext\u002DmerchData"

const val NID_setCext_merchData: Int = 610

val SN_setCext_cCertRequired: String get() = "setCext\u002DcCertRequired"

const val NID_setCext_cCertRequired: Int = 611

val SN_setCext_tunneling: String get() = "setCext\u002Dtunneling"

const val NID_setCext_tunneling: Int = 612

val SN_setCext_setExt: String get() = "setCext\u002DsetExt"

const val NID_setCext_setExt: Int = 613

val SN_setCext_setQualf: String get() = "setCext\u002DsetQualf"

const val NID_setCext_setQualf: Int = 614

val SN_setCext_PGWYcapabilities: String get() = "setCext\u002DPGWYcapabilities"

const val NID_setCext_PGWYcapabilities: Int = 615

val SN_setCext_TokenIdentifier: String get() = "setCext\u002DTokenIdentifier"

const val NID_setCext_TokenIdentifier: Int = 616

val SN_setCext_Track2Data: String get() = "setCext\u002DTrack2Data"

const val NID_setCext_Track2Data: Int = 617

val SN_setCext_TokenType: String get() = "setCext\u002DTokenType"

const val NID_setCext_TokenType: Int = 618

val SN_setCext_IssuerCapabilities: String get() = "setCext\u002DIssuerCapabilities"

const val NID_setCext_IssuerCapabilities: Int = 619

val SN_setAttr_Cert: String get() = "setAttr\u002DCert"

const val NID_setAttr_Cert: Int = 620

val SN_setAttr_PGWYcap: String get() = "setAttr\u002DPGWYcap"

val LN_setAttr_PGWYcap: String get() = "payment gateway capabilities"

const val NID_setAttr_PGWYcap: Int = 621

val SN_setAttr_TokenType: String get() = "setAttr\u002DTokenType"

const val NID_setAttr_TokenType: Int = 622

val SN_setAttr_IssCap: String get() = "setAttr\u002DIssCap"

val LN_setAttr_IssCap: String get() = "issuer capabilities"

const val NID_setAttr_IssCap: Int = 623

val SN_set_rootKeyThumb: String get() = "set\u002DrootKeyThumb"

const val NID_set_rootKeyThumb: Int = 624

val SN_set_addPolicy: String get() = "set\u002DaddPolicy"

const val NID_set_addPolicy: Int = 625

val SN_setAttr_Token_EMV: String get() = "setAttr\u002DToken\u002DEMV"

const val NID_setAttr_Token_EMV: Int = 626

val SN_setAttr_Token_B0Prime: String get() = "setAttr\u002DToken\u002DB0Prime"

const val NID_setAttr_Token_B0Prime: Int = 627

val SN_setAttr_IssCap_CVM: String get() = "setAttr\u002DIssCap\u002DCVM"

const val NID_setAttr_IssCap_CVM: Int = 628

val SN_setAttr_IssCap_T2: String get() = "setAttr\u002DIssCap\u002DT2"

const val NID_setAttr_IssCap_T2: Int = 629

val SN_setAttr_IssCap_Sig: String get() = "setAttr\u002DIssCap\u002DSig"

const val NID_setAttr_IssCap_Sig: Int = 630

val SN_setAttr_GenCryptgrm: String get() = "setAttr\u002DGenCryptgrm"

val LN_setAttr_GenCryptgrm: String get() = "generate cryptogram"

const val NID_setAttr_GenCryptgrm: Int = 631

val SN_setAttr_T2Enc: String get() = "setAttr\u002DT2Enc"

val LN_setAttr_T2Enc: String get() = "encrypted track 2"

const val NID_setAttr_T2Enc: Int = 632

val SN_setAttr_T2cleartxt: String get() = "setAttr\u002DT2cleartxt"

val LN_setAttr_T2cleartxt: String get() = "cleartext track 2"

const val NID_setAttr_T2cleartxt: Int = 633

val SN_setAttr_TokICCsig: String get() = "setAttr\u002DTokICCsig"

val LN_setAttr_TokICCsig: String get() = "ICC or token signature"

const val NID_setAttr_TokICCsig: Int = 634

val SN_setAttr_SecDevSig: String get() = "setAttr\u002DSecDevSig"

val LN_setAttr_SecDevSig: String get() = "secure device signature"

const val NID_setAttr_SecDevSig: Int = 635

val SN_set_brand_IATA_ATA: String get() = "set\u002Dbrand\u002DIATA\u002DATA"

const val NID_set_brand_IATA_ATA: Int = 636

val SN_set_brand_Diners: String get() = "set\u002Dbrand\u002DDiners"

const val NID_set_brand_Diners: Int = 637

val SN_set_brand_AmericanExpress: String get() = "set\u002Dbrand\u002DAmericanExpress"

const val NID_set_brand_AmericanExpress: Int = 638

val SN_set_brand_JCB: String get() = "set\u002Dbrand\u002DJCB"

const val NID_set_brand_JCB: Int = 639

val SN_set_brand_Visa: String get() = "set\u002Dbrand\u002DVisa"

const val NID_set_brand_Visa: Int = 640

val SN_set_brand_MasterCard: String get() = "set\u002Dbrand\u002DMasterCard"

const val NID_set_brand_MasterCard: Int = 641

val SN_set_brand_Novus: String get() = "set\u002Dbrand\u002DNovus"

const val NID_set_brand_Novus: Int = 642

val SN_des_cdmf: String get() = "DES\u002DCDMF"

val LN_des_cdmf: String get() = "des\u002Dcdmf"

const val NID_des_cdmf: Int = 643

val SN_rsaOAEPEncryptionSET: String get() = "rsaOAEPEncryptionSET"

const val NID_rsaOAEPEncryptionSET: Int = 644

val SN_ipsec3: String get() = "Oakley\u002DEC2N\u002D3"

val LN_ipsec3: String get() = "ipsec3"

const val NID_ipsec3: Int = 749

val SN_ipsec4: String get() = "Oakley\u002DEC2N\u002D4"

val LN_ipsec4: String get() = "ipsec4"

const val NID_ipsec4: Int = 750

val SN_whirlpool: String get() = "whirlpool"

const val NID_whirlpool: Int = 804

val SN_cryptopro: String get() = "cryptopro"

const val NID_cryptopro: Int = 805

val SN_cryptocom: String get() = "cryptocom"

const val NID_cryptocom: Int = 806

val SN_id_tc26: String get() = "id\u002Dtc26"

const val NID_id_tc26: Int = 974

val SN_id_GostR3411_94_with_GostR3410_2001: String get() = "id\u002DGostR3411\u002D94\u002Dwith\u002DGostR3410\u002D2001"

val LN_id_GostR3411_94_with_GostR3410_2001: String get() = "GOST R 34.11\u002D94 with GOST R 34.10\u002D2001"

const val NID_id_GostR3411_94_with_GostR3410_2001: Int = 807

val SN_id_GostR3411_94_with_GostR3410_94: String get() = "id\u002DGostR3411\u002D94\u002Dwith\u002DGostR3410\u002D94"

val LN_id_GostR3411_94_with_GostR3410_94: String get() = "GOST R 34.11\u002D94 with GOST R 34.10\u002D94"

const val NID_id_GostR3411_94_with_GostR3410_94: Int = 808

val SN_id_GostR3411_94: String get() = "md_gost94"

val LN_id_GostR3411_94: String get() = "GOST R 34.11\u002D94"

const val NID_id_GostR3411_94: Int = 809

val SN_id_HMACGostR3411_94: String get() = "id\u002DHMACGostR3411\u002D94"

val LN_id_HMACGostR3411_94: String get() = "HMAC GOST 34.11\u002D94"

const val NID_id_HMACGostR3411_94: Int = 810

val SN_id_GostR3410_2001: String get() = "gost2001"

val LN_id_GostR3410_2001: String get() = "GOST R 34.10\u002D2001"

const val NID_id_GostR3410_2001: Int = 811

val SN_id_GostR3410_94: String get() = "gost94"

val LN_id_GostR3410_94: String get() = "GOST R 34.10\u002D94"

const val NID_id_GostR3410_94: Int = 812

val SN_id_Gost28147_89: String get() = "gost89"

val LN_id_Gost28147_89: String get() = "GOST 28147\u002D89"

const val NID_id_Gost28147_89: Int = 813

val SN_gost89_cnt: String get() = "gost89\u002Dcnt"

const val NID_gost89_cnt: Int = 814

val SN_gost89_cnt_12: String get() = "gost89\u002Dcnt\u002D12"

const val NID_gost89_cnt_12: Int = 975

val SN_gost89_cbc: String get() = "gost89\u002Dcbc"

const val NID_gost89_cbc: Int = 1009

val SN_gost89_ecb: String get() = "gost89\u002Decb"

const val NID_gost89_ecb: Int = 1010

val SN_gost89_ctr: String get() = "gost89\u002Dctr"

const val NID_gost89_ctr: Int = 1011

val SN_id_Gost28147_89_MAC: String get() = "gost\u002Dmac"

val LN_id_Gost28147_89_MAC: String get() = "GOST 28147\u002D89 MAC"

const val NID_id_Gost28147_89_MAC: Int = 815

val SN_gost_mac_12: String get() = "gost\u002Dmac\u002D12"

const val NID_gost_mac_12: Int = 976

val SN_id_GostR3411_94_prf: String get() = "prf\u002Dgostr3411\u002D94"

val LN_id_GostR3411_94_prf: String get() = "GOST R 34.11\u002D94 PRF"

const val NID_id_GostR3411_94_prf: Int = 816

val SN_id_GostR3410_2001DH: String get() = "id\u002DGostR3410\u002D2001DH"

val LN_id_GostR3410_2001DH: String get() = "GOST R 34.10\u002D2001 DH"

const val NID_id_GostR3410_2001DH: Int = 817

val SN_id_GostR3410_94DH: String get() = "id\u002DGostR3410\u002D94DH"

val LN_id_GostR3410_94DH: String get() = "GOST R 34.10\u002D94 DH"

const val NID_id_GostR3410_94DH: Int = 818

val SN_id_Gost28147_89_CryptoPro_KeyMeshing: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DKeyMeshing"

const val NID_id_Gost28147_89_CryptoPro_KeyMeshing: Int = 819

val SN_id_Gost28147_89_None_KeyMeshing: String get() = "id\u002DGost28147\u002D89\u002DNone\u002DKeyMeshing"

const val NID_id_Gost28147_89_None_KeyMeshing: Int = 820

val SN_id_GostR3411_94_TestParamSet: String get() = "id\u002DGostR3411\u002D94\u002DTestParamSet"

const val NID_id_GostR3411_94_TestParamSet: Int = 821

val SN_id_GostR3411_94_CryptoProParamSet: String get() = "id\u002DGostR3411\u002D94\u002DCryptoProParamSet"

const val NID_id_GostR3411_94_CryptoProParamSet: Int = 822

val SN_id_Gost28147_89_TestParamSet: String get() = "id\u002DGost28147\u002D89\u002DTestParamSet"

const val NID_id_Gost28147_89_TestParamSet: Int = 823

val SN_id_Gost28147_89_CryptoPro_A_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DA\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_A_ParamSet: Int = 824

val SN_id_Gost28147_89_CryptoPro_B_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DB\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_B_ParamSet: Int = 825

val SN_id_Gost28147_89_CryptoPro_C_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DC\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_C_ParamSet: Int = 826

val SN_id_Gost28147_89_CryptoPro_D_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DD\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_D_ParamSet: Int = 827

val SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DOscar\u002D1\u002D1\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet: Int = 828

val SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DOscar\u002D1\u002D0\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet: Int = 829

val SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet: String get() = "id\u002DGost28147\u002D89\u002DCryptoPro\u002DRIC\u002D1\u002DParamSet"

const val NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet: Int = 830

val SN_id_GostR3410_94_TestParamSet: String get() = "id\u002DGostR3410\u002D94\u002DTestParamSet"

const val NID_id_GostR3410_94_TestParamSet: Int = 831

val SN_id_GostR3410_94_CryptoPro_A_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DA\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_A_ParamSet: Int = 832

val SN_id_GostR3410_94_CryptoPro_B_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DB\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_B_ParamSet: Int = 833

val SN_id_GostR3410_94_CryptoPro_C_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DC\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_C_ParamSet: Int = 834

val SN_id_GostR3410_94_CryptoPro_D_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DD\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_D_ParamSet: Int = 835

val SN_id_GostR3410_94_CryptoPro_XchA_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DXchA\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_XchA_ParamSet: Int = 836

val SN_id_GostR3410_94_CryptoPro_XchB_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DXchB\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_XchB_ParamSet: Int = 837

val SN_id_GostR3410_94_CryptoPro_XchC_ParamSet: String get() = "id\u002DGostR3410\u002D94\u002DCryptoPro\u002DXchC\u002DParamSet"

const val NID_id_GostR3410_94_CryptoPro_XchC_ParamSet: Int = 838

val SN_id_GostR3410_2001_TestParamSet: String get() = "id\u002DGostR3410\u002D2001\u002DTestParamSet"

const val NID_id_GostR3410_2001_TestParamSet: Int = 839

val SN_id_GostR3410_2001_CryptoPro_A_ParamSet: String get() = "id\u002DGostR3410\u002D2001\u002DCryptoPro\u002DA\u002DParamSet"

const val NID_id_GostR3410_2001_CryptoPro_A_ParamSet: Int = 840

val SN_id_GostR3410_2001_CryptoPro_B_ParamSet: String get() = "id\u002DGostR3410\u002D2001\u002DCryptoPro\u002DB\u002DParamSet"

const val NID_id_GostR3410_2001_CryptoPro_B_ParamSet: Int = 841

val SN_id_GostR3410_2001_CryptoPro_C_ParamSet: String get() = "id\u002DGostR3410\u002D2001\u002DCryptoPro\u002DC\u002DParamSet"

const val NID_id_GostR3410_2001_CryptoPro_C_ParamSet: Int = 842

val SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet: String get() = "id\u002DGostR3410\u002D2001\u002DCryptoPro\u002DXchA\u002DParamSet"

const val NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet: Int = 843

val SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet: String get() = "id\u002DGostR3410\u002D2001\u002DCryptoPro\u002DXchB\u002DParamSet"

const val NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet: Int = 844

val SN_id_GostR3410_94_a: String get() = "id\u002DGostR3410\u002D94\u002Da"

const val NID_id_GostR3410_94_a: Int = 845

val SN_id_GostR3410_94_aBis: String get() = "id\u002DGostR3410\u002D94\u002DaBis"

const val NID_id_GostR3410_94_aBis: Int = 846

val SN_id_GostR3410_94_b: String get() = "id\u002DGostR3410\u002D94\u002Db"

const val NID_id_GostR3410_94_b: Int = 847

val SN_id_GostR3410_94_bBis: String get() = "id\u002DGostR3410\u002D94\u002DbBis"

const val NID_id_GostR3410_94_bBis: Int = 848

val SN_id_Gost28147_89_cc: String get() = "id\u002DGost28147\u002D89\u002Dcc"

val LN_id_Gost28147_89_cc: String get() = "GOST 28147\u002D89 Cryptocom ParamSet"

const val NID_id_Gost28147_89_cc: Int = 849

val SN_id_GostR3410_94_cc: String get() = "gost94cc"

val LN_id_GostR3410_94_cc: String get() = "GOST 34.10\u002D94 Cryptocom"

const val NID_id_GostR3410_94_cc: Int = 850

val SN_id_GostR3410_2001_cc: String get() = "gost2001cc"

val LN_id_GostR3410_2001_cc: String get() = "GOST 34.10\u002D2001 Cryptocom"

const val NID_id_GostR3410_2001_cc: Int = 851

val SN_id_GostR3411_94_with_GostR3410_94_cc: String get() = "id\u002DGostR3411\u002D94\u002Dwith\u002DGostR3410\u002D94\u002Dcc"

val LN_id_GostR3411_94_with_GostR3410_94_cc: String get() = "GOST R 34.11\u002D94 with GOST R 34.10\u002D94 Cryptocom"

const val NID_id_GostR3411_94_with_GostR3410_94_cc: Int = 852

val SN_id_GostR3411_94_with_GostR3410_2001_cc: String get() = "id\u002DGostR3411\u002D94\u002Dwith\u002DGostR3410\u002D2001\u002Dcc"

val LN_id_GostR3411_94_with_GostR3410_2001_cc: String get() = "GOST R 34.11\u002D94 with GOST R 34.10\u002D2001 Cryptocom"

const val NID_id_GostR3411_94_with_GostR3410_2001_cc: Int = 853

val SN_id_GostR3410_2001_ParamSet_cc: String get() = "id\u002DGostR3410\u002D2001\u002DParamSet\u002Dcc"

val LN_id_GostR3410_2001_ParamSet_cc: String get() = "GOST R 3410\u002D2001 Parameter Set Cryptocom"

const val NID_id_GostR3410_2001_ParamSet_cc: Int = 854

val SN_id_tc26_algorithms: String get() = "id\u002Dtc26\u002Dalgorithms"

const val NID_id_tc26_algorithms: Int = 977

val SN_id_tc26_sign: String get() = "id\u002Dtc26\u002Dsign"

const val NID_id_tc26_sign: Int = 978

val SN_id_GostR3410_2012_256: String get() = "gost2012_256"

val LN_id_GostR3410_2012_256: String get() = "GOST R 34.10\u002D2012 with 256 bit modulus"

const val NID_id_GostR3410_2012_256: Int = 979

val SN_id_GostR3410_2012_512: String get() = "gost2012_512"

val LN_id_GostR3410_2012_512: String get() = "GOST R 34.10\u002D2012 with 512 bit modulus"

const val NID_id_GostR3410_2012_512: Int = 980

val SN_id_tc26_digest: String get() = "id\u002Dtc26\u002Ddigest"

const val NID_id_tc26_digest: Int = 981

val SN_id_GostR3411_2012_256: String get() = "md_gost12_256"

val LN_id_GostR3411_2012_256: String get() = "GOST R 34.11\u002D2012 with 256 bit hash"

const val NID_id_GostR3411_2012_256: Int = 982

val SN_id_GostR3411_2012_512: String get() = "md_gost12_512"

val LN_id_GostR3411_2012_512: String get() = "GOST R 34.11\u002D2012 with 512 bit hash"

const val NID_id_GostR3411_2012_512: Int = 983

val SN_id_tc26_signwithdigest: String get() = "id\u002Dtc26\u002Dsignwithdigest"

const val NID_id_tc26_signwithdigest: Int = 984

val SN_id_tc26_signwithdigest_gost3410_2012_256: String get() = "id\u002Dtc26\u002Dsignwithdigest\u002Dgost3410\u002D2012\u002D256"

val LN_id_tc26_signwithdigest_gost3410_2012_256: String get() = "GOST R 34.10\u002D2012 with GOST R 34.11\u002D2012 (256 bit)"

const val NID_id_tc26_signwithdigest_gost3410_2012_256: Int = 985

val SN_id_tc26_signwithdigest_gost3410_2012_512: String get() = "id\u002Dtc26\u002Dsignwithdigest\u002Dgost3410\u002D2012\u002D512"

val LN_id_tc26_signwithdigest_gost3410_2012_512: String get() = "GOST R 34.10\u002D2012 with GOST R 34.11\u002D2012 (512 bit)"

const val NID_id_tc26_signwithdigest_gost3410_2012_512: Int = 986

val SN_id_tc26_mac: String get() = "id\u002Dtc26\u002Dmac"

const val NID_id_tc26_mac: Int = 987

val SN_id_tc26_hmac_gost_3411_2012_256: String get() = "id\u002Dtc26\u002Dhmac\u002Dgost\u002D3411\u002D2012\u002D256"

val LN_id_tc26_hmac_gost_3411_2012_256: String get() = "HMAC GOST 34.11\u002D2012 256 bit"

const val NID_id_tc26_hmac_gost_3411_2012_256: Int = 988

val SN_id_tc26_hmac_gost_3411_2012_512: String get() = "id\u002Dtc26\u002Dhmac\u002Dgost\u002D3411\u002D2012\u002D512"

val LN_id_tc26_hmac_gost_3411_2012_512: String get() = "HMAC GOST 34.11\u002D2012 512 bit"

const val NID_id_tc26_hmac_gost_3411_2012_512: Int = 989

val SN_id_tc26_cipher: String get() = "id\u002Dtc26\u002Dcipher"

const val NID_id_tc26_cipher: Int = 990

val SN_id_tc26_cipher_gostr3412_2015_magma: String get() = "id\u002Dtc26\u002Dcipher\u002Dgostr3412\u002D2015\u002Dmagma"

const val NID_id_tc26_cipher_gostr3412_2015_magma: Int = 1173

val SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm: String get() = "id\u002Dtc26\u002Dcipher\u002Dgostr3412\u002D2015\u002Dmagma\u002Dctracpkm"

const val NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm: Int = 1174

val SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac: String get() = "id\u002Dtc26\u002Dcipher\u002Dgostr3412\u002D2015\u002Dmagma\u002Dctracpkm\u002Domac"

const val NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac: Int = 1175

val SN_id_tc26_cipher_gostr3412_2015_kuznyechik: String get() = "id\u002Dtc26\u002Dcipher\u002Dgostr3412\u002D2015\u002Dkuznyechik"

const val NID_id_tc26_cipher_gostr3412_2015_kuznyechik: Int = 1176

val SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm: String get() = "id\u002Dtc26\u002Dcipher\u002Dgostr3412\u002D2015\u002Dkuznyechik\u002Dctracpkm"

const val NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm: Int = 1177

val SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac: String get() = "id\u002Dtc26\u002Dcipher\u002Dgostr3412\u002D2015\u002Dkuznyechik\u002Dctracpkm\u002Domac"

const val NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac: Int = 1178

val SN_id_tc26_agreement: String get() = "id\u002Dtc26\u002Dagreement"

const val NID_id_tc26_agreement: Int = 991

val SN_id_tc26_agreement_gost_3410_2012_256: String get() = "id\u002Dtc26\u002Dagreement\u002Dgost\u002D3410\u002D2012\u002D256"

const val NID_id_tc26_agreement_gost_3410_2012_256: Int = 992

val SN_id_tc26_agreement_gost_3410_2012_512: String get() = "id\u002Dtc26\u002Dagreement\u002Dgost\u002D3410\u002D2012\u002D512"

const val NID_id_tc26_agreement_gost_3410_2012_512: Int = 993

val SN_id_tc26_wrap: String get() = "id\u002Dtc26\u002Dwrap"

const val NID_id_tc26_wrap: Int = 1179

val SN_id_tc26_wrap_gostr3412_2015_magma: String get() = "id\u002Dtc26\u002Dwrap\u002Dgostr3412\u002D2015\u002Dmagma"

const val NID_id_tc26_wrap_gostr3412_2015_magma: Int = 1180

val SN_id_tc26_wrap_gostr3412_2015_magma_kexp15: String get() = "id\u002Dtc26\u002Dwrap\u002Dgostr3412\u002D2015\u002Dmagma\u002Dkexp15"

const val NID_id_tc26_wrap_gostr3412_2015_magma_kexp15: Int = 1181

val SN_id_tc26_wrap_gostr3412_2015_kuznyechik: String get() = "id\u002Dtc26\u002Dwrap\u002Dgostr3412\u002D2015\u002Dkuznyechik"

const val NID_id_tc26_wrap_gostr3412_2015_kuznyechik: Int = 1182

val SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15: String get() = "id\u002Dtc26\u002Dwrap\u002Dgostr3412\u002D2015\u002Dkuznyechik\u002Dkexp15"

const val NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15: Int = 1183

val SN_id_tc26_constants: String get() = "id\u002Dtc26\u002Dconstants"

const val NID_id_tc26_constants: Int = 994

val SN_id_tc26_sign_constants: String get() = "id\u002Dtc26\u002Dsign\u002Dconstants"

const val NID_id_tc26_sign_constants: Int = 995

val SN_id_tc26_gost_3410_2012_256_constants: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D256\u002Dconstants"

const val NID_id_tc26_gost_3410_2012_256_constants: Int = 1147

val SN_id_tc26_gost_3410_2012_256_paramSetA: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D256\u002DparamSetA"

val LN_id_tc26_gost_3410_2012_256_paramSetA: String get() = "GOST R 34.10\u002D2012 (256 bit) ParamSet A"

const val NID_id_tc26_gost_3410_2012_256_paramSetA: Int = 1148

val SN_id_tc26_gost_3410_2012_256_paramSetB: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D256\u002DparamSetB"

val LN_id_tc26_gost_3410_2012_256_paramSetB: String get() = "GOST R 34.10\u002D2012 (256 bit) ParamSet B"

const val NID_id_tc26_gost_3410_2012_256_paramSetB: Int = 1184

val SN_id_tc26_gost_3410_2012_256_paramSetC: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D256\u002DparamSetC"

val LN_id_tc26_gost_3410_2012_256_paramSetC: String get() = "GOST R 34.10\u002D2012 (256 bit) ParamSet C"

const val NID_id_tc26_gost_3410_2012_256_paramSetC: Int = 1185

val SN_id_tc26_gost_3410_2012_256_paramSetD: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D256\u002DparamSetD"

val LN_id_tc26_gost_3410_2012_256_paramSetD: String get() = "GOST R 34.10\u002D2012 (256 bit) ParamSet D"

const val NID_id_tc26_gost_3410_2012_256_paramSetD: Int = 1186

val SN_id_tc26_gost_3410_2012_512_constants: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D512\u002Dconstants"

const val NID_id_tc26_gost_3410_2012_512_constants: Int = 996

val SN_id_tc26_gost_3410_2012_512_paramSetTest: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D512\u002DparamSetTest"

val LN_id_tc26_gost_3410_2012_512_paramSetTest: String get() = "GOST R 34.10\u002D2012 (512 bit) testing parameter set"

const val NID_id_tc26_gost_3410_2012_512_paramSetTest: Int = 997

val SN_id_tc26_gost_3410_2012_512_paramSetA: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D512\u002DparamSetA"

val LN_id_tc26_gost_3410_2012_512_paramSetA: String get() = "GOST R 34.10\u002D2012 (512 bit) ParamSet A"

const val NID_id_tc26_gost_3410_2012_512_paramSetA: Int = 998

val SN_id_tc26_gost_3410_2012_512_paramSetB: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D512\u002DparamSetB"

val LN_id_tc26_gost_3410_2012_512_paramSetB: String get() = "GOST R 34.10\u002D2012 (512 bit) ParamSet B"

const val NID_id_tc26_gost_3410_2012_512_paramSetB: Int = 999

val SN_id_tc26_gost_3410_2012_512_paramSetC: String get() = "id\u002Dtc26\u002Dgost\u002D3410\u002D2012\u002D512\u002DparamSetC"

val LN_id_tc26_gost_3410_2012_512_paramSetC: String get() = "GOST R 34.10\u002D2012 (512 bit) ParamSet C"

const val NID_id_tc26_gost_3410_2012_512_paramSetC: Int = 1149

val SN_id_tc26_digest_constants: String get() = "id\u002Dtc26\u002Ddigest\u002Dconstants"

const val NID_id_tc26_digest_constants: Int = 1000

val SN_id_tc26_cipher_constants: String get() = "id\u002Dtc26\u002Dcipher\u002Dconstants"

const val NID_id_tc26_cipher_constants: Int = 1001

val SN_id_tc26_gost_28147_constants: String get() = "id\u002Dtc26\u002Dgost\u002D28147\u002Dconstants"

const val NID_id_tc26_gost_28147_constants: Int = 1002

val SN_id_tc26_gost_28147_param_Z: String get() = "id\u002Dtc26\u002Dgost\u002D28147\u002Dparam\u002DZ"

val LN_id_tc26_gost_28147_param_Z: String get() = "GOST 28147\u002D89 TC26 parameter set"

const val NID_id_tc26_gost_28147_param_Z: Int = 1003

val SN_INN: String get() = "INN"

val LN_INN: String get() = "INN"

const val NID_INN: Int = 1004

val SN_OGRN: String get() = "OGRN"

val LN_OGRN: String get() = "OGRN"

const val NID_OGRN: Int = 1005

val SN_SNILS: String get() = "SNILS"

val LN_SNILS: String get() = "SNILS"

const val NID_SNILS: Int = 1006

val SN_subjectSignTool: String get() = "subjectSignTool"

val LN_subjectSignTool: String get() = "Signing Tool of Subject"

const val NID_subjectSignTool: Int = 1007

val SN_issuerSignTool: String get() = "issuerSignTool"

val LN_issuerSignTool: String get() = "Signing Tool of Issuer"

const val NID_issuerSignTool: Int = 1008

val SN_grasshopper_ecb: String get() = "grasshopper\u002Decb"

const val NID_grasshopper_ecb: Int = 1012

val SN_grasshopper_ctr: String get() = "grasshopper\u002Dctr"

const val NID_grasshopper_ctr: Int = 1013

val SN_grasshopper_ofb: String get() = "grasshopper\u002Dofb"

const val NID_grasshopper_ofb: Int = 1014

val SN_grasshopper_cbc: String get() = "grasshopper\u002Dcbc"

const val NID_grasshopper_cbc: Int = 1015

val SN_grasshopper_cfb: String get() = "grasshopper\u002Dcfb"

const val NID_grasshopper_cfb: Int = 1016

val SN_grasshopper_mac: String get() = "grasshopper\u002Dmac"

const val NID_grasshopper_mac: Int = 1017

val SN_magma_ecb: String get() = "magma\u002Decb"

const val NID_magma_ecb: Int = 1187

val SN_magma_ctr: String get() = "magma\u002Dctr"

const val NID_magma_ctr: Int = 1188

val SN_magma_ofb: String get() = "magma\u002Dofb"

const val NID_magma_ofb: Int = 1189

val SN_magma_cbc: String get() = "magma\u002Dcbc"

const val NID_magma_cbc: Int = 1190

val SN_magma_cfb: String get() = "magma\u002Dcfb"

const val NID_magma_cfb: Int = 1191

val SN_magma_mac: String get() = "magma\u002Dmac"

const val NID_magma_mac: Int = 1192

val SN_camellia_128_cbc: String get() = "CAMELLIA\u002D128\u002DCBC"

val LN_camellia_128_cbc: String get() = "camellia\u002D128\u002Dcbc"

const val NID_camellia_128_cbc: Int = 751

val SN_camellia_192_cbc: String get() = "CAMELLIA\u002D192\u002DCBC"

val LN_camellia_192_cbc: String get() = "camellia\u002D192\u002Dcbc"

const val NID_camellia_192_cbc: Int = 752

val SN_camellia_256_cbc: String get() = "CAMELLIA\u002D256\u002DCBC"

val LN_camellia_256_cbc: String get() = "camellia\u002D256\u002Dcbc"

const val NID_camellia_256_cbc: Int = 753

val SN_id_camellia128_wrap: String get() = "id\u002Dcamellia128\u002Dwrap"

const val NID_id_camellia128_wrap: Int = 907

val SN_id_camellia192_wrap: String get() = "id\u002Dcamellia192\u002Dwrap"

const val NID_id_camellia192_wrap: Int = 908

val SN_id_camellia256_wrap: String get() = "id\u002Dcamellia256\u002Dwrap"

const val NID_id_camellia256_wrap: Int = 909

val SN_camellia_128_ecb: String get() = "CAMELLIA\u002D128\u002DECB"

val LN_camellia_128_ecb: String get() = "camellia\u002D128\u002Decb"

const val NID_camellia_128_ecb: Int = 754

val SN_camellia_128_ofb128: String get() = "CAMELLIA\u002D128\u002DOFB"

val LN_camellia_128_ofb128: String get() = "camellia\u002D128\u002Dofb"

const val NID_camellia_128_ofb128: Int = 766

val SN_camellia_128_cfb128: String get() = "CAMELLIA\u002D128\u002DCFB"

val LN_camellia_128_cfb128: String get() = "camellia\u002D128\u002Dcfb"

const val NID_camellia_128_cfb128: Int = 757

val SN_camellia_128_gcm: String get() = "CAMELLIA\u002D128\u002DGCM"

val LN_camellia_128_gcm: String get() = "camellia\u002D128\u002Dgcm"

const val NID_camellia_128_gcm: Int = 961

val SN_camellia_128_ccm: String get() = "CAMELLIA\u002D128\u002DCCM"

val LN_camellia_128_ccm: String get() = "camellia\u002D128\u002Dccm"

const val NID_camellia_128_ccm: Int = 962

val SN_camellia_128_ctr: String get() = "CAMELLIA\u002D128\u002DCTR"

val LN_camellia_128_ctr: String get() = "camellia\u002D128\u002Dctr"

const val NID_camellia_128_ctr: Int = 963

val SN_camellia_128_cmac: String get() = "CAMELLIA\u002D128\u002DCMAC"

val LN_camellia_128_cmac: String get() = "camellia\u002D128\u002Dcmac"

const val NID_camellia_128_cmac: Int = 964

val SN_camellia_192_ecb: String get() = "CAMELLIA\u002D192\u002DECB"

val LN_camellia_192_ecb: String get() = "camellia\u002D192\u002Decb"

const val NID_camellia_192_ecb: Int = 755

val SN_camellia_192_ofb128: String get() = "CAMELLIA\u002D192\u002DOFB"

val LN_camellia_192_ofb128: String get() = "camellia\u002D192\u002Dofb"

const val NID_camellia_192_ofb128: Int = 767

val SN_camellia_192_cfb128: String get() = "CAMELLIA\u002D192\u002DCFB"

val LN_camellia_192_cfb128: String get() = "camellia\u002D192\u002Dcfb"

const val NID_camellia_192_cfb128: Int = 758

val SN_camellia_192_gcm: String get() = "CAMELLIA\u002D192\u002DGCM"

val LN_camellia_192_gcm: String get() = "camellia\u002D192\u002Dgcm"

const val NID_camellia_192_gcm: Int = 965

val SN_camellia_192_ccm: String get() = "CAMELLIA\u002D192\u002DCCM"

val LN_camellia_192_ccm: String get() = "camellia\u002D192\u002Dccm"

const val NID_camellia_192_ccm: Int = 966

val SN_camellia_192_ctr: String get() = "CAMELLIA\u002D192\u002DCTR"

val LN_camellia_192_ctr: String get() = "camellia\u002D192\u002Dctr"

const val NID_camellia_192_ctr: Int = 967

val SN_camellia_192_cmac: String get() = "CAMELLIA\u002D192\u002DCMAC"

val LN_camellia_192_cmac: String get() = "camellia\u002D192\u002Dcmac"

const val NID_camellia_192_cmac: Int = 968

val SN_camellia_256_ecb: String get() = "CAMELLIA\u002D256\u002DECB"

val LN_camellia_256_ecb: String get() = "camellia\u002D256\u002Decb"

const val NID_camellia_256_ecb: Int = 756

val SN_camellia_256_ofb128: String get() = "CAMELLIA\u002D256\u002DOFB"

val LN_camellia_256_ofb128: String get() = "camellia\u002D256\u002Dofb"

const val NID_camellia_256_ofb128: Int = 768

val SN_camellia_256_cfb128: String get() = "CAMELLIA\u002D256\u002DCFB"

val LN_camellia_256_cfb128: String get() = "camellia\u002D256\u002Dcfb"

const val NID_camellia_256_cfb128: Int = 759

val SN_camellia_256_gcm: String get() = "CAMELLIA\u002D256\u002DGCM"

val LN_camellia_256_gcm: String get() = "camellia\u002D256\u002Dgcm"

const val NID_camellia_256_gcm: Int = 969

val SN_camellia_256_ccm: String get() = "CAMELLIA\u002D256\u002DCCM"

val LN_camellia_256_ccm: String get() = "camellia\u002D256\u002Dccm"

const val NID_camellia_256_ccm: Int = 970

val SN_camellia_256_ctr: String get() = "CAMELLIA\u002D256\u002DCTR"

val LN_camellia_256_ctr: String get() = "camellia\u002D256\u002Dctr"

const val NID_camellia_256_ctr: Int = 971

val SN_camellia_256_cmac: String get() = "CAMELLIA\u002D256\u002DCMAC"

val LN_camellia_256_cmac: String get() = "camellia\u002D256\u002Dcmac"

const val NID_camellia_256_cmac: Int = 972

val SN_camellia_128_cfb1: String get() = "CAMELLIA\u002D128\u002DCFB1"

val LN_camellia_128_cfb1: String get() = "camellia\u002D128\u002Dcfb1"

const val NID_camellia_128_cfb1: Int = 760

val SN_camellia_192_cfb1: String get() = "CAMELLIA\u002D192\u002DCFB1"

val LN_camellia_192_cfb1: String get() = "camellia\u002D192\u002Dcfb1"

const val NID_camellia_192_cfb1: Int = 761

val SN_camellia_256_cfb1: String get() = "CAMELLIA\u002D256\u002DCFB1"

val LN_camellia_256_cfb1: String get() = "camellia\u002D256\u002Dcfb1"

const val NID_camellia_256_cfb1: Int = 762

val SN_camellia_128_cfb8: String get() = "CAMELLIA\u002D128\u002DCFB8"

val LN_camellia_128_cfb8: String get() = "camellia\u002D128\u002Dcfb8"

const val NID_camellia_128_cfb8: Int = 763

val SN_camellia_192_cfb8: String get() = "CAMELLIA\u002D192\u002DCFB8"

val LN_camellia_192_cfb8: String get() = "camellia\u002D192\u002Dcfb8"

const val NID_camellia_192_cfb8: Int = 764

val SN_camellia_256_cfb8: String get() = "CAMELLIA\u002D256\u002DCFB8"

val LN_camellia_256_cfb8: String get() = "camellia\u002D256\u002Dcfb8"

const val NID_camellia_256_cfb8: Int = 765

val SN_aria_128_ecb: String get() = "ARIA\u002D128\u002DECB"

val LN_aria_128_ecb: String get() = "aria\u002D128\u002Decb"

const val NID_aria_128_ecb: Int = 1065

val SN_aria_128_cbc: String get() = "ARIA\u002D128\u002DCBC"

val LN_aria_128_cbc: String get() = "aria\u002D128\u002Dcbc"

const val NID_aria_128_cbc: Int = 1066

val SN_aria_128_cfb128: String get() = "ARIA\u002D128\u002DCFB"

val LN_aria_128_cfb128: String get() = "aria\u002D128\u002Dcfb"

const val NID_aria_128_cfb128: Int = 1067

val SN_aria_128_ofb128: String get() = "ARIA\u002D128\u002DOFB"

val LN_aria_128_ofb128: String get() = "aria\u002D128\u002Dofb"

const val NID_aria_128_ofb128: Int = 1068

val SN_aria_128_ctr: String get() = "ARIA\u002D128\u002DCTR"

val LN_aria_128_ctr: String get() = "aria\u002D128\u002Dctr"

const val NID_aria_128_ctr: Int = 1069

val SN_aria_192_ecb: String get() = "ARIA\u002D192\u002DECB"

val LN_aria_192_ecb: String get() = "aria\u002D192\u002Decb"

const val NID_aria_192_ecb: Int = 1070

val SN_aria_192_cbc: String get() = "ARIA\u002D192\u002DCBC"

val LN_aria_192_cbc: String get() = "aria\u002D192\u002Dcbc"

const val NID_aria_192_cbc: Int = 1071

val SN_aria_192_cfb128: String get() = "ARIA\u002D192\u002DCFB"

val LN_aria_192_cfb128: String get() = "aria\u002D192\u002Dcfb"

const val NID_aria_192_cfb128: Int = 1072

val SN_aria_192_ofb128: String get() = "ARIA\u002D192\u002DOFB"

val LN_aria_192_ofb128: String get() = "aria\u002D192\u002Dofb"

const val NID_aria_192_ofb128: Int = 1073

val SN_aria_192_ctr: String get() = "ARIA\u002D192\u002DCTR"

val LN_aria_192_ctr: String get() = "aria\u002D192\u002Dctr"

const val NID_aria_192_ctr: Int = 1074

val SN_aria_256_ecb: String get() = "ARIA\u002D256\u002DECB"

val LN_aria_256_ecb: String get() = "aria\u002D256\u002Decb"

const val NID_aria_256_ecb: Int = 1075

val SN_aria_256_cbc: String get() = "ARIA\u002D256\u002DCBC"

val LN_aria_256_cbc: String get() = "aria\u002D256\u002Dcbc"

const val NID_aria_256_cbc: Int = 1076

val SN_aria_256_cfb128: String get() = "ARIA\u002D256\u002DCFB"

val LN_aria_256_cfb128: String get() = "aria\u002D256\u002Dcfb"

const val NID_aria_256_cfb128: Int = 1077

val SN_aria_256_ofb128: String get() = "ARIA\u002D256\u002DOFB"

val LN_aria_256_ofb128: String get() = "aria\u002D256\u002Dofb"

const val NID_aria_256_ofb128: Int = 1078

val SN_aria_256_ctr: String get() = "ARIA\u002D256\u002DCTR"

val LN_aria_256_ctr: String get() = "aria\u002D256\u002Dctr"

const val NID_aria_256_ctr: Int = 1079

val SN_aria_128_cfb1: String get() = "ARIA\u002D128\u002DCFB1"

val LN_aria_128_cfb1: String get() = "aria\u002D128\u002Dcfb1"

const val NID_aria_128_cfb1: Int = 1080

val SN_aria_192_cfb1: String get() = "ARIA\u002D192\u002DCFB1"

val LN_aria_192_cfb1: String get() = "aria\u002D192\u002Dcfb1"

const val NID_aria_192_cfb1: Int = 1081

val SN_aria_256_cfb1: String get() = "ARIA\u002D256\u002DCFB1"

val LN_aria_256_cfb1: String get() = "aria\u002D256\u002Dcfb1"

const val NID_aria_256_cfb1: Int = 1082

val SN_aria_128_cfb8: String get() = "ARIA\u002D128\u002DCFB8"

val LN_aria_128_cfb8: String get() = "aria\u002D128\u002Dcfb8"

const val NID_aria_128_cfb8: Int = 1083

val SN_aria_192_cfb8: String get() = "ARIA\u002D192\u002DCFB8"

val LN_aria_192_cfb8: String get() = "aria\u002D192\u002Dcfb8"

const val NID_aria_192_cfb8: Int = 1084

val SN_aria_256_cfb8: String get() = "ARIA\u002D256\u002DCFB8"

val LN_aria_256_cfb8: String get() = "aria\u002D256\u002Dcfb8"

const val NID_aria_256_cfb8: Int = 1085

val SN_aria_128_ccm: String get() = "ARIA\u002D128\u002DCCM"

val LN_aria_128_ccm: String get() = "aria\u002D128\u002Dccm"

const val NID_aria_128_ccm: Int = 1120

val SN_aria_192_ccm: String get() = "ARIA\u002D192\u002DCCM"

val LN_aria_192_ccm: String get() = "aria\u002D192\u002Dccm"

const val NID_aria_192_ccm: Int = 1121

val SN_aria_256_ccm: String get() = "ARIA\u002D256\u002DCCM"

val LN_aria_256_ccm: String get() = "aria\u002D256\u002Dccm"

const val NID_aria_256_ccm: Int = 1122

val SN_aria_128_gcm: String get() = "ARIA\u002D128\u002DGCM"

val LN_aria_128_gcm: String get() = "aria\u002D128\u002Dgcm"

const val NID_aria_128_gcm: Int = 1123

val SN_aria_192_gcm: String get() = "ARIA\u002D192\u002DGCM"

val LN_aria_192_gcm: String get() = "aria\u002D192\u002Dgcm"

const val NID_aria_192_gcm: Int = 1124

val SN_aria_256_gcm: String get() = "ARIA\u002D256\u002DGCM"

val LN_aria_256_gcm: String get() = "aria\u002D256\u002Dgcm"

const val NID_aria_256_gcm: Int = 1125

val SN_kisa: String get() = "KISA"

val LN_kisa: String get() = "kisa"

const val NID_kisa: Int = 773

val SN_seed_ecb: String get() = "SEED\u002DECB"

val LN_seed_ecb: String get() = "seed\u002Decb"

const val NID_seed_ecb: Int = 776

val SN_seed_cbc: String get() = "SEED\u002DCBC"

val LN_seed_cbc: String get() = "seed\u002Dcbc"

const val NID_seed_cbc: Int = 777

val SN_seed_cfb128: String get() = "SEED\u002DCFB"

val LN_seed_cfb128: String get() = "seed\u002Dcfb"

const val NID_seed_cfb128: Int = 779

val SN_seed_ofb128: String get() = "SEED\u002DOFB"

val LN_seed_ofb128: String get() = "seed\u002Dofb"

const val NID_seed_ofb128: Int = 778

val SN_sm4_ecb: String get() = "SM4\u002DECB"

val LN_sm4_ecb: String get() = "sm4\u002Decb"

const val NID_sm4_ecb: Int = 1133

val SN_sm4_cbc: String get() = "SM4\u002DCBC"

val LN_sm4_cbc: String get() = "sm4\u002Dcbc"

const val NID_sm4_cbc: Int = 1134

val SN_sm4_ofb128: String get() = "SM4\u002DOFB"

val LN_sm4_ofb128: String get() = "sm4\u002Dofb"

const val NID_sm4_ofb128: Int = 1135

val SN_sm4_cfb128: String get() = "SM4\u002DCFB"

val LN_sm4_cfb128: String get() = "sm4\u002Dcfb"

const val NID_sm4_cfb128: Int = 1137

val SN_sm4_cfb1: String get() = "SM4\u002DCFB1"

val LN_sm4_cfb1: String get() = "sm4\u002Dcfb1"

const val NID_sm4_cfb1: Int = 1136

val SN_sm4_cfb8: String get() = "SM4\u002DCFB8"

val LN_sm4_cfb8: String get() = "sm4\u002Dcfb8"

const val NID_sm4_cfb8: Int = 1138

val SN_sm4_ctr: String get() = "SM4\u002DCTR"

val LN_sm4_ctr: String get() = "sm4\u002Dctr"

const val NID_sm4_ctr: Int = 1139

val SN_hmac: String get() = "HMAC"

val LN_hmac: String get() = "hmac"

const val NID_hmac: Int = 855

val SN_cmac: String get() = "CMAC"

val LN_cmac: String get() = "cmac"

const val NID_cmac: Int = 894

val SN_rc4_hmac_md5: String get() = "RC4\u002DHMAC\u002DMD5"

val LN_rc4_hmac_md5: String get() = "rc4\u002Dhmac\u002Dmd5"

const val NID_rc4_hmac_md5: Int = 915

val SN_aes_128_cbc_hmac_sha1: String get() = "AES\u002D128\u002DCBC\u002DHMAC\u002DSHA1"

val LN_aes_128_cbc_hmac_sha1: String get() = "aes\u002D128\u002Dcbc\u002Dhmac\u002Dsha1"

const val NID_aes_128_cbc_hmac_sha1: Int = 916

val SN_aes_192_cbc_hmac_sha1: String get() = "AES\u002D192\u002DCBC\u002DHMAC\u002DSHA1"

val LN_aes_192_cbc_hmac_sha1: String get() = "aes\u002D192\u002Dcbc\u002Dhmac\u002Dsha1"

const val NID_aes_192_cbc_hmac_sha1: Int = 917

val SN_aes_256_cbc_hmac_sha1: String get() = "AES\u002D256\u002DCBC\u002DHMAC\u002DSHA1"

val LN_aes_256_cbc_hmac_sha1: String get() = "aes\u002D256\u002Dcbc\u002Dhmac\u002Dsha1"

const val NID_aes_256_cbc_hmac_sha1: Int = 918

val SN_aes_128_cbc_hmac_sha256: String get() = "AES\u002D128\u002DCBC\u002DHMAC\u002DSHA256"

val LN_aes_128_cbc_hmac_sha256: String get() = "aes\u002D128\u002Dcbc\u002Dhmac\u002Dsha256"

const val NID_aes_128_cbc_hmac_sha256: Int = 948

val SN_aes_192_cbc_hmac_sha256: String get() = "AES\u002D192\u002DCBC\u002DHMAC\u002DSHA256"

val LN_aes_192_cbc_hmac_sha256: String get() = "aes\u002D192\u002Dcbc\u002Dhmac\u002Dsha256"

const val NID_aes_192_cbc_hmac_sha256: Int = 949

val SN_aes_256_cbc_hmac_sha256: String get() = "AES\u002D256\u002DCBC\u002DHMAC\u002DSHA256"

val LN_aes_256_cbc_hmac_sha256: String get() = "aes\u002D256\u002Dcbc\u002Dhmac\u002Dsha256"

const val NID_aes_256_cbc_hmac_sha256: Int = 950

val SN_chacha20_poly1305: String get() = "ChaCha20\u002DPoly1305"

val LN_chacha20_poly1305: String get() = "chacha20\u002Dpoly1305"

const val NID_chacha20_poly1305: Int = 1018

val SN_chacha20: String get() = "ChaCha20"

val LN_chacha20: String get() = "chacha20"

const val NID_chacha20: Int = 1019

val SN_dhpublicnumber: String get() = "dhpublicnumber"

val LN_dhpublicnumber: String get() = "X9.42 DH"

const val NID_dhpublicnumber: Int = 920

val SN_brainpoolP160r1: String get() = "brainpoolP160r1"

const val NID_brainpoolP160r1: Int = 921

val SN_brainpoolP160t1: String get() = "brainpoolP160t1"

const val NID_brainpoolP160t1: Int = 922

val SN_brainpoolP192r1: String get() = "brainpoolP192r1"

const val NID_brainpoolP192r1: Int = 923

val SN_brainpoolP192t1: String get() = "brainpoolP192t1"

const val NID_brainpoolP192t1: Int = 924

val SN_brainpoolP224r1: String get() = "brainpoolP224r1"

const val NID_brainpoolP224r1: Int = 925

val SN_brainpoolP224t1: String get() = "brainpoolP224t1"

const val NID_brainpoolP224t1: Int = 926

val SN_brainpoolP256r1: String get() = "brainpoolP256r1"

const val NID_brainpoolP256r1: Int = 927

val SN_brainpoolP256t1: String get() = "brainpoolP256t1"

const val NID_brainpoolP256t1: Int = 928

val SN_brainpoolP320r1: String get() = "brainpoolP320r1"

const val NID_brainpoolP320r1: Int = 929

val SN_brainpoolP320t1: String get() = "brainpoolP320t1"

const val NID_brainpoolP320t1: Int = 930

val SN_brainpoolP384r1: String get() = "brainpoolP384r1"

const val NID_brainpoolP384r1: Int = 931

val SN_brainpoolP384t1: String get() = "brainpoolP384t1"

const val NID_brainpoolP384t1: Int = 932

val SN_brainpoolP512r1: String get() = "brainpoolP512r1"

const val NID_brainpoolP512r1: Int = 933

val SN_brainpoolP512t1: String get() = "brainpoolP512t1"

const val NID_brainpoolP512t1: Int = 934

val SN_dhSinglePass_stdDH_sha1kdf_scheme: String get() = "dhSinglePass\u002DstdDH\u002Dsha1kdf\u002Dscheme"

const val NID_dhSinglePass_stdDH_sha1kdf_scheme: Int = 936

val SN_dhSinglePass_stdDH_sha224kdf_scheme: String get() = "dhSinglePass\u002DstdDH\u002Dsha224kdf\u002Dscheme"

const val NID_dhSinglePass_stdDH_sha224kdf_scheme: Int = 937

val SN_dhSinglePass_stdDH_sha256kdf_scheme: String get() = "dhSinglePass\u002DstdDH\u002Dsha256kdf\u002Dscheme"

const val NID_dhSinglePass_stdDH_sha256kdf_scheme: Int = 938

val SN_dhSinglePass_stdDH_sha384kdf_scheme: String get() = "dhSinglePass\u002DstdDH\u002Dsha384kdf\u002Dscheme"

const val NID_dhSinglePass_stdDH_sha384kdf_scheme: Int = 939

val SN_dhSinglePass_stdDH_sha512kdf_scheme: String get() = "dhSinglePass\u002DstdDH\u002Dsha512kdf\u002Dscheme"

const val NID_dhSinglePass_stdDH_sha512kdf_scheme: Int = 940

val SN_dhSinglePass_cofactorDH_sha1kdf_scheme: String get() = "dhSinglePass\u002DcofactorDH\u002Dsha1kdf\u002Dscheme"

const val NID_dhSinglePass_cofactorDH_sha1kdf_scheme: Int = 941

val SN_dhSinglePass_cofactorDH_sha224kdf_scheme: String get() = "dhSinglePass\u002DcofactorDH\u002Dsha224kdf\u002Dscheme"

const val NID_dhSinglePass_cofactorDH_sha224kdf_scheme: Int = 942

val SN_dhSinglePass_cofactorDH_sha256kdf_scheme: String get() = "dhSinglePass\u002DcofactorDH\u002Dsha256kdf\u002Dscheme"

const val NID_dhSinglePass_cofactorDH_sha256kdf_scheme: Int = 943

val SN_dhSinglePass_cofactorDH_sha384kdf_scheme: String get() = "dhSinglePass\u002DcofactorDH\u002Dsha384kdf\u002Dscheme"

const val NID_dhSinglePass_cofactorDH_sha384kdf_scheme: Int = 944

val SN_dhSinglePass_cofactorDH_sha512kdf_scheme: String get() = "dhSinglePass\u002DcofactorDH\u002Dsha512kdf\u002Dscheme"

const val NID_dhSinglePass_cofactorDH_sha512kdf_scheme: Int = 945

val SN_dh_std_kdf: String get() = "dh\u002Dstd\u002Dkdf"

const val NID_dh_std_kdf: Int = 946

val SN_dh_cofactor_kdf: String get() = "dh\u002Dcofactor\u002Dkdf"

const val NID_dh_cofactor_kdf: Int = 947

val SN_ct_precert_scts: String get() = "ct_precert_scts"

val LN_ct_precert_scts: String get() = "CT Precertificate SCTs"

const val NID_ct_precert_scts: Int = 951

val SN_ct_precert_poison: String get() = "ct_precert_poison"

val LN_ct_precert_poison: String get() = "CT Precertificate Poison"

const val NID_ct_precert_poison: Int = 952

val SN_ct_precert_signer: String get() = "ct_precert_signer"

val LN_ct_precert_signer: String get() = "CT Precertificate Signer"

const val NID_ct_precert_signer: Int = 953

val SN_ct_cert_scts: String get() = "ct_cert_scts"

val LN_ct_cert_scts: String get() = "CT Certificate SCTs"

const val NID_ct_cert_scts: Int = 954

val SN_jurisdictionLocalityName: String get() = "jurisdictionL"

val LN_jurisdictionLocalityName: String get() = "jurisdictionLocalityName"

const val NID_jurisdictionLocalityName: Int = 955

val SN_jurisdictionStateOrProvinceName: String get() = "jurisdictionST"

val LN_jurisdictionStateOrProvinceName: String get() = "jurisdictionStateOrProvinceName"

const val NID_jurisdictionStateOrProvinceName: Int = 956

val SN_jurisdictionCountryName: String get() = "jurisdictionC"

val LN_jurisdictionCountryName: String get() = "jurisdictionCountryName"

const val NID_jurisdictionCountryName: Int = 957

val SN_id_scrypt: String get() = "id\u002Dscrypt"

val LN_id_scrypt: String get() = "scrypt"

const val NID_id_scrypt: Int = 973

val SN_tls1_prf: String get() = "TLS1\u002DPRF"

val LN_tls1_prf: String get() = "tls1\u002Dprf"

const val NID_tls1_prf: Int = 1021

val SN_hkdf: String get() = "HKDF"

val LN_hkdf: String get() = "hkdf"

const val NID_hkdf: Int = 1036

val SN_id_pkinit: String get() = "id\u002Dpkinit"

const val NID_id_pkinit: Int = 1031

val SN_pkInitClientAuth: String get() = "pkInitClientAuth"

val LN_pkInitClientAuth: String get() = "PKINIT Client Auth"

const val NID_pkInitClientAuth: Int = 1032

val SN_pkInitKDC: String get() = "pkInitKDC"

val LN_pkInitKDC: String get() = "Signing KDC Response"

const val NID_pkInitKDC: Int = 1033

val SN_X25519: String get() = "X25519"

const val NID_X25519: Int = 1034

val SN_X448: String get() = "X448"

const val NID_X448: Int = 1035

val SN_ED25519: String get() = "ED25519"

const val NID_ED25519: Int = 1087

val SN_ED448: String get() = "ED448"

const val NID_ED448: Int = 1088

val SN_kx_rsa: String get() = "KxRSA"

val LN_kx_rsa: String get() = "kx\u002Drsa"

const val NID_kx_rsa: Int = 1037

val SN_kx_ecdhe: String get() = "KxECDHE"

val LN_kx_ecdhe: String get() = "kx\u002Decdhe"

const val NID_kx_ecdhe: Int = 1038

val SN_kx_dhe: String get() = "KxDHE"

val LN_kx_dhe: String get() = "kx\u002Ddhe"

const val NID_kx_dhe: Int = 1039

val SN_kx_ecdhe_psk: String get() = "KxECDHE\u002DPSK"

val LN_kx_ecdhe_psk: String get() = "kx\u002Decdhe\u002Dpsk"

const val NID_kx_ecdhe_psk: Int = 1040

val SN_kx_dhe_psk: String get() = "KxDHE\u002DPSK"

val LN_kx_dhe_psk: String get() = "kx\u002Ddhe\u002Dpsk"

const val NID_kx_dhe_psk: Int = 1041

val SN_kx_rsa_psk: String get() = "KxRSA_PSK"

val LN_kx_rsa_psk: String get() = "kx\u002Drsa\u002Dpsk"

const val NID_kx_rsa_psk: Int = 1042

val SN_kx_psk: String get() = "KxPSK"

val LN_kx_psk: String get() = "kx\u002Dpsk"

const val NID_kx_psk: Int = 1043

val SN_kx_srp: String get() = "KxSRP"

val LN_kx_srp: String get() = "kx\u002Dsrp"

const val NID_kx_srp: Int = 1044

val SN_kx_gost: String get() = "KxGOST"

val LN_kx_gost: String get() = "kx\u002Dgost"

const val NID_kx_gost: Int = 1045

val SN_kx_any: String get() = "KxANY"

val LN_kx_any: String get() = "kx\u002Dany"

const val NID_kx_any: Int = 1063

val SN_auth_rsa: String get() = "AuthRSA"

val LN_auth_rsa: String get() = "auth\u002Drsa"

const val NID_auth_rsa: Int = 1046

val SN_auth_ecdsa: String get() = "AuthECDSA"

val LN_auth_ecdsa: String get() = "auth\u002Decdsa"

const val NID_auth_ecdsa: Int = 1047

val SN_auth_psk: String get() = "AuthPSK"

val LN_auth_psk: String get() = "auth\u002Dpsk"

const val NID_auth_psk: Int = 1048

val SN_auth_dss: String get() = "AuthDSS"

val LN_auth_dss: String get() = "auth\u002Ddss"

const val NID_auth_dss: Int = 1049

val SN_auth_gost01: String get() = "AuthGOST01"

val LN_auth_gost01: String get() = "auth\u002Dgost01"

const val NID_auth_gost01: Int = 1050

val SN_auth_gost12: String get() = "AuthGOST12"

val LN_auth_gost12: String get() = "auth\u002Dgost12"

const val NID_auth_gost12: Int = 1051

val SN_auth_srp: String get() = "AuthSRP"

val LN_auth_srp: String get() = "auth\u002Dsrp"

const val NID_auth_srp: Int = 1052

val SN_auth_null: String get() = "AuthNULL"

val LN_auth_null: String get() = "auth\u002Dnull"

const val NID_auth_null: Int = 1053

val SN_auth_any: String get() = "AuthANY"

val LN_auth_any: String get() = "auth\u002Dany"

const val NID_auth_any: Int = 1064

val SN_poly1305: String get() = "Poly1305"

val LN_poly1305: String get() = "poly1305"

const val NID_poly1305: Int = 1061

val SN_siphash: String get() = "SipHash"

val LN_siphash: String get() = "siphash"

const val NID_siphash: Int = 1062

val SN_ffdhe2048: String get() = "ffdhe2048"

const val NID_ffdhe2048: Int = 1126

val SN_ffdhe3072: String get() = "ffdhe3072"

const val NID_ffdhe3072: Int = 1127

val SN_ffdhe4096: String get() = "ffdhe4096"

const val NID_ffdhe4096: Int = 1128

val SN_ffdhe6144: String get() = "ffdhe6144"

const val NID_ffdhe6144: Int = 1129

val SN_ffdhe8192: String get() = "ffdhe8192"

const val NID_ffdhe8192: Int = 1130

val SN_ISO_UA: String get() = "ISO\u002DUA"

const val NID_ISO_UA: Int = 1150

val SN_ua_pki: String get() = "ua\u002Dpki"

const val NID_ua_pki: Int = 1151

val SN_dstu28147: String get() = "dstu28147"

val LN_dstu28147: String get() = "DSTU Gost 28147\u002D2009"

const val NID_dstu28147: Int = 1152

val SN_dstu28147_ofb: String get() = "dstu28147\u002Dofb"

val LN_dstu28147_ofb: String get() = "DSTU Gost 28147\u002D2009 OFB mode"

const val NID_dstu28147_ofb: Int = 1153

val SN_dstu28147_cfb: String get() = "dstu28147\u002Dcfb"

val LN_dstu28147_cfb: String get() = "DSTU Gost 28147\u002D2009 CFB mode"

const val NID_dstu28147_cfb: Int = 1154

val SN_dstu28147_wrap: String get() = "dstu28147\u002Dwrap"

val LN_dstu28147_wrap: String get() = "DSTU Gost 28147\u002D2009 key wrap"

const val NID_dstu28147_wrap: Int = 1155

val SN_hmacWithDstu34311: String get() = "hmacWithDstu34311"

val LN_hmacWithDstu34311: String get() = "HMAC DSTU Gost 34311\u002D95"

const val NID_hmacWithDstu34311: Int = 1156

val SN_dstu34311: String get() = "dstu34311"

val LN_dstu34311: String get() = "DSTU Gost 34311\u002D95"

const val NID_dstu34311: Int = 1157

val SN_dstu4145le: String get() = "dstu4145le"

val LN_dstu4145le: String get() = "DSTU 4145\u002D2002 little endian"

const val NID_dstu4145le: Int = 1158

val SN_dstu4145be: String get() = "dstu4145be"

val LN_dstu4145be: String get() = "DSTU 4145\u002D2002 big endian"

const val NID_dstu4145be: Int = 1159

val SN_uacurve0: String get() = "uacurve0"

val LN_uacurve0: String get() = "DSTU curve 0"

const val NID_uacurve0: Int = 1160

val SN_uacurve1: String get() = "uacurve1"

val LN_uacurve1: String get() = "DSTU curve 1"

const val NID_uacurve1: Int = 1161

val SN_uacurve2: String get() = "uacurve2"

val LN_uacurve2: String get() = "DSTU curve 2"

const val NID_uacurve2: Int = 1162

val SN_uacurve3: String get() = "uacurve3"

val LN_uacurve3: String get() = "DSTU curve 3"

const val NID_uacurve3: Int = 1163

val SN_uacurve4: String get() = "uacurve4"

val LN_uacurve4: String get() = "DSTU curve 4"

const val NID_uacurve4: Int = 1164

val SN_uacurve5: String get() = "uacurve5"

val LN_uacurve5: String get() = "DSTU curve 5"

const val NID_uacurve5: Int = 1165

val SN_uacurve6: String get() = "uacurve6"

val LN_uacurve6: String get() = "DSTU curve 6"

const val NID_uacurve6: Int = 1166

val SN_uacurve7: String get() = "uacurve7"

val LN_uacurve7: String get() = "DSTU curve 7"

const val NID_uacurve7: Int = 1167

val SN_uacurve8: String get() = "uacurve8"

val LN_uacurve8: String get() = "DSTU curve 8"

const val NID_uacurve8: Int = 1168

val SN_uacurve9: String get() = "uacurve9"

val LN_uacurve9: String get() = "DSTU curve 9"

const val NID_uacurve9: Int = 1169

const val ASN1_F_A2D_ASN1_OBJECT: Int = 100

const val ASN1_F_A2I_ASN1_INTEGER: Int = 102

const val ASN1_F_A2I_ASN1_STRING: Int = 103

const val ASN1_F_APPEND_EXP: Int = 176

const val ASN1_F_ASN1_BIO_INIT: Int = 113

const val ASN1_F_ASN1_BIT_STRING_SET_BIT: Int = 183

const val ASN1_F_ASN1_CB: Int = 177

const val ASN1_F_ASN1_CHECK_TLEN: Int = 104

const val ASN1_F_ASN1_COLLECT: Int = 106

const val ASN1_F_ASN1_D2I_EX_PRIMITIVE: Int = 108

const val ASN1_F_ASN1_D2I_FP: Int = 109

const val ASN1_F_ASN1_D2I_READ_BIO: Int = 107

const val ASN1_F_ASN1_DIGEST: Int = 184

const val ASN1_F_ASN1_DO_ADB: Int = 110

const val ASN1_F_ASN1_DO_LOCK: Int = 233

const val ASN1_F_ASN1_DUP: Int = 111

const val ASN1_F_ASN1_ENC_SAVE: Int = 115

const val ASN1_F_ASN1_EX_C2I: Int = 204

const val ASN1_F_ASN1_FIND_END: Int = 190

const val ASN1_F_ASN1_GENERALIZEDTIME_ADJ: Int = 216

const val ASN1_F_ASN1_GENERATE_V3: Int = 178

const val ASN1_F_ASN1_GET_INT64: Int = 224

const val ASN1_F_ASN1_GET_OBJECT: Int = 114

const val ASN1_F_ASN1_GET_UINT64: Int = 225

const val ASN1_F_ASN1_I2D_BIO: Int = 116

const val ASN1_F_ASN1_I2D_FP: Int = 117

const val ASN1_F_ASN1_ITEM_D2I_FP: Int = 206

const val ASN1_F_ASN1_ITEM_DUP: Int = 191

const val ASN1_F_ASN1_ITEM_EMBED_D2I: Int = 120

const val ASN1_F_ASN1_ITEM_EMBED_NEW: Int = 121

const val ASN1_F_ASN1_ITEM_FLAGS_I2D: Int = 118

const val ASN1_F_ASN1_ITEM_I2D_BIO: Int = 192

const val ASN1_F_ASN1_ITEM_I2D_FP: Int = 193

const val ASN1_F_ASN1_ITEM_PACK: Int = 198

const val ASN1_F_ASN1_ITEM_SIGN: Int = 195

const val ASN1_F_ASN1_ITEM_SIGN_CTX: Int = 220

const val ASN1_F_ASN1_ITEM_UNPACK: Int = 199

const val ASN1_F_ASN1_ITEM_VERIFY: Int = 197

const val ASN1_F_ASN1_MBSTRING_NCOPY: Int = 122

const val ASN1_F_ASN1_OBJECT_NEW: Int = 123

const val ASN1_F_ASN1_OUTPUT_DATA: Int = 214

const val ASN1_F_ASN1_PCTX_NEW: Int = 205

const val ASN1_F_ASN1_PRIMITIVE_NEW: Int = 119

const val ASN1_F_ASN1_SCTX_NEW: Int = 221

const val ASN1_F_ASN1_SIGN: Int = 128

const val ASN1_F_ASN1_STR2TYPE: Int = 179

const val ASN1_F_ASN1_STRING_GET_INT64: Int = 227

const val ASN1_F_ASN1_STRING_GET_UINT64: Int = 230

const val ASN1_F_ASN1_STRING_SET: Int = 186

const val ASN1_F_ASN1_STRING_TABLE_ADD: Int = 129

const val ASN1_F_ASN1_STRING_TO_BN: Int = 228

const val ASN1_F_ASN1_STRING_TYPE_NEW: Int = 130

const val ASN1_F_ASN1_TEMPLATE_EX_D2I: Int = 132

const val ASN1_F_ASN1_TEMPLATE_NEW: Int = 133

const val ASN1_F_ASN1_TEMPLATE_NOEXP_D2I: Int = 131

const val ASN1_F_ASN1_TIME_ADJ: Int = 217

const val ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING: Int = 134

const val ASN1_F_ASN1_TYPE_GET_OCTETSTRING: Int = 135

const val ASN1_F_ASN1_UTCTIME_ADJ: Int = 218

const val ASN1_F_ASN1_VERIFY: Int = 137

const val ASN1_F_B64_READ_ASN1: Int = 209

const val ASN1_F_B64_WRITE_ASN1: Int = 210

const val ASN1_F_BIO_NEW_NDEF: Int = 208

const val ASN1_F_BITSTR_CB: Int = 180

const val ASN1_F_BN_TO_ASN1_STRING: Int = 229

const val ASN1_F_C2I_ASN1_BIT_STRING: Int = 189

const val ASN1_F_C2I_ASN1_INTEGER: Int = 194

const val ASN1_F_C2I_ASN1_OBJECT: Int = 196

const val ASN1_F_C2I_IBUF: Int = 226

const val ASN1_F_C2I_UINT64_INT: Int = 101

const val ASN1_F_COLLECT_DATA: Int = 140

const val ASN1_F_D2I_ASN1_OBJECT: Int = 147

const val ASN1_F_D2I_ASN1_UINTEGER: Int = 150

const val ASN1_F_D2I_AUTOPRIVATEKEY: Int = 207

const val ASN1_F_D2I_PRIVATEKEY: Int = 154

const val ASN1_F_D2I_PUBLICKEY: Int = 155

const val ASN1_F_DO_BUF: Int = 142

const val ASN1_F_DO_CREATE: Int = 124

const val ASN1_F_DO_DUMP: Int = 125

const val ASN1_F_DO_TCREATE: Int = 222

const val ASN1_F_I2A_ASN1_OBJECT: Int = 126

const val ASN1_F_I2D_ASN1_BIO_STREAM: Int = 211

const val ASN1_F_I2D_ASN1_OBJECT: Int = 143

const val ASN1_F_I2D_DSA_PUBKEY: Int = 161

const val ASN1_F_I2D_EC_PUBKEY: Int = 181

const val ASN1_F_I2D_PRIVATEKEY: Int = 163

const val ASN1_F_I2D_PUBLICKEY: Int = 164

const val ASN1_F_I2D_RSA_PUBKEY: Int = 165

const val ASN1_F_LONG_C2I: Int = 166

const val ASN1_F_NDEF_PREFIX: Int = 127

const val ASN1_F_NDEF_SUFFIX: Int = 136

const val ASN1_F_OID_MODULE_INIT: Int = 174

const val ASN1_F_PARSE_TAGGING: Int = 182

const val ASN1_F_PKCS5_PBE2_SET_IV: Int = 167

const val ASN1_F_PKCS5_PBE2_SET_SCRYPT: Int = 231

const val ASN1_F_PKCS5_PBE_SET: Int = 202

const val ASN1_F_PKCS5_PBE_SET0_ALGOR: Int = 215

const val ASN1_F_PKCS5_PBKDF2_SET: Int = 219

const val ASN1_F_PKCS5_SCRYPT_SET: Int = 232

const val ASN1_F_SMIME_READ_ASN1: Int = 212

const val ASN1_F_SMIME_TEXT: Int = 213

const val ASN1_F_STABLE_GET: Int = 138

const val ASN1_F_STBL_MODULE_INIT: Int = 223

const val ASN1_F_UINT32_C2I: Int = 105

const val ASN1_F_UINT32_NEW: Int = 139

const val ASN1_F_UINT64_C2I: Int = 112

const val ASN1_F_UINT64_NEW: Int = 141

const val ASN1_F_X509_CRL_ADD0_REVOKED: Int = 169

const val ASN1_F_X509_INFO_NEW: Int = 170

const val ASN1_F_X509_NAME_ENCODE: Int = 203

const val ASN1_F_X509_NAME_EX_D2I: Int = 158

const val ASN1_F_X509_NAME_EX_NEW: Int = 171

const val ASN1_F_X509_PKEY_NEW: Int = 173

const val ASN1_R_ADDING_OBJECT: Int = 171

const val ASN1_R_ASN1_PARSE_ERROR: Int = 203

const val ASN1_R_ASN1_SIG_PARSE_ERROR: Int = 204

const val ASN1_R_AUX_ERROR: Int = 100

const val ASN1_R_BAD_OBJECT_HEADER: Int = 102

const val ASN1_R_BMPSTRING_IS_WRONG_LENGTH: Int = 214

const val ASN1_R_BN_LIB: Int = 105

const val ASN1_R_BOOLEAN_IS_WRONG_LENGTH: Int = 106

const val ASN1_R_BUFFER_TOO_SMALL: Int = 107

const val ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER: Int = 108

const val ASN1_R_CONTEXT_NOT_INITIALISED: Int = 217

const val ASN1_R_DATA_IS_WRONG: Int = 109

const val ASN1_R_DECODE_ERROR: Int = 110

const val ASN1_R_DEPTH_EXCEEDED: Int = 174

const val ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED: Int = 198

const val ASN1_R_ENCODE_ERROR: Int = 112

const val ASN1_R_ERROR_GETTING_TIME: Int = 173

const val ASN1_R_ERROR_LOADING_SECTION: Int = 172

const val ASN1_R_ERROR_SETTING_CIPHER_PARAMS: Int = 114

const val ASN1_R_EXPECTING_AN_INTEGER: Int = 115

const val ASN1_R_EXPECTING_AN_OBJECT: Int = 116

const val ASN1_R_EXPLICIT_LENGTH_MISMATCH: Int = 119

const val ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED: Int = 120

const val ASN1_R_FIELD_MISSING: Int = 121

const val ASN1_R_FIRST_NUM_TOO_LARGE: Int = 122

const val ASN1_R_HEADER_TOO_LONG: Int = 123

const val ASN1_R_ILLEGAL_BITSTRING_FORMAT: Int = 175

const val ASN1_R_ILLEGAL_BOOLEAN: Int = 176

const val ASN1_R_ILLEGAL_CHARACTERS: Int = 124

const val ASN1_R_ILLEGAL_FORMAT: Int = 177

const val ASN1_R_ILLEGAL_HEX: Int = 178

const val ASN1_R_ILLEGAL_IMPLICIT_TAG: Int = 179

const val ASN1_R_ILLEGAL_INTEGER: Int = 180

const val ASN1_R_ILLEGAL_NEGATIVE_VALUE: Int = 226

const val ASN1_R_ILLEGAL_NESTED_TAGGING: Int = 181

const val ASN1_R_ILLEGAL_NULL: Int = 125

const val ASN1_R_ILLEGAL_NULL_VALUE: Int = 182

const val ASN1_R_ILLEGAL_OBJECT: Int = 183

const val ASN1_R_ILLEGAL_OPTIONAL_ANY: Int = 126

const val ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE: Int = 170

const val ASN1_R_ILLEGAL_PADDING: Int = 221

const val ASN1_R_ILLEGAL_TAGGED_ANY: Int = 127

const val ASN1_R_ILLEGAL_TIME_VALUE: Int = 184

const val ASN1_R_ILLEGAL_ZERO_CONTENT: Int = 222

const val ASN1_R_INTEGER_NOT_ASCII_FORMAT: Int = 185

const val ASN1_R_INTEGER_TOO_LARGE_FOR_LONG: Int = 128

const val ASN1_R_INVALID_BIT_STRING_BITS_LEFT: Int = 220

const val ASN1_R_INVALID_BMPSTRING_LENGTH: Int = 129

const val ASN1_R_INVALID_DIGIT: Int = 130

const val ASN1_R_INVALID_MIME_TYPE: Int = 205

const val ASN1_R_INVALID_MODIFIER: Int = 186

const val ASN1_R_INVALID_NUMBER: Int = 187

const val ASN1_R_INVALID_OBJECT_ENCODING: Int = 216

const val ASN1_R_INVALID_SCRYPT_PARAMETERS: Int = 227

const val ASN1_R_INVALID_SEPARATOR: Int = 131

const val ASN1_R_INVALID_STRING_TABLE_VALUE: Int = 218

const val ASN1_R_INVALID_UNIVERSALSTRING_LENGTH: Int = 133

const val ASN1_R_INVALID_UTF8STRING: Int = 134

const val ASN1_R_INVALID_VALUE: Int = 219

const val ASN1_R_LIST_ERROR: Int = 188

const val ASN1_R_MIME_NO_CONTENT_TYPE: Int = 206

const val ASN1_R_MIME_PARSE_ERROR: Int = 207

const val ASN1_R_MIME_SIG_PARSE_ERROR: Int = 208

const val ASN1_R_MISSING_EOC: Int = 137

const val ASN1_R_MISSING_SECOND_NUMBER: Int = 138

const val ASN1_R_MISSING_VALUE: Int = 189

const val ASN1_R_MSTRING_NOT_UNIVERSAL: Int = 139

const val ASN1_R_MSTRING_WRONG_TAG: Int = 140

const val ASN1_R_NESTED_ASN1_STRING: Int = 197

const val ASN1_R_NESTED_TOO_DEEP: Int = 201

const val ASN1_R_NON_HEX_CHARACTERS: Int = 141

const val ASN1_R_NOT_ASCII_FORMAT: Int = 190

const val ASN1_R_NOT_ENOUGH_DATA: Int = 142

const val ASN1_R_NO_CONTENT_TYPE: Int = 209

const val ASN1_R_NO_MATCHING_CHOICE_TYPE: Int = 143

const val ASN1_R_NO_MULTIPART_BODY_FAILURE: Int = 210

const val ASN1_R_NO_MULTIPART_BOUNDARY: Int = 211

const val ASN1_R_NO_SIG_CONTENT_TYPE: Int = 212

const val ASN1_R_NULL_IS_WRONG_LENGTH: Int = 144

const val ASN1_R_OBJECT_NOT_ASCII_FORMAT: Int = 191

const val ASN1_R_ODD_NUMBER_OF_CHARS: Int = 145

const val ASN1_R_SECOND_NUMBER_TOO_LARGE: Int = 147

const val ASN1_R_SEQUENCE_LENGTH_MISMATCH: Int = 148

const val ASN1_R_SEQUENCE_NOT_CONSTRUCTED: Int = 149

const val ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG: Int = 192

const val ASN1_R_SHORT_LINE: Int = 150

const val ASN1_R_SIG_INVALID_MIME_TYPE: Int = 213

const val ASN1_R_STREAMING_NOT_SUPPORTED: Int = 202

const val ASN1_R_STRING_TOO_LONG: Int = 151

const val ASN1_R_STRING_TOO_SHORT: Int = 152

const val ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD: Int = 154

const val ASN1_R_TIME_NOT_ASCII_FORMAT: Int = 193

const val ASN1_R_TOO_LARGE: Int = 223

const val ASN1_R_TOO_LONG: Int = 155

const val ASN1_R_TOO_SMALL: Int = 224

const val ASN1_R_TYPE_NOT_CONSTRUCTED: Int = 156

const val ASN1_R_TYPE_NOT_PRIMITIVE: Int = 195

const val ASN1_R_UNEXPECTED_EOC: Int = 159

const val ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH: Int = 215

const val ASN1_R_UNKNOWN_FORMAT: Int = 160

const val ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM: Int = 161

const val ASN1_R_UNKNOWN_OBJECT_TYPE: Int = 162

const val ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE: Int = 163

const val ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM: Int = 199

const val ASN1_R_UNKNOWN_TAG: Int = 194

const val ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE: Int = 164

const val ASN1_R_UNSUPPORTED_CIPHER: Int = 228

const val ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE: Int = 167

const val ASN1_R_UNSUPPORTED_TYPE: Int = 196

const val ASN1_R_WRONG_INTEGER_TYPE: Int = 225

const val ASN1_R_WRONG_PUBLIC_KEY_TYPE: Int = 200

const val ASN1_R_WRONG_TAG: Int = 168

const val BN_F_BNRAND: Int = 127

const val BN_F_BNRAND_RANGE: Int = 138

const val BN_F_BN_BLINDING_CONVERT_EX: Int = 100

const val BN_F_BN_BLINDING_CREATE_PARAM: Int = 128

const val BN_F_BN_BLINDING_INVERT_EX: Int = 101

const val BN_F_BN_BLINDING_NEW: Int = 102

const val BN_F_BN_BLINDING_UPDATE: Int = 103

const val BN_F_BN_BN2DEC: Int = 104

const val BN_F_BN_BN2HEX: Int = 105

const val BN_F_BN_COMPUTE_WNAF: Int = 142

const val BN_F_BN_CTX_GET: Int = 116

const val BN_F_BN_CTX_NEW: Int = 106

const val BN_F_BN_CTX_START: Int = 129

const val BN_F_BN_DIV: Int = 107

const val BN_F_BN_DIV_RECP: Int = 130

const val BN_F_BN_EXP: Int = 123

const val BN_F_BN_EXPAND_INTERNAL: Int = 120

const val BN_F_BN_GENCB_NEW: Int = 143

const val BN_F_BN_GENERATE_DSA_NONCE: Int = 140

const val BN_F_BN_GENERATE_PRIME_EX: Int = 141

const val BN_F_BN_GF2M_MOD: Int = 131

const val BN_F_BN_GF2M_MOD_EXP: Int = 132

const val BN_F_BN_GF2M_MOD_MUL: Int = 133

const val BN_F_BN_GF2M_MOD_SOLVE_QUAD: Int = 134

const val BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR: Int = 135

const val BN_F_BN_GF2M_MOD_SQR: Int = 136

const val BN_F_BN_GF2M_MOD_SQRT: Int = 137

const val BN_F_BN_LSHIFT: Int = 145

const val BN_F_BN_MOD_EXP2_MONT: Int = 118

const val BN_F_BN_MOD_EXP_MONT: Int = 109

const val BN_F_BN_MOD_EXP_MONT_CONSTTIME: Int = 124

const val BN_F_BN_MOD_EXP_MONT_WORD: Int = 117

const val BN_F_BN_MOD_EXP_RECP: Int = 125

const val BN_F_BN_MOD_EXP_SIMPLE: Int = 126

const val BN_F_BN_MOD_INVERSE: Int = 110

const val BN_F_BN_MOD_INVERSE_NO_BRANCH: Int = 139

const val BN_F_BN_MOD_LSHIFT_QUICK: Int = 119

const val BN_F_BN_MOD_SQRT: Int = 121

const val BN_F_BN_MONT_CTX_NEW: Int = 149

const val BN_F_BN_MPI2BN: Int = 112

const val BN_F_BN_NEW: Int = 113

const val BN_F_BN_POOL_GET: Int = 147

const val BN_F_BN_RAND: Int = 114

const val BN_F_BN_RAND_RANGE: Int = 122

const val BN_F_BN_RECP_CTX_NEW: Int = 150

const val BN_F_BN_RSHIFT: Int = 146

const val BN_F_BN_SET_WORDS: Int = 144

const val BN_F_BN_STACK_PUSH: Int = 148

const val BN_F_BN_USUB: Int = 115

const val BN_R_ARG2_LT_ARG3: Int = 100

const val BN_R_BAD_RECIPROCAL: Int = 101

const val BN_R_BIGNUM_TOO_LONG: Int = 114

const val BN_R_BITS_TOO_SMALL: Int = 118

const val BN_R_CALLED_WITH_EVEN_MODULUS: Int = 102

const val BN_R_DIV_BY_ZERO: Int = 103

const val BN_R_ENCODING_ERROR: Int = 104

const val BN_R_EXPAND_ON_STATIC_BIGNUM_DATA: Int = 105

const val BN_R_INPUT_NOT_REDUCED: Int = 110

const val BN_R_INVALID_LENGTH: Int = 106

const val BN_R_INVALID_RANGE: Int = 115

const val BN_R_INVALID_SHIFT: Int = 119

const val BN_R_NOT_A_SQUARE: Int = 111

const val BN_R_NOT_INITIALIZED: Int = 107

const val BN_R_NO_INVERSE: Int = 108

const val BN_R_NO_SOLUTION: Int = 116

const val BN_R_PRIVATE_KEY_TOO_LARGE: Int = 117

const val BN_R_P_IS_NOT_PRIME: Int = 112

const val BN_R_TOO_MANY_ITERATIONS: Int = 113

const val BN_R_TOO_MANY_TEMPORARY_VARIABLES: Int = 109

const val BN_BYTES: Int = 8

const val BN_BITS2: Int = 64

const val BN_BITS: Int = 128

const val BN_TBIT: ULong = 9223372036854775808u

const val BN_FLG_MALLOCED: Int = 1

const val BN_FLG_STATIC_DATA: Int = 2

const val BN_FLG_CONSTTIME: Int = 4

const val BN_FLG_SECURE: Int = 8

const val BN_FLG_EXP_CONSTTIME: Int = 4

const val BN_FLG_FREE: Int = 32768

const val BN_RAND_TOP_ANY: Int = -1

const val BN_RAND_TOP_ONE: Int = 0

const val BN_RAND_TOP_TWO: Int = 1

const val BN_RAND_BOTTOM_ANY: Int = 0

const val BN_RAND_BOTTOM_ODD: Int = 1

const val BN_prime_checks: Int = 0

const val BN_BLINDING_NO_UPDATE: Int = 1

const val BN_BLINDING_NO_RECREATE: Int = 2

const val V_ASN1_UNIVERSAL: Int = 0

const val V_ASN1_APPLICATION: Int = 64

const val V_ASN1_CONTEXT_SPECIFIC: Int = 128

const val V_ASN1_PRIVATE: Int = 192

const val V_ASN1_CONSTRUCTED: Int = 32

const val V_ASN1_PRIMITIVE_TAG: Int = 31

const val V_ASN1_PRIMATIVE_TAG: Int = 31

const val V_ASN1_APP_CHOOSE: Int = -2

const val V_ASN1_OTHER: Int = -3

const val V_ASN1_ANY: Int = -4

const val V_ASN1_UNDEF: Int = -1

const val V_ASN1_EOC: Int = 0

const val V_ASN1_BOOLEAN: Int = 1

const val V_ASN1_INTEGER: Int = 2

const val V_ASN1_BIT_STRING: Int = 3

const val V_ASN1_OCTET_STRING: Int = 4

const val V_ASN1_NULL: Int = 5

const val V_ASN1_OBJECT: Int = 6

const val V_ASN1_OBJECT_DESCRIPTOR: Int = 7

const val V_ASN1_EXTERNAL: Int = 8

const val V_ASN1_REAL: Int = 9

const val V_ASN1_ENUMERATED: Int = 10

const val V_ASN1_UTF8STRING: Int = 12

const val V_ASN1_SEQUENCE: Int = 16

const val V_ASN1_SET: Int = 17

const val V_ASN1_NUMERICSTRING: Int = 18

const val V_ASN1_PRINTABLESTRING: Int = 19

const val V_ASN1_T61STRING: Int = 20

const val V_ASN1_TELETEXSTRING: Int = 20

const val V_ASN1_VIDEOTEXSTRING: Int = 21

const val V_ASN1_IA5STRING: Int = 22

const val V_ASN1_UTCTIME: Int = 23

const val V_ASN1_GENERALIZEDTIME: Int = 24

const val V_ASN1_GRAPHICSTRING: Int = 25

const val V_ASN1_ISO64STRING: Int = 26

const val V_ASN1_VISIBLESTRING: Int = 26

const val V_ASN1_GENERALSTRING: Int = 27

const val V_ASN1_UNIVERSALSTRING: Int = 28

const val V_ASN1_BMPSTRING: Int = 30

const val V_ASN1_NEG: Int = 256

const val V_ASN1_NEG_INTEGER: Int = 258

const val V_ASN1_NEG_ENUMERATED: Int = 266

const val B_ASN1_NUMERICSTRING: Int = 1

const val B_ASN1_PRINTABLESTRING: Int = 2

const val B_ASN1_T61STRING: Int = 4

const val B_ASN1_TELETEXSTRING: Int = 4

const val B_ASN1_VIDEOTEXSTRING: Int = 8

const val B_ASN1_IA5STRING: Int = 16

const val B_ASN1_GRAPHICSTRING: Int = 32

const val B_ASN1_ISO64STRING: Int = 64

const val B_ASN1_VISIBLESTRING: Int = 64

const val B_ASN1_GENERALSTRING: Int = 128

const val B_ASN1_UNIVERSALSTRING: Int = 256

const val B_ASN1_OCTET_STRING: Int = 512

const val B_ASN1_BIT_STRING: Int = 1024

const val B_ASN1_BMPSTRING: Int = 2048

const val B_ASN1_UNKNOWN: Int = 4096

const val B_ASN1_UTF8STRING: Int = 8192

const val B_ASN1_UTCTIME: Int = 16384

const val B_ASN1_GENERALIZEDTIME: Int = 32768

const val B_ASN1_SEQUENCE: Int = 65536

const val MBSTRING_FLAG: Int = 4096

const val MBSTRING_UTF8: Int = 4096

const val MBSTRING_ASC: Int = 4097

const val MBSTRING_BMP: Int = 4098

const val MBSTRING_UNIV: Int = 4100

const val SMIME_OLDMIME: Int = 1024

const val SMIME_CRLFEOL: Int = 2048

const val SMIME_STREAM: Int = 4096

const val ASN1_STRING_FLAG_BITS_LEFT: Int = 8

const val ASN1_STRING_FLAG_NDEF: Int = 16

const val ASN1_STRING_FLAG_CONT: Int = 32

const val ASN1_STRING_FLAG_MSTRING: Int = 64

const val ASN1_STRING_FLAG_EMBED: Int = 128

const val ASN1_STRING_FLAG_X509_TIME: Int = 256

const val ASN1_LONG_UNDEF: Long = 2147483647

const val STABLE_FLAGS_MALLOC: Int = 1

const val STABLE_FLAGS_CLEAR: Int = 1

const val STABLE_NO_MASK: Int = 2

const val DIRSTRING_TYPE: Int = 10246

const val PKCS9STRING_TYPE: Int = 10262

const val ub_name: Int = 32768

const val ub_common_name: Int = 64

const val ub_locality_name: Int = 128

const val ub_state_name: Int = 128

const val ub_organization_name: Int = 64

const val ub_organization_unit_name: Int = 64

const val ub_title: Int = 64

const val ub_email_address: Int = 128

const val ASN1_STRFLGS_ESC_2253: Int = 1

const val ASN1_STRFLGS_ESC_CTRL: Int = 2

const val ASN1_STRFLGS_ESC_MSB: Int = 4

const val ASN1_STRFLGS_ESC_QUOTE: Int = 8

const val CHARTYPE_PRINTABLESTRING: Int = 16

const val CHARTYPE_FIRST_ESC_2253: Int = 32

const val CHARTYPE_LAST_ESC_2253: Int = 64

const val ASN1_STRFLGS_UTF8_CONVERT: Int = 16

const val ASN1_STRFLGS_IGNORE_TYPE: Int = 32

const val ASN1_STRFLGS_SHOW_TYPE: Int = 64

const val ASN1_STRFLGS_DUMP_ALL: Int = 128

const val ASN1_STRFLGS_DUMP_UNKNOWN: Int = 256

const val ASN1_STRFLGS_DUMP_DER: Int = 512

const val ASN1_STRFLGS_ESC_2254: Int = 1024

const val ASN1_STRFLGS_RFC2253: Int = 791

const val B_ASN1_TIME: Int = 49152

const val B_ASN1_PRINTABLE: Int = 81175

const val B_ASN1_DIRECTORYSTRING: Int = 10502

const val B_ASN1_DISPLAYTEXT: Int = 10320

const val ASN1_PCTX_FLAGS_SHOW_ABSENT: Int = 1

const val ASN1_PCTX_FLAGS_SHOW_SEQUENCE: Int = 2

const val ASN1_PCTX_FLAGS_SHOW_SSOF: Int = 4

const val ASN1_PCTX_FLAGS_SHOW_TYPE: Int = 8

const val ASN1_PCTX_FLAGS_NO_ANY_TYPE: Int = 16

const val ASN1_PCTX_FLAGS_NO_MSTRING_TYPE: Int = 32

const val ASN1_PCTX_FLAGS_NO_FIELD_NAME: Int = 64

const val ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME: Int = 128

const val ASN1_PCTX_FLAGS_NO_STRUCT_NAME: Int = 256

const val OBJ_F_OBJ_ADD_OBJECT: Int = 105

const val OBJ_F_OBJ_ADD_SIGID: Int = 107

const val OBJ_F_OBJ_CREATE: Int = 100

const val OBJ_F_OBJ_DUP: Int = 101

const val OBJ_F_OBJ_NAME_NEW_INDEX: Int = 106

const val OBJ_F_OBJ_NID2LN: Int = 102

const val OBJ_F_OBJ_NID2OBJ: Int = 103

const val OBJ_F_OBJ_NID2SN: Int = 104

const val OBJ_F_OBJ_TXT2OBJ: Int = 108

const val OBJ_R_OID_EXISTS: Int = 102

const val OBJ_R_UNKNOWN_NID: Int = 101

const val OBJ_NAME_TYPE_UNDEF: Int = 0

const val OBJ_NAME_TYPE_MD_METH: Int = 1

const val OBJ_NAME_TYPE_CIPHER_METH: Int = 2

const val OBJ_NAME_TYPE_PKEY_METH: Int = 3

const val OBJ_NAME_TYPE_COMP_METH: Int = 4

const val OBJ_NAME_TYPE_NUM: Int = 5

const val OBJ_NAME_ALIAS: Int = 32768

const val OBJ_BSEARCH_VALUE_ON_NOMATCH: Int = 1

const val OBJ_BSEARCH_FIRST_VALUE_ON_MATCH: Int = 2

const val EVP_PK_RSA: Int = 1

const val EVP_PK_DSA: Int = 2

const val EVP_PK_DH: Int = 4

const val EVP_PK_EC: Int = 8

const val EVP_PKT_SIGN: Int = 16

const val EVP_PKT_ENC: Int = 32

const val EVP_PKT_EXCH: Int = 64

const val EVP_PKS_RSA: Int = 256

const val EVP_PKS_DSA: Int = 512

const val EVP_PKS_EC: Int = 1024

const val EVP_PKEY_NONE: Int = 0

const val EVP_PKEY_RSA: Int = 6

const val EVP_PKEY_RSA2: Int = 19

const val EVP_PKEY_RSA_PSS: Int = 912

const val EVP_PKEY_DSA: Int = 116

const val EVP_PKEY_DSA1: Int = 67

const val EVP_PKEY_DSA2: Int = 66

const val EVP_PKEY_DSA3: Int = 113

const val EVP_PKEY_DSA4: Int = 70

const val EVP_PKEY_DH: Int = 28

const val EVP_PKEY_DHX: Int = 920

const val EVP_PKEY_EC: Int = 408

const val EVP_PKEY_SM2: Int = 1172

const val EVP_PKEY_HMAC: Int = 855

const val EVP_PKEY_CMAC: Int = 894

const val EVP_PKEY_SCRYPT: Int = 973

const val EVP_PKEY_TLS1_PRF: Int = 1021

const val EVP_PKEY_HKDF: Int = 1036

const val EVP_PKEY_POLY1305: Int = 1061

const val EVP_PKEY_SIPHASH: Int = 1062

const val EVP_PKEY_X25519: Int = 1034

const val EVP_PKEY_ED25519: Int = 1087

const val EVP_PKEY_X448: Int = 1035

const val EVP_PKEY_ED448: Int = 1088

const val EVP_PKEY_MO_SIGN: Int = 1

const val EVP_PKEY_MO_VERIFY: Int = 2

const val EVP_PKEY_MO_ENCRYPT: Int = 4

const val EVP_PKEY_MO_DECRYPT: Int = 8

const val EVP_MD_FLAG_ONESHOT: Int = 1

const val EVP_MD_FLAG_XOF: Int = 2

const val EVP_MD_FLAG_DIGALGID_MASK: Int = 24

const val EVP_MD_FLAG_DIGALGID_NULL: Int = 0

const val EVP_MD_FLAG_DIGALGID_ABSENT: Int = 8

const val EVP_MD_FLAG_DIGALGID_CUSTOM: Int = 24

const val EVP_MD_FLAG_FIPS: Int = 1024

const val EVP_MD_CTRL_DIGALGID: Int = 1

const val EVP_MD_CTRL_MICALG: Int = 2

const val EVP_MD_CTRL_XOF_LEN: Int = 3

const val EVP_MD_CTRL_ALG_CTRL: Int = 4096

const val EVP_MD_CTX_FLAG_ONESHOT: Int = 1

const val EVP_MD_CTX_FLAG_CLEANED: Int = 2

const val EVP_MD_CTX_FLAG_REUSE: Int = 4

const val EVP_MD_CTX_FLAG_NON_FIPS_ALLOW: Int = 8

const val EVP_MD_CTX_FLAG_PAD_MASK: Int = 240

const val EVP_MD_CTX_FLAG_PAD_PKCS1: Int = 0

const val EVP_MD_CTX_FLAG_PAD_X931: Int = 16

const val EVP_MD_CTX_FLAG_PAD_PSS: Int = 32

const val EVP_MD_CTX_FLAG_NO_INIT: Int = 256

const val EVP_MD_CTX_FLAG_FINALISE: Int = 512

const val EVP_CIPH_STREAM_CIPHER: Int = 0

const val EVP_CIPH_ECB_MODE: Int = 1

const val EVP_CIPH_CBC_MODE: Int = 2

const val EVP_CIPH_CFB_MODE: Int = 3

const val EVP_CIPH_OFB_MODE: Int = 4

const val EVP_CIPH_CTR_MODE: Int = 5

const val EVP_CIPH_GCM_MODE: Int = 6

const val EVP_CIPH_CCM_MODE: Int = 7

const val EVP_CIPH_XTS_MODE: Int = 65537

const val EVP_CIPH_WRAP_MODE: Int = 65538

const val EVP_CIPH_OCB_MODE: Int = 65539

const val EVP_CIPH_MODE: Int = 983047

const val EVP_CIPH_VARIABLE_LENGTH: Int = 8

const val EVP_CIPH_CUSTOM_IV: Int = 16

const val EVP_CIPH_ALWAYS_CALL_INIT: Int = 32

const val EVP_CIPH_CTRL_INIT: Int = 64

const val EVP_CIPH_CUSTOM_KEY_LENGTH: Int = 128

const val EVP_CIPH_NO_PADDING: Int = 256

const val EVP_CIPH_RAND_KEY: Int = 512

const val EVP_CIPH_CUSTOM_COPY: Int = 1024

const val EVP_CIPH_CUSTOM_IV_LENGTH: Int = 2048

const val EVP_CIPH_FLAG_DEFAULT_ASN1: Int = 4096

const val EVP_CIPH_FLAG_LENGTH_BITS: Int = 8192

const val EVP_CIPH_FLAG_FIPS: Int = 16384

const val EVP_CIPH_FLAG_NON_FIPS_ALLOW: Int = 32768

const val EVP_CIPH_FLAG_CUSTOM_CIPHER: Int = 1048576

const val EVP_CIPH_FLAG_AEAD_CIPHER: Int = 2097152

const val EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK: Int = 4194304

const val EVP_CIPH_FLAG_PIPELINE: Int = 8388608

const val EVP_CIPHER_CTX_FLAG_WRAP_ALLOW: Int = 1

const val EVP_CTRL_INIT: Int = 0

const val EVP_CTRL_SET_KEY_LENGTH: Int = 1

const val EVP_CTRL_GET_RC2_KEY_BITS: Int = 2

const val EVP_CTRL_SET_RC2_KEY_BITS: Int = 3

const val EVP_CTRL_GET_RC5_ROUNDS: Int = 4

const val EVP_CTRL_SET_RC5_ROUNDS: Int = 5

const val EVP_CTRL_RAND_KEY: Int = 6

const val EVP_CTRL_PBE_PRF_NID: Int = 7

const val EVP_CTRL_COPY: Int = 8

const val EVP_CTRL_AEAD_SET_IVLEN: Int = 9

const val EVP_CTRL_AEAD_GET_TAG: Int = 16

const val EVP_CTRL_AEAD_SET_TAG: Int = 17

const val EVP_CTRL_AEAD_SET_IV_FIXED: Int = 18

const val EVP_CTRL_GCM_SET_IVLEN: Int = 9

const val EVP_CTRL_GCM_GET_TAG: Int = 16

const val EVP_CTRL_GCM_SET_TAG: Int = 17

const val EVP_CTRL_GCM_SET_IV_FIXED: Int = 18

const val EVP_CTRL_GCM_IV_GEN: Int = 19

const val EVP_CTRL_CCM_SET_IVLEN: Int = 9

const val EVP_CTRL_CCM_GET_TAG: Int = 16

const val EVP_CTRL_CCM_SET_TAG: Int = 17

const val EVP_CTRL_CCM_SET_IV_FIXED: Int = 18

const val EVP_CTRL_CCM_SET_L: Int = 20

const val EVP_CTRL_CCM_SET_MSGLEN: Int = 21

const val EVP_CTRL_AEAD_TLS1_AAD: Int = 22

const val EVP_CTRL_AEAD_SET_MAC_KEY: Int = 23

const val EVP_CTRL_GCM_SET_IV_INV: Int = 24

const val EVP_CTRL_TLS1_1_MULTIBLOCK_AAD: Int = 25

const val EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT: Int = 26

const val EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT: Int = 27

const val EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE: Int = 28

const val EVP_CTRL_SSL3_MASTER_SECRET: Int = 29

const val EVP_CTRL_SET_SBOX: Int = 30

const val EVP_CTRL_SBOX_USED: Int = 31

const val EVP_CTRL_KEY_MESH: Int = 32

const val EVP_CTRL_BLOCK_PADDING_MODE: Int = 33

const val EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS: Int = 34

const val EVP_CTRL_SET_PIPELINE_INPUT_BUFS: Int = 35

const val EVP_CTRL_SET_PIPELINE_INPUT_LENS: Int = 36

const val EVP_CTRL_GET_IVLEN: Int = 37

const val EVP_PADDING_PKCS7: Int = 1

const val EVP_PADDING_ISO7816_4: Int = 2

const val EVP_PADDING_ANSI923: Int = 3

const val EVP_PADDING_ISO10126: Int = 4

const val EVP_PADDING_ZERO: Int = 5

const val EVP_AEAD_TLS1_AAD_LEN: Int = 13

const val EVP_GCM_TLS_FIXED_IV_LEN: Int = 4

const val EVP_GCM_TLS_EXPLICIT_IV_LEN: Int = 8

const val EVP_GCM_TLS_TAG_LEN: Int = 16

const val EVP_CCM_TLS_FIXED_IV_LEN: Int = 4

const val EVP_CCM_TLS_EXPLICIT_IV_LEN: Int = 8

const val EVP_CCM_TLS_IV_LEN: Int = 12

const val EVP_CCM_TLS_TAG_LEN: Int = 16

const val EVP_CCM8_TLS_TAG_LEN: Int = 8

const val EVP_CHACHAPOLY_TLS_TAG_LEN: Int = 16

const val EVP_PBE_TYPE_OUTER: Int = 0

const val EVP_PBE_TYPE_PRF: Int = 1

const val EVP_PBE_TYPE_KDF: Int = 2

const val ASN1_PKEY_ALIAS: Int = 1

const val ASN1_PKEY_DYNAMIC: Int = 2

const val ASN1_PKEY_SIGPARAM_NULL: Int = 4

const val ASN1_PKEY_CTRL_PKCS7_SIGN: Int = 1

const val ASN1_PKEY_CTRL_PKCS7_ENCRYPT: Int = 2

const val ASN1_PKEY_CTRL_DEFAULT_MD_NID: Int = 3

const val ASN1_PKEY_CTRL_CMS_SIGN: Int = 5

const val ASN1_PKEY_CTRL_CMS_ENVELOPE: Int = 7

const val ASN1_PKEY_CTRL_CMS_RI_TYPE: Int = 8

const val ASN1_PKEY_CTRL_SET1_TLS_ENCPT: Int = 9

const val ASN1_PKEY_CTRL_GET1_TLS_ENCPT: Int = 10

const val EVP_PKEY_OP_UNDEFINED: Int = 0

const val EVP_PKEY_OP_PARAMGEN: Int = 2

const val EVP_PKEY_OP_KEYGEN: Int = 4

const val EVP_PKEY_OP_SIGN: Int = 8

const val EVP_PKEY_OP_VERIFY: Int = 16

const val EVP_PKEY_OP_VERIFYRECOVER: Int = 32

const val EVP_PKEY_OP_SIGNCTX: Int = 64

const val EVP_PKEY_OP_VERIFYCTX: Int = 128

const val EVP_PKEY_OP_ENCRYPT: Int = 256

const val EVP_PKEY_OP_DECRYPT: Int = 512

const val EVP_PKEY_OP_DERIVE: Int = 1024

const val EVP_PKEY_OP_TYPE_SIG: Int = 248

const val EVP_PKEY_OP_TYPE_CRYPT: Int = 768

const val EVP_PKEY_OP_TYPE_NOGEN: Int = 2040

const val EVP_PKEY_OP_TYPE_GEN: Int = 6

const val EVP_PKEY_CTRL_MD: Int = 1

const val EVP_PKEY_CTRL_PEER_KEY: Int = 2

const val EVP_PKEY_CTRL_PKCS7_ENCRYPT: Int = 3

const val EVP_PKEY_CTRL_PKCS7_DECRYPT: Int = 4

const val EVP_PKEY_CTRL_PKCS7_SIGN: Int = 5

const val EVP_PKEY_CTRL_SET_MAC_KEY: Int = 6

const val EVP_PKEY_CTRL_DIGESTINIT: Int = 7

const val EVP_PKEY_CTRL_SET_IV: Int = 8

const val EVP_PKEY_CTRL_CMS_ENCRYPT: Int = 9

const val EVP_PKEY_CTRL_CMS_DECRYPT: Int = 10

const val EVP_PKEY_CTRL_CMS_SIGN: Int = 11

const val EVP_PKEY_CTRL_CIPHER: Int = 12

const val EVP_PKEY_CTRL_GET_MD: Int = 13

const val EVP_PKEY_CTRL_SET_DIGEST_SIZE: Int = 14

const val EVP_PKEY_ALG_CTRL: Int = 4096

const val EVP_PKEY_FLAG_AUTOARGLEN: Int = 2

const val EVP_PKEY_FLAG_SIGCTX_CUSTOM: Int = 4

const val EC_F_BN_TO_FELEM: Int = 224

const val EC_F_D2I_ECPARAMETERS: Int = 144

const val EC_F_D2I_ECPKPARAMETERS: Int = 145

const val EC_F_D2I_ECPRIVATEKEY: Int = 146

const val EC_F_DO_EC_KEY_PRINT: Int = 221

const val EC_F_ECDH_CMS_DECRYPT: Int = 238

const val EC_F_ECDH_CMS_SET_SHARED_INFO: Int = 239

const val EC_F_ECDH_COMPUTE_KEY: Int = 246

const val EC_F_ECDH_SIMPLE_COMPUTE_KEY: Int = 257

const val EC_F_ECDSA_DO_SIGN_EX: Int = 251

const val EC_F_ECDSA_DO_VERIFY: Int = 252

const val EC_F_ECDSA_SIGN_EX: Int = 254

const val EC_F_ECDSA_SIGN_SETUP: Int = 248

const val EC_F_ECDSA_SIG_NEW: Int = 265

const val EC_F_ECDSA_VERIFY: Int = 253

const val EC_F_ECD_ITEM_VERIFY: Int = 270

const val EC_F_ECKEY_PARAM2TYPE: Int = 223

const val EC_F_ECKEY_PARAM_DECODE: Int = 212

const val EC_F_ECKEY_PRIV_DECODE: Int = 213

const val EC_F_ECKEY_PRIV_ENCODE: Int = 214

const val EC_F_ECKEY_PUB_DECODE: Int = 215

const val EC_F_ECKEY_PUB_ENCODE: Int = 216

const val EC_F_ECKEY_TYPE2PARAM: Int = 220

const val EC_F_ECPARAMETERS_PRINT: Int = 147

const val EC_F_ECPARAMETERS_PRINT_FP: Int = 148

const val EC_F_ECPKPARAMETERS_PRINT: Int = 149

const val EC_F_ECPKPARAMETERS_PRINT_FP: Int = 150

const val EC_F_ECP_NISTZ256_GET_AFFINE: Int = 240

const val EC_F_ECP_NISTZ256_INV_MOD_ORD: Int = 275

const val EC_F_ECP_NISTZ256_MULT_PRECOMPUTE: Int = 243

const val EC_F_ECP_NISTZ256_POINTS_MUL: Int = 241

const val EC_F_ECP_NISTZ256_PRE_COMP_NEW: Int = 244

const val EC_F_ECP_NISTZ256_WINDOWED_MUL: Int = 242

const val EC_F_ECX_KEY_OP: Int = 266

const val EC_F_ECX_PRIV_ENCODE: Int = 267

const val EC_F_ECX_PUB_ENCODE: Int = 268

const val EC_F_EC_ASN1_GROUP2CURVE: Int = 153

const val EC_F_EC_ASN1_GROUP2FIELDID: Int = 154

const val EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY: Int = 208

const val EC_F_EC_GF2M_SIMPLE_FIELD_INV: Int = 296

const val EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT: Int = 159

const val EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE: Int = 195

const val EC_F_EC_GF2M_SIMPLE_LADDER_POST: Int = 285

const val EC_F_EC_GF2M_SIMPLE_LADDER_PRE: Int = 288

const val EC_F_EC_GF2M_SIMPLE_OCT2POINT: Int = 160

const val EC_F_EC_GF2M_SIMPLE_POINT2OCT: Int = 161

const val EC_F_EC_GF2M_SIMPLE_POINTS_MUL: Int = 289

const val EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES: Int = 162

const val EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES: Int = 163

const val EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES: Int = 164

const val EC_F_EC_GFP_MONT_FIELD_DECODE: Int = 133

const val EC_F_EC_GFP_MONT_FIELD_ENCODE: Int = 134

const val EC_F_EC_GFP_MONT_FIELD_INV: Int = 297

const val EC_F_EC_GFP_MONT_FIELD_MUL: Int = 131

const val EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE: Int = 209

const val EC_F_EC_GFP_MONT_FIELD_SQR: Int = 132

const val EC_F_EC_GFP_MONT_GROUP_SET_CURVE: Int = 189

const val EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE: Int = 225

const val EC_F_EC_GFP_NISTP224_POINTS_MUL: Int = 228

const val EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES: Int = 226

const val EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE: Int = 230

const val EC_F_EC_GFP_NISTP256_POINTS_MUL: Int = 231

const val EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES: Int = 232

const val EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE: Int = 233

const val EC_F_EC_GFP_NISTP521_POINTS_MUL: Int = 234

const val EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES: Int = 235

const val EC_F_EC_GFP_NIST_FIELD_MUL: Int = 200

const val EC_F_EC_GFP_NIST_FIELD_SQR: Int = 201

const val EC_F_EC_GFP_NIST_GROUP_SET_CURVE: Int = 202

const val EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES: Int = 287

const val EC_F_EC_GFP_SIMPLE_FIELD_INV: Int = 298

const val EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT: Int = 165

const val EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE: Int = 166

const val EC_F_EC_GFP_SIMPLE_MAKE_AFFINE: Int = 102

const val EC_F_EC_GFP_SIMPLE_OCT2POINT: Int = 103

const val EC_F_EC_GFP_SIMPLE_POINT2OCT: Int = 104

const val EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE: Int = 137

const val EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES: Int = 167

const val EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES: Int = 168

const val EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES: Int = 169

const val EC_F_EC_GROUP_CHECK: Int = 170

const val EC_F_EC_GROUP_CHECK_DISCRIMINANT: Int = 171

const val EC_F_EC_GROUP_COPY: Int = 106

const val EC_F_EC_GROUP_GET_CURVE: Int = 291

const val EC_F_EC_GROUP_GET_CURVE_GF2M: Int = 172

const val EC_F_EC_GROUP_GET_CURVE_GFP: Int = 130

const val EC_F_EC_GROUP_GET_DEGREE: Int = 173

const val EC_F_EC_GROUP_GET_ECPARAMETERS: Int = 261

const val EC_F_EC_GROUP_GET_ECPKPARAMETERS: Int = 262

const val EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS: Int = 193

const val EC_F_EC_GROUP_GET_TRINOMIAL_BASIS: Int = 194

const val EC_F_EC_GROUP_NEW: Int = 108

const val EC_F_EC_GROUP_NEW_BY_CURVE_NAME: Int = 174

const val EC_F_EC_GROUP_NEW_FROM_DATA: Int = 175

const val EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS: Int = 263

const val EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS: Int = 264

const val EC_F_EC_GROUP_SET_CURVE: Int = 292

const val EC_F_EC_GROUP_SET_CURVE_GF2M: Int = 176

const val EC_F_EC_GROUP_SET_CURVE_GFP: Int = 109

const val EC_F_EC_GROUP_SET_GENERATOR: Int = 111

const val EC_F_EC_GROUP_SET_SEED: Int = 286

const val EC_F_EC_KEY_CHECK_KEY: Int = 177

const val EC_F_EC_KEY_COPY: Int = 178

const val EC_F_EC_KEY_GENERATE_KEY: Int = 179

const val EC_F_EC_KEY_NEW: Int = 182

const val EC_F_EC_KEY_NEW_METHOD: Int = 245

const val EC_F_EC_KEY_OCT2PRIV: Int = 255

const val EC_F_EC_KEY_PRINT: Int = 180

const val EC_F_EC_KEY_PRINT_FP: Int = 181

const val EC_F_EC_KEY_PRIV2BUF: Int = 279

const val EC_F_EC_KEY_PRIV2OCT: Int = 256

const val EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES: Int = 229

const val EC_F_EC_KEY_SIMPLE_CHECK_KEY: Int = 258

const val EC_F_EC_KEY_SIMPLE_OCT2PRIV: Int = 259

const val EC_F_EC_KEY_SIMPLE_PRIV2OCT: Int = 260

const val EC_F_EC_PKEY_CHECK: Int = 273

const val EC_F_EC_PKEY_PARAM_CHECK: Int = 274

const val EC_F_EC_POINTS_MAKE_AFFINE: Int = 136

const val EC_F_EC_POINTS_MUL: Int = 290

const val EC_F_EC_POINT_ADD: Int = 112

const val EC_F_EC_POINT_BN2POINT: Int = 280

const val EC_F_EC_POINT_CMP: Int = 113

const val EC_F_EC_POINT_COPY: Int = 114

const val EC_F_EC_POINT_DBL: Int = 115

const val EC_F_EC_POINT_GET_AFFINE_COORDINATES: Int = 293

const val EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M: Int = 183

const val EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP: Int = 116

const val EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP: Int = 117

const val EC_F_EC_POINT_INVERT: Int = 210

const val EC_F_EC_POINT_IS_AT_INFINITY: Int = 118

const val EC_F_EC_POINT_IS_ON_CURVE: Int = 119

const val EC_F_EC_POINT_MAKE_AFFINE: Int = 120

const val EC_F_EC_POINT_NEW: Int = 121

const val EC_F_EC_POINT_OCT2POINT: Int = 122

const val EC_F_EC_POINT_POINT2BUF: Int = 281

const val EC_F_EC_POINT_POINT2OCT: Int = 123

const val EC_F_EC_POINT_SET_AFFINE_COORDINATES: Int = 294

const val EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M: Int = 185

const val EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP: Int = 124

const val EC_F_EC_POINT_SET_COMPRESSED_COORDINATES: Int = 295

const val EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M: Int = 186

const val EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP: Int = 125

const val EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP: Int = 126

const val EC_F_EC_POINT_SET_TO_INFINITY: Int = 127

const val EC_F_EC_PRE_COMP_NEW: Int = 196

const val EC_F_EC_SCALAR_MUL_LADDER: Int = 284

const val EC_F_EC_WNAF_MUL: Int = 187

const val EC_F_EC_WNAF_PRECOMPUTE_MULT: Int = 188

const val EC_F_I2D_ECPARAMETERS: Int = 190

const val EC_F_I2D_ECPKPARAMETERS: Int = 191

const val EC_F_I2D_ECPRIVATEKEY: Int = 192

const val EC_F_I2O_ECPUBLICKEY: Int = 151

const val EC_F_NISTP224_PRE_COMP_NEW: Int = 227

const val EC_F_NISTP256_PRE_COMP_NEW: Int = 236

const val EC_F_NISTP521_PRE_COMP_NEW: Int = 237

const val EC_F_O2I_ECPUBLICKEY: Int = 152

const val EC_F_OLD_EC_PRIV_DECODE: Int = 222

const val EC_F_OSSL_ECDH_COMPUTE_KEY: Int = 247

const val EC_F_OSSL_ECDSA_SIGN_SIG: Int = 249

const val EC_F_OSSL_ECDSA_VERIFY_SIG: Int = 250

const val EC_F_PKEY_ECD_CTRL: Int = 271

const val EC_F_PKEY_ECD_DIGESTSIGN: Int = 272

const val EC_F_PKEY_ECD_DIGESTSIGN25519: Int = 276

const val EC_F_PKEY_ECD_DIGESTSIGN448: Int = 277

const val EC_F_PKEY_ECX_DERIVE: Int = 269

const val EC_F_PKEY_EC_CTRL: Int = 197

const val EC_F_PKEY_EC_CTRL_STR: Int = 198

const val EC_F_PKEY_EC_DERIVE: Int = 217

const val EC_F_PKEY_EC_INIT: Int = 282

const val EC_F_PKEY_EC_KDF_DERIVE: Int = 283

const val EC_F_PKEY_EC_KEYGEN: Int = 199

const val EC_F_PKEY_EC_PARAMGEN: Int = 219

const val EC_F_PKEY_EC_SIGN: Int = 218

const val EC_F_VALIDATE_ECX_DERIVE: Int = 278

const val EC_R_ASN1_ERROR: Int = 115

const val EC_R_BAD_SIGNATURE: Int = 156

const val EC_R_BIGNUM_OUT_OF_RANGE: Int = 144

const val EC_R_BUFFER_TOO_SMALL: Int = 100

const val EC_R_CANNOT_INVERT: Int = 165

const val EC_R_COORDINATES_OUT_OF_RANGE: Int = 146

const val EC_R_CURVE_DOES_NOT_SUPPORT_ECDH: Int = 160

const val EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING: Int = 159

const val EC_R_D2I_ECPKPARAMETERS_FAILURE: Int = 117

const val EC_R_DECODE_ERROR: Int = 142

const val EC_R_DISCRIMINANT_IS_ZERO: Int = 118

const val EC_R_EC_GROUP_NEW_BY_NAME_FAILURE: Int = 119

const val EC_R_FIELD_TOO_LARGE: Int = 143

const val EC_R_GF2M_NOT_SUPPORTED: Int = 147

const val EC_R_GROUP2PKPARAMETERS_FAILURE: Int = 120

const val EC_R_I2D_ECPKPARAMETERS_FAILURE: Int = 121

const val EC_R_INCOMPATIBLE_OBJECTS: Int = 101

const val EC_R_INVALID_ARGUMENT: Int = 112

const val EC_R_INVALID_COMPRESSED_POINT: Int = 110

const val EC_R_INVALID_COMPRESSION_BIT: Int = 109

const val EC_R_INVALID_CURVE: Int = 141

const val EC_R_INVALID_DIGEST: Int = 151

const val EC_R_INVALID_DIGEST_TYPE: Int = 138

const val EC_R_INVALID_ENCODING: Int = 102

const val EC_R_INVALID_FIELD: Int = 103

const val EC_R_INVALID_FORM: Int = 104

const val EC_R_INVALID_GROUP_ORDER: Int = 122

const val EC_R_INVALID_KEY: Int = 116

const val EC_R_INVALID_OUTPUT_LENGTH: Int = 161

const val EC_R_INVALID_PEER_KEY: Int = 133

const val EC_R_INVALID_PENTANOMIAL_BASIS: Int = 132

const val EC_R_INVALID_PRIVATE_KEY: Int = 123

const val EC_R_INVALID_TRINOMIAL_BASIS: Int = 137

const val EC_R_KDF_PARAMETER_ERROR: Int = 148

const val EC_R_KEYS_NOT_SET: Int = 140

const val EC_R_LADDER_POST_FAILURE: Int = 136

const val EC_R_LADDER_PRE_FAILURE: Int = 153

const val EC_R_LADDER_STEP_FAILURE: Int = 162

const val EC_R_MISSING_PARAMETERS: Int = 124

const val EC_R_MISSING_PRIVATE_KEY: Int = 125

const val EC_R_NEED_NEW_SETUP_VALUES: Int = 157

const val EC_R_NOT_A_NIST_PRIME: Int = 135

const val EC_R_NOT_IMPLEMENTED: Int = 126

const val EC_R_NOT_INITIALIZED: Int = 111

const val EC_R_NO_PARAMETERS_SET: Int = 139

const val EC_R_NO_PRIVATE_VALUE: Int = 154

const val EC_R_OPERATION_NOT_SUPPORTED: Int = 152

const val EC_R_PASSED_NULL_PARAMETER: Int = 134

const val EC_R_PEER_KEY_ERROR: Int = 149

const val EC_R_PKPARAMETERS2GROUP_FAILURE: Int = 127

const val EC_R_POINT_ARITHMETIC_FAILURE: Int = 155

const val EC_R_POINT_AT_INFINITY: Int = 106

const val EC_R_POINT_COORDINATES_BLIND_FAILURE: Int = 163

const val EC_R_POINT_IS_NOT_ON_CURVE: Int = 107

const val EC_R_RANDOM_NUMBER_GENERATION_FAILED: Int = 158

const val EC_R_SHARED_INFO_ERROR: Int = 150

const val EC_R_SLOT_FULL: Int = 108

const val EC_R_UNDEFINED_GENERATOR: Int = 113

const val EC_R_UNDEFINED_ORDER: Int = 128

const val EC_R_UNKNOWN_COFACTOR: Int = 164

const val EC_R_UNKNOWN_GROUP: Int = 129

const val EC_R_UNKNOWN_ORDER: Int = 114

const val EC_R_UNSUPPORTED_FIELD: Int = 131

const val EC_R_WRONG_CURVE_PARAMETERS: Int = 145

const val EC_R_WRONG_ORDER: Int = 130

const val OPENSSL_ECC_MAX_FIELD_BITS: Int = 661

const val OPENSSL_EC_EXPLICIT_CURVE: Int = 0

const val OPENSSL_EC_NAMED_CURVE: Int = 1

const val EC_PKEY_NO_PARAMETERS: Int = 1

const val EC_PKEY_NO_PUBKEY: Int = 2

const val EC_FLAG_NON_FIPS_ALLOW: Int = 1

const val EC_FLAG_FIPS_CHECKED: Int = 2

const val EC_FLAG_COFACTOR_ECDH: Int = 4096

const val EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID: Int = 4097

const val EVP_PKEY_CTRL_EC_PARAM_ENC: Int = 4098

const val EVP_PKEY_CTRL_EC_ECDH_COFACTOR: Int = 4099

const val EVP_PKEY_CTRL_EC_KDF_TYPE: Int = 4100

const val EVP_PKEY_CTRL_EC_KDF_MD: Int = 4101

const val EVP_PKEY_CTRL_GET_EC_KDF_MD: Int = 4102

const val EVP_PKEY_CTRL_EC_KDF_OUTLEN: Int = 4103

const val EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN: Int = 4104

const val EVP_PKEY_CTRL_EC_KDF_UKM: Int = 4105

const val EVP_PKEY_CTRL_GET_EC_KDF_UKM: Int = 4106

const val EVP_PKEY_CTRL_SET1_ID: Int = 4107

const val EVP_PKEY_CTRL_GET1_ID: Int = 4108

const val EVP_PKEY_CTRL_GET1_ID_LEN: Int = 4109

const val EVP_PKEY_ECDH_KDF_NONE: Int = 1

const val EVP_PKEY_ECDH_KDF_X9_63: Int = 2

const val EVP_PKEY_ECDH_KDF_X9_62: Int = 2

const val RSA_F_CHECK_PADDING_MD: Int = 140

const val RSA_F_ENCODE_PKCS1: Int = 146

const val RSA_F_INT_RSA_VERIFY: Int = 145

const val RSA_F_OLD_RSA_PRIV_DECODE: Int = 147

const val RSA_F_PKEY_PSS_INIT: Int = 165

const val RSA_F_PKEY_RSA_CTRL: Int = 143

const val RSA_F_PKEY_RSA_CTRL_STR: Int = 144

const val RSA_F_PKEY_RSA_SIGN: Int = 142

const val RSA_F_PKEY_RSA_VERIFY: Int = 149

const val RSA_F_PKEY_RSA_VERIFYRECOVER: Int = 141

const val RSA_F_RSA_ALGOR_TO_MD: Int = 156

const val RSA_F_RSA_BUILTIN_KEYGEN: Int = 129

const val RSA_F_RSA_CHECK_KEY: Int = 123

const val RSA_F_RSA_CHECK_KEY_EX: Int = 160

const val RSA_F_RSA_CMS_DECRYPT: Int = 159

const val RSA_F_RSA_CMS_VERIFY: Int = 158

const val RSA_F_RSA_ITEM_VERIFY: Int = 148

const val RSA_F_RSA_METH_DUP: Int = 161

const val RSA_F_RSA_METH_NEW: Int = 162

const val RSA_F_RSA_METH_SET1_NAME: Int = 163

const val RSA_F_RSA_MGF1_TO_MD: Int = 157

const val RSA_F_RSA_MULTIP_INFO_NEW: Int = 166

const val RSA_F_RSA_NEW_METHOD: Int = 106

const val RSA_F_RSA_NULL: Int = 124

const val RSA_F_RSA_NULL_PRIVATE_DECRYPT: Int = 132

const val RSA_F_RSA_NULL_PRIVATE_ENCRYPT: Int = 133

const val RSA_F_RSA_NULL_PUBLIC_DECRYPT: Int = 134

const val RSA_F_RSA_NULL_PUBLIC_ENCRYPT: Int = 135

const val RSA_F_RSA_OSSL_PRIVATE_DECRYPT: Int = 101

const val RSA_F_RSA_OSSL_PRIVATE_ENCRYPT: Int = 102

const val RSA_F_RSA_OSSL_PUBLIC_DECRYPT: Int = 103

const val RSA_F_RSA_OSSL_PUBLIC_ENCRYPT: Int = 104

const val RSA_F_RSA_PADDING_ADD_NONE: Int = 107

const val RSA_F_RSA_PADDING_ADD_PKCS1_OAEP: Int = 121

const val RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1: Int = 154

const val RSA_F_RSA_PADDING_ADD_PKCS1_PSS: Int = 125

const val RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1: Int = 152

const val RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1: Int = 108

const val RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2: Int = 109

const val RSA_F_RSA_PADDING_ADD_SSLV23: Int = 110

const val RSA_F_RSA_PADDING_ADD_X931: Int = 127

const val RSA_F_RSA_PADDING_CHECK_NONE: Int = 111

const val RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP: Int = 122

const val RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1: Int = 153

const val RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1: Int = 112

const val RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2: Int = 113

const val RSA_F_RSA_PADDING_CHECK_SSLV23: Int = 114

const val RSA_F_RSA_PADDING_CHECK_X931: Int = 128

const val RSA_F_RSA_PARAM_DECODE: Int = 164

const val RSA_F_RSA_PRINT: Int = 115

const val RSA_F_RSA_PRINT_FP: Int = 116

const val RSA_F_RSA_PRIV_DECODE: Int = 150

const val RSA_F_RSA_PRIV_ENCODE: Int = 138

const val RSA_F_RSA_PSS_GET_PARAM: Int = 151

const val RSA_F_RSA_PSS_TO_CTX: Int = 155

const val RSA_F_RSA_PUB_DECODE: Int = 139

const val RSA_F_RSA_SETUP_BLINDING: Int = 136

const val RSA_F_RSA_SIGN: Int = 117

const val RSA_F_RSA_SIGN_ASN1_OCTET_STRING: Int = 118

const val RSA_F_RSA_VERIFY: Int = 119

const val RSA_F_RSA_VERIFY_ASN1_OCTET_STRING: Int = 120

const val RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1: Int = 126

const val RSA_F_SETUP_TBUF: Int = 167

const val RSA_R_ALGORITHM_MISMATCH: Int = 100

const val RSA_R_BAD_E_VALUE: Int = 101

const val RSA_R_BAD_FIXED_HEADER_DECRYPT: Int = 102

const val RSA_R_BAD_PAD_BYTE_COUNT: Int = 103

const val RSA_R_BAD_SIGNATURE: Int = 104

const val RSA_R_BLOCK_TYPE_IS_NOT_01: Int = 106

const val RSA_R_BLOCK_TYPE_IS_NOT_02: Int = 107

const val RSA_R_DATA_GREATER_THAN_MOD_LEN: Int = 108

const val RSA_R_DATA_TOO_LARGE: Int = 109

const val RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE: Int = 110

const val RSA_R_DATA_TOO_LARGE_FOR_MODULUS: Int = 132

const val RSA_R_DATA_TOO_SMALL: Int = 111

const val RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE: Int = 122

const val RSA_R_DIGEST_DOES_NOT_MATCH: Int = 158

const val RSA_R_DIGEST_NOT_ALLOWED: Int = 145

const val RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY: Int = 112

const val RSA_R_DMP1_NOT_CONGRUENT_TO_D: Int = 124

const val RSA_R_DMQ1_NOT_CONGRUENT_TO_D: Int = 125

const val RSA_R_D_E_NOT_CONGRUENT_TO_1: Int = 123

const val RSA_R_FIRST_OCTET_INVALID: Int = 133

const val RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE: Int = 144

const val RSA_R_INVALID_DIGEST: Int = 157

const val RSA_R_INVALID_DIGEST_LENGTH: Int = 143

const val RSA_R_INVALID_HEADER: Int = 137

const val RSA_R_INVALID_LABEL: Int = 160

const val RSA_R_INVALID_MESSAGE_LENGTH: Int = 131

const val RSA_R_INVALID_MGF1_MD: Int = 156

const val RSA_R_INVALID_MULTI_PRIME_KEY: Int = 167

const val RSA_R_INVALID_OAEP_PARAMETERS: Int = 161

const val RSA_R_INVALID_PADDING: Int = 138

const val RSA_R_INVALID_PADDING_MODE: Int = 141

const val RSA_R_INVALID_PSS_PARAMETERS: Int = 149

const val RSA_R_INVALID_PSS_SALTLEN: Int = 146

const val RSA_R_INVALID_SALT_LENGTH: Int = 150

const val RSA_R_INVALID_TRAILER: Int = 139

const val RSA_R_INVALID_X931_DIGEST: Int = 142

const val RSA_R_IQMP_NOT_INVERSE_OF_Q: Int = 126

const val RSA_R_KEY_PRIME_NUM_INVALID: Int = 165

const val RSA_R_KEY_SIZE_TOO_SMALL: Int = 120

const val RSA_R_LAST_OCTET_INVALID: Int = 134

const val RSA_R_MISSING_PRIVATE_KEY: Int = 179

const val RSA_R_MGF1_DIGEST_NOT_ALLOWED: Int = 152

const val RSA_R_MODULUS_TOO_LARGE: Int = 105

const val RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R: Int = 168

const val RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D: Int = 169

const val RSA_R_MP_R_NOT_PRIME: Int = 170

const val RSA_R_NO_PUBLIC_EXPONENT: Int = 140

const val RSA_R_NULL_BEFORE_BLOCK_MISSING: Int = 113

const val RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES: Int = 172

const val RSA_R_N_DOES_NOT_EQUAL_P_Q: Int = 127

const val RSA_R_OAEP_DECODING_ERROR: Int = 121

const val RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE: Int = 148

const val RSA_R_PADDING_CHECK_FAILED: Int = 114

const val RSA_R_PKCS_DECODING_ERROR: Int = 159

const val RSA_R_PSS_SALTLEN_TOO_SMALL: Int = 164

const val RSA_R_P_NOT_PRIME: Int = 128

const val RSA_R_Q_NOT_PRIME: Int = 129

const val RSA_R_RSA_OPERATIONS_NOT_SUPPORTED: Int = 130

const val RSA_R_SLEN_CHECK_FAILED: Int = 136

const val RSA_R_SLEN_RECOVERY_FAILED: Int = 135

const val RSA_R_SSLV3_ROLLBACK_ATTACK: Int = 115

const val RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD: Int = 116

const val RSA_R_UNKNOWN_ALGORITHM_TYPE: Int = 117

const val RSA_R_UNKNOWN_DIGEST: Int = 166

const val RSA_R_UNKNOWN_MASK_DIGEST: Int = 151

const val RSA_R_UNKNOWN_PADDING_TYPE: Int = 118

const val RSA_R_UNSUPPORTED_ENCRYPTION_TYPE: Int = 162

const val RSA_R_UNSUPPORTED_LABEL_SOURCE: Int = 163

const val RSA_R_UNSUPPORTED_MASK_ALGORITHM: Int = 153

const val RSA_R_UNSUPPORTED_MASK_PARAMETER: Int = 154

const val RSA_R_UNSUPPORTED_SIGNATURE_TYPE: Int = 155

const val RSA_R_VALUE_MISSING: Int = 147

const val RSA_R_WRONG_SIGNATURE_LENGTH: Int = 119

const val OPENSSL_RSA_MAX_MODULUS_BITS: Int = 16384

const val OPENSSL_RSA_FIPS_MIN_MODULUS_BITS: Int = 1024

const val OPENSSL_RSA_SMALL_MODULUS_BITS: Int = 3072

const val OPENSSL_RSA_MAX_PUBEXP_BITS: Int = 64

const val RSA_3: Long = 3

const val RSA_F4: Long = 65537

const val RSA_ASN1_VERSION_DEFAULT: Int = 0

const val RSA_ASN1_VERSION_MULTI: Int = 1

const val RSA_DEFAULT_PRIME_NUM: Int = 2

const val RSA_METHOD_FLAG_NO_CHECK: Int = 1

const val RSA_FLAG_CACHE_PUBLIC: Int = 2

const val RSA_FLAG_CACHE_PRIVATE: Int = 4

const val RSA_FLAG_BLINDING: Int = 8

const val RSA_FLAG_THREAD_SAFE: Int = 16

const val RSA_FLAG_EXT_PKEY: Int = 32

const val RSA_FLAG_NO_BLINDING: Int = 128

const val RSA_FLAG_NO_CONSTTIME: Int = 0

const val RSA_FLAG_NO_EXP_CONSTTIME: Int = 0

const val RSA_PSS_SALTLEN_DIGEST: Int = -1

const val RSA_PSS_SALTLEN_AUTO: Int = -2

const val RSA_PSS_SALTLEN_MAX: Int = -3

const val RSA_PSS_SALTLEN_MAX_SIGN: Int = -2

const val EVP_PKEY_CTRL_RSA_PADDING: Int = 4097

const val EVP_PKEY_CTRL_RSA_PSS_SALTLEN: Int = 4098

const val EVP_PKEY_CTRL_RSA_KEYGEN_BITS: Int = 4099

const val EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP: Int = 4100

const val EVP_PKEY_CTRL_RSA_MGF1_MD: Int = 4101

const val EVP_PKEY_CTRL_GET_RSA_PADDING: Int = 4102

const val EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN: Int = 4103

const val EVP_PKEY_CTRL_GET_RSA_MGF1_MD: Int = 4104

const val EVP_PKEY_CTRL_RSA_OAEP_MD: Int = 4105

const val EVP_PKEY_CTRL_RSA_OAEP_LABEL: Int = 4106

const val EVP_PKEY_CTRL_GET_RSA_OAEP_MD: Int = 4107

const val EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL: Int = 4108

const val EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES: Int = 4109

const val RSA_PKCS1_PADDING: Int = 1

const val RSA_SSLV23_PADDING: Int = 2

const val RSA_NO_PADDING: Int = 3

const val RSA_PKCS1_OAEP_PADDING: Int = 4

const val RSA_X931_PADDING: Int = 5

const val RSA_PKCS1_PSS_PADDING: Int = 6

const val RSA_PKCS1_PADDING_SIZE: Int = 11

const val RSA_FLAG_FIPS_METHOD: Int = 1024

const val RSA_FLAG_NON_FIPS_ALLOW: Int = 1024

const val RSA_FLAG_CHECKED: Int = 2048

const val DH_F_COMPUTE_KEY: Int = 102

const val DH_F_DHPARAMS_PRINT_FP: Int = 101

const val DH_F_DH_BUILTIN_GENPARAMS: Int = 106

const val DH_F_DH_CHECK_EX: Int = 121

const val DH_F_DH_CHECK_PARAMS_EX: Int = 122

const val DH_F_DH_CHECK_PUB_KEY_EX: Int = 123

const val DH_F_DH_CMS_DECRYPT: Int = 114

const val DH_F_DH_CMS_SET_PEERKEY: Int = 115

const val DH_F_DH_CMS_SET_SHARED_INFO: Int = 116

const val DH_F_DH_METH_DUP: Int = 117

const val DH_F_DH_METH_NEW: Int = 118

const val DH_F_DH_METH_SET1_NAME: Int = 119

const val DH_F_DH_NEW_BY_NID: Int = 104

const val DH_F_DH_NEW_METHOD: Int = 105

const val DH_F_DH_PARAM_DECODE: Int = 107

const val DH_F_DH_PKEY_PUBLIC_CHECK: Int = 124

const val DH_F_DH_PRIV_DECODE: Int = 110

const val DH_F_DH_PRIV_ENCODE: Int = 111

const val DH_F_DH_PUB_DECODE: Int = 108

const val DH_F_DH_PUB_ENCODE: Int = 109

const val DH_F_DO_DH_PRINT: Int = 100

const val DH_F_GENERATE_KEY: Int = 103

const val DH_F_PKEY_DH_CTRL_STR: Int = 120

const val DH_F_PKEY_DH_DERIVE: Int = 112

const val DH_F_PKEY_DH_INIT: Int = 125

const val DH_F_PKEY_DH_KEYGEN: Int = 113

const val DH_R_BAD_GENERATOR: Int = 101

const val DH_R_BN_DECODE_ERROR: Int = 109

const val DH_R_BN_ERROR: Int = 106

const val DH_R_CHECK_INVALID_J_VALUE: Int = 115

const val DH_R_CHECK_INVALID_Q_VALUE: Int = 116

const val DH_R_CHECK_PUBKEY_INVALID: Int = 122

const val DH_R_CHECK_PUBKEY_TOO_LARGE: Int = 123

const val DH_R_CHECK_PUBKEY_TOO_SMALL: Int = 124

const val DH_R_CHECK_P_NOT_PRIME: Int = 117

const val DH_R_CHECK_P_NOT_SAFE_PRIME: Int = 118

const val DH_R_CHECK_Q_NOT_PRIME: Int = 119

const val DH_R_DECODE_ERROR: Int = 104

const val DH_R_INVALID_PARAMETER_NAME: Int = 110

const val DH_R_INVALID_PARAMETER_NID: Int = 114

const val DH_R_INVALID_PUBKEY: Int = 102

const val DH_R_KDF_PARAMETER_ERROR: Int = 112

const val DH_R_KEYS_NOT_SET: Int = 108

const val DH_R_MISSING_PUBKEY: Int = 125

const val DH_R_MODULUS_TOO_LARGE: Int = 103

const val DH_R_NOT_SUITABLE_GENERATOR: Int = 120

const val DH_R_NO_PARAMETERS_SET: Int = 107

const val DH_R_NO_PRIVATE_VALUE: Int = 100

const val DH_R_PARAMETER_ENCODING_ERROR: Int = 105

const val DH_R_PEER_KEY_ERROR: Int = 111

const val DH_R_SHARED_INFO_ERROR: Int = 113

const val DH_R_UNABLE_TO_CHECK_GENERATOR: Int = 121

const val OPENSSL_DH_MAX_MODULUS_BITS: Int = 10000

const val OPENSSL_DH_FIPS_MIN_MODULUS_BITS: Int = 1024

const val DH_FLAG_CACHE_MONT_P: Int = 1

const val DH_FLAG_NO_EXP_CONSTTIME: Int = 0

const val DH_FLAG_FIPS_METHOD: Int = 1024

const val DH_FLAG_NON_FIPS_ALLOW: Int = 1024

const val DH_GENERATOR_2: Int = 2

const val DH_GENERATOR_5: Int = 5

const val DH_CHECK_P_NOT_PRIME: Int = 1

const val DH_CHECK_P_NOT_SAFE_PRIME: Int = 2

const val DH_UNABLE_TO_CHECK_GENERATOR: Int = 4

const val DH_NOT_SUITABLE_GENERATOR: Int = 8

const val DH_CHECK_Q_NOT_PRIME: Int = 16

const val DH_CHECK_INVALID_Q_VALUE: Int = 32

const val DH_CHECK_INVALID_J_VALUE: Int = 64

const val DH_CHECK_PUBKEY_TOO_SMALL: Int = 1

const val DH_CHECK_PUBKEY_TOO_LARGE: Int = 2

const val DH_CHECK_PUBKEY_INVALID: Int = 4

const val DH_CHECK_P_NOT_STRONG_PRIME: Int = 2

const val EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN: Int = 4097

const val EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR: Int = 4098

const val EVP_PKEY_CTRL_DH_RFC5114: Int = 4099

const val EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN: Int = 4100

const val EVP_PKEY_CTRL_DH_PARAMGEN_TYPE: Int = 4101

const val EVP_PKEY_CTRL_DH_KDF_TYPE: Int = 4102

const val EVP_PKEY_CTRL_DH_KDF_MD: Int = 4103

const val EVP_PKEY_CTRL_GET_DH_KDF_MD: Int = 4104

const val EVP_PKEY_CTRL_DH_KDF_OUTLEN: Int = 4105

const val EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN: Int = 4106

const val EVP_PKEY_CTRL_DH_KDF_UKM: Int = 4107

const val EVP_PKEY_CTRL_GET_DH_KDF_UKM: Int = 4108

const val EVP_PKEY_CTRL_DH_KDF_OID: Int = 4109

const val EVP_PKEY_CTRL_GET_DH_KDF_OID: Int = 4110

const val EVP_PKEY_CTRL_DH_NID: Int = 4111

const val EVP_PKEY_CTRL_DH_PAD: Int = 4112

const val EVP_PKEY_DH_KDF_NONE: Int = 1

const val EVP_PKEY_DH_KDF_X9_42: Int = 2

const val DSA_F_DSAPARAMS_PRINT: Int = 100

const val DSA_F_DSAPARAMS_PRINT_FP: Int = 101

const val DSA_F_DSA_BUILTIN_PARAMGEN: Int = 125

const val DSA_F_DSA_BUILTIN_PARAMGEN2: Int = 126

const val DSA_F_DSA_DO_SIGN: Int = 112

const val DSA_F_DSA_DO_VERIFY: Int = 113

const val DSA_F_DSA_METH_DUP: Int = 127

const val DSA_F_DSA_METH_NEW: Int = 128

const val DSA_F_DSA_METH_SET1_NAME: Int = 129

const val DSA_F_DSA_NEW_METHOD: Int = 103

const val DSA_F_DSA_PARAM_DECODE: Int = 119

const val DSA_F_DSA_PRINT_FP: Int = 105

const val DSA_F_DSA_PRIV_DECODE: Int = 115

const val DSA_F_DSA_PRIV_ENCODE: Int = 116

const val DSA_F_DSA_PUB_DECODE: Int = 117

const val DSA_F_DSA_PUB_ENCODE: Int = 118

const val DSA_F_DSA_SIGN: Int = 106

const val DSA_F_DSA_SIGN_SETUP: Int = 107

const val DSA_F_DSA_SIG_NEW: Int = 102

const val DSA_F_OLD_DSA_PRIV_DECODE: Int = 122

const val DSA_F_PKEY_DSA_CTRL: Int = 120

const val DSA_F_PKEY_DSA_CTRL_STR: Int = 104

const val DSA_F_PKEY_DSA_KEYGEN: Int = 121

const val DSA_R_BAD_Q_VALUE: Int = 102

const val DSA_R_BN_DECODE_ERROR: Int = 108

const val DSA_R_BN_ERROR: Int = 109

const val DSA_R_DECODE_ERROR: Int = 104

const val DSA_R_INVALID_DIGEST_TYPE: Int = 106

const val DSA_R_INVALID_PARAMETERS: Int = 112

const val DSA_R_MISSING_PARAMETERS: Int = 101

const val DSA_R_MISSING_PRIVATE_KEY: Int = 111

const val DSA_R_MODULUS_TOO_LARGE: Int = 103

const val DSA_R_NO_PARAMETERS_SET: Int = 107

const val DSA_R_PARAMETER_ENCODING_ERROR: Int = 105

const val DSA_R_Q_NOT_PRIME: Int = 113

const val DSA_R_SEED_LEN_SMALL: Int = 110

const val OPENSSL_DSA_MAX_MODULUS_BITS: Int = 10000

const val OPENSSL_DSA_FIPS_MIN_MODULUS_BITS: Int = 1024

const val DSA_FLAG_CACHE_MONT_P: Int = 1

const val DSA_FLAG_NO_EXP_CONSTTIME: Int = 0

const val DSA_FLAG_FIPS_METHOD: Int = 1024

const val DSA_FLAG_NON_FIPS_ALLOW: Int = 1024

const val DSA_FLAG_FIPS_CHECKED: Int = 2048

const val DSS_prime_checks: Int = 64

const val EVP_PKEY_CTRL_DSA_PARAMGEN_BITS: Int = 4097

const val EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS: Int = 4098

const val EVP_PKEY_CTRL_DSA_PARAMGEN_MD: Int = 4099

const val SHA_LBLOCK: Int = 16

const val SHA_CBLOCK: Int = 64

const val SHA_LAST_BLOCK: Int = 56

const val SHA_DIGEST_LENGTH: Int = 20

const val SHA256_CBLOCK: Int = 64

const val SHA224_DIGEST_LENGTH: Int = 28

const val SHA256_DIGEST_LENGTH: Int = 32

const val SHA384_DIGEST_LENGTH: Int = 48

const val SHA512_DIGEST_LENGTH: Int = 64

const val SHA512_CBLOCK: Int = 128

const val X509_F_ADD_CERT_DIR: Int = 100

const val X509_F_BUILD_CHAIN: Int = 106

const val X509_F_BY_FILE_CTRL: Int = 101

const val X509_F_CHECK_NAME_CONSTRAINTS: Int = 149

const val X509_F_CHECK_POLICY: Int = 145

const val X509_F_DANE_I2D: Int = 107

const val X509_F_DIR_CTRL: Int = 102

const val X509_F_GET_CERT_BY_SUBJECT: Int = 103

const val X509_F_I2D_X509_AUX: Int = 151

const val X509_F_LOOKUP_CERTS_SK: Int = 152

const val X509_F_NETSCAPE_SPKI_B64_DECODE: Int = 129

const val X509_F_NETSCAPE_SPKI_B64_ENCODE: Int = 130

const val X509_F_NEW_DIR: Int = 153

const val X509_F_X509AT_ADD1_ATTR: Int = 135

const val X509_F_X509V3_ADD_EXT: Int = 104

const val X509_F_X509_ATTRIBUTE_CREATE_BY_NID: Int = 136

const val X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ: Int = 137

const val X509_F_X509_ATTRIBUTE_CREATE_BY_TXT: Int = 140

const val X509_F_X509_ATTRIBUTE_GET0_DATA: Int = 139

const val X509_F_X509_ATTRIBUTE_SET1_DATA: Int = 138

const val X509_F_X509_CHECK_PRIVATE_KEY: Int = 128

const val X509_F_X509_CRL_DIFF: Int = 105

const val X509_F_X509_CRL_METHOD_NEW: Int = 154

const val X509_F_X509_CRL_PRINT_FP: Int = 147

const val X509_F_X509_EXTENSION_CREATE_BY_NID: Int = 108

const val X509_F_X509_EXTENSION_CREATE_BY_OBJ: Int = 109

const val X509_F_X509_GET_PUBKEY_PARAMETERS: Int = 110

const val X509_F_X509_LOAD_CERT_CRL_FILE: Int = 132

const val X509_F_X509_LOAD_CERT_FILE: Int = 111

const val X509_F_X509_LOAD_CRL_FILE: Int = 112

const val X509_F_X509_LOOKUP_METH_NEW: Int = 160

const val X509_F_X509_LOOKUP_NEW: Int = 155

const val X509_F_X509_NAME_ADD_ENTRY: Int = 113

const val X509_F_X509_NAME_CANON: Int = 156

const val X509_F_X509_NAME_ENTRY_CREATE_BY_NID: Int = 114

const val X509_F_X509_NAME_ENTRY_CREATE_BY_TXT: Int = 131

const val X509_F_X509_NAME_ENTRY_SET_OBJECT: Int = 115

const val X509_F_X509_NAME_ONELINE: Int = 116

const val X509_F_X509_NAME_PRINT: Int = 117

const val X509_F_X509_OBJECT_NEW: Int = 150

const val X509_F_X509_PRINT_EX_FP: Int = 118

const val X509_F_X509_PUBKEY_DECODE: Int = 148

const val X509_F_X509_PUBKEY_GET0: Int = 119

const val X509_F_X509_PUBKEY_SET: Int = 120

const val X509_F_X509_REQ_CHECK_PRIVATE_KEY: Int = 144

const val X509_F_X509_REQ_PRINT_EX: Int = 121

const val X509_F_X509_REQ_PRINT_FP: Int = 122

const val X509_F_X509_REQ_TO_X509: Int = 123

const val X509_F_X509_STORE_ADD_CERT: Int = 124

const val X509_F_X509_STORE_ADD_CRL: Int = 125

const val X509_F_X509_STORE_ADD_LOOKUP: Int = 157

const val X509_F_X509_STORE_CTX_GET1_ISSUER: Int = 146

const val X509_F_X509_STORE_CTX_INIT: Int = 143

const val X509_F_X509_STORE_CTX_NEW: Int = 142

const val X509_F_X509_STORE_CTX_PURPOSE_INHERIT: Int = 134

const val X509_F_X509_STORE_NEW: Int = 158

const val X509_F_X509_TO_X509_REQ: Int = 126

const val X509_F_X509_TRUST_ADD: Int = 133

const val X509_F_X509_TRUST_SET: Int = 141

const val X509_F_X509_VERIFY_CERT: Int = 127

const val X509_F_X509_VERIFY_PARAM_NEW: Int = 159

const val X509_R_AKID_MISMATCH: Int = 110

const val X509_R_BAD_SELECTOR: Int = 133

const val X509_R_BAD_X509_FILETYPE: Int = 100

const val X509_R_BASE64_DECODE_ERROR: Int = 118

const val X509_R_CANT_CHECK_DH_KEY: Int = 114

const val X509_R_CERT_ALREADY_IN_HASH_TABLE: Int = 101

const val X509_R_CRL_ALREADY_DELTA: Int = 127

const val X509_R_CRL_VERIFY_FAILURE: Int = 131

const val X509_R_IDP_MISMATCH: Int = 128

const val X509_R_INVALID_ATTRIBUTES: Int = 138

const val X509_R_INVALID_DIRECTORY: Int = 113

const val X509_R_INVALID_FIELD_NAME: Int = 119

const val X509_R_INVALID_TRUST: Int = 123

const val X509_R_ISSUER_MISMATCH: Int = 129

const val X509_R_KEY_TYPE_MISMATCH: Int = 115

const val X509_R_KEY_VALUES_MISMATCH: Int = 116

const val X509_R_LOADING_CERT_DIR: Int = 103

const val X509_R_LOADING_DEFAULTS: Int = 104

const val X509_R_METHOD_NOT_SUPPORTED: Int = 124

const val X509_R_NAME_TOO_LONG: Int = 134

const val X509_R_NEWER_CRL_NOT_NEWER: Int = 132

const val X509_R_NO_CERTIFICATE_FOUND: Int = 135

const val X509_R_NO_CERTIFICATE_OR_CRL_FOUND: Int = 136

const val X509_R_NO_CERT_SET_FOR_US_TO_VERIFY: Int = 105

const val X509_R_NO_CRL_FOUND: Int = 137

const val X509_R_NO_CRL_NUMBER: Int = 130

const val X509_R_PUBLIC_KEY_DECODE_ERROR: Int = 125

const val X509_R_PUBLIC_KEY_ENCODE_ERROR: Int = 126

const val X509_R_SHOULD_RETRY: Int = 106

const val X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN: Int = 107

const val X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY: Int = 108

const val X509_R_UNKNOWN_KEY_TYPE: Int = 117

const val X509_R_UNKNOWN_NID: Int = 109

const val X509_R_UNKNOWN_PURPOSE_ID: Int = 121

const val X509_R_UNKNOWN_TRUST_ID: Int = 120

const val X509_R_UNSUPPORTED_ALGORITHM: Int = 111

const val X509_R_WRONG_LOOKUP_TYPE: Int = 112

const val X509_R_WRONG_TYPE: Int = 122

const val X509_SIG_INFO_VALID: Int = 1

const val X509_SIG_INFO_TLS: Int = 2

const val X509_FILETYPE_PEM: Int = 1

const val X509_FILETYPE_ASN1: Int = 2

const val X509_FILETYPE_DEFAULT: Int = 3

const val X509v3_KU_DIGITAL_SIGNATURE: Int = 128

const val X509v3_KU_NON_REPUDIATION: Int = 64

const val X509v3_KU_KEY_ENCIPHERMENT: Int = 32

const val X509v3_KU_DATA_ENCIPHERMENT: Int = 16

const val X509v3_KU_KEY_AGREEMENT: Int = 8

const val X509v3_KU_KEY_CERT_SIGN: Int = 4

const val X509v3_KU_CRL_SIGN: Int = 2

const val X509v3_KU_ENCIPHER_ONLY: Int = 1

const val X509v3_KU_DECIPHER_ONLY: Int = 32768

const val X509v3_KU_UNDEF: Int = 65535

const val X509_EX_V_NETSCAPE_HACK: Int = 32768

const val X509_EX_V_INIT: Int = 1

const val X509_TRUST_DEFAULT: Int = 0

const val X509_TRUST_COMPAT: Int = 1

const val X509_TRUST_SSL_CLIENT: Int = 2

const val X509_TRUST_SSL_SERVER: Int = 3

const val X509_TRUST_EMAIL: Int = 4

const val X509_TRUST_OBJECT_SIGN: Int = 5

const val X509_TRUST_OCSP_SIGN: Int = 6

const val X509_TRUST_OCSP_REQUEST: Int = 7

const val X509_TRUST_TSA: Int = 8

const val X509_TRUST_MIN: Int = 1

const val X509_TRUST_MAX: Int = 8

const val X509_TRUST_DYNAMIC: UInt = 1u

const val X509_TRUST_DYNAMIC_NAME: UInt = 2u

const val X509_TRUST_NO_SS_COMPAT: UInt = 4u

const val X509_TRUST_DO_SS_COMPAT: UInt = 8u

const val X509_TRUST_OK_ANY_EKU: UInt = 16u

const val X509_TRUST_TRUSTED: Int = 1

const val X509_TRUST_REJECTED: Int = 2

const val X509_TRUST_UNTRUSTED: Int = 3

const val X509_FLAG_COMPAT: Int = 0

const val X509_FLAG_NO_HEADER: Long = 1

const val X509_FLAG_NO_VERSION: Long = 2

const val X509_FLAG_NO_SERIAL: Long = 4

const val X509_FLAG_NO_SIGNAME: Long = 8

const val X509_FLAG_NO_ISSUER: Long = 16

const val X509_FLAG_NO_VALIDITY: Long = 32

const val X509_FLAG_NO_SUBJECT: Long = 64

const val X509_FLAG_NO_PUBKEY: Long = 128

const val X509_FLAG_NO_EXTENSIONS: Long = 256

const val X509_FLAG_NO_SIGDUMP: Long = 512

const val X509_FLAG_NO_AUX: Long = 1024

const val X509_FLAG_NO_ATTRIBUTES: Long = 2048

const val X509_FLAG_NO_IDS: Long = 4096

const val XN_FLAG_SEP_MASK: Int = 983040

const val XN_FLAG_COMPAT: Int = 0

const val XN_FLAG_SEP_COMMA_PLUS: Int = 65536

const val XN_FLAG_SEP_CPLUS_SPC: Int = 131072

const val XN_FLAG_SEP_SPLUS_SPC: Int = 196608

const val XN_FLAG_SEP_MULTILINE: Int = 262144

const val XN_FLAG_DN_REV: Int = 1048576

const val XN_FLAG_FN_MASK: Int = 6291456

const val XN_FLAG_FN_SN: Int = 0

const val XN_FLAG_FN_LN: Int = 2097152

const val XN_FLAG_FN_OID: Int = 4194304

const val XN_FLAG_FN_NONE: Int = 6291456

const val XN_FLAG_SPC_EQ: Int = 8388608

const val XN_FLAG_DUMP_UNKNOWN_FIELDS: Int = 16777216

const val XN_FLAG_FN_ALIGN: Int = 33554432

const val XN_FLAG_RFC2253: Int = 17892119

const val XN_FLAG_ONELINE: Int = 8520479

const val XN_FLAG_MULTILINE: Int = 44302342

const val LH_LOAD_MULT: Int = 256

const val X509_LU_RETRY: Int = -1

const val X509_LU_FAIL: Int = 0

const val X509_L_FILE_LOAD: Int = 1

const val X509_L_ADD_DIR: Int = 2

const val X509_V_OK: Int = 0

const val X509_V_ERR_UNSPECIFIED: Int = 1

const val X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT: Int = 2

const val X509_V_ERR_UNABLE_TO_GET_CRL: Int = 3

const val X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE: Int = 4

const val X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE: Int = 5

const val X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY: Int = 6

const val X509_V_ERR_CERT_SIGNATURE_FAILURE: Int = 7

const val X509_V_ERR_CRL_SIGNATURE_FAILURE: Int = 8

const val X509_V_ERR_CERT_NOT_YET_VALID: Int = 9

const val X509_V_ERR_CERT_HAS_EXPIRED: Int = 10

const val X509_V_ERR_CRL_NOT_YET_VALID: Int = 11

const val X509_V_ERR_CRL_HAS_EXPIRED: Int = 12

const val X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD: Int = 13

const val X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD: Int = 14

const val X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD: Int = 15

const val X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD: Int = 16

const val X509_V_ERR_OUT_OF_MEM: Int = 17

const val X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT: Int = 18

const val X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN: Int = 19

const val X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY: Int = 20

const val X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE: Int = 21

const val X509_V_ERR_CERT_CHAIN_TOO_LONG: Int = 22

const val X509_V_ERR_CERT_REVOKED: Int = 23

const val X509_V_ERR_INVALID_CA: Int = 24

const val X509_V_ERR_PATH_LENGTH_EXCEEDED: Int = 25

const val X509_V_ERR_INVALID_PURPOSE: Int = 26

const val X509_V_ERR_CERT_UNTRUSTED: Int = 27

const val X509_V_ERR_CERT_REJECTED: Int = 28

const val X509_V_ERR_SUBJECT_ISSUER_MISMATCH: Int = 29

const val X509_V_ERR_AKID_SKID_MISMATCH: Int = 30

const val X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH: Int = 31

const val X509_V_ERR_KEYUSAGE_NO_CERTSIGN: Int = 32

const val X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER: Int = 33

const val X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION: Int = 34

const val X509_V_ERR_KEYUSAGE_NO_CRL_SIGN: Int = 35

const val X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION: Int = 36

const val X509_V_ERR_INVALID_NON_CA: Int = 37

const val X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED: Int = 38

const val X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE: Int = 39

const val X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED: Int = 40

const val X509_V_ERR_INVALID_EXTENSION: Int = 41

const val X509_V_ERR_INVALID_POLICY_EXTENSION: Int = 42

const val X509_V_ERR_NO_EXPLICIT_POLICY: Int = 43

const val X509_V_ERR_DIFFERENT_CRL_SCOPE: Int = 44

const val X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE: Int = 45

const val X509_V_ERR_UNNESTED_RESOURCE: Int = 46

const val X509_V_ERR_PERMITTED_VIOLATION: Int = 47

const val X509_V_ERR_EXCLUDED_VIOLATION: Int = 48

const val X509_V_ERR_SUBTREE_MINMAX: Int = 49

const val X509_V_ERR_APPLICATION_VERIFICATION: Int = 50

const val X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE: Int = 51

const val X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX: Int = 52

const val X509_V_ERR_UNSUPPORTED_NAME_SYNTAX: Int = 53

const val X509_V_ERR_CRL_PATH_VALIDATION_ERROR: Int = 54

const val X509_V_ERR_PATH_LOOP: Int = 55

const val X509_V_ERR_SUITE_B_INVALID_VERSION: Int = 56

const val X509_V_ERR_SUITE_B_INVALID_ALGORITHM: Int = 57

const val X509_V_ERR_SUITE_B_INVALID_CURVE: Int = 58

const val X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM: Int = 59

const val X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED: Int = 60

const val X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256: Int = 61

const val X509_V_ERR_HOSTNAME_MISMATCH: Int = 62

const val X509_V_ERR_EMAIL_MISMATCH: Int = 63

const val X509_V_ERR_IP_ADDRESS_MISMATCH: Int = 64

const val X509_V_ERR_DANE_NO_MATCH: Int = 65

const val X509_V_ERR_EE_KEY_TOO_SMALL: Int = 66

const val X509_V_ERR_CA_KEY_TOO_SMALL: Int = 67

const val X509_V_ERR_CA_MD_TOO_WEAK: Int = 68

const val X509_V_ERR_INVALID_CALL: Int = 69

const val X509_V_ERR_STORE_LOOKUP: Int = 70

const val X509_V_ERR_NO_VALID_SCTS: Int = 71

const val X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION: Int = 72

const val X509_V_ERR_OCSP_VERIFY_NEEDED: Int = 73

const val X509_V_ERR_OCSP_VERIFY_FAILED: Int = 74

const val X509_V_ERR_OCSP_CERT_UNKNOWN: Int = 75

const val X509_V_FLAG_CB_ISSUER_CHECK: Int = 0

const val X509_V_FLAG_USE_CHECK_TIME: Int = 2

const val X509_V_FLAG_CRL_CHECK: Int = 4

const val X509_V_FLAG_CRL_CHECK_ALL: Int = 8

const val X509_V_FLAG_IGNORE_CRITICAL: Int = 16

const val X509_V_FLAG_X509_STRICT: Int = 32

const val X509_V_FLAG_ALLOW_PROXY_CERTS: Int = 64

const val X509_V_FLAG_POLICY_CHECK: Int = 128

const val X509_V_FLAG_EXPLICIT_POLICY: Int = 256

const val X509_V_FLAG_INHIBIT_ANY: Int = 512

const val X509_V_FLAG_INHIBIT_MAP: Int = 1024

const val X509_V_FLAG_NOTIFY_POLICY: Int = 2048

const val X509_V_FLAG_EXTENDED_CRL_SUPPORT: Int = 4096

const val X509_V_FLAG_USE_DELTAS: Int = 8192

const val X509_V_FLAG_CHECK_SS_SIGNATURE: Int = 16384

const val X509_V_FLAG_TRUSTED_FIRST: Int = 32768

const val X509_V_FLAG_SUITEB_128_LOS_ONLY: Int = 65536

const val X509_V_FLAG_SUITEB_192_LOS: Int = 131072

const val X509_V_FLAG_SUITEB_128_LOS: Int = 196608

const val X509_V_FLAG_PARTIAL_CHAIN: Int = 524288

const val X509_V_FLAG_NO_ALT_CHAINS: Int = 1048576

const val X509_V_FLAG_NO_CHECK_TIME: Int = 2097152

const val X509_VP_FLAG_DEFAULT: Int = 1

const val X509_VP_FLAG_OVERWRITE: Int = 2

const val X509_VP_FLAG_RESET_FLAGS: Int = 4

const val X509_VP_FLAG_LOCKED: Int = 8

const val X509_VP_FLAG_ONCE: Int = 16

const val X509_V_FLAG_POLICY_MASK: Int = 1920

const val DANE_FLAG_NO_DANE_EE_NAMECHECKS: Long = 1

const val X509_PCY_TREE_FAILURE: Int = -2

const val X509_PCY_TREE_INVALID: Int = -1

const val X509_PCY_TREE_INTERNAL: Int = 0

const val X509_PCY_TREE_VALID: Int = 1

const val X509_PCY_TREE_EMPTY: Int = 2

const val X509_PCY_TREE_EXPLICIT: Int = 4

const val PKCS7_F_DO_PKCS7_SIGNED_ATTRIB: Int = 136

const val PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME: Int = 135

const val PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP: Int = 118

const val PKCS7_F_PKCS7_ADD_CERTIFICATE: Int = 100

const val PKCS7_F_PKCS7_ADD_CRL: Int = 101

const val PKCS7_F_PKCS7_ADD_RECIPIENT_INFO: Int = 102

const val PKCS7_F_PKCS7_ADD_SIGNATURE: Int = 131

const val PKCS7_F_PKCS7_ADD_SIGNER: Int = 103

const val PKCS7_F_PKCS7_BIO_ADD_DIGEST: Int = 125

const val PKCS7_F_PKCS7_COPY_EXISTING_DIGEST: Int = 138

const val PKCS7_F_PKCS7_CTRL: Int = 104

const val PKCS7_F_PKCS7_DATADECODE: Int = 112

const val PKCS7_F_PKCS7_DATAFINAL: Int = 128

const val PKCS7_F_PKCS7_DATAINIT: Int = 105

const val PKCS7_F_PKCS7_DATAVERIFY: Int = 107

const val PKCS7_F_PKCS7_DECRYPT: Int = 114

const val PKCS7_F_PKCS7_DECRYPT_RINFO: Int = 133

const val PKCS7_F_PKCS7_ENCODE_RINFO: Int = 132

const val PKCS7_F_PKCS7_ENCRYPT: Int = 115

const val PKCS7_F_PKCS7_FINAL: Int = 134

const val PKCS7_F_PKCS7_FIND_DIGEST: Int = 127

const val PKCS7_F_PKCS7_GET0_SIGNERS: Int = 124

const val PKCS7_F_PKCS7_RECIP_INFO_SET: Int = 130

const val PKCS7_F_PKCS7_SET_CIPHER: Int = 108

const val PKCS7_F_PKCS7_SET_CONTENT: Int = 109

const val PKCS7_F_PKCS7_SET_DIGEST: Int = 126

const val PKCS7_F_PKCS7_SET_TYPE: Int = 110

const val PKCS7_F_PKCS7_SIGN: Int = 116

const val PKCS7_F_PKCS7_SIGNATUREVERIFY: Int = 113

const val PKCS7_F_PKCS7_SIGNER_INFO_SET: Int = 129

const val PKCS7_F_PKCS7_SIGNER_INFO_SIGN: Int = 139

const val PKCS7_F_PKCS7_SIGN_ADD_SIGNER: Int = 137

const val PKCS7_F_PKCS7_SIMPLE_SMIMECAP: Int = 119

const val PKCS7_F_PKCS7_VERIFY: Int = 117

const val PKCS7_R_CERTIFICATE_VERIFY_ERROR: Int = 117

const val PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER: Int = 144

const val PKCS7_R_CIPHER_NOT_INITIALIZED: Int = 116

const val PKCS7_R_CONTENT_AND_DATA_PRESENT: Int = 118

const val PKCS7_R_CTRL_ERROR: Int = 152

const val PKCS7_R_DECRYPT_ERROR: Int = 119

const val PKCS7_R_DIGEST_FAILURE: Int = 101

const val PKCS7_R_ENCRYPTION_CTRL_FAILURE: Int = 149

const val PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE: Int = 150

const val PKCS7_R_ERROR_ADDING_RECIPIENT: Int = 120

const val PKCS7_R_ERROR_SETTING_CIPHER: Int = 121

const val PKCS7_R_INVALID_NULL_POINTER: Int = 143

const val PKCS7_R_INVALID_SIGNED_DATA_TYPE: Int = 155

const val PKCS7_R_NO_CONTENT: Int = 122

const val PKCS7_R_NO_DEFAULT_DIGEST: Int = 151

const val PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND: Int = 154

const val PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE: Int = 115

const val PKCS7_R_NO_SIGNATURES_ON_DATA: Int = 123

const val PKCS7_R_NO_SIGNERS: Int = 142

const val PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE: Int = 104

const val PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR: Int = 124

const val PKCS7_R_PKCS7_ADD_SIGNER_ERROR: Int = 153

const val PKCS7_R_PKCS7_DATASIGN: Int = 145

const val PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE: Int = 127

const val PKCS7_R_SIGNATURE_FAILURE: Int = 105

const val PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND: Int = 128

const val PKCS7_R_SIGNING_CTRL_FAILURE: Int = 147

const val PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE: Int = 148

const val PKCS7_R_SMIME_TEXT_ERROR: Int = 129

const val PKCS7_R_UNABLE_TO_FIND_CERTIFICATE: Int = 106

const val PKCS7_R_UNABLE_TO_FIND_MEM_BIO: Int = 107

const val PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST: Int = 108

const val PKCS7_R_UNKNOWN_DIGEST_TYPE: Int = 109

const val PKCS7_R_UNKNOWN_OPERATION: Int = 110

const val PKCS7_R_UNSUPPORTED_CIPHER_TYPE: Int = 111

const val PKCS7_R_UNSUPPORTED_CONTENT_TYPE: Int = 112

const val PKCS7_R_WRONG_CONTENT_TYPE: Int = 113

const val PKCS7_R_WRONG_PKCS7_TYPE: Int = 114

const val PKCS7_S_HEADER: Int = 0

const val PKCS7_S_BODY: Int = 1

const val PKCS7_S_TAIL: Int = 2

const val PKCS7_OP_SET_DETACHED_SIGNATURE: Int = 1

const val PKCS7_OP_GET_DETACHED_SIGNATURE: Int = 2

const val PKCS7_TEXT: Int = 1

const val PKCS7_NOCERTS: Int = 2

const val PKCS7_NOSIGS: Int = 4

const val PKCS7_NOCHAIN: Int = 8

const val PKCS7_NOINTERN: Int = 16

const val PKCS7_NOVERIFY: Int = 32

const val PKCS7_DETACHED: Int = 64

const val PKCS7_BINARY: Int = 128

const val PKCS7_NOATTR: Int = 256

const val PKCS7_NOSMIMECAP: Int = 512

const val PKCS7_NOOLDMIMETYPE: Int = 1024

const val PKCS7_CRLFEOL: Int = 2048

const val PKCS7_STREAM: Int = 4096

const val PKCS7_NOCRL: Int = 8192

const val PKCS7_PARTIAL: Int = 16384

const val PKCS7_REUSE_DIGEST: Int = 32768

const val PKCS7_NO_DUAL_CONTENT: Int = 65536

const val SMIME_TEXT: Int = 1

const val SMIME_NOCERTS: Int = 2

const val SMIME_NOSIGS: Int = 4

const val SMIME_NOCHAIN: Int = 8

const val SMIME_NOINTERN: Int = 16

const val SMIME_NOVERIFY: Int = 32

const val SMIME_DETACHED: Int = 64

const val SMIME_BINARY: Int = 128

const val SMIME_NOATTR: Int = 256

const val SMIME_ASCIICRLF: Int = 524288

const val X509_EXT_PACK_UNKNOWN: Int = 1

const val X509_EXT_PACK_STRING: Int = 2

const val PEM_F_B2I_DSS: Int = 127

const val PEM_F_B2I_PVK_BIO: Int = 128

const val PEM_F_B2I_RSA: Int = 129

const val PEM_F_CHECK_BITLEN_DSA: Int = 130

const val PEM_F_CHECK_BITLEN_RSA: Int = 131

const val PEM_F_D2I_PKCS8PRIVATEKEY_BIO: Int = 120

const val PEM_F_D2I_PKCS8PRIVATEKEY_FP: Int = 121

const val PEM_F_DO_B2I: Int = 132

const val PEM_F_DO_B2I_BIO: Int = 133

const val PEM_F_DO_BLOB_HEADER: Int = 134

const val PEM_F_DO_I2B: Int = 146

const val PEM_F_DO_PK8PKEY: Int = 126

const val PEM_F_DO_PK8PKEY_FP: Int = 125

const val PEM_F_DO_PVK_BODY: Int = 135

const val PEM_F_DO_PVK_HEADER: Int = 136

const val PEM_F_GET_HEADER_AND_DATA: Int = 143

const val PEM_F_GET_NAME: Int = 144

const val PEM_F_I2B_PVK: Int = 137

const val PEM_F_I2B_PVK_BIO: Int = 138

const val PEM_F_LOAD_IV: Int = 101

const val PEM_F_PEM_ASN1_READ: Int = 102

const val PEM_F_PEM_ASN1_READ_BIO: Int = 103

const val PEM_F_PEM_ASN1_WRITE: Int = 104

const val PEM_F_PEM_ASN1_WRITE_BIO: Int = 105

const val PEM_F_PEM_DEF_CALLBACK: Int = 100

const val PEM_F_PEM_DO_HEADER: Int = 106

const val PEM_F_PEM_GET_EVP_CIPHER_INFO: Int = 107

const val PEM_F_PEM_READ: Int = 108

const val PEM_F_PEM_READ_BIO: Int = 109

const val PEM_F_PEM_READ_BIO_DHPARAMS: Int = 141

const val PEM_F_PEM_READ_BIO_EX: Int = 145

const val PEM_F_PEM_READ_BIO_PARAMETERS: Int = 140

const val PEM_F_PEM_READ_BIO_PRIVATEKEY: Int = 123

const val PEM_F_PEM_READ_DHPARAMS: Int = 142

const val PEM_F_PEM_READ_PRIVATEKEY: Int = 124

const val PEM_F_PEM_SIGNFINAL: Int = 112

const val PEM_F_PEM_WRITE: Int = 113

const val PEM_F_PEM_WRITE_BIO: Int = 114

const val PEM_F_PEM_WRITE_PRIVATEKEY: Int = 139

const val PEM_F_PEM_X509_INFO_READ: Int = 115

const val PEM_F_PEM_X509_INFO_READ_BIO: Int = 116

const val PEM_F_PEM_X509_INFO_WRITE_BIO: Int = 117

const val PEM_R_BAD_BASE64_DECODE: Int = 100

const val PEM_R_BAD_DECRYPT: Int = 101

const val PEM_R_BAD_END_LINE: Int = 102

const val PEM_R_BAD_IV_CHARS: Int = 103

const val PEM_R_BAD_MAGIC_NUMBER: Int = 116

const val PEM_R_BAD_PASSWORD_READ: Int = 104

const val PEM_R_BAD_VERSION_NUMBER: Int = 117

const val PEM_R_BIO_WRITE_FAILURE: Int = 118

const val PEM_R_CIPHER_IS_NULL: Int = 127

const val PEM_R_ERROR_CONVERTING_PRIVATE_KEY: Int = 115

const val PEM_R_EXPECTING_PRIVATE_KEY_BLOB: Int = 119

const val PEM_R_EXPECTING_PUBLIC_KEY_BLOB: Int = 120

const val PEM_R_HEADER_TOO_LONG: Int = 128

const val PEM_R_INCONSISTENT_HEADER: Int = 121

const val PEM_R_KEYBLOB_HEADER_PARSE_ERROR: Int = 122

const val PEM_R_KEYBLOB_TOO_SHORT: Int = 123

const val PEM_R_MISSING_DEK_IV: Int = 129

const val PEM_R_NOT_DEK_INFO: Int = 105

const val PEM_R_NOT_ENCRYPTED: Int = 106

const val PEM_R_NOT_PROC_TYPE: Int = 107

const val PEM_R_NO_START_LINE: Int = 108

const val PEM_R_PROBLEMS_GETTING_PASSWORD: Int = 109

const val PEM_R_PVK_DATA_TOO_SHORT: Int = 124

const val PEM_R_PVK_TOO_SHORT: Int = 125

const val PEM_R_READ_KEY: Int = 111

const val PEM_R_SHORT_HEADER: Int = 112

const val PEM_R_UNEXPECTED_DEK_IV: Int = 130

const val PEM_R_UNSUPPORTED_CIPHER: Int = 113

const val PEM_R_UNSUPPORTED_ENCRYPTION: Int = 114

const val PEM_R_UNSUPPORTED_KEY_COMPONENTS: Int = 126

const val PEM_BUFSIZE: Int = 1024

val PEM_STRING_X509_OLD: String get() = "X509 CERTIFICATE"

val PEM_STRING_X509: String get() = "CERTIFICATE"

val PEM_STRING_X509_TRUSTED: String get() = "TRUSTED CERTIFICATE"

val PEM_STRING_X509_REQ_OLD: String get() = "NEW CERTIFICATE REQUEST"

val PEM_STRING_X509_REQ: String get() = "CERTIFICATE REQUEST"

val PEM_STRING_X509_CRL: String get() = "X509 CRL"

val PEM_STRING_EVP_PKEY: String get() = "ANY PRIVATE KEY"

val PEM_STRING_PUBLIC: String get() = "PUBLIC KEY"

val PEM_STRING_RSA: String get() = "RSA PRIVATE KEY"

val PEM_STRING_RSA_PUBLIC: String get() = "RSA PUBLIC KEY"

val PEM_STRING_DSA: String get() = "DSA PRIVATE KEY"

val PEM_STRING_DSA_PUBLIC: String get() = "DSA PUBLIC KEY"

val PEM_STRING_PKCS7: String get() = "PKCS7"

val PEM_STRING_PKCS7_SIGNED: String get() = "PKCS #7 SIGNED DATA"

val PEM_STRING_PKCS8: String get() = "ENCRYPTED PRIVATE KEY"

val PEM_STRING_PKCS8INF: String get() = "PRIVATE KEY"

val PEM_STRING_DHPARAMS: String get() = "DH PARAMETERS"

val PEM_STRING_DHXPARAMS: String get() = "X9.42 DH PARAMETERS"

val PEM_STRING_SSL_SESSION: String get() = "SSL SESSION PARAMETERS"

val PEM_STRING_DSAPARAMS: String get() = "DSA PARAMETERS"

val PEM_STRING_ECDSA_PUBLIC: String get() = "ECDSA PUBLIC KEY"

val PEM_STRING_ECPARAMETERS: String get() = "EC PARAMETERS"

val PEM_STRING_ECPRIVATEKEY: String get() = "EC PRIVATE KEY"

val PEM_STRING_PARAMETERS: String get() = "PARAMETERS"

val PEM_STRING_CMS: String get() = "CMS"

const val PEM_TYPE_ENCRYPTED: Int = 10

const val PEM_TYPE_MIC_ONLY: Int = 20

const val PEM_TYPE_MIC_CLEAR: Int = 30

const val PEM_TYPE_CLEAR: Int = 40

const val PEM_FLAG_SECURE: Int = 1

const val PEM_FLAG_EAY_COMPATIBLE: Int = 2

const val PEM_FLAG_ONLY_B64: Int = 4

const val HMAC_MAX_MD_CBLOCK: Int = 128

const val OSSL_BAD_ASYNC_FD: Int = -1

const val ASYNC_F_ASYNC_CTX_NEW: Int = 100

const val ASYNC_F_ASYNC_INIT_THREAD: Int = 101

const val ASYNC_F_ASYNC_JOB_NEW: Int = 102

const val ASYNC_F_ASYNC_PAUSE_JOB: Int = 103

const val ASYNC_F_ASYNC_START_FUNC: Int = 104

const val ASYNC_F_ASYNC_START_JOB: Int = 105

const val ASYNC_F_ASYNC_WAIT_CTX_SET_WAIT_FD: Int = 106

const val ASYNC_R_FAILED_TO_SET_POOL: Int = 101

const val ASYNC_R_FAILED_TO_SWAP_CONTEXT: Int = 102

const val ASYNC_R_INIT_FAILED: Int = 105

const val ASYNC_R_INVALID_POOL_SIZE: Int = 103

const val ASYNC_ERR: Int = 0

const val ASYNC_NO_JOBS: Int = 1

const val ASYNC_PAUSE: Int = 2

const val ASYNC_FINISH: Int = 3

const val CT_F_CTLOG_NEW: Int = 117

const val CT_F_CTLOG_NEW_FROM_BASE64: Int = 118

const val CT_F_CTLOG_NEW_FROM_CONF: Int = 119

const val CT_F_CTLOG_STORE_LOAD_CTX_NEW: Int = 122

const val CT_F_CTLOG_STORE_LOAD_FILE: Int = 123

const val CT_F_CTLOG_STORE_LOAD_LOG: Int = 130

const val CT_F_CTLOG_STORE_NEW: Int = 131

const val CT_F_CT_BASE64_DECODE: Int = 124

const val CT_F_CT_POLICY_EVAL_CTX_NEW: Int = 133

const val CT_F_CT_V1_LOG_ID_FROM_PKEY: Int = 125

const val CT_F_I2O_SCT: Int = 107

const val CT_F_I2O_SCT_LIST: Int = 108

const val CT_F_I2O_SCT_SIGNATURE: Int = 109

const val CT_F_O2I_SCT: Int = 110

const val CT_F_O2I_SCT_LIST: Int = 111

const val CT_F_O2I_SCT_SIGNATURE: Int = 112

const val CT_F_SCT_CTX_NEW: Int = 126

const val CT_F_SCT_CTX_VERIFY: Int = 128

const val CT_F_SCT_NEW: Int = 100

const val CT_F_SCT_NEW_FROM_BASE64: Int = 127

const val CT_F_SCT_SET0_LOG_ID: Int = 101

const val CT_F_SCT_SET1_EXTENSIONS: Int = 114

const val CT_F_SCT_SET1_LOG_ID: Int = 115

const val CT_F_SCT_SET1_SIGNATURE: Int = 116

const val CT_F_SCT_SET_LOG_ENTRY_TYPE: Int = 102

const val CT_F_SCT_SET_SIGNATURE_NID: Int = 103

const val CT_F_SCT_SET_VERSION: Int = 104

const val CT_R_BASE64_DECODE_ERROR: Int = 108

const val CT_R_INVALID_LOG_ID_LENGTH: Int = 100

const val CT_R_LOG_CONF_INVALID: Int = 109

const val CT_R_LOG_CONF_INVALID_KEY: Int = 110

const val CT_R_LOG_CONF_MISSING_DESCRIPTION: Int = 111

const val CT_R_LOG_CONF_MISSING_KEY: Int = 112

const val CT_R_LOG_KEY_INVALID: Int = 113

const val CT_R_SCT_FUTURE_TIMESTAMP: Int = 116

const val CT_R_SCT_INVALID: Int = 104

const val CT_R_SCT_INVALID_SIGNATURE: Int = 107

const val CT_R_SCT_LIST_INVALID: Int = 105

const val CT_R_SCT_LOG_ID_MISMATCH: Int = 114

const val CT_R_SCT_NOT_SET: Int = 106

const val CT_R_SCT_UNSUPPORTED_VERSION: Int = 115

const val CT_R_UNRECOGNIZED_SIGNATURE_NID: Int = 101

const val CT_R_UNSUPPORTED_ENTRY_TYPE: Int = 102

const val CT_R_UNSUPPORTED_VERSION: Int = 103

const val SCT_MIN_RSA_BITS: Int = 2048

const val CT_V1_HASHLEN: Int = 32

const val SSL_F_ADD_CLIENT_KEY_SHARE_EXT: Int = 438

const val SSL_F_ADD_KEY_SHARE: Int = 512

const val SSL_F_BYTES_TO_CIPHER_LIST: Int = 519

const val SSL_F_CHECK_SUITEB_CIPHER_LIST: Int = 331

const val SSL_F_CIPHERSUITE_CB: Int = 622

const val SSL_F_CONSTRUCT_CA_NAMES: Int = 552

const val SSL_F_CONSTRUCT_KEY_EXCHANGE_TBS: Int = 553

const val SSL_F_CONSTRUCT_STATEFUL_TICKET: Int = 636

const val SSL_F_CONSTRUCT_STATELESS_TICKET: Int = 637

const val SSL_F_CREATE_SYNTHETIC_MESSAGE_HASH: Int = 539

const val SSL_F_CREATE_TICKET_PREQUEL: Int = 638

const val SSL_F_CT_MOVE_SCTS: Int = 345

const val SSL_F_CT_STRICT: Int = 349

const val SSL_F_CUSTOM_EXT_ADD: Int = 554

const val SSL_F_CUSTOM_EXT_PARSE: Int = 555

const val SSL_F_D2I_SSL_SESSION: Int = 103

const val SSL_F_DANE_CTX_ENABLE: Int = 347

const val SSL_F_DANE_MTYPE_SET: Int = 393

const val SSL_F_DANE_TLSA_ADD: Int = 394

const val SSL_F_DERIVE_SECRET_KEY_AND_IV: Int = 514

const val SSL_F_DO_DTLS1_WRITE: Int = 245

const val SSL_F_DO_SSL3_WRITE: Int = 104

const val SSL_F_DTLS1_BUFFER_RECORD: Int = 247

const val SSL_F_DTLS1_CHECK_TIMEOUT_NUM: Int = 318

const val SSL_F_DTLS1_HEARTBEAT: Int = 305

const val SSL_F_DTLS1_HM_FRAGMENT_NEW: Int = 623

const val SSL_F_DTLS1_PREPROCESS_FRAGMENT: Int = 288

const val SSL_F_DTLS1_PROCESS_BUFFERED_RECORDS: Int = 424

const val SSL_F_DTLS1_PROCESS_RECORD: Int = 257

const val SSL_F_DTLS1_READ_BYTES: Int = 258

const val SSL_F_DTLS1_READ_FAILED: Int = 339

const val SSL_F_DTLS1_RETRANSMIT_MESSAGE: Int = 390

const val SSL_F_DTLS1_WRITE_APP_DATA_BYTES: Int = 268

const val SSL_F_DTLS1_WRITE_BYTES: Int = 545

const val SSL_F_DTLSV1_LISTEN: Int = 350

const val SSL_F_DTLS_CONSTRUCT_CHANGE_CIPHER_SPEC: Int = 371

const val SSL_F_DTLS_CONSTRUCT_HELLO_VERIFY_REQUEST: Int = 385

const val SSL_F_DTLS_GET_REASSEMBLED_MESSAGE: Int = 370

const val SSL_F_DTLS_PROCESS_HELLO_VERIFY: Int = 386

const val SSL_F_DTLS_RECORD_LAYER_NEW: Int = 635

const val SSL_F_DTLS_WAIT_FOR_DRY: Int = 592

const val SSL_F_EARLY_DATA_COUNT_OK: Int = 532

const val SSL_F_FINAL_EARLY_DATA: Int = 556

const val SSL_F_FINAL_EC_PT_FORMATS: Int = 485

const val SSL_F_FINAL_EMS: Int = 486

const val SSL_F_FINAL_KEY_SHARE: Int = 503

const val SSL_F_FINAL_MAXFRAGMENTLEN: Int = 557

const val SSL_F_FINAL_RENEGOTIATE: Int = 483

const val SSL_F_FINAL_SERVER_NAME: Int = 558

const val SSL_F_FINAL_SIG_ALGS: Int = 497

const val SSL_F_GET_CERT_VERIFY_TBS_DATA: Int = 588

const val SSL_F_NSS_KEYLOG_INT: Int = 500

const val SSL_F_OPENSSL_INIT_SSL: Int = 342

const val SSL_F_OSSL_STATEM_CLIENT13_READ_TRANSITION: Int = 436

const val SSL_F_OSSL_STATEM_CLIENT13_WRITE_TRANSITION: Int = 598

const val SSL_F_OSSL_STATEM_CLIENT_CONSTRUCT_MESSAGE: Int = 430

const val SSL_F_OSSL_STATEM_CLIENT_POST_PROCESS_MESSAGE: Int = 593

const val SSL_F_OSSL_STATEM_CLIENT_PROCESS_MESSAGE: Int = 594

const val SSL_F_OSSL_STATEM_CLIENT_READ_TRANSITION: Int = 417

const val SSL_F_OSSL_STATEM_CLIENT_WRITE_TRANSITION: Int = 599

const val SSL_F_OSSL_STATEM_SERVER13_READ_TRANSITION: Int = 437

const val SSL_F_OSSL_STATEM_SERVER13_WRITE_TRANSITION: Int = 600

const val SSL_F_OSSL_STATEM_SERVER_CONSTRUCT_MESSAGE: Int = 431

const val SSL_F_OSSL_STATEM_SERVER_POST_PROCESS_MESSAGE: Int = 601

const val SSL_F_OSSL_STATEM_SERVER_POST_WORK: Int = 602

const val SSL_F_OSSL_STATEM_SERVER_PROCESS_MESSAGE: Int = 603

const val SSL_F_OSSL_STATEM_SERVER_READ_TRANSITION: Int = 418

const val SSL_F_OSSL_STATEM_SERVER_WRITE_TRANSITION: Int = 604

const val SSL_F_PARSE_CA_NAMES: Int = 541

const val SSL_F_PITEM_NEW: Int = 624

const val SSL_F_PQUEUE_NEW: Int = 625

const val SSL_F_PROCESS_KEY_SHARE_EXT: Int = 439

const val SSL_F_READ_STATE_MACHINE: Int = 352

const val SSL_F_SET_CLIENT_CIPHERSUITE: Int = 540

const val SSL_F_SRP_GENERATE_CLIENT_MASTER_SECRET: Int = 595

const val SSL_F_SRP_GENERATE_SERVER_MASTER_SECRET: Int = 589

const val SSL_F_SRP_VERIFY_SERVER_PARAM: Int = 596

const val SSL_F_SSL3_CHANGE_CIPHER_STATE: Int = 129

const val SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM: Int = 130

const val SSL_F_SSL3_CTRL: Int = 213

const val SSL_F_SSL3_CTX_CTRL: Int = 133

const val SSL_F_SSL3_DIGEST_CACHED_RECORDS: Int = 293

const val SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC: Int = 292

const val SSL_F_SSL3_ENC: Int = 608

const val SSL_F_SSL3_FINAL_FINISH_MAC: Int = 285

const val SSL_F_SSL3_FINISH_MAC: Int = 587

const val SSL_F_SSL3_GENERATE_KEY_BLOCK: Int = 238

const val SSL_F_SSL3_GENERATE_MASTER_SECRET: Int = 388

const val SSL_F_SSL3_GET_RECORD: Int = 143

const val SSL_F_SSL3_INIT_FINISHED_MAC: Int = 397

const val SSL_F_SSL3_OUTPUT_CERT_CHAIN: Int = 147

const val SSL_F_SSL3_READ_BYTES: Int = 148

const val SSL_F_SSL3_READ_N: Int = 149

const val SSL_F_SSL3_SETUP_KEY_BLOCK: Int = 157

const val SSL_F_SSL3_SETUP_READ_BUFFER: Int = 156

const val SSL_F_SSL3_SETUP_WRITE_BUFFER: Int = 291

const val SSL_F_SSL3_WRITE_BYTES: Int = 158

const val SSL_F_SSL3_WRITE_PENDING: Int = 159

const val SSL_F_SSL_ADD_CERT_CHAIN: Int = 316

const val SSL_F_SSL_ADD_CERT_TO_BUF: Int = 319

const val SSL_F_SSL_ADD_CERT_TO_WPACKET: Int = 493

const val SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT: Int = 298

const val SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT: Int = 277

const val SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT: Int = 307

const val SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK: Int = 215

const val SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK: Int = 216

const val SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT: Int = 299

const val SSL_F_SSL_ADD_SERVERHELLO_TLSEXT: Int = 278

const val SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT: Int = 308

const val SSL_F_SSL_BAD_METHOD: Int = 160

const val SSL_F_SSL_BUILD_CERT_CHAIN: Int = 332

const val SSL_F_SSL_BYTES_TO_CIPHER_LIST: Int = 161

const val SSL_F_SSL_CACHE_CIPHERLIST: Int = 520

const val SSL_F_SSL_CERT_ADD0_CHAIN_CERT: Int = 346

const val SSL_F_SSL_CERT_DUP: Int = 221

const val SSL_F_SSL_CERT_NEW: Int = 162

const val SSL_F_SSL_CERT_SET0_CHAIN: Int = 340

const val SSL_F_SSL_CHECK_PRIVATE_KEY: Int = 163

const val SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT: Int = 280

const val SSL_F_SSL_CHECK_SRP_EXT_CLIENTHELLO: Int = 606

const val SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG: Int = 279

const val SSL_F_SSL_CHOOSE_CLIENT_VERSION: Int = 607

const val SSL_F_SSL_CIPHER_DESCRIPTION: Int = 626

const val SSL_F_SSL_CIPHER_LIST_TO_BYTES: Int = 425

const val SSL_F_SSL_CIPHER_PROCESS_RULESTR: Int = 230

const val SSL_F_SSL_CIPHER_STRENGTH_SORT: Int = 231

const val SSL_F_SSL_CLEAR: Int = 164

const val SSL_F_SSL_CLIENT_HELLO_GET1_EXTENSIONS_PRESENT: Int = 627

const val SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD: Int = 165

const val SSL_F_SSL_CONF_CMD: Int = 334

const val SSL_F_SSL_CREATE_CIPHER_LIST: Int = 166

const val SSL_F_SSL_CTRL: Int = 232

const val SSL_F_SSL_CTX_CHECK_PRIVATE_KEY: Int = 168

const val SSL_F_SSL_CTX_ENABLE_CT: Int = 398

const val SSL_F_SSL_CTX_MAKE_PROFILES: Int = 309

const val SSL_F_SSL_CTX_NEW: Int = 169

const val SSL_F_SSL_CTX_SET_ALPN_PROTOS: Int = 343

const val SSL_F_SSL_CTX_SET_CIPHER_LIST: Int = 269

const val SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE: Int = 290

const val SSL_F_SSL_CTX_SET_CT_VALIDATION_CALLBACK: Int = 396

const val SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT: Int = 219

const val SSL_F_SSL_CTX_SET_SSL_VERSION: Int = 170

const val SSL_F_SSL_CTX_SET_TLSEXT_MAX_FRAGMENT_LENGTH: Int = 551

const val SSL_F_SSL_CTX_USE_CERTIFICATE: Int = 171

const val SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1: Int = 172

const val SSL_F_SSL_CTX_USE_CERTIFICATE_FILE: Int = 173

const val SSL_F_SSL_CTX_USE_PRIVATEKEY: Int = 174

const val SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1: Int = 175

const val SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE: Int = 176

const val SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT: Int = 272

const val SSL_F_SSL_CTX_USE_RSAPRIVATEKEY: Int = 177

const val SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1: Int = 178

const val SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE: Int = 179

const val SSL_F_SSL_CTX_USE_SERVERINFO: Int = 336

const val SSL_F_SSL_CTX_USE_SERVERINFO_EX: Int = 543

const val SSL_F_SSL_CTX_USE_SERVERINFO_FILE: Int = 337

const val SSL_F_SSL_DANE_DUP: Int = 403

const val SSL_F_SSL_DANE_ENABLE: Int = 395

const val SSL_F_SSL_DERIVE: Int = 590

const val SSL_F_SSL_DO_CONFIG: Int = 391

const val SSL_F_SSL_DO_HANDSHAKE: Int = 180

const val SSL_F_SSL_DUP_CA_LIST: Int = 408

const val SSL_F_SSL_ENABLE_CT: Int = 402

const val SSL_F_SSL_GENERATE_PKEY_GROUP: Int = 559

const val SSL_F_SSL_GENERATE_SESSION_ID: Int = 547

const val SSL_F_SSL_GET_NEW_SESSION: Int = 181

const val SSL_F_SSL_GET_PREV_SESSION: Int = 217

const val SSL_F_SSL_GET_SERVER_CERT_INDEX: Int = 322

const val SSL_F_SSL_GET_SIGN_PKEY: Int = 183

const val SSL_F_SSL_HANDSHAKE_HASH: Int = 560

const val SSL_F_SSL_INIT_WBIO_BUFFER: Int = 184

const val SSL_F_SSL_KEY_UPDATE: Int = 515

const val SSL_F_SSL_LOAD_CLIENT_CA_FILE: Int = 185

const val SSL_F_SSL_LOG_MASTER_SECRET: Int = 498

const val SSL_F_SSL_LOG_RSA_CLIENT_KEY_EXCHANGE: Int = 499

const val SSL_F_SSL_MODULE_INIT: Int = 392

const val SSL_F_SSL_NEW: Int = 186

const val SSL_F_SSL_NEXT_PROTO_VALIDATE: Int = 565

const val SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT: Int = 300

const val SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT: Int = 302

const val SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT: Int = 310

const val SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT: Int = 301

const val SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT: Int = 303

const val SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT: Int = 311

const val SSL_F_SSL_PEEK: Int = 270

const val SSL_F_SSL_PEEK_EX: Int = 432

const val SSL_F_SSL_PEEK_INTERNAL: Int = 522

const val SSL_F_SSL_READ: Int = 223

const val SSL_F_SSL_READ_EARLY_DATA: Int = 529

const val SSL_F_SSL_READ_EX: Int = 434

const val SSL_F_SSL_READ_INTERNAL: Int = 523

const val SSL_F_SSL_RENEGOTIATE: Int = 516

const val SSL_F_SSL_RENEGOTIATE_ABBREVIATED: Int = 546

const val SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT: Int = 320

const val SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT: Int = 321

const val SSL_F_SSL_SESSION_DUP: Int = 348

const val SSL_F_SSL_SESSION_NEW: Int = 189

const val SSL_F_SSL_SESSION_PRINT_FP: Int = 190

const val SSL_F_SSL_SESSION_SET1_ID: Int = 423

const val SSL_F_SSL_SESSION_SET1_ID_CONTEXT: Int = 312

const val SSL_F_SSL_SET_ALPN_PROTOS: Int = 344

const val SSL_F_SSL_SET_CERT: Int = 191

const val SSL_F_SSL_SET_CERT_AND_KEY: Int = 621

const val SSL_F_SSL_SET_CIPHER_LIST: Int = 271

const val SSL_F_SSL_SET_CT_VALIDATION_CALLBACK: Int = 399

const val SSL_F_SSL_SET_FD: Int = 192

const val SSL_F_SSL_SET_PKEY: Int = 193

const val SSL_F_SSL_SET_RFD: Int = 194

const val SSL_F_SSL_SET_SESSION: Int = 195

const val SSL_F_SSL_SET_SESSION_ID_CONTEXT: Int = 218

const val SSL_F_SSL_SET_SESSION_TICKET_EXT: Int = 294

const val SSL_F_SSL_SET_TLSEXT_MAX_FRAGMENT_LENGTH: Int = 550

const val SSL_F_SSL_SET_WFD: Int = 196

const val SSL_F_SSL_SHUTDOWN: Int = 224

const val SSL_F_SSL_SRP_CTX_INIT: Int = 313

const val SSL_F_SSL_START_ASYNC_JOB: Int = 389

const val SSL_F_SSL_UNDEFINED_FUNCTION: Int = 197

const val SSL_F_SSL_UNDEFINED_VOID_FUNCTION: Int = 244

const val SSL_F_SSL_USE_CERTIFICATE: Int = 198

const val SSL_F_SSL_USE_CERTIFICATE_ASN1: Int = 199

const val SSL_F_SSL_USE_CERTIFICATE_FILE: Int = 200

const val SSL_F_SSL_USE_PRIVATEKEY: Int = 201

const val SSL_F_SSL_USE_PRIVATEKEY_ASN1: Int = 202

const val SSL_F_SSL_USE_PRIVATEKEY_FILE: Int = 203

const val SSL_F_SSL_USE_PSK_IDENTITY_HINT: Int = 273

const val SSL_F_SSL_USE_RSAPRIVATEKEY: Int = 204

const val SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1: Int = 205

const val SSL_F_SSL_USE_RSAPRIVATEKEY_FILE: Int = 206

const val SSL_F_SSL_VALIDATE_CT: Int = 400

const val SSL_F_SSL_VERIFY_CERT_CHAIN: Int = 207

const val SSL_F_SSL_VERIFY_CLIENT_POST_HANDSHAKE: Int = 616

const val SSL_F_SSL_WRITE: Int = 208

const val SSL_F_SSL_WRITE_EARLY_DATA: Int = 526

const val SSL_F_SSL_WRITE_EARLY_FINISH: Int = 527

const val SSL_F_SSL_WRITE_EX: Int = 433

const val SSL_F_SSL_WRITE_INTERNAL: Int = 524

const val SSL_F_STATE_MACHINE: Int = 353

const val SSL_F_TLS12_CHECK_PEER_SIGALG: Int = 333

const val SSL_F_TLS12_COPY_SIGALGS: Int = 533

const val SSL_F_TLS13_CHANGE_CIPHER_STATE: Int = 440

const val SSL_F_TLS13_ENC: Int = 609

const val SSL_F_TLS13_FINAL_FINISH_MAC: Int = 605

const val SSL_F_TLS13_GENERATE_SECRET: Int = 591

const val SSL_F_TLS13_HKDF_EXPAND: Int = 561

const val SSL_F_TLS13_RESTORE_HANDSHAKE_DIGEST_FOR_PHA: Int = 617

const val SSL_F_TLS13_SAVE_HANDSHAKE_DIGEST_FOR_PHA: Int = 618

const val SSL_F_TLS13_SETUP_KEY_BLOCK: Int = 441

const val SSL_F_TLS1_CHANGE_CIPHER_STATE: Int = 209

const val SSL_F_TLS1_CHECK_DUPLICATE_EXTENSIONS: Int = 341

const val SSL_F_TLS1_ENC: Int = 401

const val SSL_F_TLS1_EXPORT_KEYING_MATERIAL: Int = 314

const val SSL_F_TLS1_GET_CURVELIST: Int = 338

const val SSL_F_TLS1_PRF: Int = 284

const val SSL_F_TLS1_SAVE_U16: Int = 628

const val SSL_F_TLS1_SETUP_KEY_BLOCK: Int = 211

const val SSL_F_TLS1_SET_GROUPS: Int = 629

const val SSL_F_TLS1_SET_RAW_SIGALGS: Int = 630

const val SSL_F_TLS1_SET_SERVER_SIGALGS: Int = 335

const val SSL_F_TLS1_SET_SHARED_SIGALGS: Int = 631

const val SSL_F_TLS1_SET_SIGALGS: Int = 632

const val SSL_F_TLS_CHOOSE_SIGALG: Int = 513

const val SSL_F_TLS_CLIENT_KEY_EXCHANGE_POST_WORK: Int = 354

const val SSL_F_TLS_COLLECT_EXTENSIONS: Int = 435

const val SSL_F_TLS_CONSTRUCT_CERTIFICATE_AUTHORITIES: Int = 542

const val SSL_F_TLS_CONSTRUCT_CERTIFICATE_REQUEST: Int = 372

const val SSL_F_TLS_CONSTRUCT_CERT_STATUS: Int = 429

const val SSL_F_TLS_CONSTRUCT_CERT_STATUS_BODY: Int = 494

const val SSL_F_TLS_CONSTRUCT_CERT_VERIFY: Int = 496

const val SSL_F_TLS_CONSTRUCT_CHANGE_CIPHER_SPEC: Int = 427

const val SSL_F_TLS_CONSTRUCT_CKE_DHE: Int = 404

const val SSL_F_TLS_CONSTRUCT_CKE_ECDHE: Int = 405

const val SSL_F_TLS_CONSTRUCT_CKE_GOST: Int = 406

const val SSL_F_TLS_CONSTRUCT_CKE_PSK_PREAMBLE: Int = 407

const val SSL_F_TLS_CONSTRUCT_CKE_RSA: Int = 409

const val SSL_F_TLS_CONSTRUCT_CKE_SRP: Int = 410

const val SSL_F_TLS_CONSTRUCT_CLIENT_CERTIFICATE: Int = 484

const val SSL_F_TLS_CONSTRUCT_CLIENT_HELLO: Int = 487

const val SSL_F_TLS_CONSTRUCT_CLIENT_KEY_EXCHANGE: Int = 488

const val SSL_F_TLS_CONSTRUCT_CLIENT_VERIFY: Int = 489

const val SSL_F_TLS_CONSTRUCT_CTOS_ALPN: Int = 466

const val SSL_F_TLS_CONSTRUCT_CTOS_CERTIFICATE: Int = 355

const val SSL_F_TLS_CONSTRUCT_CTOS_COOKIE: Int = 535

const val SSL_F_TLS_CONSTRUCT_CTOS_EARLY_DATA: Int = 530

const val SSL_F_TLS_CONSTRUCT_CTOS_EC_PT_FORMATS: Int = 467

const val SSL_F_TLS_CONSTRUCT_CTOS_EMS: Int = 468

const val SSL_F_TLS_CONSTRUCT_CTOS_ETM: Int = 469

const val SSL_F_TLS_CONSTRUCT_CTOS_HELLO: Int = 356

const val SSL_F_TLS_CONSTRUCT_CTOS_KEY_EXCHANGE: Int = 357

const val SSL_F_TLS_CONSTRUCT_CTOS_KEY_SHARE: Int = 470

const val SSL_F_TLS_CONSTRUCT_CTOS_MAXFRAGMENTLEN: Int = 549

const val SSL_F_TLS_CONSTRUCT_CTOS_NPN: Int = 471

const val SSL_F_TLS_CONSTRUCT_CTOS_PADDING: Int = 472

const val SSL_F_TLS_CONSTRUCT_CTOS_POST_HANDSHAKE_AUTH: Int = 619

const val SSL_F_TLS_CONSTRUCT_CTOS_PSK: Int = 501

const val SSL_F_TLS_CONSTRUCT_CTOS_PSK_KEX_MODES: Int = 509

const val SSL_F_TLS_CONSTRUCT_CTOS_RENEGOTIATE: Int = 473

const val SSL_F_TLS_CONSTRUCT_CTOS_SCT: Int = 474

const val SSL_F_TLS_CONSTRUCT_CTOS_SERVER_NAME: Int = 475

const val SSL_F_TLS_CONSTRUCT_CTOS_SESSION_TICKET: Int = 476

const val SSL_F_TLS_CONSTRUCT_CTOS_SIG_ALGS: Int = 477

const val SSL_F_TLS_CONSTRUCT_CTOS_SRP: Int = 478

const val SSL_F_TLS_CONSTRUCT_CTOS_STATUS_REQUEST: Int = 479

const val SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_GROUPS: Int = 480

const val SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_VERSIONS: Int = 481

const val SSL_F_TLS_CONSTRUCT_CTOS_USE_SRTP: Int = 482

const val SSL_F_TLS_CONSTRUCT_CTOS_VERIFY: Int = 358

const val SSL_F_TLS_CONSTRUCT_ENCRYPTED_EXTENSIONS: Int = 443

const val SSL_F_TLS_CONSTRUCT_END_OF_EARLY_DATA: Int = 536

const val SSL_F_TLS_CONSTRUCT_EXTENSIONS: Int = 447

const val SSL_F_TLS_CONSTRUCT_FINISHED: Int = 359

const val SSL_F_TLS_CONSTRUCT_HELLO_REQUEST: Int = 373

const val SSL_F_TLS_CONSTRUCT_HELLO_RETRY_REQUEST: Int = 510

const val SSL_F_TLS_CONSTRUCT_KEY_UPDATE: Int = 517

const val SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET: Int = 428

const val SSL_F_TLS_CONSTRUCT_NEXT_PROTO: Int = 426

const val SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE: Int = 490

const val SSL_F_TLS_CONSTRUCT_SERVER_HELLO: Int = 491

const val SSL_F_TLS_CONSTRUCT_SERVER_KEY_EXCHANGE: Int = 492

const val SSL_F_TLS_CONSTRUCT_STOC_ALPN: Int = 451

const val SSL_F_TLS_CONSTRUCT_STOC_CERTIFICATE: Int = 374

const val SSL_F_TLS_CONSTRUCT_STOC_COOKIE: Int = 613

const val SSL_F_TLS_CONSTRUCT_STOC_CRYPTOPRO_BUG: Int = 452

const val SSL_F_TLS_CONSTRUCT_STOC_DONE: Int = 375

const val SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA: Int = 531

const val SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA_INFO: Int = 525

const val SSL_F_TLS_CONSTRUCT_STOC_EC_PT_FORMATS: Int = 453

const val SSL_F_TLS_CONSTRUCT_STOC_EMS: Int = 454

const val SSL_F_TLS_CONSTRUCT_STOC_ETM: Int = 455

const val SSL_F_TLS_CONSTRUCT_STOC_HELLO: Int = 376

const val SSL_F_TLS_CONSTRUCT_STOC_KEY_EXCHANGE: Int = 377

const val SSL_F_TLS_CONSTRUCT_STOC_KEY_SHARE: Int = 456

const val SSL_F_TLS_CONSTRUCT_STOC_MAXFRAGMENTLEN: Int = 548

const val SSL_F_TLS_CONSTRUCT_STOC_NEXT_PROTO_NEG: Int = 457

const val SSL_F_TLS_CONSTRUCT_STOC_PSK: Int = 504

const val SSL_F_TLS_CONSTRUCT_STOC_RENEGOTIATE: Int = 458

const val SSL_F_TLS_CONSTRUCT_STOC_SERVER_NAME: Int = 459

const val SSL_F_TLS_CONSTRUCT_STOC_SESSION_TICKET: Int = 460

const val SSL_F_TLS_CONSTRUCT_STOC_STATUS_REQUEST: Int = 461

const val SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_GROUPS: Int = 544

const val SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_VERSIONS: Int = 611

const val SSL_F_TLS_CONSTRUCT_STOC_USE_SRTP: Int = 462

const val SSL_F_TLS_EARLY_POST_PROCESS_CLIENT_HELLO: Int = 521

const val SSL_F_TLS_FINISH_HANDSHAKE: Int = 597

const val SSL_F_TLS_GET_MESSAGE_BODY: Int = 351

const val SSL_F_TLS_GET_MESSAGE_HEADER: Int = 387

const val SSL_F_TLS_HANDLE_ALPN: Int = 562

const val SSL_F_TLS_HANDLE_STATUS_REQUEST: Int = 563

const val SSL_F_TLS_PARSE_CERTIFICATE_AUTHORITIES: Int = 566

const val SSL_F_TLS_PARSE_CLIENTHELLO_TLSEXT: Int = 449

const val SSL_F_TLS_PARSE_CTOS_ALPN: Int = 567

const val SSL_F_TLS_PARSE_CTOS_COOKIE: Int = 614

const val SSL_F_TLS_PARSE_CTOS_EARLY_DATA: Int = 568

const val SSL_F_TLS_PARSE_CTOS_EC_PT_FORMATS: Int = 569

const val SSL_F_TLS_PARSE_CTOS_EMS: Int = 570

const val SSL_F_TLS_PARSE_CTOS_KEY_SHARE: Int = 463

const val SSL_F_TLS_PARSE_CTOS_MAXFRAGMENTLEN: Int = 571

const val SSL_F_TLS_PARSE_CTOS_POST_HANDSHAKE_AUTH: Int = 620

const val SSL_F_TLS_PARSE_CTOS_PSK: Int = 505

const val SSL_F_TLS_PARSE_CTOS_PSK_KEX_MODES: Int = 572

const val SSL_F_TLS_PARSE_CTOS_RENEGOTIATE: Int = 464

const val SSL_F_TLS_PARSE_CTOS_SERVER_NAME: Int = 573

const val SSL_F_TLS_PARSE_CTOS_SESSION_TICKET: Int = 574

const val SSL_F_TLS_PARSE_CTOS_SIG_ALGS: Int = 575

const val SSL_F_TLS_PARSE_CTOS_SIG_ALGS_CERT: Int = 615

const val SSL_F_TLS_PARSE_CTOS_SRP: Int = 576

const val SSL_F_TLS_PARSE_CTOS_STATUS_REQUEST: Int = 577

const val SSL_F_TLS_PARSE_CTOS_SUPPORTED_GROUPS: Int = 578

const val SSL_F_TLS_PARSE_CTOS_USE_SRTP: Int = 465

const val SSL_F_TLS_PARSE_STOC_ALPN: Int = 579

const val SSL_F_TLS_PARSE_STOC_COOKIE: Int = 534

const val SSL_F_TLS_PARSE_STOC_EARLY_DATA: Int = 538

const val SSL_F_TLS_PARSE_STOC_EARLY_DATA_INFO: Int = 528

const val SSL_F_TLS_PARSE_STOC_EC_PT_FORMATS: Int = 580

const val SSL_F_TLS_PARSE_STOC_KEY_SHARE: Int = 445

const val SSL_F_TLS_PARSE_STOC_MAXFRAGMENTLEN: Int = 581

const val SSL_F_TLS_PARSE_STOC_NPN: Int = 582

const val SSL_F_TLS_PARSE_STOC_PSK: Int = 502

const val SSL_F_TLS_PARSE_STOC_RENEGOTIATE: Int = 448

const val SSL_F_TLS_PARSE_STOC_SCT: Int = 564

const val SSL_F_TLS_PARSE_STOC_SERVER_NAME: Int = 583

const val SSL_F_TLS_PARSE_STOC_SESSION_TICKET: Int = 584

const val SSL_F_TLS_PARSE_STOC_STATUS_REQUEST: Int = 585

const val SSL_F_TLS_PARSE_STOC_SUPPORTED_VERSIONS: Int = 612

const val SSL_F_TLS_PARSE_STOC_USE_SRTP: Int = 446

const val SSL_F_TLS_POST_PROCESS_CLIENT_HELLO: Int = 378

const val SSL_F_TLS_POST_PROCESS_CLIENT_KEY_EXCHANGE: Int = 384

const val SSL_F_TLS_PREPARE_CLIENT_CERTIFICATE: Int = 360

const val SSL_F_TLS_PROCESS_AS_HELLO_RETRY_REQUEST: Int = 610

const val SSL_F_TLS_PROCESS_CERTIFICATE_REQUEST: Int = 361

const val SSL_F_TLS_PROCESS_CERT_STATUS: Int = 362

const val SSL_F_TLS_PROCESS_CERT_STATUS_BODY: Int = 495

const val SSL_F_TLS_PROCESS_CERT_VERIFY: Int = 379

const val SSL_F_TLS_PROCESS_CHANGE_CIPHER_SPEC: Int = 363

const val SSL_F_TLS_PROCESS_CKE_DHE: Int = 411

const val SSL_F_TLS_PROCESS_CKE_ECDHE: Int = 412

const val SSL_F_TLS_PROCESS_CKE_GOST: Int = 413

const val SSL_F_TLS_PROCESS_CKE_PSK_PREAMBLE: Int = 414

const val SSL_F_TLS_PROCESS_CKE_RSA: Int = 415

const val SSL_F_TLS_PROCESS_CKE_SRP: Int = 416

const val SSL_F_TLS_PROCESS_CLIENT_CERTIFICATE: Int = 380

const val SSL_F_TLS_PROCESS_CLIENT_HELLO: Int = 381

const val SSL_F_TLS_PROCESS_CLIENT_KEY_EXCHANGE: Int = 382

const val SSL_F_TLS_PROCESS_ENCRYPTED_EXTENSIONS: Int = 444

const val SSL_F_TLS_PROCESS_END_OF_EARLY_DATA: Int = 537

const val SSL_F_TLS_PROCESS_FINISHED: Int = 364

const val SSL_F_TLS_PROCESS_HELLO_REQ: Int = 507

const val SSL_F_TLS_PROCESS_HELLO_RETRY_REQUEST: Int = 511

const val SSL_F_TLS_PROCESS_INITIAL_SERVER_FLIGHT: Int = 442

const val SSL_F_TLS_PROCESS_KEY_EXCHANGE: Int = 365

const val SSL_F_TLS_PROCESS_KEY_UPDATE: Int = 518

const val SSL_F_TLS_PROCESS_NEW_SESSION_TICKET: Int = 366

const val SSL_F_TLS_PROCESS_NEXT_PROTO: Int = 383

const val SSL_F_TLS_PROCESS_SERVER_CERTIFICATE: Int = 367

const val SSL_F_TLS_PROCESS_SERVER_DONE: Int = 368

const val SSL_F_TLS_PROCESS_SERVER_HELLO: Int = 369

const val SSL_F_TLS_PROCESS_SKE_DHE: Int = 419

const val SSL_F_TLS_PROCESS_SKE_ECDHE: Int = 420

const val SSL_F_TLS_PROCESS_SKE_PSK_PREAMBLE: Int = 421

const val SSL_F_TLS_PROCESS_SKE_SRP: Int = 422

const val SSL_F_TLS_PSK_DO_BINDER: Int = 506

const val SSL_F_TLS_SCAN_CLIENTHELLO_TLSEXT: Int = 450

const val SSL_F_TLS_SETUP_HANDSHAKE: Int = 508

const val SSL_F_USE_CERTIFICATE_CHAIN_FILE: Int = 220

const val SSL_F_WPACKET_INTERN_INIT_LEN: Int = 633

const val SSL_F_WPACKET_START_SUB_PACKET_LEN__: Int = 634

const val SSL_F_WRITE_STATE_MACHINE: Int = 586

const val SSL_R_APPLICATION_DATA_AFTER_CLOSE_NOTIFY: Int = 291

const val SSL_R_APP_DATA_IN_HANDSHAKE: Int = 100

const val SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT: Int = 272

const val SSL_R_AT_LEAST_TLS_1_0_NEEDED_IN_FIPS_MODE: Int = 143

const val SSL_R_AT_LEAST_TLS_1_2_NEEDED_IN_SUITEB_MODE: Int = 158

const val SSL_R_BAD_CHANGE_CIPHER_SPEC: Int = 103

const val SSL_R_BAD_CIPHER: Int = 186

const val SSL_R_BAD_DATA: Int = 390

const val SSL_R_BAD_DATA_RETURNED_BY_CALLBACK: Int = 106

const val SSL_R_BAD_DECOMPRESSION: Int = 107

const val SSL_R_BAD_DH_VALUE: Int = 102

const val SSL_R_BAD_DIGEST_LENGTH: Int = 111

const val SSL_R_BAD_EARLY_DATA: Int = 233

const val SSL_R_BAD_ECC_CERT: Int = 304

const val SSL_R_BAD_ECPOINT: Int = 306

const val SSL_R_BAD_EXTENSION: Int = 110

const val SSL_R_BAD_HANDSHAKE_LENGTH: Int = 332

const val SSL_R_BAD_HANDSHAKE_STATE: Int = 236

const val SSL_R_BAD_HELLO_REQUEST: Int = 105

const val SSL_R_BAD_HRR_VERSION: Int = 263

const val SSL_R_BAD_KEY_SHARE: Int = 108

const val SSL_R_BAD_KEY_UPDATE: Int = 122

const val SSL_R_BAD_LEGACY_VERSION: Int = 292

const val SSL_R_BAD_LENGTH: Int = 271

const val SSL_R_BAD_PACKET: Int = 240

const val SSL_R_BAD_PACKET_LENGTH: Int = 115

const val SSL_R_BAD_PROTOCOL_VERSION_NUMBER: Int = 116

const val SSL_R_BAD_PSK: Int = 219

const val SSL_R_BAD_PSK_IDENTITY: Int = 114

const val SSL_R_BAD_RECORD_TYPE: Int = 443

const val SSL_R_BAD_RSA_ENCRYPT: Int = 119

const val SSL_R_BAD_SIGNATURE: Int = 123

const val SSL_R_BAD_SRP_A_LENGTH: Int = 347

const val SSL_R_BAD_SRP_PARAMETERS: Int = 371

const val SSL_R_BAD_SRTP_MKI_VALUE: Int = 352

const val SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST: Int = 353

const val SSL_R_BAD_SSL_FILETYPE: Int = 124

const val SSL_R_BAD_VALUE: Int = 384

const val SSL_R_BAD_WRITE_RETRY: Int = 127

const val SSL_R_BINDER_DOES_NOT_VERIFY: Int = 253

const val SSL_R_BIO_NOT_SET: Int = 128

const val SSL_R_BLOCK_CIPHER_PAD_IS_WRONG: Int = 129

const val SSL_R_BN_LIB: Int = 130

const val SSL_R_CALLBACK_FAILED: Int = 234

const val SSL_R_CANNOT_CHANGE_CIPHER: Int = 109

const val SSL_R_CA_DN_LENGTH_MISMATCH: Int = 131

const val SSL_R_CA_KEY_TOO_SMALL: Int = 397

const val SSL_R_CA_MD_TOO_WEAK: Int = 398

const val SSL_R_CCS_RECEIVED_EARLY: Int = 133

const val SSL_R_CERTIFICATE_VERIFY_FAILED: Int = 134

const val SSL_R_CERT_CB_ERROR: Int = 377

const val SSL_R_CERT_LENGTH_MISMATCH: Int = 135

const val SSL_R_CIPHERSUITE_DIGEST_HAS_CHANGED: Int = 218

const val SSL_R_CIPHER_CODE_WRONG_LENGTH: Int = 137

const val SSL_R_CIPHER_OR_HASH_UNAVAILABLE: Int = 138

const val SSL_R_CLIENTHELLO_TLSEXT: Int = 226

const val SSL_R_COMPRESSED_LENGTH_TOO_LONG: Int = 140

const val SSL_R_COMPRESSION_DISABLED: Int = 343

const val SSL_R_COMPRESSION_FAILURE: Int = 141

const val SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE: Int = 307

const val SSL_R_COMPRESSION_LIBRARY_ERROR: Int = 142

const val SSL_R_CONNECTION_TYPE_NOT_SET: Int = 144

const val SSL_R_CONTEXT_NOT_DANE_ENABLED: Int = 167

const val SSL_R_COOKIE_GEN_CALLBACK_FAILURE: Int = 400

const val SSL_R_COOKIE_MISMATCH: Int = 308

const val SSL_R_CUSTOM_EXT_HANDLER_ALREADY_INSTALLED: Int = 206

const val SSL_R_DANE_ALREADY_ENABLED: Int = 172

const val SSL_R_DANE_CANNOT_OVERRIDE_MTYPE_FULL: Int = 173

const val SSL_R_DANE_NOT_ENABLED: Int = 175

const val SSL_R_DANE_TLSA_BAD_CERTIFICATE: Int = 180

const val SSL_R_DANE_TLSA_BAD_CERTIFICATE_USAGE: Int = 184

const val SSL_R_DANE_TLSA_BAD_DATA_LENGTH: Int = 189

const val SSL_R_DANE_TLSA_BAD_DIGEST_LENGTH: Int = 192

const val SSL_R_DANE_TLSA_BAD_MATCHING_TYPE: Int = 200

const val SSL_R_DANE_TLSA_BAD_PUBLIC_KEY: Int = 201

const val SSL_R_DANE_TLSA_BAD_SELECTOR: Int = 202

const val SSL_R_DANE_TLSA_NULL_DATA: Int = 203

const val SSL_R_DATA_BETWEEN_CCS_AND_FINISHED: Int = 145

const val SSL_R_DATA_LENGTH_TOO_LONG: Int = 146

const val SSL_R_DECRYPTION_FAILED: Int = 147

const val SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC: Int = 281

const val SSL_R_DH_KEY_TOO_SMALL: Int = 394

const val SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG: Int = 148

const val SSL_R_DIGEST_CHECK_FAILED: Int = 149

const val SSL_R_DTLS_MESSAGE_TOO_BIG: Int = 334

const val SSL_R_DUPLICATE_COMPRESSION_ID: Int = 309

const val SSL_R_ECC_CERT_NOT_FOR_SIGNING: Int = 318

const val SSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE: Int = 374

const val SSL_R_EE_KEY_TOO_SMALL: Int = 399

const val SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST: Int = 354

const val SSL_R_ENCRYPTED_LENGTH_TOO_LONG: Int = 150

const val SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST: Int = 151

const val SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN: Int = 204

const val SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE: Int = 194

const val SSL_R_EXCESSIVE_MESSAGE_SIZE: Int = 152

const val SSL_R_EXTENSION_NOT_RECEIVED: Int = 279

const val SSL_R_EXTRA_DATA_IN_MESSAGE: Int = 153

const val SSL_R_EXT_LENGTH_MISMATCH: Int = 163

const val SSL_R_FAILED_TO_INIT_ASYNC: Int = 405

const val SSL_R_FRAGMENTED_CLIENT_HELLO: Int = 401

const val SSL_R_GOT_A_FIN_BEFORE_A_CCS: Int = 154

const val SSL_R_HTTPS_PROXY_REQUEST: Int = 155

const val SSL_R_HTTP_REQUEST: Int = 156

const val SSL_R_ILLEGAL_POINT_COMPRESSION: Int = 162

const val SSL_R_ILLEGAL_SUITEB_DIGEST: Int = 380

const val SSL_R_INAPPROPRIATE_FALLBACK: Int = 373

const val SSL_R_INCONSISTENT_COMPRESSION: Int = 340

const val SSL_R_INCONSISTENT_EARLY_DATA_ALPN: Int = 222

const val SSL_R_INCONSISTENT_EARLY_DATA_SNI: Int = 231

const val SSL_R_INCONSISTENT_EXTMS: Int = 104

const val SSL_R_INSUFFICIENT_SECURITY: Int = 241

const val SSL_R_INVALID_ALERT: Int = 205

const val SSL_R_INVALID_CCS_MESSAGE: Int = 260

const val SSL_R_INVALID_CERTIFICATE_OR_ALG: Int = 238

const val SSL_R_INVALID_COMMAND: Int = 280

const val SSL_R_INVALID_COMPRESSION_ALGORITHM: Int = 341

const val SSL_R_INVALID_CONFIG: Int = 283

const val SSL_R_INVALID_CONFIGURATION_NAME: Int = 113

const val SSL_R_INVALID_CONTEXT: Int = 282

const val SSL_R_INVALID_CT_VALIDATION_TYPE: Int = 212

const val SSL_R_INVALID_KEY_UPDATE_TYPE: Int = 120

const val SSL_R_INVALID_MAX_EARLY_DATA: Int = 174

const val SSL_R_INVALID_NULL_CMD_NAME: Int = 385

const val SSL_R_INVALID_SEQUENCE_NUMBER: Int = 402

const val SSL_R_INVALID_SERVERINFO_DATA: Int = 388

const val SSL_R_INVALID_SESSION_ID: Int = 999

const val SSL_R_INVALID_SRP_USERNAME: Int = 357

const val SSL_R_INVALID_STATUS_RESPONSE: Int = 328

const val SSL_R_INVALID_TICKET_KEYS_LENGTH: Int = 325

const val SSL_R_LENGTH_MISMATCH: Int = 159

const val SSL_R_LENGTH_TOO_LONG: Int = 404

const val SSL_R_LENGTH_TOO_SHORT: Int = 160

const val SSL_R_LIBRARY_BUG: Int = 274

const val SSL_R_LIBRARY_HAS_NO_CIPHERS: Int = 161

const val SSL_R_MISSING_DSA_SIGNING_CERT: Int = 165

const val SSL_R_MISSING_ECDSA_SIGNING_CERT: Int = 381

const val SSL_R_MISSING_FATAL: Int = 256

const val SSL_R_MISSING_PARAMETERS: Int = 290

const val SSL_R_MISSING_RSA_CERTIFICATE: Int = 168

const val SSL_R_MISSING_RSA_ENCRYPTING_CERT: Int = 169

const val SSL_R_MISSING_RSA_SIGNING_CERT: Int = 170

const val SSL_R_MISSING_SIGALGS_EXTENSION: Int = 112

const val SSL_R_MISSING_SIGNING_CERT: Int = 221

const val SSL_R_MISSING_SRP_PARAM: Int = 358

const val SSL_R_MISSING_SUPPORTED_GROUPS_EXTENSION: Int = 209

const val SSL_R_MISSING_TMP_DH_KEY: Int = 171

const val SSL_R_MISSING_TMP_ECDH_KEY: Int = 311

const val SSL_R_MIXED_HANDSHAKE_AND_NON_HANDSHAKE_DATA: Int = 293

const val SSL_R_NOT_ON_RECORD_BOUNDARY: Int = 182

const val SSL_R_NOT_REPLACING_CERTIFICATE: Int = 289

const val SSL_R_NOT_SERVER: Int = 284

const val SSL_R_NO_APPLICATION_PROTOCOL: Int = 235

const val SSL_R_NO_CERTIFICATES_RETURNED: Int = 176

const val SSL_R_NO_CERTIFICATE_ASSIGNED: Int = 177

const val SSL_R_NO_CERTIFICATE_SET: Int = 179

const val SSL_R_NO_CHANGE_FOLLOWING_HRR: Int = 214

const val SSL_R_NO_CIPHERS_AVAILABLE: Int = 181

const val SSL_R_NO_CIPHERS_SPECIFIED: Int = 183

const val SSL_R_NO_CIPHER_MATCH: Int = 185

const val SSL_R_NO_CLIENT_CERT_METHOD: Int = 331

const val SSL_R_NO_COMPRESSION_SPECIFIED: Int = 187

const val SSL_R_NO_COOKIE_CALLBACK_SET: Int = 287

const val SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER: Int = 330

const val SSL_R_NO_METHOD_SPECIFIED: Int = 188

const val SSL_R_NO_PEM_EXTENSIONS: Int = 389

const val SSL_R_NO_PRIVATE_KEY_ASSIGNED: Int = 190

const val SSL_R_NO_PROTOCOLS_AVAILABLE: Int = 191

const val SSL_R_NO_RENEGOTIATION: Int = 339

const val SSL_R_NO_REQUIRED_DIGEST: Int = 324

const val SSL_R_NO_SHARED_CIPHER: Int = 193

const val SSL_R_NO_SHARED_GROUPS: Int = 410

const val SSL_R_NO_SHARED_SIGNATURE_ALGORITHMS: Int = 376

const val SSL_R_NO_SRTP_PROFILES: Int = 359

const val SSL_R_NO_SUITABLE_KEY_SHARE: Int = 101

const val SSL_R_NO_SUITABLE_SIGNATURE_ALGORITHM: Int = 118

const val SSL_R_NO_VALID_SCTS: Int = 216

const val SSL_R_NO_VERIFY_COOKIE_CALLBACK: Int = 403

const val SSL_R_NULL_SSL_CTX: Int = 195

const val SSL_R_NULL_SSL_METHOD_PASSED: Int = 196

const val SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED: Int = 197

const val SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED: Int = 344

const val SSL_R_OVERFLOW_ERROR: Int = 237

const val SSL_R_PACKET_LENGTH_TOO_LONG: Int = 198

const val SSL_R_PARSE_TLSEXT: Int = 227

const val SSL_R_PATH_TOO_LONG: Int = 270

const val SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE: Int = 199

const val SSL_R_PEM_NAME_BAD_PREFIX: Int = 391

const val SSL_R_PEM_NAME_TOO_SHORT: Int = 392

const val SSL_R_PIPELINE_FAILURE: Int = 406

const val SSL_R_POST_HANDSHAKE_AUTH_ENCODING_ERR: Int = 278

const val SSL_R_PRIVATE_KEY_MISMATCH: Int = 288

const val SSL_R_PROTOCOL_IS_SHUTDOWN: Int = 207

const val SSL_R_PSK_IDENTITY_NOT_FOUND: Int = 223

const val SSL_R_PSK_NO_CLIENT_CB: Int = 224

const val SSL_R_PSK_NO_SERVER_CB: Int = 225

const val SSL_R_READ_BIO_NOT_SET: Int = 211

const val SSL_R_READ_TIMEOUT_EXPIRED: Int = 312

const val SSL_R_RECORD_LENGTH_MISMATCH: Int = 213

const val SSL_R_RECORD_TOO_SMALL: Int = 298

const val SSL_R_RENEGOTIATE_EXT_TOO_LONG: Int = 335

const val SSL_R_RENEGOTIATION_ENCODING_ERR: Int = 336

const val SSL_R_RENEGOTIATION_MISMATCH: Int = 337

const val SSL_R_REQUEST_PENDING: Int = 285

const val SSL_R_REQUEST_SENT: Int = 286

const val SSL_R_REQUIRED_CIPHER_MISSING: Int = 215

const val SSL_R_REQUIRED_COMPRESSION_ALGORITHM_MISSING: Int = 342

const val SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING: Int = 345

const val SSL_R_SCT_VERIFICATION_FAILED: Int = 208

const val SSL_R_SERVERHELLO_TLSEXT: Int = 275

const val SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED: Int = 277

const val SSL_R_SHUTDOWN_WHILE_IN_INIT: Int = 407

const val SSL_R_SIGNATURE_ALGORITHMS_ERROR: Int = 360

const val SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE: Int = 220

const val SSL_R_SRP_A_CALC: Int = 361

const val SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES: Int = 362

const val SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG: Int = 363

const val SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE: Int = 364

const val SSL_R_SSL3_EXT_INVALID_MAX_FRAGMENT_LENGTH: Int = 232

const val SSL_R_SSL3_EXT_INVALID_SERVERNAME: Int = 319

const val SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE: Int = 320

const val SSL_R_SSL3_SESSION_ID_TOO_LONG: Int = 300

const val SSL_R_SSLV3_ALERT_BAD_CERTIFICATE: Int = 1042

const val SSL_R_SSLV3_ALERT_BAD_RECORD_MAC: Int = 1020

const val SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED: Int = 1045

const val SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED: Int = 1044

const val SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN: Int = 1046

const val SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE: Int = 1030

const val SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE: Int = 1040

const val SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER: Int = 1047

const val SSL_R_SSLV3_ALERT_NO_CERTIFICATE: Int = 1041

const val SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE: Int = 1010

const val SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE: Int = 1043

const val SSL_R_SSL_COMMAND_SECTION_EMPTY: Int = 117

const val SSL_R_SSL_COMMAND_SECTION_NOT_FOUND: Int = 125

const val SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION: Int = 228

const val SSL_R_SSL_HANDSHAKE_FAILURE: Int = 229

const val SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS: Int = 230

const val SSL_R_SSL_NEGATIVE_LENGTH: Int = 372

const val SSL_R_SSL_SECTION_EMPTY: Int = 126

const val SSL_R_SSL_SECTION_NOT_FOUND: Int = 136

const val SSL_R_SSL_SESSION_ID_CALLBACK_FAILED: Int = 301

const val SSL_R_SSL_SESSION_ID_CONFLICT: Int = 302

const val SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG: Int = 273

const val SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH: Int = 303

const val SSL_R_SSL_SESSION_ID_TOO_LONG: Int = 408

const val SSL_R_SSL_SESSION_VERSION_MISMATCH: Int = 210

const val SSL_R_STILL_IN_INIT: Int = 121

const val SSL_R_TLSV13_ALERT_CERTIFICATE_REQUIRED: Int = 1116

const val SSL_R_TLSV13_ALERT_MISSING_EXTENSION: Int = 1109

const val SSL_R_TLSV1_ALERT_ACCESS_DENIED: Int = 1049

const val SSL_R_TLSV1_ALERT_DECODE_ERROR: Int = 1050

const val SSL_R_TLSV1_ALERT_DECRYPTION_FAILED: Int = 1021

const val SSL_R_TLSV1_ALERT_DECRYPT_ERROR: Int = 1051

const val SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION: Int = 1060

const val SSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK: Int = 1086

const val SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY: Int = 1071

const val SSL_R_TLSV1_ALERT_INTERNAL_ERROR: Int = 1080

const val SSL_R_TLSV1_ALERT_NO_RENEGOTIATION: Int = 1100

const val SSL_R_TLSV1_ALERT_PROTOCOL_VERSION: Int = 1070

const val SSL_R_TLSV1_ALERT_RECORD_OVERFLOW: Int = 1022

const val SSL_R_TLSV1_ALERT_UNKNOWN_CA: Int = 1048

const val SSL_R_TLSV1_ALERT_USER_CANCELLED: Int = 1090

const val SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE: Int = 1114

const val SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE: Int = 1113

const val SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE: Int = 1111

const val SSL_R_TLSV1_UNRECOGNIZED_NAME: Int = 1112

const val SSL_R_TLSV1_UNSUPPORTED_EXTENSION: Int = 1110

const val SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT: Int = 365

const val SSL_R_TLS_HEARTBEAT_PENDING: Int = 366

const val SSL_R_TLS_ILLEGAL_EXPORTER_LABEL: Int = 367

const val SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST: Int = 157

const val SSL_R_TOO_MANY_KEY_UPDATES: Int = 132

const val SSL_R_TOO_MANY_WARN_ALERTS: Int = 409

const val SSL_R_TOO_MUCH_EARLY_DATA: Int = 164

const val SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS: Int = 314

const val SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS: Int = 239

const val SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES: Int = 242

const val SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES: Int = 243

const val SSL_R_UNEXPECTED_CCS_MESSAGE: Int = 262

const val SSL_R_UNEXPECTED_END_OF_EARLY_DATA: Int = 178

const val SSL_R_UNEXPECTED_MESSAGE: Int = 244

const val SSL_R_UNEXPECTED_RECORD: Int = 245

const val SSL_R_UNINITIALIZED: Int = 276

const val SSL_R_UNKNOWN_ALERT_TYPE: Int = 246

const val SSL_R_UNKNOWN_CERTIFICATE_TYPE: Int = 247

const val SSL_R_UNKNOWN_CIPHER_RETURNED: Int = 248

const val SSL_R_UNKNOWN_CIPHER_TYPE: Int = 249

const val SSL_R_UNKNOWN_CMD_NAME: Int = 386

const val SSL_R_UNKNOWN_COMMAND: Int = 139

const val SSL_R_UNKNOWN_DIGEST: Int = 368

const val SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE: Int = 250

const val SSL_R_UNKNOWN_PKEY_TYPE: Int = 251

const val SSL_R_UNKNOWN_PROTOCOL: Int = 252

const val SSL_R_UNKNOWN_SSL_VERSION: Int = 254

const val SSL_R_UNKNOWN_STATE: Int = 255

const val SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED: Int = 338

const val SSL_R_UNSOLICITED_EXTENSION: Int = 217

const val SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM: Int = 257

const val SSL_R_UNSUPPORTED_ELLIPTIC_CURVE: Int = 315

const val SSL_R_UNSUPPORTED_PROTOCOL: Int = 258

const val SSL_R_UNSUPPORTED_SSL_VERSION: Int = 259

const val SSL_R_UNSUPPORTED_STATUS_TYPE: Int = 329

const val SSL_R_USE_SRTP_NOT_NEGOTIATED: Int = 369

const val SSL_R_VERSION_TOO_HIGH: Int = 166

const val SSL_R_VERSION_TOO_LOW: Int = 396

const val SSL_R_WRONG_CERTIFICATE_TYPE: Int = 383

const val SSL_R_WRONG_CIPHER_RETURNED: Int = 261

const val SSL_R_WRONG_CURVE: Int = 378

const val SSL_R_WRONG_SIGNATURE_LENGTH: Int = 264

const val SSL_R_WRONG_SIGNATURE_SIZE: Int = 265

const val SSL_R_WRONG_SIGNATURE_TYPE: Int = 370

const val SSL_R_WRONG_SSL_VERSION: Int = 266

const val SSL_R_WRONG_VERSION_NUMBER: Int = 267

const val SSL_R_X509_LIB: Int = 268

const val SSL_R_X509_VERIFICATION_SETUP_PROBLEMS: Int = 269

const val SSL_SESSION_ASN1_VERSION: Int = 1

const val SSL_MAX_SSL_SESSION_ID_LENGTH: Int = 32

const val SSL_MAX_SID_CTX_LENGTH: Int = 32

const val SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES: Int = 64

const val SSL_MAX_KEY_ARG_LENGTH: Int = 8

const val SSL_MAX_MASTER_KEY_LENGTH: Int = 48

const val SSL_MAX_PIPELINES: Int = 32

val SSL_TXT_LOW: String get() = "LOW"

val SSL_TXT_MEDIUM: String get() = "MEDIUM"

val SSL_TXT_HIGH: String get() = "HIGH"

val SSL_TXT_FIPS: String get() = "FIPS"

val SSL_TXT_aNULL: String get() = "aNULL"

val SSL_TXT_eNULL: String get() = "eNULL"

val SSL_TXT_NULL: String get() = "NULL"

val SSL_TXT_kRSA: String get() = "kRSA"

val SSL_TXT_kDHr: String get() = "kDHr"

val SSL_TXT_kDHd: String get() = "kDHd"

val SSL_TXT_kDH: String get() = "kDH"

val SSL_TXT_kEDH: String get() = "kEDH"

val SSL_TXT_kDHE: String get() = "kDHE"

val SSL_TXT_kECDHr: String get() = "kECDHr"

val SSL_TXT_kECDHe: String get() = "kECDHe"

val SSL_TXT_kECDH: String get() = "kECDH"

val SSL_TXT_kEECDH: String get() = "kEECDH"

val SSL_TXT_kECDHE: String get() = "kECDHE"

val SSL_TXT_kPSK: String get() = "kPSK"

val SSL_TXT_kRSAPSK: String get() = "kRSAPSK"

val SSL_TXT_kECDHEPSK: String get() = "kECDHEPSK"

val SSL_TXT_kDHEPSK: String get() = "kDHEPSK"

val SSL_TXT_kGOST: String get() = "kGOST"

val SSL_TXT_kSRP: String get() = "kSRP"

val SSL_TXT_aRSA: String get() = "aRSA"

val SSL_TXT_aDSS: String get() = "aDSS"

val SSL_TXT_aDH: String get() = "aDH"

val SSL_TXT_aECDH: String get() = "aECDH"

val SSL_TXT_aECDSA: String get() = "aECDSA"

val SSL_TXT_aPSK: String get() = "aPSK"

val SSL_TXT_aGOST94: String get() = "aGOST94"

val SSL_TXT_aGOST01: String get() = "aGOST01"

val SSL_TXT_aGOST12: String get() = "aGOST12"

val SSL_TXT_aGOST: String get() = "aGOST"

val SSL_TXT_aSRP: String get() = "aSRP"

val SSL_TXT_DSS: String get() = "DSS"

val SSL_TXT_DH: String get() = "DH"

val SSL_TXT_DHE: String get() = "DHE"

val SSL_TXT_EDH: String get() = "EDH"

val SSL_TXT_ADH: String get() = "ADH"

val SSL_TXT_RSA: String get() = "RSA"

val SSL_TXT_ECDH: String get() = "ECDH"

val SSL_TXT_EECDH: String get() = "EECDH"

val SSL_TXT_ECDHE: String get() = "ECDHE"

val SSL_TXT_AECDH: String get() = "AECDH"

val SSL_TXT_ECDSA: String get() = "ECDSA"

val SSL_TXT_PSK: String get() = "PSK"

val SSL_TXT_SRP: String get() = "SRP"

val SSL_TXT_DES: String get() = "DES"

val SSL_TXT_3DES: String get() = "3DES"

val SSL_TXT_RC4: String get() = "RC4"

val SSL_TXT_RC2: String get() = "RC2"

val SSL_TXT_IDEA: String get() = "IDEA"

val SSL_TXT_SEED: String get() = "SEED"

val SSL_TXT_AES128: String get() = "AES128"

val SSL_TXT_AES256: String get() = "AES256"

val SSL_TXT_AES: String get() = "AES"

val SSL_TXT_AES_GCM: String get() = "AESGCM"

val SSL_TXT_AES_CCM: String get() = "AESCCM"

val SSL_TXT_AES_CCM_8: String get() = "AESCCM8"

val SSL_TXT_CAMELLIA128: String get() = "CAMELLIA128"

val SSL_TXT_CAMELLIA256: String get() = "CAMELLIA256"

val SSL_TXT_CAMELLIA: String get() = "CAMELLIA"

val SSL_TXT_CHACHA20: String get() = "CHACHA20"

val SSL_TXT_GOST: String get() = "GOST89"

val SSL_TXT_ARIA: String get() = "ARIA"

val SSL_TXT_ARIA_GCM: String get() = "ARIAGCM"

val SSL_TXT_ARIA128: String get() = "ARIA128"

val SSL_TXT_ARIA256: String get() = "ARIA256"

val SSL_TXT_MD5: String get() = "MD5"

val SSL_TXT_SHA1: String get() = "SHA1"

val SSL_TXT_SHA: String get() = "SHA"

val SSL_TXT_GOST94: String get() = "GOST94"

val SSL_TXT_GOST89MAC: String get() = "GOST89MAC"

val SSL_TXT_GOST12: String get() = "GOST12"

val SSL_TXT_GOST89MAC12: String get() = "GOST89MAC12"

val SSL_TXT_SHA256: String get() = "SHA256"

val SSL_TXT_SHA384: String get() = "SHA384"

val SSL_TXT_SSLV3: String get() = "SSLv3"

val SSL_TXT_TLSV1: String get() = "TLSv1"

val SSL_TXT_TLSV1_1: String get() = "TLSv1.1"

val SSL_TXT_TLSV1_2: String get() = "TLSv1.2"

val SSL_TXT_ALL: String get() = "ALL"

val SSL_TXT_CMPALL: String get() = "COMPLEMENTOFALL"

val SSL_TXT_CMPDEF: String get() = "COMPLEMENTOFDEFAULT"

val SSL_DEFAULT_CIPHER_LIST: String get() = "ALL:\u0021COMPLEMENTOFDEFAULT:\u0021eNULL"

val TLS_DEFAULT_CIPHERSUITES: String get() = "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256"

const val SSL_SENT_SHUTDOWN: Int = 1

const val SSL_RECEIVED_SHUTDOWN: Int = 2

const val SSL_FILETYPE_ASN1: Int = 2

const val SSL_FILETYPE_PEM: Int = 1

const val SSL_EXT_TLS_ONLY: Int = 1

const val SSL_EXT_DTLS_ONLY: Int = 2

const val SSL_EXT_TLS_IMPLEMENTATION_ONLY: Int = 4

const val SSL_EXT_SSL3_ALLOWED: Int = 8

const val SSL_EXT_TLS1_2_AND_BELOW_ONLY: Int = 16

const val SSL_EXT_TLS1_3_ONLY: Int = 32

const val SSL_EXT_IGNORE_ON_RESUMPTION: Int = 64

const val SSL_EXT_CLIENT_HELLO: Int = 128

const val SSL_EXT_TLS1_2_SERVER_HELLO: Int = 256

const val SSL_EXT_TLS1_3_SERVER_HELLO: Int = 512

const val SSL_EXT_TLS1_3_ENCRYPTED_EXTENSIONS: Int = 1024

const val SSL_EXT_TLS1_3_HELLO_RETRY_REQUEST: Int = 2048

const val SSL_EXT_TLS1_3_CERTIFICATE: Int = 4096

const val SSL_EXT_TLS1_3_NEW_SESSION_TICKET: Int = 8192

const val SSL_EXT_TLS1_3_CERTIFICATE_REQUEST: Int = 16384

const val SSL_OP_LEGACY_SERVER_CONNECT: UInt = 4u

const val SSL_OP_TLSEXT_PADDING: UInt = 16u

const val SSL_OP_SAFARI_ECDHE_ECDSA_BUG: UInt = 64u

const val SSL_OP_ALLOW_NO_DHE_KEX: UInt = 1024u

const val SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS: UInt = 2048u

const val SSL_OP_NO_QUERY_MTU: UInt = 4096u

const val SSL_OP_COOKIE_EXCHANGE: UInt = 8192u

const val SSL_OP_NO_TICKET: UInt = 16384u

const val SSL_OP_CISCO_ANYCONNECT: UInt = 32768u

const val SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION: UInt = 65536u

const val SSL_OP_NO_COMPRESSION: UInt = 131072u

const val SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: UInt = 262144u

const val SSL_OP_NO_ENCRYPT_THEN_MAC: UInt = 524288u

const val SSL_OP_ENABLE_MIDDLEBOX_COMPAT: UInt = 1048576u

const val SSL_OP_PRIORITIZE_CHACHA: UInt = 2097152u

const val SSL_OP_CIPHER_SERVER_PREFERENCE: UInt = 4194304u

const val SSL_OP_TLS_ROLLBACK_BUG: UInt = 8388608u

const val SSL_OP_NO_ANTI_REPLAY: UInt = 16777216u

const val SSL_OP_NO_SSLv3: UInt = 33554432u

const val SSL_OP_NO_TLSv1: UInt = 67108864u

const val SSL_OP_NO_TLSv1_2: UInt = 134217728u

const val SSL_OP_NO_TLSv1_1: UInt = 268435456u

const val SSL_OP_NO_TLSv1_3: UInt = 536870912u

const val SSL_OP_NO_DTLSv1: UInt = 67108864u

const val SSL_OP_NO_DTLSv1_2: UInt = 134217728u

const val SSL_OP_NO_SSL_MASK: UInt = 1040187392u

const val SSL_OP_NO_DTLS_MASK: UInt = 201326592u

const val SSL_OP_NO_RENEGOTIATION: UInt = 1073741824u

const val SSL_OP_CRYPTOPRO_TLSEXT_BUG: UInt = 2147483648u

const val SSL_OP_ALL: UInt = 2147485780u

const val SSL_OP_MICROSOFT_SESS_ID_BUG: Int = 0

const val SSL_OP_NETSCAPE_CHALLENGE_BUG: Int = 0

const val SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG: Int = 0

const val SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG: Int = 0

const val SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER: Int = 0

const val SSL_OP_MSIE_SSLV2_RSA_PADDING: Int = 0

const val SSL_OP_SSLEAY_080_CLIENT_DH_BUG: Int = 0

const val SSL_OP_TLS_D5_BUG: Int = 0

const val SSL_OP_TLS_BLOCK_PADDING_BUG: Int = 0

const val SSL_OP_SINGLE_ECDH_USE: Int = 0

const val SSL_OP_SINGLE_DH_USE: Int = 0

const val SSL_OP_EPHEMERAL_RSA: Int = 0

const val SSL_OP_NO_SSLv2: Int = 0

const val SSL_OP_PKCS1_CHECK_1: Int = 0

const val SSL_OP_PKCS1_CHECK_2: Int = 0

const val SSL_OP_NETSCAPE_CA_DN_BUG: Int = 0

const val SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG: Int = 0

const val SSL_MODE_ENABLE_PARTIAL_WRITE: UInt = 1u

const val SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER: UInt = 2u

const val SSL_MODE_AUTO_RETRY: UInt = 4u

const val SSL_MODE_NO_AUTO_CHAIN: UInt = 8u

const val SSL_MODE_RELEASE_BUFFERS: UInt = 16u

const val SSL_MODE_SEND_CLIENTHELLO_TIME: UInt = 32u

const val SSL_MODE_SEND_SERVERHELLO_TIME: UInt = 64u

const val SSL_MODE_SEND_FALLBACK_SCSV: UInt = 128u

const val SSL_MODE_ASYNC: UInt = 256u

const val SSL_MODE_DTLS_SCTP_LABEL_LENGTH_BUG: UInt = 1024u

const val SSL_CERT_FLAG_TLS_STRICT: UInt = 1u

const val SSL_CERT_FLAG_SUITEB_128_LOS_ONLY: Int = 65536

const val SSL_CERT_FLAG_SUITEB_192_LOS: Int = 131072

const val SSL_CERT_FLAG_SUITEB_128_LOS: Int = 196608

const val SSL_CERT_FLAG_BROKEN_PROTOCOL: Int = 268435456

const val SSL_BUILD_CHAIN_FLAG_UNTRUSTED: Int = 1

const val SSL_BUILD_CHAIN_FLAG_NO_ROOT: Int = 2

const val SSL_BUILD_CHAIN_FLAG_CHECK: Int = 4

const val SSL_BUILD_CHAIN_FLAG_IGNORE_ERROR: Int = 8

const val SSL_BUILD_CHAIN_FLAG_CLEAR_ERROR: Int = 16

const val CERT_PKEY_VALID: Int = 1

const val CERT_PKEY_SIGN: Int = 2

const val CERT_PKEY_EE_SIGNATURE: Int = 16

const val CERT_PKEY_CA_SIGNATURE: Int = 32

const val CERT_PKEY_EE_PARAM: Int = 64

const val CERT_PKEY_CA_PARAM: Int = 128

const val CERT_PKEY_EXPLICIT_SIGN: Int = 256

const val CERT_PKEY_ISSUER_NAME: Int = 512

const val CERT_PKEY_CERT_TYPE: Int = 1024

const val CERT_PKEY_SUITEB: Int = 2048

const val SSL_CONF_FLAG_CMDLINE: Int = 1

const val SSL_CONF_FLAG_FILE: Int = 2

const val SSL_CONF_FLAG_CLIENT: Int = 4

const val SSL_CONF_FLAG_SERVER: Int = 8

const val SSL_CONF_FLAG_SHOW_ERRORS: Int = 16

const val SSL_CONF_FLAG_CERTIFICATE: Int = 32

const val SSL_CONF_FLAG_REQUIRE_PRIVATE: Int = 64

const val SSL_CONF_TYPE_UNKNOWN: Int = 0

const val SSL_CONF_TYPE_STRING: Int = 1

const val SSL_CONF_TYPE_FILE: Int = 2

const val SSL_CONF_TYPE_DIR: Int = 3

const val SSL_CONF_TYPE_NONE: Int = 4

const val SSL_COOKIE_LENGTH: Int = 4096

const val SSL_MAX_CERT_LIST_DEFAULT: Int = 102400

const val SSL_SESSION_CACHE_MAX_SIZE_DEFAULT: Int = 20480

const val SSL_SESS_CACHE_OFF: Int = 0

const val SSL_SESS_CACHE_CLIENT: Int = 1

const val SSL_SESS_CACHE_SERVER: Int = 2

const val SSL_SESS_CACHE_BOTH: Int = 3

const val SSL_SESS_CACHE_NO_AUTO_CLEAR: Int = 128

const val SSL_SESS_CACHE_NO_INTERNAL_LOOKUP: Int = 256

const val SSL_SESS_CACHE_NO_INTERNAL_STORE: Int = 512

const val SSL_SESS_CACHE_NO_INTERNAL: Int = 768

const val OPENSSL_NPN_UNSUPPORTED: Int = 0

const val OPENSSL_NPN_NEGOTIATED: Int = 1

const val OPENSSL_NPN_NO_OVERLAP: Int = 2

const val PSK_MAX_IDENTITY_LEN: Int = 128

const val PSK_MAX_PSK_LEN: Int = 256

const val SSL_NOTHING: Int = 1

const val SSL_WRITING: Int = 2

const val SSL_READING: Int = 3

const val SSL_X509_LOOKUP: Int = 4

const val SSL_ASYNC_PAUSED: Int = 5

const val SSL_ASYNC_NO_JOBS: Int = 6

const val SSL_CLIENT_HELLO_CB: Int = 7

const val SSL_MAC_FLAG_READ_MAC_STREAM: Int = 1

const val SSL_MAC_FLAG_WRITE_MAC_STREAM: Int = 2

const val SSL2_VERSION: Int = 2

const val SSL2_MT_CLIENT_HELLO: Int = 1

const val SSL3_CK_SCSV: Int = 50331903

const val SSL3_CK_FALLBACK_SCSV: Int = 50353664

const val SSL3_CK_RSA_NULL_MD5: Int = 50331649

const val SSL3_CK_RSA_NULL_SHA: Int = 50331650

const val SSL3_CK_RSA_RC4_40_MD5: Int = 50331651

const val SSL3_CK_RSA_RC4_128_MD5: Int = 50331652

const val SSL3_CK_RSA_RC4_128_SHA: Int = 50331653

const val SSL3_CK_RSA_RC2_40_MD5: Int = 50331654

const val SSL3_CK_RSA_IDEA_128_SHA: Int = 50331655

const val SSL3_CK_RSA_DES_40_CBC_SHA: Int = 50331656

const val SSL3_CK_RSA_DES_64_CBC_SHA: Int = 50331657

const val SSL3_CK_RSA_DES_192_CBC3_SHA: Int = 50331658

const val SSL3_CK_DH_DSS_DES_40_CBC_SHA: Int = 50331659

const val SSL3_CK_DH_DSS_DES_64_CBC_SHA: Int = 50331660

const val SSL3_CK_DH_DSS_DES_192_CBC3_SHA: Int = 50331661

const val SSL3_CK_DH_RSA_DES_40_CBC_SHA: Int = 50331662

const val SSL3_CK_DH_RSA_DES_64_CBC_SHA: Int = 50331663

const val SSL3_CK_DH_RSA_DES_192_CBC3_SHA: Int = 50331664

const val SSL3_CK_DHE_DSS_DES_40_CBC_SHA: Int = 50331665

const val SSL3_CK_EDH_DSS_DES_40_CBC_SHA: Int = 50331665

const val SSL3_CK_DHE_DSS_DES_64_CBC_SHA: Int = 50331666

const val SSL3_CK_EDH_DSS_DES_64_CBC_SHA: Int = 50331666

const val SSL3_CK_DHE_DSS_DES_192_CBC3_SHA: Int = 50331667

const val SSL3_CK_EDH_DSS_DES_192_CBC3_SHA: Int = 50331667

const val SSL3_CK_DHE_RSA_DES_40_CBC_SHA: Int = 50331668

const val SSL3_CK_EDH_RSA_DES_40_CBC_SHA: Int = 50331668

const val SSL3_CK_DHE_RSA_DES_64_CBC_SHA: Int = 50331669

const val SSL3_CK_EDH_RSA_DES_64_CBC_SHA: Int = 50331669

const val SSL3_CK_DHE_RSA_DES_192_CBC3_SHA: Int = 50331670

const val SSL3_CK_EDH_RSA_DES_192_CBC3_SHA: Int = 50331670

const val SSL3_CK_ADH_RC4_40_MD5: Int = 50331671

const val SSL3_CK_ADH_RC4_128_MD5: Int = 50331672

const val SSL3_CK_ADH_DES_40_CBC_SHA: Int = 50331673

const val SSL3_CK_ADH_DES_64_CBC_SHA: Int = 50331674

const val SSL3_CK_ADH_DES_192_CBC_SHA: Int = 50331675

val SSL3_RFC_RSA_NULL_MD5: String get() = "TLS_RSA_WITH_NULL_MD5"

val SSL3_RFC_RSA_NULL_SHA: String get() = "TLS_RSA_WITH_NULL_SHA"

val SSL3_RFC_RSA_DES_192_CBC3_SHA: String get() = "TLS_RSA_WITH_3DES_EDE_CBC_SHA"

val SSL3_RFC_DHE_DSS_DES_192_CBC3_SHA: String get() = "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"

val SSL3_RFC_DHE_RSA_DES_192_CBC3_SHA: String get() = "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"

val SSL3_RFC_ADH_DES_192_CBC_SHA: String get() = "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"

val SSL3_RFC_RSA_IDEA_128_SHA: String get() = "TLS_RSA_WITH_IDEA_CBC_SHA"

val SSL3_RFC_RSA_RC4_128_MD5: String get() = "TLS_RSA_WITH_RC4_128_MD5"

val SSL3_RFC_RSA_RC4_128_SHA: String get() = "TLS_RSA_WITH_RC4_128_SHA"

val SSL3_RFC_ADH_RC4_128_MD5: String get() = "TLS_DH_anon_WITH_RC4_128_MD5"

val SSL3_TXT_RSA_NULL_MD5: String get() = "NULL\u002DMD5"

val SSL3_TXT_RSA_NULL_SHA: String get() = "NULL\u002DSHA"

val SSL3_TXT_RSA_RC4_40_MD5: String get() = "EXP\u002DRC4\u002DMD5"

val SSL3_TXT_RSA_RC4_128_MD5: String get() = "RC4\u002DMD5"

val SSL3_TXT_RSA_RC4_128_SHA: String get() = "RC4\u002DSHA"

val SSL3_TXT_RSA_RC2_40_MD5: String get() = "EXP\u002DRC2\u002DCBC\u002DMD5"

val SSL3_TXT_RSA_IDEA_128_SHA: String get() = "IDEA\u002DCBC\u002DSHA"

val SSL3_TXT_RSA_DES_40_CBC_SHA: String get() = "EXP\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_RSA_DES_64_CBC_SHA: String get() = "DES\u002DCBC\u002DSHA"

val SSL3_TXT_RSA_DES_192_CBC3_SHA: String get() = "DES\u002DCBC3\u002DSHA"

val SSL3_TXT_DH_DSS_DES_40_CBC_SHA: String get() = "EXP\u002DDH\u002DDSS\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DH_DSS_DES_64_CBC_SHA: String get() = "DH\u002DDSS\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DH_DSS_DES_192_CBC3_SHA: String get() = "DH\u002DDSS\u002DDES\u002DCBC3\u002DSHA"

val SSL3_TXT_DH_RSA_DES_40_CBC_SHA: String get() = "EXP\u002DDH\u002DRSA\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DH_RSA_DES_64_CBC_SHA: String get() = "DH\u002DRSA\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DH_RSA_DES_192_CBC3_SHA: String get() = "DH\u002DRSA\u002DDES\u002DCBC3\u002DSHA"

val SSL3_TXT_DHE_DSS_DES_40_CBC_SHA: String get() = "EXP\u002DDHE\u002DDSS\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DHE_DSS_DES_64_CBC_SHA: String get() = "DHE\u002DDSS\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DHE_DSS_DES_192_CBC3_SHA: String get() = "DHE\u002DDSS\u002DDES\u002DCBC3\u002DSHA"

val SSL3_TXT_DHE_RSA_DES_40_CBC_SHA: String get() = "EXP\u002DDHE\u002DRSA\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DHE_RSA_DES_64_CBC_SHA: String get() = "DHE\u002DRSA\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_DHE_RSA_DES_192_CBC3_SHA: String get() = "DHE\u002DRSA\u002DDES\u002DCBC3\u002DSHA"

val SSL3_TXT_EDH_DSS_DES_40_CBC_SHA: String get() = "EXP\u002DEDH\u002DDSS\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_EDH_DSS_DES_64_CBC_SHA: String get() = "EDH\u002DDSS\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA: String get() = "EDH\u002DDSS\u002DDES\u002DCBC3\u002DSHA"

val SSL3_TXT_EDH_RSA_DES_40_CBC_SHA: String get() = "EXP\u002DEDH\u002DRSA\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_EDH_RSA_DES_64_CBC_SHA: String get() = "EDH\u002DRSA\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA: String get() = "EDH\u002DRSA\u002DDES\u002DCBC3\u002DSHA"

val SSL3_TXT_ADH_RC4_40_MD5: String get() = "EXP\u002DADH\u002DRC4\u002DMD5"

val SSL3_TXT_ADH_RC4_128_MD5: String get() = "ADH\u002DRC4\u002DMD5"

val SSL3_TXT_ADH_DES_40_CBC_SHA: String get() = "EXP\u002DADH\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_ADH_DES_64_CBC_SHA: String get() = "ADH\u002DDES\u002DCBC\u002DSHA"

val SSL3_TXT_ADH_DES_192_CBC_SHA: String get() = "ADH\u002DDES\u002DCBC3\u002DSHA"

const val SSL3_SSL_SESSION_ID_LENGTH: Int = 32

const val SSL3_MAX_SSL_SESSION_ID_LENGTH: Int = 32

const val SSL3_MASTER_SECRET_SIZE: Int = 48

const val SSL3_RANDOM_SIZE: Int = 32

const val SSL3_SESSION_ID_SIZE: Int = 32

const val SSL3_RT_HEADER_LENGTH: Int = 5

const val SSL3_HM_HEADER_LENGTH: Int = 4

const val SSL3_ALIGN_PAYLOAD: Int = 8

const val SSL3_RT_MAX_MD_SIZE: Int = 64

const val SSL_RT_MAX_CIPHER_BLOCK_SIZE: Int = 16

const val SSL3_RT_MAX_EXTRA: Int = 16384

const val SSL3_RT_MAX_PLAIN_LENGTH: Int = 16384

const val SSL3_RT_MAX_COMPRESSED_OVERHEAD: Int = 1024

const val SSL3_RT_MAX_ENCRYPTED_OVERHEAD: Int = 320

const val SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD: Int = 256

const val SSL3_RT_SEND_MAX_ENCRYPTED_OVERHEAD: Int = 80

const val SSL3_RT_MAX_COMPRESSED_LENGTH: Int = 17408

const val SSL3_RT_MAX_ENCRYPTED_LENGTH: Int = 17728

const val SSL3_RT_MAX_TLS13_ENCRYPTED_LENGTH: Int = 16640

const val SSL3_RT_MAX_PACKET_SIZE: Int = 17733

val SSL3_MD_CLIENT_FINISHED_CONST: String get() = "CLNT"

val SSL3_MD_SERVER_FINISHED_CONST: String get() = "SRVR"

const val SSL3_VERSION: Int = 768

const val SSL3_VERSION_MAJOR: Int = 3

const val SSL3_VERSION_MINOR: Int = 0

const val SSL3_RT_CHANGE_CIPHER_SPEC: Int = 20

const val SSL3_RT_ALERT: Int = 21

const val SSL3_RT_HANDSHAKE: Int = 22

const val SSL3_RT_APPLICATION_DATA: Int = 23

const val DTLS1_RT_HEARTBEAT: Int = 24

const val TLS1_RT_CRYPTO: Int = 4096

const val TLS1_RT_CRYPTO_PREMASTER: Int = 4097

const val TLS1_RT_CRYPTO_CLIENT_RANDOM: Int = 4098

const val TLS1_RT_CRYPTO_SERVER_RANDOM: Int = 4099

const val TLS1_RT_CRYPTO_MASTER: Int = 4100

const val TLS1_RT_CRYPTO_READ: Int = 0

const val TLS1_RT_CRYPTO_WRITE: Int = 256

const val TLS1_RT_CRYPTO_MAC: Int = 4101

const val TLS1_RT_CRYPTO_KEY: Int = 4102

const val TLS1_RT_CRYPTO_IV: Int = 4103

const val TLS1_RT_CRYPTO_FIXED_IV: Int = 4104

const val SSL3_RT_HEADER: Int = 256

const val SSL3_RT_INNER_CONTENT_TYPE: Int = 257

const val SSL3_AL_WARNING: Int = 1

const val SSL3_AL_FATAL: Int = 2

const val SSL3_AD_CLOSE_NOTIFY: Int = 0

const val SSL3_AD_UNEXPECTED_MESSAGE: Int = 10

const val SSL3_AD_BAD_RECORD_MAC: Int = 20

const val SSL3_AD_DECOMPRESSION_FAILURE: Int = 30

const val SSL3_AD_HANDSHAKE_FAILURE: Int = 40

const val SSL3_AD_NO_CERTIFICATE: Int = 41

const val SSL3_AD_BAD_CERTIFICATE: Int = 42

const val SSL3_AD_UNSUPPORTED_CERTIFICATE: Int = 43

const val SSL3_AD_CERTIFICATE_REVOKED: Int = 44

const val SSL3_AD_CERTIFICATE_EXPIRED: Int = 45

const val SSL3_AD_CERTIFICATE_UNKNOWN: Int = 46

const val SSL3_AD_ILLEGAL_PARAMETER: Int = 47

const val TLS1_HB_REQUEST: Int = 1

const val TLS1_HB_RESPONSE: Int = 2

const val SSL3_CT_RSA_SIGN: Int = 1

const val SSL3_CT_DSS_SIGN: Int = 2

const val SSL3_CT_RSA_FIXED_DH: Int = 3

const val SSL3_CT_DSS_FIXED_DH: Int = 4

const val SSL3_CT_RSA_EPHEMERAL_DH: Int = 5

const val SSL3_CT_DSS_EPHEMERAL_DH: Int = 6

const val SSL3_CT_FORTEZZA_DMS: Int = 20

const val SSL3_CT_NUMBER: Int = 10

const val SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS: Int = 1

const val TLS1_FLAGS_TLS_PADDING_BUG: Int = 0

const val TLS1_FLAGS_SKIP_CERT_VERIFY: Int = 16

const val TLS1_FLAGS_ENCRYPT_THEN_MAC_READ: Int = 256

const val TLS1_FLAGS_ENCRYPT_THEN_MAC: Int = 256

const val TLS1_FLAGS_RECEIVED_EXTMS: Int = 512

const val TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE: Int = 1024

const val TLS1_FLAGS_STATELESS: Int = 2048

const val SSL3_MT_HELLO_REQUEST: Int = 0

const val SSL3_MT_CLIENT_HELLO: Int = 1

const val SSL3_MT_SERVER_HELLO: Int = 2

const val SSL3_MT_NEWSESSION_TICKET: Int = 4

const val SSL3_MT_END_OF_EARLY_DATA: Int = 5

const val SSL3_MT_ENCRYPTED_EXTENSIONS: Int = 8

const val SSL3_MT_CERTIFICATE: Int = 11

const val SSL3_MT_SERVER_KEY_EXCHANGE: Int = 12

const val SSL3_MT_CERTIFICATE_REQUEST: Int = 13

const val SSL3_MT_SERVER_DONE: Int = 14

const val SSL3_MT_CERTIFICATE_VERIFY: Int = 15

const val SSL3_MT_CLIENT_KEY_EXCHANGE: Int = 16

const val SSL3_MT_FINISHED: Int = 20

const val SSL3_MT_CERTIFICATE_URL: Int = 21

const val SSL3_MT_CERTIFICATE_STATUS: Int = 22

const val SSL3_MT_SUPPLEMENTAL_DATA: Int = 23

const val SSL3_MT_KEY_UPDATE: Int = 24

const val SSL3_MT_NEXT_PROTO: Int = 67

const val SSL3_MT_MESSAGE_HASH: Int = 254

const val DTLS1_MT_HELLO_VERIFY_REQUEST: Int = 3

const val SSL3_MT_CHANGE_CIPHER_SPEC: Int = 257

const val SSL3_MT_CCS: Int = 1

const val SSL3_CC_READ: Int = 1

const val SSL3_CC_WRITE: Int = 2

const val SSL3_CC_CLIENT: Int = 16

const val SSL3_CC_SERVER: Int = 32

const val SSL3_CC_EARLY: Int = 64

const val SSL3_CC_HANDSHAKE: Int = 128

const val SSL3_CC_APPLICATION: Int = 256

const val SSL3_CHANGE_CIPHER_CLIENT_WRITE: Int = 18

const val SSL3_CHANGE_CIPHER_SERVER_READ: Int = 33

const val SSL3_CHANGE_CIPHER_CLIENT_READ: Int = 17

const val SSL3_CHANGE_CIPHER_SERVER_WRITE: Int = 34

const val OPENSSL_TLS_SECURITY_LEVEL: Int = 1

const val TLS1_VERSION: Int = 769

const val TLS1_1_VERSION: Int = 770

const val TLS1_2_VERSION: Int = 771

const val TLS1_3_VERSION: Int = 772

const val TLS_MAX_VERSION: Int = 772

const val TLS_ANY_VERSION: Int = 65536

const val TLS1_VERSION_MAJOR: Int = 3

const val TLS1_VERSION_MINOR: Int = 1

const val TLS1_1_VERSION_MAJOR: Int = 3

const val TLS1_1_VERSION_MINOR: Int = 2

const val TLS1_2_VERSION_MAJOR: Int = 3

const val TLS1_2_VERSION_MINOR: Int = 3

const val TLS1_AD_DECRYPTION_FAILED: Int = 21

const val TLS1_AD_RECORD_OVERFLOW: Int = 22

const val TLS1_AD_UNKNOWN_CA: Int = 48

const val TLS1_AD_ACCESS_DENIED: Int = 49

const val TLS1_AD_DECODE_ERROR: Int = 50

const val TLS1_AD_DECRYPT_ERROR: Int = 51

const val TLS1_AD_EXPORT_RESTRICTION: Int = 60

const val TLS1_AD_PROTOCOL_VERSION: Int = 70

const val TLS1_AD_INSUFFICIENT_SECURITY: Int = 71

const val TLS1_AD_INTERNAL_ERROR: Int = 80

const val TLS1_AD_INAPPROPRIATE_FALLBACK: Int = 86

const val TLS1_AD_USER_CANCELLED: Int = 90

const val TLS1_AD_NO_RENEGOTIATION: Int = 100

const val TLS13_AD_MISSING_EXTENSION: Int = 109

const val TLS13_AD_CERTIFICATE_REQUIRED: Int = 116

const val TLS1_AD_UNSUPPORTED_EXTENSION: Int = 110

const val TLS1_AD_CERTIFICATE_UNOBTAINABLE: Int = 111

const val TLS1_AD_UNRECOGNIZED_NAME: Int = 112

const val TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE: Int = 113

const val TLS1_AD_BAD_CERTIFICATE_HASH_VALUE: Int = 114

const val TLS1_AD_UNKNOWN_PSK_IDENTITY: Int = 115

const val TLS1_AD_NO_APPLICATION_PROTOCOL: Int = 120

const val TLSEXT_TYPE_server_name: Int = 0

const val TLSEXT_TYPE_max_fragment_length: Int = 1

const val TLSEXT_TYPE_client_certificate_url: Int = 2

const val TLSEXT_TYPE_trusted_ca_keys: Int = 3

const val TLSEXT_TYPE_truncated_hmac: Int = 4

const val TLSEXT_TYPE_status_request: Int = 5

const val TLSEXT_TYPE_user_mapping: Int = 6

const val TLSEXT_TYPE_client_authz: Int = 7

const val TLSEXT_TYPE_server_authz: Int = 8

const val TLSEXT_TYPE_cert_type: Int = 9

const val TLSEXT_TYPE_supported_groups: Int = 10

const val TLSEXT_TYPE_elliptic_curves: Int = 10

const val TLSEXT_TYPE_ec_point_formats: Int = 11

const val TLSEXT_TYPE_srp: Int = 12

const val TLSEXT_TYPE_signature_algorithms: Int = 13

const val TLSEXT_TYPE_use_srtp: Int = 14

const val TLSEXT_TYPE_heartbeat: Int = 15

const val TLSEXT_TYPE_application_layer_protocol_negotiation: Int = 16

const val TLSEXT_TYPE_signed_certificate_timestamp: Int = 18

const val TLSEXT_TYPE_padding: Int = 21

const val TLSEXT_TYPE_encrypt_then_mac: Int = 22

const val TLSEXT_TYPE_extended_master_secret: Int = 23

const val TLSEXT_TYPE_session_ticket: Int = 35

const val TLSEXT_TYPE_psk: Int = 41

const val TLSEXT_TYPE_early_data: Int = 42

const val TLSEXT_TYPE_supported_versions: Int = 43

const val TLSEXT_TYPE_cookie: Int = 44

const val TLSEXT_TYPE_psk_kex_modes: Int = 45

const val TLSEXT_TYPE_certificate_authorities: Int = 47

const val TLSEXT_TYPE_post_handshake_auth: Int = 49

const val TLSEXT_TYPE_signature_algorithms_cert: Int = 50

const val TLSEXT_TYPE_key_share: Int = 51

const val TLSEXT_TYPE_renegotiate: Int = 65281

const val TLSEXT_TYPE_next_proto_neg: Int = 13172

const val TLSEXT_NAMETYPE_host_name: Int = 0

const val TLSEXT_STATUSTYPE_ocsp: Int = 1

const val TLSEXT_ECPOINTFORMAT_first: Int = 0

const val TLSEXT_ECPOINTFORMAT_uncompressed: Int = 0

const val TLSEXT_ECPOINTFORMAT_ansiX962_compressed_prime: Int = 1

const val TLSEXT_ECPOINTFORMAT_ansiX962_compressed_char2: Int = 2

const val TLSEXT_ECPOINTFORMAT_last: Int = 2

const val TLSEXT_signature_anonymous: Int = 0

const val TLSEXT_signature_rsa: Int = 1

const val TLSEXT_signature_dsa: Int = 2

const val TLSEXT_signature_ecdsa: Int = 3

const val TLSEXT_signature_gostr34102001: Int = 237

const val TLSEXT_signature_gostr34102012_256: Int = 238

const val TLSEXT_signature_gostr34102012_512: Int = 239

const val TLSEXT_signature_num: Int = 7

const val TLSEXT_hash_none: Int = 0

const val TLSEXT_hash_md5: Int = 1

const val TLSEXT_hash_sha1: Int = 2

const val TLSEXT_hash_sha224: Int = 3

const val TLSEXT_hash_sha256: Int = 4

const val TLSEXT_hash_sha384: Int = 5

const val TLSEXT_hash_sha512: Int = 6

const val TLSEXT_hash_gostr3411: Int = 237

const val TLSEXT_hash_gostr34112012_256: Int = 238

const val TLSEXT_hash_gostr34112012_512: Int = 239

const val TLSEXT_hash_num: Int = 10

const val TLSEXT_nid_unknown: Int = 16777216

const val TLSEXT_curve_P_256: Int = 23

const val TLSEXT_curve_P_384: Int = 24

const val TLSEXT_max_fragment_length_DISABLED: Int = 0

const val TLSEXT_max_fragment_length_512: Int = 1

const val TLSEXT_max_fragment_length_1024: Int = 2

const val TLSEXT_max_fragment_length_2048: Int = 3

const val TLSEXT_max_fragment_length_4096: Int = 4

const val TLSEXT_MAXLEN_host_name: Int = 255

const val SSL_TLSEXT_ERR_OK: Int = 0

const val SSL_TLSEXT_ERR_ALERT_WARNING: Int = 1

const val SSL_TLSEXT_ERR_ALERT_FATAL: Int = 2

const val SSL_TLSEXT_ERR_NOACK: Int = 3

const val TLS1_CK_PSK_WITH_RC4_128_SHA: Int = 50331786

const val TLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA: Int = 50331787

const val TLS1_CK_PSK_WITH_AES_128_CBC_SHA: Int = 50331788

const val TLS1_CK_PSK_WITH_AES_256_CBC_SHA: Int = 50331789

const val TLS1_CK_DHE_PSK_WITH_RC4_128_SHA: Int = 50331790

const val TLS1_CK_DHE_PSK_WITH_3DES_EDE_CBC_SHA: Int = 50331791

const val TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA: Int = 50331792

const val TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA: Int = 50331793

const val TLS1_CK_RSA_PSK_WITH_RC4_128_SHA: Int = 50331794

const val TLS1_CK_RSA_PSK_WITH_3DES_EDE_CBC_SHA: Int = 50331795

const val TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA: Int = 50331796

const val TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA: Int = 50331797

const val TLS1_CK_PSK_WITH_AES_128_GCM_SHA256: Int = 50331816

const val TLS1_CK_PSK_WITH_AES_256_GCM_SHA384: Int = 50331817

const val TLS1_CK_DHE_PSK_WITH_AES_128_GCM_SHA256: Int = 50331818

const val TLS1_CK_DHE_PSK_WITH_AES_256_GCM_SHA384: Int = 50331819

const val TLS1_CK_RSA_PSK_WITH_AES_128_GCM_SHA256: Int = 50331820

const val TLS1_CK_RSA_PSK_WITH_AES_256_GCM_SHA384: Int = 50331821

const val TLS1_CK_PSK_WITH_AES_128_CBC_SHA256: Int = 50331822

const val TLS1_CK_PSK_WITH_AES_256_CBC_SHA384: Int = 50331823

const val TLS1_CK_PSK_WITH_NULL_SHA256: Int = 50331824

const val TLS1_CK_PSK_WITH_NULL_SHA384: Int = 50331825

const val TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA256: Int = 50331826

const val TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA384: Int = 50331827

const val TLS1_CK_DHE_PSK_WITH_NULL_SHA256: Int = 50331828

const val TLS1_CK_DHE_PSK_WITH_NULL_SHA384: Int = 50331829

const val TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA256: Int = 50331830

const val TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA384: Int = 50331831

const val TLS1_CK_RSA_PSK_WITH_NULL_SHA256: Int = 50331832

const val TLS1_CK_RSA_PSK_WITH_NULL_SHA384: Int = 50331833

const val TLS1_CK_PSK_WITH_NULL_SHA: Int = 50331692

const val TLS1_CK_DHE_PSK_WITH_NULL_SHA: Int = 50331693

const val TLS1_CK_RSA_PSK_WITH_NULL_SHA: Int = 50331694

const val TLS1_CK_RSA_WITH_AES_128_SHA: Int = 50331695

const val TLS1_CK_DH_DSS_WITH_AES_128_SHA: Int = 50331696

const val TLS1_CK_DH_RSA_WITH_AES_128_SHA: Int = 50331697

const val TLS1_CK_DHE_DSS_WITH_AES_128_SHA: Int = 50331698

const val TLS1_CK_DHE_RSA_WITH_AES_128_SHA: Int = 50331699

const val TLS1_CK_ADH_WITH_AES_128_SHA: Int = 50331700

const val TLS1_CK_RSA_WITH_AES_256_SHA: Int = 50331701

const val TLS1_CK_DH_DSS_WITH_AES_256_SHA: Int = 50331702

const val TLS1_CK_DH_RSA_WITH_AES_256_SHA: Int = 50331703

const val TLS1_CK_DHE_DSS_WITH_AES_256_SHA: Int = 50331704

const val TLS1_CK_DHE_RSA_WITH_AES_256_SHA: Int = 50331705

const val TLS1_CK_ADH_WITH_AES_256_SHA: Int = 50331706

const val TLS1_CK_RSA_WITH_NULL_SHA256: Int = 50331707

const val TLS1_CK_RSA_WITH_AES_128_SHA256: Int = 50331708

const val TLS1_CK_RSA_WITH_AES_256_SHA256: Int = 50331709

const val TLS1_CK_DH_DSS_WITH_AES_128_SHA256: Int = 50331710

const val TLS1_CK_DH_RSA_WITH_AES_128_SHA256: Int = 50331711

const val TLS1_CK_DHE_DSS_WITH_AES_128_SHA256: Int = 50331712

const val TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA: Int = 50331713

const val TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA: Int = 50331714

const val TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA: Int = 50331715

const val TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: Int = 50331716

const val TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: Int = 50331717

const val TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA: Int = 50331718

const val TLS1_CK_DHE_RSA_WITH_AES_128_SHA256: Int = 50331751

const val TLS1_CK_DH_DSS_WITH_AES_256_SHA256: Int = 50331752

const val TLS1_CK_DH_RSA_WITH_AES_256_SHA256: Int = 50331753

const val TLS1_CK_DHE_DSS_WITH_AES_256_SHA256: Int = 50331754

const val TLS1_CK_DHE_RSA_WITH_AES_256_SHA256: Int = 50331755

const val TLS1_CK_ADH_WITH_AES_128_SHA256: Int = 50331756

const val TLS1_CK_ADH_WITH_AES_256_SHA256: Int = 50331757

const val TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA: Int = 50331780

const val TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA: Int = 50331781

const val TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA: Int = 50331782

const val TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: Int = 50331783

const val TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: Int = 50331784

const val TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA: Int = 50331785

const val TLS1_CK_RSA_WITH_SEED_SHA: Int = 50331798

const val TLS1_CK_DH_DSS_WITH_SEED_SHA: Int = 50331799

const val TLS1_CK_DH_RSA_WITH_SEED_SHA: Int = 50331800

const val TLS1_CK_DHE_DSS_WITH_SEED_SHA: Int = 50331801

const val TLS1_CK_DHE_RSA_WITH_SEED_SHA: Int = 50331802

const val TLS1_CK_ADH_WITH_SEED_SHA: Int = 50331803

const val TLS1_CK_RSA_WITH_AES_128_GCM_SHA256: Int = 50331804

const val TLS1_CK_RSA_WITH_AES_256_GCM_SHA384: Int = 50331805

const val TLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256: Int = 50331806

const val TLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384: Int = 50331807

const val TLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256: Int = 50331808

const val TLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384: Int = 50331809

const val TLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256: Int = 50331810

const val TLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384: Int = 50331811

const val TLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256: Int = 50331812

const val TLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384: Int = 50331813

const val TLS1_CK_ADH_WITH_AES_128_GCM_SHA256: Int = 50331814

const val TLS1_CK_ADH_WITH_AES_256_GCM_SHA384: Int = 50331815

const val TLS1_CK_RSA_WITH_AES_128_CCM: Int = 50380956

const val TLS1_CK_RSA_WITH_AES_256_CCM: Int = 50380957

const val TLS1_CK_DHE_RSA_WITH_AES_128_CCM: Int = 50380958

const val TLS1_CK_DHE_RSA_WITH_AES_256_CCM: Int = 50380959

const val TLS1_CK_RSA_WITH_AES_128_CCM_8: Int = 50380960

const val TLS1_CK_RSA_WITH_AES_256_CCM_8: Int = 50380961

const val TLS1_CK_DHE_RSA_WITH_AES_128_CCM_8: Int = 50380962

const val TLS1_CK_DHE_RSA_WITH_AES_256_CCM_8: Int = 50380963

const val TLS1_CK_PSK_WITH_AES_128_CCM: Int = 50380964

const val TLS1_CK_PSK_WITH_AES_256_CCM: Int = 50380965

const val TLS1_CK_DHE_PSK_WITH_AES_128_CCM: Int = 50380966

const val TLS1_CK_DHE_PSK_WITH_AES_256_CCM: Int = 50380967

const val TLS1_CK_PSK_WITH_AES_128_CCM_8: Int = 50380968

const val TLS1_CK_PSK_WITH_AES_256_CCM_8: Int = 50380969

const val TLS1_CK_DHE_PSK_WITH_AES_128_CCM_8: Int = 50380970

const val TLS1_CK_DHE_PSK_WITH_AES_256_CCM_8: Int = 50380971

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM: Int = 50380972

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM: Int = 50380973

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM_8: Int = 50380974

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM_8: Int = 50380975

const val TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50331834

const val TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256: Int = 50331835

const val TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50331836

const val TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: Int = 50331837

const val TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50331838

const val TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA256: Int = 50331839

const val TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA256: Int = 50331840

const val TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256: Int = 50331841

const val TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256: Int = 50331842

const val TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: Int = 50331843

const val TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: Int = 50331844

const val TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA256: Int = 50331845

const val TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA: Int = 50380801

const val TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA: Int = 50380802

const val TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA: Int = 50380803

const val TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA: Int = 50380804

const val TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA: Int = 50380805

const val TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA: Int = 50380806

const val TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA: Int = 50380807

const val TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: Int = 50380808

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: Int = 50380809

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: Int = 50380810

const val TLS1_CK_ECDH_RSA_WITH_NULL_SHA: Int = 50380811

const val TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA: Int = 50380812

const val TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA: Int = 50380813

const val TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA: Int = 50380814

const val TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA: Int = 50380815

const val TLS1_CK_ECDHE_RSA_WITH_NULL_SHA: Int = 50380816

const val TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA: Int = 50380817

const val TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA: Int = 50380818

const val TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA: Int = 50380819

const val TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA: Int = 50380820

const val TLS1_CK_ECDH_anon_WITH_NULL_SHA: Int = 50380821

const val TLS1_CK_ECDH_anon_WITH_RC4_128_SHA: Int = 50380822

const val TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA: Int = 50380823

const val TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA: Int = 50380824

const val TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA: Int = 50380825

const val TLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA: Int = 50380826

const val TLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: Int = 50380827

const val TLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: Int = 50380828

const val TLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA: Int = 50380829

const val TLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: Int = 50380830

const val TLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: Int = 50380831

const val TLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA: Int = 50380832

const val TLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: Int = 50380833

const val TLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: Int = 50380834

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256: Int = 50380835

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384: Int = 50380836

const val TLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256: Int = 50380837

const val TLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384: Int = 50380838

const val TLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256: Int = 50380839

const val TLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384: Int = 50380840

const val TLS1_CK_ECDH_RSA_WITH_AES_128_SHA256: Int = 50380841

const val TLS1_CK_ECDH_RSA_WITH_AES_256_SHA384: Int = 50380842

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: Int = 50380843

const val TLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: Int = 50380844

const val TLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: Int = 50380845

const val TLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: Int = 50380846

const val TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256: Int = 50380847

const val TLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384: Int = 50380848

const val TLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256: Int = 50380849

const val TLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384: Int = 50380850

const val TLS1_CK_ECDHE_PSK_WITH_RC4_128_SHA: Int = 50380851

const val TLS1_CK_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: Int = 50380852

const val TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA: Int = 50380853

const val TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA: Int = 50380854

const val TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA256: Int = 50380855

const val TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA384: Int = 50380856

const val TLS1_CK_ECDHE_PSK_WITH_NULL_SHA: Int = 50380857

const val TLS1_CK_ECDHE_PSK_WITH_NULL_SHA256: Int = 50380858

const val TLS1_CK_ECDHE_PSK_WITH_NULL_SHA384: Int = 50380859

const val TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380914

const val TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380915

const val TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380916

const val TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380917

const val TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380918

const val TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380919

const val TLS1_CK_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380920

const val TLS1_CK_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380921

const val TLS1_CK_PSK_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380948

const val TLS1_CK_PSK_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380949

const val TLS1_CK_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380950

const val TLS1_CK_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380951

const val TLS1_CK_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380952

const val TLS1_CK_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380953

const val TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: Int = 50380954

const val TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: Int = 50380955

const val TLS1_CK_ECDHE_RSA_WITH_CHACHA20_POLY1305: Int = 50384040

const val TLS1_CK_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: Int = 50384041

const val TLS1_CK_DHE_RSA_WITH_CHACHA20_POLY1305: Int = 50384042

const val TLS1_CK_PSK_WITH_CHACHA20_POLY1305: Int = 50384043

const val TLS1_CK_ECDHE_PSK_WITH_CHACHA20_POLY1305: Int = 50384044

const val TLS1_CK_DHE_PSK_WITH_CHACHA20_POLY1305: Int = 50384045

const val TLS1_CK_RSA_PSK_WITH_CHACHA20_POLY1305: Int = 50384046

const val TLS1_3_CK_AES_128_GCM_SHA256: Int = 50336513

const val TLS1_3_CK_AES_256_GCM_SHA384: Int = 50336514

const val TLS1_3_CK_CHACHA20_POLY1305_SHA256: Int = 50336515

const val TLS1_3_CK_AES_128_CCM_SHA256: Int = 50336516

const val TLS1_3_CK_AES_128_CCM_8_SHA256: Int = 50336517

const val TLS1_CK_RSA_WITH_ARIA_128_GCM_SHA256: Int = 50380880

const val TLS1_CK_RSA_WITH_ARIA_256_GCM_SHA384: Int = 50380881

const val TLS1_CK_DHE_RSA_WITH_ARIA_128_GCM_SHA256: Int = 50380882

const val TLS1_CK_DHE_RSA_WITH_ARIA_256_GCM_SHA384: Int = 50380883

const val TLS1_CK_DH_RSA_WITH_ARIA_128_GCM_SHA256: Int = 50380884

const val TLS1_CK_DH_RSA_WITH_ARIA_256_GCM_SHA384: Int = 50380885

const val TLS1_CK_DHE_DSS_WITH_ARIA_128_GCM_SHA256: Int = 50380886

const val TLS1_CK_DHE_DSS_WITH_ARIA_256_GCM_SHA384: Int = 50380887

const val TLS1_CK_DH_DSS_WITH_ARIA_128_GCM_SHA256: Int = 50380888

const val TLS1_CK_DH_DSS_WITH_ARIA_256_GCM_SHA384: Int = 50380889

const val TLS1_CK_DH_anon_WITH_ARIA_128_GCM_SHA256: Int = 50380890

const val TLS1_CK_DH_anon_WITH_ARIA_256_GCM_SHA384: Int = 50380891

const val TLS1_CK_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: Int = 50380892

const val TLS1_CK_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: Int = 50380893

const val TLS1_CK_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: Int = 50380894

const val TLS1_CK_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: Int = 50380895

const val TLS1_CK_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: Int = 50380896

const val TLS1_CK_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: Int = 50380897

const val TLS1_CK_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: Int = 50380898

const val TLS1_CK_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: Int = 50380899

const val TLS1_CK_PSK_WITH_ARIA_128_GCM_SHA256: Int = 50380906

const val TLS1_CK_PSK_WITH_ARIA_256_GCM_SHA384: Int = 50380907

const val TLS1_CK_DHE_PSK_WITH_ARIA_128_GCM_SHA256: Int = 50380908

const val TLS1_CK_DHE_PSK_WITH_ARIA_256_GCM_SHA384: Int = 50380909

const val TLS1_CK_RSA_PSK_WITH_ARIA_128_GCM_SHA256: Int = 50380910

const val TLS1_CK_RSA_PSK_WITH_ARIA_256_GCM_SHA384: Int = 50380911

val TLS1_RFC_RSA_WITH_AES_128_SHA: String get() = "TLS_RSA_WITH_AES_128_CBC_SHA"

val TLS1_RFC_DHE_DSS_WITH_AES_128_SHA: String get() = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"

val TLS1_RFC_DHE_RSA_WITH_AES_128_SHA: String get() = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"

val TLS1_RFC_ADH_WITH_AES_128_SHA: String get() = "TLS_DH_anon_WITH_AES_128_CBC_SHA"

val TLS1_RFC_RSA_WITH_AES_256_SHA: String get() = "TLS_RSA_WITH_AES_256_CBC_SHA"

val TLS1_RFC_DHE_DSS_WITH_AES_256_SHA: String get() = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"

val TLS1_RFC_DHE_RSA_WITH_AES_256_SHA: String get() = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"

val TLS1_RFC_ADH_WITH_AES_256_SHA: String get() = "TLS_DH_anon_WITH_AES_256_CBC_SHA"

val TLS1_RFC_RSA_WITH_NULL_SHA256: String get() = "TLS_RSA_WITH_NULL_SHA256"

val TLS1_RFC_RSA_WITH_AES_128_SHA256: String get() = "TLS_RSA_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_RSA_WITH_AES_256_SHA256: String get() = "TLS_RSA_WITH_AES_256_CBC_SHA256"

val TLS1_RFC_DHE_DSS_WITH_AES_128_SHA256: String get() = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_DHE_RSA_WITH_AES_128_SHA256: String get() = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_DHE_DSS_WITH_AES_256_SHA256: String get() = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"

val TLS1_RFC_DHE_RSA_WITH_AES_256_SHA256: String get() = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"

val TLS1_RFC_ADH_WITH_AES_128_SHA256: String get() = "TLS_DH_anon_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_ADH_WITH_AES_256_SHA256: String get() = "TLS_DH_anon_WITH_AES_256_CBC_SHA256"

val TLS1_RFC_RSA_WITH_AES_128_GCM_SHA256: String get() = "TLS_RSA_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_RSA_WITH_AES_256_GCM_SHA384: String get() = "TLS_RSA_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_DHE_RSA_WITH_AES_128_GCM_SHA256: String get() = "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_DHE_RSA_WITH_AES_256_GCM_SHA384: String get() = "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_DHE_DSS_WITH_AES_128_GCM_SHA256: String get() = "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_DHE_DSS_WITH_AES_256_GCM_SHA384: String get() = "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_ADH_WITH_AES_128_GCM_SHA256: String get() = "TLS_DH_anon_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_ADH_WITH_AES_256_GCM_SHA384: String get() = "TLS_DH_anon_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_RSA_WITH_AES_128_CCM: String get() = "TLS_RSA_WITH_AES_128_CCM"

val TLS1_RFC_RSA_WITH_AES_256_CCM: String get() = "TLS_RSA_WITH_AES_256_CCM"

val TLS1_RFC_DHE_RSA_WITH_AES_128_CCM: String get() = "TLS_DHE_RSA_WITH_AES_128_CCM"

val TLS1_RFC_DHE_RSA_WITH_AES_256_CCM: String get() = "TLS_DHE_RSA_WITH_AES_256_CCM"

val TLS1_RFC_RSA_WITH_AES_128_CCM_8: String get() = "TLS_RSA_WITH_AES_128_CCM_8"

val TLS1_RFC_RSA_WITH_AES_256_CCM_8: String get() = "TLS_RSA_WITH_AES_256_CCM_8"

val TLS1_RFC_DHE_RSA_WITH_AES_128_CCM_8: String get() = "TLS_DHE_RSA_WITH_AES_128_CCM_8"

val TLS1_RFC_DHE_RSA_WITH_AES_256_CCM_8: String get() = "TLS_DHE_RSA_WITH_AES_256_CCM_8"

val TLS1_RFC_PSK_WITH_AES_128_CCM: String get() = "TLS_PSK_WITH_AES_128_CCM"

val TLS1_RFC_PSK_WITH_AES_256_CCM: String get() = "TLS_PSK_WITH_AES_256_CCM"

val TLS1_RFC_DHE_PSK_WITH_AES_128_CCM: String get() = "TLS_DHE_PSK_WITH_AES_128_CCM"

val TLS1_RFC_DHE_PSK_WITH_AES_256_CCM: String get() = "TLS_DHE_PSK_WITH_AES_256_CCM"

val TLS1_RFC_PSK_WITH_AES_128_CCM_8: String get() = "TLS_PSK_WITH_AES_128_CCM_8"

val TLS1_RFC_PSK_WITH_AES_256_CCM_8: String get() = "TLS_PSK_WITH_AES_256_CCM_8"

val TLS1_RFC_DHE_PSK_WITH_AES_128_CCM_8: String get() = "TLS_PSK_DHE_WITH_AES_128_CCM_8"

val TLS1_RFC_DHE_PSK_WITH_AES_256_CCM_8: String get() = "TLS_PSK_DHE_WITH_AES_256_CCM_8"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM: String get() = "TLS_ECDHE_ECDSA_WITH_AES_128_CCM"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM: String get() = "TLS_ECDHE_ECDSA_WITH_AES_256_CCM"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM_8: String get() = "TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM_8: String get() = "TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8"

val TLS1_3_RFC_AES_128_GCM_SHA256: String get() = "TLS_AES_128_GCM_SHA256"

val TLS1_3_RFC_AES_256_GCM_SHA384: String get() = "TLS_AES_256_GCM_SHA384"

val TLS1_3_RFC_CHACHA20_POLY1305_SHA256: String get() = "TLS_CHACHA20_POLY1305_SHA256"

val TLS1_3_RFC_AES_128_CCM_SHA256: String get() = "TLS_AES_128_CCM_SHA256"

val TLS1_3_RFC_AES_128_CCM_8_SHA256: String get() = "TLS_AES_128_CCM_8_SHA256"

val TLS1_RFC_ECDHE_ECDSA_WITH_NULL_SHA: String get() = "TLS_ECDHE_ECDSA_WITH_NULL_SHA"

val TLS1_RFC_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: String get() = "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: String get() = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: String get() = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"

val TLS1_RFC_ECDHE_RSA_WITH_NULL_SHA: String get() = "TLS_ECDHE_RSA_WITH_NULL_SHA"

val TLS1_RFC_ECDHE_RSA_WITH_DES_192_CBC3_SHA: String get() = "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_ECDHE_RSA_WITH_AES_128_CBC_SHA: String get() = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"

val TLS1_RFC_ECDHE_RSA_WITH_AES_256_CBC_SHA: String get() = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"

val TLS1_RFC_ECDH_anon_WITH_NULL_SHA: String get() = "TLS_ECDH_anon_WITH_NULL_SHA"

val TLS1_RFC_ECDH_anon_WITH_DES_192_CBC3_SHA: String get() = "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_ECDH_anon_WITH_AES_128_CBC_SHA: String get() = "TLS_ECDH_anon_WITH_AES_128_CBC_SHA"

val TLS1_RFC_ECDH_anon_WITH_AES_256_CBC_SHA: String get() = "TLS_ECDH_anon_WITH_AES_256_CBC_SHA"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_SHA256: String get() = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_SHA384: String get() = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"

val TLS1_RFC_ECDHE_RSA_WITH_AES_128_SHA256: String get() = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_ECDHE_RSA_WITH_AES_256_SHA384: String get() = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: String get() = "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: String get() = "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_ECDHE_RSA_WITH_AES_128_GCM_SHA256: String get() = "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_ECDHE_RSA_WITH_AES_256_GCM_SHA384: String get() = "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_PSK_WITH_NULL_SHA: String get() = "TLS_PSK_WITH_NULL_SHA"

val TLS1_RFC_DHE_PSK_WITH_NULL_SHA: String get() = "TLS_DHE_PSK_WITH_NULL_SHA"

val TLS1_RFC_RSA_PSK_WITH_NULL_SHA: String get() = "TLS_RSA_PSK_WITH_NULL_SHA"

val TLS1_RFC_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_PSK_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_PSK_WITH_AES_128_CBC_SHA: String get() = "TLS_PSK_WITH_AES_128_CBC_SHA"

val TLS1_RFC_PSK_WITH_AES_256_CBC_SHA: String get() = "TLS_PSK_WITH_AES_256_CBC_SHA"

val TLS1_RFC_DHE_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA: String get() = "TLS_DHE_PSK_WITH_AES_128_CBC_SHA"

val TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA: String get() = "TLS_DHE_PSK_WITH_AES_256_CBC_SHA"

val TLS1_RFC_RSA_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA: String get() = "TLS_RSA_PSK_WITH_AES_128_CBC_SHA"

val TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA: String get() = "TLS_RSA_PSK_WITH_AES_256_CBC_SHA"

val TLS1_RFC_PSK_WITH_AES_128_GCM_SHA256: String get() = "TLS_PSK_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_PSK_WITH_AES_256_GCM_SHA384: String get() = "TLS_PSK_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_DHE_PSK_WITH_AES_128_GCM_SHA256: String get() = "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_DHE_PSK_WITH_AES_256_GCM_SHA384: String get() = "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_RSA_PSK_WITH_AES_128_GCM_SHA256: String get() = "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256"

val TLS1_RFC_RSA_PSK_WITH_AES_256_GCM_SHA384: String get() = "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384"

val TLS1_RFC_PSK_WITH_AES_128_CBC_SHA256: String get() = "TLS_PSK_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_PSK_WITH_AES_256_CBC_SHA384: String get() = "TLS_PSK_WITH_AES_256_CBC_SHA384"

val TLS1_RFC_PSK_WITH_NULL_SHA256: String get() = "TLS_PSK_WITH_NULL_SHA256"

val TLS1_RFC_PSK_WITH_NULL_SHA384: String get() = "TLS_PSK_WITH_NULL_SHA384"

val TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA256: String get() = "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA384: String get() = "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384"

val TLS1_RFC_DHE_PSK_WITH_NULL_SHA256: String get() = "TLS_DHE_PSK_WITH_NULL_SHA256"

val TLS1_RFC_DHE_PSK_WITH_NULL_SHA384: String get() = "TLS_DHE_PSK_WITH_NULL_SHA384"

val TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA256: String get() = "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA384: String get() = "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384"

val TLS1_RFC_RSA_PSK_WITH_NULL_SHA256: String get() = "TLS_RSA_PSK_WITH_NULL_SHA256"

val TLS1_RFC_RSA_PSK_WITH_NULL_SHA384: String get() = "TLS_RSA_PSK_WITH_NULL_SHA384"

val TLS1_RFC_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA: String get() = "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA"

val TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA: String get() = "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA"

val TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA256: String get() = "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256"

val TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA384: String get() = "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384"

val TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA: String get() = "TLS_ECDHE_PSK_WITH_NULL_SHA"

val TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA256: String get() = "TLS_ECDHE_PSK_WITH_NULL_SHA256"

val TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA384: String get() = "TLS_ECDHE_PSK_WITH_NULL_SHA384"

val TLS1_RFC_SRP_SHA_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: String get() = "TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA"

val TLS1_RFC_SRP_SHA_WITH_AES_128_CBC_SHA: String get() = "TLS_SRP_SHA_WITH_AES_128_CBC_SHA"

val TLS1_RFC_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: String get() = "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA"

val TLS1_RFC_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: String get() = "TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA"

val TLS1_RFC_SRP_SHA_WITH_AES_256_CBC_SHA: String get() = "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"

val TLS1_RFC_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: String get() = "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA"

val TLS1_RFC_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: String get() = "TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA"

val TLS1_RFC_DHE_RSA_WITH_CHACHA20_POLY1305: String get() = "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_ECDHE_RSA_WITH_CHACHA20_POLY1305: String get() = "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: String get() = "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_PSK_WITH_CHACHA20_POLY1305: String get() = "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_ECDHE_PSK_WITH_CHACHA20_POLY1305: String get() = "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_DHE_PSK_WITH_CHACHA20_POLY1305: String get() = "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_RSA_PSK_WITH_CHACHA20_POLY1305: String get() = "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256"

val TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA256: String get() = "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256"

val TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: String get() = "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256"

val TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: String get() = "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256"

val TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA256: String get() = "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256"

val TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA: String get() = "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA"

val TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: String get() = "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA"

val TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: String get() = "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA"

val TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA: String get() = "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA"

val TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA: String get() = "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA"

val TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: String get() = "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA"

val TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: String get() = "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA"

val TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA: String get() = "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA"

val TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: String get() = "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"

val TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: String get() = "TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384"

val TLS1_RFC_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384"

val TLS1_RFC_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"

val TLS1_RFC_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384"

val TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"

val TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"

val TLS1_RFC_RSA_WITH_SEED_SHA: String get() = "TLS_RSA_WITH_SEED_CBC_SHA"

val TLS1_RFC_DHE_DSS_WITH_SEED_SHA: String get() = "TLS_DHE_DSS_WITH_SEED_CBC_SHA"

val TLS1_RFC_DHE_RSA_WITH_SEED_SHA: String get() = "TLS_DHE_RSA_WITH_SEED_CBC_SHA"

val TLS1_RFC_ADH_WITH_SEED_SHA: String get() = "TLS_DH_anon_WITH_SEED_CBC_SHA"

val TLS1_RFC_ECDHE_PSK_WITH_RC4_128_SHA: String get() = "TLS_ECDHE_PSK_WITH_RC4_128_SHA"

val TLS1_RFC_ECDH_anon_WITH_RC4_128_SHA: String get() = "TLS_ECDH_anon_WITH_RC4_128_SHA"

val TLS1_RFC_ECDHE_ECDSA_WITH_RC4_128_SHA: String get() = "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA"

val TLS1_RFC_ECDHE_RSA_WITH_RC4_128_SHA: String get() = "TLS_ECDHE_RSA_WITH_RC4_128_SHA"

val TLS1_RFC_PSK_WITH_RC4_128_SHA: String get() = "TLS_PSK_WITH_RC4_128_SHA"

val TLS1_RFC_RSA_PSK_WITH_RC4_128_SHA: String get() = "TLS_RSA_PSK_WITH_RC4_128_SHA"

val TLS1_RFC_DHE_PSK_WITH_RC4_128_SHA: String get() = "TLS_DHE_PSK_WITH_RC4_128_SHA"

val TLS1_RFC_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_RSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_RSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_DHE_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_DHE_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_DH_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_DH_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_DHE_DSS_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_DHE_DSS_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_DH_DSS_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_DH_DSS_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_DH_anon_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_DH_anon_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_DH_anon_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_DH_anon_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_PSK_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_PSK_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_PSK_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_PSK_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_DHE_PSK_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_DHE_PSK_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384"

val TLS1_RFC_RSA_PSK_WITH_ARIA_128_GCM_SHA256: String get() = "TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256"

val TLS1_RFC_RSA_PSK_WITH_ARIA_256_GCM_SHA384: String get() = "TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384"

val TLS1_TXT_DHE_DSS_WITH_RC4_128_SHA: String get() = "DHE\u002DDSS\u002DRC4\u002DSHA"

val TLS1_TXT_PSK_WITH_NULL_SHA: String get() = "PSK\u002DNULL\u002DSHA"

val TLS1_TXT_DHE_PSK_WITH_NULL_SHA: String get() = "DHE\u002DPSK\u002DNULL\u002DSHA"

val TLS1_TXT_RSA_PSK_WITH_NULL_SHA: String get() = "RSA\u002DPSK\u002DNULL\u002DSHA"

val TLS1_TXT_RSA_WITH_AES_128_SHA: String get() = "AES128\u002DSHA"

val TLS1_TXT_DH_DSS_WITH_AES_128_SHA: String get() = "DH\u002DDSS\u002DAES128\u002DSHA"

val TLS1_TXT_DH_RSA_WITH_AES_128_SHA: String get() = "DH\u002DRSA\u002DAES128\u002DSHA"

val TLS1_TXT_DHE_DSS_WITH_AES_128_SHA: String get() = "DHE\u002DDSS\u002DAES128\u002DSHA"

val TLS1_TXT_DHE_RSA_WITH_AES_128_SHA: String get() = "DHE\u002DRSA\u002DAES128\u002DSHA"

val TLS1_TXT_ADH_WITH_AES_128_SHA: String get() = "ADH\u002DAES128\u002DSHA"

val TLS1_TXT_RSA_WITH_AES_256_SHA: String get() = "AES256\u002DSHA"

val TLS1_TXT_DH_DSS_WITH_AES_256_SHA: String get() = "DH\u002DDSS\u002DAES256\u002DSHA"

val TLS1_TXT_DH_RSA_WITH_AES_256_SHA: String get() = "DH\u002DRSA\u002DAES256\u002DSHA"

val TLS1_TXT_DHE_DSS_WITH_AES_256_SHA: String get() = "DHE\u002DDSS\u002DAES256\u002DSHA"

val TLS1_TXT_DHE_RSA_WITH_AES_256_SHA: String get() = "DHE\u002DRSA\u002DAES256\u002DSHA"

val TLS1_TXT_ADH_WITH_AES_256_SHA: String get() = "ADH\u002DAES256\u002DSHA"

val TLS1_TXT_ECDH_ECDSA_WITH_NULL_SHA: String get() = "ECDH\u002DECDSA\u002DNULL\u002DSHA"

val TLS1_TXT_ECDH_ECDSA_WITH_RC4_128_SHA: String get() = "ECDH\u002DECDSA\u002DRC4\u002DSHA"

val TLS1_TXT_ECDH_ECDSA_WITH_DES_192_CBC3_SHA: String get() = "ECDH\u002DECDSA\u002DDES\u002DCBC3\u002DSHA"

val TLS1_TXT_ECDH_ECDSA_WITH_AES_128_CBC_SHA: String get() = "ECDH\u002DECDSA\u002DAES128\u002DSHA"

val TLS1_TXT_ECDH_ECDSA_WITH_AES_256_CBC_SHA: String get() = "ECDH\u002DECDSA\u002DAES256\u002DSHA"

val TLS1_TXT_ECDHE_ECDSA_WITH_NULL_SHA: String get() = "ECDHE\u002DECDSA\u002DNULL\u002DSHA"

val TLS1_TXT_ECDHE_ECDSA_WITH_RC4_128_SHA: String get() = "ECDHE\u002DECDSA\u002DRC4\u002DSHA"

val TLS1_TXT_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: String get() = "ECDHE\u002DECDSA\u002DDES\u002DCBC3\u002DSHA"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: String get() = "ECDHE\u002DECDSA\u002DAES128\u002DSHA"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: String get() = "ECDHE\u002DECDSA\u002DAES256\u002DSHA"

val TLS1_TXT_ECDH_RSA_WITH_NULL_SHA: String get() = "ECDH\u002DRSA\u002DNULL\u002DSHA"

val TLS1_TXT_ECDH_RSA_WITH_RC4_128_SHA: String get() = "ECDH\u002DRSA\u002DRC4\u002DSHA"

val TLS1_TXT_ECDH_RSA_WITH_DES_192_CBC3_SHA: String get() = "ECDH\u002DRSA\u002DDES\u002DCBC3\u002DSHA"

val TLS1_TXT_ECDH_RSA_WITH_AES_128_CBC_SHA: String get() = "ECDH\u002DRSA\u002DAES128\u002DSHA"

val TLS1_TXT_ECDH_RSA_WITH_AES_256_CBC_SHA: String get() = "ECDH\u002DRSA\u002DAES256\u002DSHA"

val TLS1_TXT_ECDHE_RSA_WITH_NULL_SHA: String get() = "ECDHE\u002DRSA\u002DNULL\u002DSHA"

val TLS1_TXT_ECDHE_RSA_WITH_RC4_128_SHA: String get() = "ECDHE\u002DRSA\u002DRC4\u002DSHA"

val TLS1_TXT_ECDHE_RSA_WITH_DES_192_CBC3_SHA: String get() = "ECDHE\u002DRSA\u002DDES\u002DCBC3\u002DSHA"

val TLS1_TXT_ECDHE_RSA_WITH_AES_128_CBC_SHA: String get() = "ECDHE\u002DRSA\u002DAES128\u002DSHA"

val TLS1_TXT_ECDHE_RSA_WITH_AES_256_CBC_SHA: String get() = "ECDHE\u002DRSA\u002DAES256\u002DSHA"

val TLS1_TXT_ECDH_anon_WITH_NULL_SHA: String get() = "AECDH\u002DNULL\u002DSHA"

val TLS1_TXT_ECDH_anon_WITH_RC4_128_SHA: String get() = "AECDH\u002DRC4\u002DSHA"

val TLS1_TXT_ECDH_anon_WITH_DES_192_CBC3_SHA: String get() = "AECDH\u002DDES\u002DCBC3\u002DSHA"

val TLS1_TXT_ECDH_anon_WITH_AES_128_CBC_SHA: String get() = "AECDH\u002DAES128\u002DSHA"

val TLS1_TXT_ECDH_anon_WITH_AES_256_CBC_SHA: String get() = "AECDH\u002DAES256\u002DSHA"

val TLS1_TXT_PSK_WITH_RC4_128_SHA: String get() = "PSK\u002DRC4\u002DSHA"

val TLS1_TXT_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "PSK\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_PSK_WITH_AES_128_CBC_SHA: String get() = "PSK\u002DAES128\u002DCBC\u002DSHA"

val TLS1_TXT_PSK_WITH_AES_256_CBC_SHA: String get() = "PSK\u002DAES256\u002DCBC\u002DSHA"

val TLS1_TXT_DHE_PSK_WITH_RC4_128_SHA: String get() = "DHE\u002DPSK\u002DRC4\u002DSHA"

val TLS1_TXT_DHE_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "DHE\u002DPSK\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA: String get() = "DHE\u002DPSK\u002DAES128\u002DCBC\u002DSHA"

val TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA: String get() = "DHE\u002DPSK\u002DAES256\u002DCBC\u002DSHA"

val TLS1_TXT_RSA_PSK_WITH_RC4_128_SHA: String get() = "RSA\u002DPSK\u002DRC4\u002DSHA"

val TLS1_TXT_RSA_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "RSA\u002DPSK\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA: String get() = "RSA\u002DPSK\u002DAES128\u002DCBC\u002DSHA"

val TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA: String get() = "RSA\u002DPSK\u002DAES256\u002DCBC\u002DSHA"

val TLS1_TXT_PSK_WITH_AES_128_GCM_SHA256: String get() = "PSK\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_PSK_WITH_AES_256_GCM_SHA384: String get() = "PSK\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_DHE_PSK_WITH_AES_128_GCM_SHA256: String get() = "DHE\u002DPSK\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_DHE_PSK_WITH_AES_256_GCM_SHA384: String get() = "DHE\u002DPSK\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_RSA_PSK_WITH_AES_128_GCM_SHA256: String get() = "RSA\u002DPSK\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_RSA_PSK_WITH_AES_256_GCM_SHA384: String get() = "RSA\u002DPSK\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_PSK_WITH_AES_128_CBC_SHA256: String get() = "PSK\u002DAES128\u002DCBC\u002DSHA256"

val TLS1_TXT_PSK_WITH_AES_256_CBC_SHA384: String get() = "PSK\u002DAES256\u002DCBC\u002DSHA384"

val TLS1_TXT_PSK_WITH_NULL_SHA256: String get() = "PSK\u002DNULL\u002DSHA256"

val TLS1_TXT_PSK_WITH_NULL_SHA384: String get() = "PSK\u002DNULL\u002DSHA384"

val TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA256: String get() = "DHE\u002DPSK\u002DAES128\u002DCBC\u002DSHA256"

val TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA384: String get() = "DHE\u002DPSK\u002DAES256\u002DCBC\u002DSHA384"

val TLS1_TXT_DHE_PSK_WITH_NULL_SHA256: String get() = "DHE\u002DPSK\u002DNULL\u002DSHA256"

val TLS1_TXT_DHE_PSK_WITH_NULL_SHA384: String get() = "DHE\u002DPSK\u002DNULL\u002DSHA384"

val TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA256: String get() = "RSA\u002DPSK\u002DAES128\u002DCBC\u002DSHA256"

val TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA384: String get() = "RSA\u002DPSK\u002DAES256\u002DCBC\u002DSHA384"

val TLS1_TXT_RSA_PSK_WITH_NULL_SHA256: String get() = "RSA\u002DPSK\u002DNULL\u002DSHA256"

val TLS1_TXT_RSA_PSK_WITH_NULL_SHA384: String get() = "RSA\u002DPSK\u002DNULL\u002DSHA384"

val TLS1_TXT_SRP_SHA_WITH_3DES_EDE_CBC_SHA: String get() = "SRP\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: String get() = "SRP\u002DRSA\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: String get() = "SRP\u002DDSS\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_WITH_AES_128_CBC_SHA: String get() = "SRP\u002DAES\u002D128\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: String get() = "SRP\u002DRSA\u002DAES\u002D128\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: String get() = "SRP\u002DDSS\u002DAES\u002D128\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_WITH_AES_256_CBC_SHA: String get() = "SRP\u002DAES\u002D256\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: String get() = "SRP\u002DRSA\u002DAES\u002D256\u002DCBC\u002DSHA"

val TLS1_TXT_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: String get() = "SRP\u002DDSS\u002DAES\u002D256\u002DCBC\u002DSHA"

val TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA: String get() = "CAMELLIA128\u002DSHA"

val TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA: String get() = "DH\u002DDSS\u002DCAMELLIA128\u002DSHA"

val TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA: String get() = "DH\u002DRSA\u002DCAMELLIA128\u002DSHA"

val TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: String get() = "DHE\u002DDSS\u002DCAMELLIA128\u002DSHA"

val TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: String get() = "DHE\u002DRSA\u002DCAMELLIA128\u002DSHA"

val TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA: String get() = "ADH\u002DCAMELLIA128\u002DSHA"

val TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA: String get() = "CAMELLIA256\u002DSHA"

val TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA: String get() = "DH\u002DDSS\u002DCAMELLIA256\u002DSHA"

val TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA: String get() = "DH\u002DRSA\u002DCAMELLIA256\u002DSHA"

val TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: String get() = "DHE\u002DDSS\u002DCAMELLIA256\u002DSHA"

val TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: String get() = "DHE\u002DRSA\u002DCAMELLIA256\u002DSHA"

val TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA: String get() = "ADH\u002DCAMELLIA256\u002DSHA"

val TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "CAMELLIA128\u002DSHA256"

val TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256: String get() = "DH\u002DDSS\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "DH\u002DRSA\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: String get() = "DHE\u002DDSS\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "DHE\u002DRSA\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA256: String get() = "ADH\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA256: String get() = "CAMELLIA256\u002DSHA256"

val TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256: String get() = "DH\u002DDSS\u002DCAMELLIA256\u002DSHA256"

val TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256: String get() = "DH\u002DRSA\u002DCAMELLIA256\u002DSHA256"

val TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: String get() = "DHE\u002DDSS\u002DCAMELLIA256\u002DSHA256"

val TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: String get() = "DHE\u002DRSA\u002DCAMELLIA256\u002DSHA256"

val TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA256: String get() = "ADH\u002DCAMELLIA256\u002DSHA256"

val TLS1_TXT_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "PSK\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "PSK\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "DHE\u002DPSK\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "DHE\u002DPSK\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "RSA\u002DPSK\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "RSA\u002DPSK\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: String get() = "ECDHE\u002DPSK\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: String get() = "ECDHE\u002DPSK\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_RSA_WITH_SEED_SHA: String get() = "SEED\u002DSHA"

val TLS1_TXT_DH_DSS_WITH_SEED_SHA: String get() = "DH\u002DDSS\u002DSEED\u002DSHA"

val TLS1_TXT_DH_RSA_WITH_SEED_SHA: String get() = "DH\u002DRSA\u002DSEED\u002DSHA"

val TLS1_TXT_DHE_DSS_WITH_SEED_SHA: String get() = "DHE\u002DDSS\u002DSEED\u002DSHA"

val TLS1_TXT_DHE_RSA_WITH_SEED_SHA: String get() = "DHE\u002DRSA\u002DSEED\u002DSHA"

val TLS1_TXT_ADH_WITH_SEED_SHA: String get() = "ADH\u002DSEED\u002DSHA"

val TLS1_TXT_RSA_WITH_NULL_SHA256: String get() = "NULL\u002DSHA256"

val TLS1_TXT_RSA_WITH_AES_128_SHA256: String get() = "AES128\u002DSHA256"

val TLS1_TXT_RSA_WITH_AES_256_SHA256: String get() = "AES256\u002DSHA256"

val TLS1_TXT_DH_DSS_WITH_AES_128_SHA256: String get() = "DH\u002DDSS\u002DAES128\u002DSHA256"

val TLS1_TXT_DH_RSA_WITH_AES_128_SHA256: String get() = "DH\u002DRSA\u002DAES128\u002DSHA256"

val TLS1_TXT_DHE_DSS_WITH_AES_128_SHA256: String get() = "DHE\u002DDSS\u002DAES128\u002DSHA256"

val TLS1_TXT_DHE_RSA_WITH_AES_128_SHA256: String get() = "DHE\u002DRSA\u002DAES128\u002DSHA256"

val TLS1_TXT_DH_DSS_WITH_AES_256_SHA256: String get() = "DH\u002DDSS\u002DAES256\u002DSHA256"

val TLS1_TXT_DH_RSA_WITH_AES_256_SHA256: String get() = "DH\u002DRSA\u002DAES256\u002DSHA256"

val TLS1_TXT_DHE_DSS_WITH_AES_256_SHA256: String get() = "DHE\u002DDSS\u002DAES256\u002DSHA256"

val TLS1_TXT_DHE_RSA_WITH_AES_256_SHA256: String get() = "DHE\u002DRSA\u002DAES256\u002DSHA256"

val TLS1_TXT_ADH_WITH_AES_128_SHA256: String get() = "ADH\u002DAES128\u002DSHA256"

val TLS1_TXT_ADH_WITH_AES_256_SHA256: String get() = "ADH\u002DAES256\u002DSHA256"

val TLS1_TXT_RSA_WITH_AES_128_GCM_SHA256: String get() = "AES128\u002DGCM\u002DSHA256"

val TLS1_TXT_RSA_WITH_AES_256_GCM_SHA384: String get() = "AES256\u002DGCM\u002DSHA384"

val TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256: String get() = "DHE\u002DRSA\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_DHE_RSA_WITH_AES_256_GCM_SHA384: String get() = "DHE\u002DRSA\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_DH_RSA_WITH_AES_128_GCM_SHA256: String get() = "DH\u002DRSA\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_DH_RSA_WITH_AES_256_GCM_SHA384: String get() = "DH\u002DRSA\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_DHE_DSS_WITH_AES_128_GCM_SHA256: String get() = "DHE\u002DDSS\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_DHE_DSS_WITH_AES_256_GCM_SHA384: String get() = "DHE\u002DDSS\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_DH_DSS_WITH_AES_128_GCM_SHA256: String get() = "DH\u002DDSS\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_DH_DSS_WITH_AES_256_GCM_SHA384: String get() = "DH\u002DDSS\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_ADH_WITH_AES_128_GCM_SHA256: String get() = "ADH\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_ADH_WITH_AES_256_GCM_SHA384: String get() = "ADH\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_RSA_WITH_AES_128_CCM: String get() = "AES128\u002DCCM"

val TLS1_TXT_RSA_WITH_AES_256_CCM: String get() = "AES256\u002DCCM"

val TLS1_TXT_DHE_RSA_WITH_AES_128_CCM: String get() = "DHE\u002DRSA\u002DAES128\u002DCCM"

val TLS1_TXT_DHE_RSA_WITH_AES_256_CCM: String get() = "DHE\u002DRSA\u002DAES256\u002DCCM"

val TLS1_TXT_RSA_WITH_AES_128_CCM_8: String get() = "AES128\u002DCCM8"

val TLS1_TXT_RSA_WITH_AES_256_CCM_8: String get() = "AES256\u002DCCM8"

val TLS1_TXT_DHE_RSA_WITH_AES_128_CCM_8: String get() = "DHE\u002DRSA\u002DAES128\u002DCCM8"

val TLS1_TXT_DHE_RSA_WITH_AES_256_CCM_8: String get() = "DHE\u002DRSA\u002DAES256\u002DCCM8"

val TLS1_TXT_PSK_WITH_AES_128_CCM: String get() = "PSK\u002DAES128\u002DCCM"

val TLS1_TXT_PSK_WITH_AES_256_CCM: String get() = "PSK\u002DAES256\u002DCCM"

val TLS1_TXT_DHE_PSK_WITH_AES_128_CCM: String get() = "DHE\u002DPSK\u002DAES128\u002DCCM"

val TLS1_TXT_DHE_PSK_WITH_AES_256_CCM: String get() = "DHE\u002DPSK\u002DAES256\u002DCCM"

val TLS1_TXT_PSK_WITH_AES_128_CCM_8: String get() = "PSK\u002DAES128\u002DCCM8"

val TLS1_TXT_PSK_WITH_AES_256_CCM_8: String get() = "PSK\u002DAES256\u002DCCM8"

val TLS1_TXT_DHE_PSK_WITH_AES_128_CCM_8: String get() = "DHE\u002DPSK\u002DAES128\u002DCCM8"

val TLS1_TXT_DHE_PSK_WITH_AES_256_CCM_8: String get() = "DHE\u002DPSK\u002DAES256\u002DCCM8"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM: String get() = "ECDHE\u002DECDSA\u002DAES128\u002DCCM"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM: String get() = "ECDHE\u002DECDSA\u002DAES256\u002DCCM"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM_8: String get() = "ECDHE\u002DECDSA\u002DAES128\u002DCCM8"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM_8: String get() = "ECDHE\u002DECDSA\u002DAES256\u002DCCM8"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_SHA256: String get() = "ECDHE\u002DECDSA\u002DAES128\u002DSHA256"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_SHA384: String get() = "ECDHE\u002DECDSA\u002DAES256\u002DSHA384"

val TLS1_TXT_ECDH_ECDSA_WITH_AES_128_SHA256: String get() = "ECDH\u002DECDSA\u002DAES128\u002DSHA256"

val TLS1_TXT_ECDH_ECDSA_WITH_AES_256_SHA384: String get() = "ECDH\u002DECDSA\u002DAES256\u002DSHA384"

val TLS1_TXT_ECDHE_RSA_WITH_AES_128_SHA256: String get() = "ECDHE\u002DRSA\u002DAES128\u002DSHA256"

val TLS1_TXT_ECDHE_RSA_WITH_AES_256_SHA384: String get() = "ECDHE\u002DRSA\u002DAES256\u002DSHA384"

val TLS1_TXT_ECDH_RSA_WITH_AES_128_SHA256: String get() = "ECDH\u002DRSA\u002DAES128\u002DSHA256"

val TLS1_TXT_ECDH_RSA_WITH_AES_256_SHA384: String get() = "ECDH\u002DRSA\u002DAES256\u002DSHA384"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: String get() = "ECDHE\u002DECDSA\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: String get() = "ECDHE\u002DECDSA\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: String get() = "ECDH\u002DECDSA\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: String get() = "ECDH\u002DECDSA\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256: String get() = "ECDHE\u002DRSA\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDHE_RSA_WITH_AES_256_GCM_SHA384: String get() = "ECDHE\u002DRSA\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDH_RSA_WITH_AES_128_GCM_SHA256: String get() = "ECDH\u002DRSA\u002DAES128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDH_RSA_WITH_AES_256_GCM_SHA384: String get() = "ECDH\u002DRSA\u002DAES256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDHE_PSK_WITH_RC4_128_SHA: String get() = "ECDHE\u002DPSK\u002DRC4\u002DSHA"

val TLS1_TXT_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: String get() = "ECDHE\u002DPSK\u002D3DES\u002DEDE\u002DCBC\u002DSHA"

val TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA: String get() = "ECDHE\u002DPSK\u002DAES128\u002DCBC\u002DSHA"

val TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA: String get() = "ECDHE\u002DPSK\u002DAES256\u002DCBC\u002DSHA"

val TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA256: String get() = "ECDHE\u002DPSK\u002DAES128\u002DCBC\u002DSHA256"

val TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA384: String get() = "ECDHE\u002DPSK\u002DAES256\u002DCBC\u002DSHA384"

val TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA: String get() = "ECDHE\u002DPSK\u002DNULL\u002DSHA"

val TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA256: String get() = "ECDHE\u002DPSK\u002DNULL\u002DSHA256"

val TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA384: String get() = "ECDHE\u002DPSK\u002DNULL\u002DSHA384"

val TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "ECDHE\u002DECDSA\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: String get() = "ECDHE\u002DECDSA\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "ECDH\u002DECDSA\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: String get() = "ECDH\u002DECDSA\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "ECDHE\u002DRSA\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: String get() = "ECDHE\u002DRSA\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256: String get() = "ECDH\u002DRSA\u002DCAMELLIA128\u002DSHA256"

val TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384: String get() = "ECDH\u002DRSA\u002DCAMELLIA256\u002DSHA384"

val TLS1_TXT_ECDHE_RSA_WITH_CHACHA20_POLY1305: String get() = "ECDHE\u002DRSA\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: String get() = "ECDHE\u002DECDSA\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_DHE_RSA_WITH_CHACHA20_POLY1305: String get() = "DHE\u002DRSA\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_PSK_WITH_CHACHA20_POLY1305: String get() = "PSK\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_ECDHE_PSK_WITH_CHACHA20_POLY1305: String get() = "ECDHE\u002DPSK\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_DHE_PSK_WITH_CHACHA20_POLY1305: String get() = "DHE\u002DPSK\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_RSA_PSK_WITH_CHACHA20_POLY1305: String get() = "RSA\u002DPSK\u002DCHACHA20\u002DPOLY1305"

val TLS1_TXT_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "ARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "ARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_DHE_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "DHE\u002DRSA\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_DHE_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "DHE\u002DRSA\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_DH_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "DH\u002DRSA\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_DH_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "DH\u002DRSA\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_DHE_DSS_WITH_ARIA_128_GCM_SHA256: String get() = "DHE\u002DDSS\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_DHE_DSS_WITH_ARIA_256_GCM_SHA384: String get() = "DHE\u002DDSS\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_DH_DSS_WITH_ARIA_128_GCM_SHA256: String get() = "DH\u002DDSS\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_DH_DSS_WITH_ARIA_256_GCM_SHA384: String get() = "DH\u002DDSS\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_DH_anon_WITH_ARIA_128_GCM_SHA256: String get() = "ADH\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_DH_anon_WITH_ARIA_256_GCM_SHA384: String get() = "ADH\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: String get() = "ECDHE\u002DECDSA\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: String get() = "ECDHE\u002DECDSA\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: String get() = "ECDH\u002DECDSA\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: String get() = "ECDH\u002DECDSA\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "ECDHE\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "ECDHE\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: String get() = "ECDH\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: String get() = "ECDH\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_PSK_WITH_ARIA_128_GCM_SHA256: String get() = "PSK\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_PSK_WITH_ARIA_256_GCM_SHA384: String get() = "PSK\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_DHE_PSK_WITH_ARIA_128_GCM_SHA256: String get() = "DHE\u002DPSK\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_DHE_PSK_WITH_ARIA_256_GCM_SHA384: String get() = "DHE\u002DPSK\u002DARIA256\u002DGCM\u002DSHA384"

val TLS1_TXT_RSA_PSK_WITH_ARIA_128_GCM_SHA256: String get() = "RSA\u002DPSK\u002DARIA128\u002DGCM\u002DSHA256"

val TLS1_TXT_RSA_PSK_WITH_ARIA_256_GCM_SHA384: String get() = "RSA\u002DPSK\u002DARIA256\u002DGCM\u002DSHA384"

const val TLS_CT_RSA_SIGN: Int = 1

const val TLS_CT_DSS_SIGN: Int = 2

const val TLS_CT_RSA_FIXED_DH: Int = 3

const val TLS_CT_DSS_FIXED_DH: Int = 4

const val TLS_CT_ECDSA_SIGN: Int = 64

const val TLS_CT_RSA_FIXED_ECDH: Int = 65

const val TLS_CT_ECDSA_FIXED_ECDH: Int = 66

const val TLS_CT_GOST01_SIGN: Int = 22

const val TLS_CT_GOST12_SIGN: Int = 238

const val TLS_CT_GOST12_512_SIGN: Int = 239

const val TLS_CT_NUMBER: Int = 10

const val TLS1_FINISH_MAC_LENGTH: Int = 12

const val TLS_MD_MAX_CONST_SIZE: Int = 22

val TLS_MD_CLIENT_FINISH_CONST: String get() = "client finished"

const val TLS_MD_CLIENT_FINISH_CONST_SIZE: Int = 15

val TLS_MD_SERVER_FINISH_CONST: String get() = "server finished"

const val TLS_MD_SERVER_FINISH_CONST_SIZE: Int = 15

val TLS_MD_KEY_EXPANSION_CONST: String get() = "key expansion"

const val TLS_MD_KEY_EXPANSION_CONST_SIZE: Int = 13

val TLS_MD_CLIENT_WRITE_KEY_CONST: String get() = "client write key"

const val TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE: Int = 16

val TLS_MD_SERVER_WRITE_KEY_CONST: String get() = "server write key"

const val TLS_MD_SERVER_WRITE_KEY_CONST_SIZE: Int = 16

val TLS_MD_IV_BLOCK_CONST: String get() = "IV block"

const val TLS_MD_IV_BLOCK_CONST_SIZE: Int = 8

val TLS_MD_MASTER_SECRET_CONST: String get() = "master secret"

const val TLS_MD_MASTER_SECRET_CONST_SIZE: Int = 13

val TLS_MD_EXTENDED_MASTER_SECRET_CONST: String get() = "extended master secret"

const val TLS_MD_EXTENDED_MASTER_SECRET_CONST_SIZE: Int = 22

const val DTLS1_VERSION: Int = 65279

const val DTLS1_2_VERSION: Int = 65277

const val DTLS_MIN_VERSION: Int = 65279

const val DTLS_MAX_VERSION: Int = 65277

const val DTLS1_VERSION_MAJOR: Int = 254

const val DTLS1_BAD_VER: Int = 256

const val DTLS_ANY_VERSION: Int = 131071

const val DTLS1_COOKIE_LENGTH: Int = 256

const val DTLS1_RT_HEADER_LENGTH: Int = 13

const val DTLS1_HM_HEADER_LENGTH: Int = 12

const val DTLS1_HM_BAD_FRAGMENT: Int = -2

const val DTLS1_HM_FRAGMENT_RETRY: Int = -3

const val DTLS1_CCS_HEADER_LENGTH: Int = 1

const val DTLS1_AL_HEADER_LENGTH: Int = 2

const val DTLS1_TMO_READ_COUNT: Int = 2

const val DTLS1_TMO_WRITE_COUNT: Int = 2

const val DTLS1_TMO_ALERT_COUNT: Int = 12

const val SRTP_AES128_CM_SHA1_80: Int = 1

const val SRTP_AES128_CM_SHA1_32: Int = 2

const val SRTP_AES128_F8_SHA1_80: Int = 3

const val SRTP_AES128_F8_SHA1_32: Int = 4

const val SRTP_NULL_SHA1_80: Int = 5

const val SRTP_NULL_SHA1_32: Int = 6

const val SRTP_AEAD_AES_128_GCM: Int = 7

const val SRTP_AEAD_AES_256_GCM: Int = 8

const val SSL_KEY_UPDATE_NONE: Int = -1

const val SSL_KEY_UPDATE_NOT_REQUESTED: Int = 0

const val SSL_KEY_UPDATE_REQUESTED: Int = 1

const val SSL_ST_CONNECT: Int = 4096

const val SSL_ST_ACCEPT: Int = 8192

const val SSL_ST_MASK: Int = 4095

const val SSL_CB_LOOP: Int = 1

const val SSL_CB_EXIT: Int = 2

const val SSL_CB_READ: Int = 4

const val SSL_CB_WRITE: Int = 8

const val SSL_CB_ALERT: Int = 16384

const val SSL_CB_READ_ALERT: Int = 16388

const val SSL_CB_WRITE_ALERT: Int = 16392

const val SSL_CB_ACCEPT_LOOP: Int = 8193

const val SSL_CB_ACCEPT_EXIT: Int = 8194

const val SSL_CB_CONNECT_LOOP: Int = 4097

const val SSL_CB_CONNECT_EXIT: Int = 4098

const val SSL_CB_HANDSHAKE_START: Int = 16

const val SSL_CB_HANDSHAKE_DONE: Int = 32

const val SSL_ST_READ_HEADER: Int = 240

const val SSL_ST_READ_BODY: Int = 241

const val SSL_ST_READ_DONE: Int = 242

const val SSL_VERIFY_NONE: Int = 0

const val SSL_VERIFY_PEER: Int = 1

const val SSL_VERIFY_FAIL_IF_NO_PEER_CERT: Int = 2

const val SSL_VERIFY_CLIENT_ONCE: Int = 4

const val SSL_VERIFY_POST_HANDSHAKE: Int = 8

const val SSL_AD_REASON_OFFSET: Int = 1000

const val SSL_AD_CLOSE_NOTIFY: Int = 0

const val SSL_AD_UNEXPECTED_MESSAGE: Int = 10

const val SSL_AD_BAD_RECORD_MAC: Int = 20

const val SSL_AD_DECRYPTION_FAILED: Int = 21

const val SSL_AD_RECORD_OVERFLOW: Int = 22

const val SSL_AD_DECOMPRESSION_FAILURE: Int = 30

const val SSL_AD_HANDSHAKE_FAILURE: Int = 40

const val SSL_AD_NO_CERTIFICATE: Int = 41

const val SSL_AD_BAD_CERTIFICATE: Int = 42

const val SSL_AD_UNSUPPORTED_CERTIFICATE: Int = 43

const val SSL_AD_CERTIFICATE_REVOKED: Int = 44

const val SSL_AD_CERTIFICATE_EXPIRED: Int = 45

const val SSL_AD_CERTIFICATE_UNKNOWN: Int = 46

const val SSL_AD_ILLEGAL_PARAMETER: Int = 47

const val SSL_AD_UNKNOWN_CA: Int = 48

const val SSL_AD_ACCESS_DENIED: Int = 49

const val SSL_AD_DECODE_ERROR: Int = 50

const val SSL_AD_DECRYPT_ERROR: Int = 51

const val SSL_AD_EXPORT_RESTRICTION: Int = 60

const val SSL_AD_PROTOCOL_VERSION: Int = 70

const val SSL_AD_INSUFFICIENT_SECURITY: Int = 71

const val SSL_AD_INTERNAL_ERROR: Int = 80

const val SSL_AD_USER_CANCELLED: Int = 90

const val SSL_AD_NO_RENEGOTIATION: Int = 100

const val SSL_AD_MISSING_EXTENSION: Int = 109

const val SSL_AD_CERTIFICATE_REQUIRED: Int = 116

const val SSL_AD_UNSUPPORTED_EXTENSION: Int = 110

const val SSL_AD_CERTIFICATE_UNOBTAINABLE: Int = 111

const val SSL_AD_UNRECOGNIZED_NAME: Int = 112

const val SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE: Int = 113

const val SSL_AD_BAD_CERTIFICATE_HASH_VALUE: Int = 114

const val SSL_AD_UNKNOWN_PSK_IDENTITY: Int = 115

const val SSL_AD_INAPPROPRIATE_FALLBACK: Int = 86

const val SSL_AD_NO_APPLICATION_PROTOCOL: Int = 120

const val SSL_ERROR_NONE: Int = 0

const val SSL_ERROR_SSL: Int = 1

const val SSL_ERROR_WANT_READ: Int = 2

const val SSL_ERROR_WANT_WRITE: Int = 3

const val SSL_ERROR_WANT_X509_LOOKUP: Int = 4

const val SSL_ERROR_SYSCALL: Int = 5

const val SSL_ERROR_ZERO_RETURN: Int = 6

const val SSL_ERROR_WANT_CONNECT: Int = 7

const val SSL_ERROR_WANT_ACCEPT: Int = 8

const val SSL_ERROR_WANT_ASYNC: Int = 9

const val SSL_ERROR_WANT_ASYNC_JOB: Int = 10

const val SSL_ERROR_WANT_CLIENT_HELLO_CB: Int = 11

const val SSL_CTRL_SET_TMP_DH: Int = 3

const val SSL_CTRL_SET_TMP_ECDH: Int = 4

const val SSL_CTRL_SET_TMP_DH_CB: Int = 6

const val SSL_CTRL_GET_CLIENT_CERT_REQUEST: Int = 9

const val SSL_CTRL_GET_NUM_RENEGOTIATIONS: Int = 10

const val SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS: Int = 11

const val SSL_CTRL_GET_TOTAL_RENEGOTIATIONS: Int = 12

const val SSL_CTRL_GET_FLAGS: Int = 13

const val SSL_CTRL_EXTRA_CHAIN_CERT: Int = 14

const val SSL_CTRL_SET_MSG_CALLBACK: Int = 15

const val SSL_CTRL_SET_MSG_CALLBACK_ARG: Int = 16

const val SSL_CTRL_SET_MTU: Int = 17

const val SSL_CTRL_SESS_NUMBER: Int = 20

const val SSL_CTRL_SESS_CONNECT: Int = 21

const val SSL_CTRL_SESS_CONNECT_GOOD: Int = 22

const val SSL_CTRL_SESS_CONNECT_RENEGOTIATE: Int = 23

const val SSL_CTRL_SESS_ACCEPT: Int = 24

const val SSL_CTRL_SESS_ACCEPT_GOOD: Int = 25

const val SSL_CTRL_SESS_ACCEPT_RENEGOTIATE: Int = 26

const val SSL_CTRL_SESS_HIT: Int = 27

const val SSL_CTRL_SESS_CB_HIT: Int = 28

const val SSL_CTRL_SESS_MISSES: Int = 29

const val SSL_CTRL_SESS_TIMEOUTS: Int = 30

const val SSL_CTRL_SESS_CACHE_FULL: Int = 31

const val SSL_CTRL_MODE: Int = 33

const val SSL_CTRL_GET_READ_AHEAD: Int = 40

const val SSL_CTRL_SET_READ_AHEAD: Int = 41

const val SSL_CTRL_SET_SESS_CACHE_SIZE: Int = 42

const val SSL_CTRL_GET_SESS_CACHE_SIZE: Int = 43

const val SSL_CTRL_SET_SESS_CACHE_MODE: Int = 44

const val SSL_CTRL_GET_SESS_CACHE_MODE: Int = 45

const val SSL_CTRL_GET_MAX_CERT_LIST: Int = 50

const val SSL_CTRL_SET_MAX_CERT_LIST: Int = 51

const val SSL_CTRL_SET_MAX_SEND_FRAGMENT: Int = 52

const val SSL_CTRL_SET_TLSEXT_SERVERNAME_CB: Int = 53

const val SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG: Int = 54

const val SSL_CTRL_SET_TLSEXT_HOSTNAME: Int = 55

const val SSL_CTRL_SET_TLSEXT_DEBUG_CB: Int = 56

const val SSL_CTRL_SET_TLSEXT_DEBUG_ARG: Int = 57

const val SSL_CTRL_GET_TLSEXT_TICKET_KEYS: Int = 58

const val SSL_CTRL_SET_TLSEXT_TICKET_KEYS: Int = 59

const val SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB: Int = 63

const val SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG: Int = 64

const val SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE: Int = 65

const val SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS: Int = 66

const val SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS: Int = 67

const val SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS: Int = 68

const val SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS: Int = 69

const val SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP: Int = 70

const val SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP: Int = 71

const val SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB: Int = 72

const val SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB: Int = 75

const val SSL_CTRL_SET_SRP_VERIFY_PARAM_CB: Int = 76

const val SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB: Int = 77

const val SSL_CTRL_SET_SRP_ARG: Int = 78

const val SSL_CTRL_SET_TLS_EXT_SRP_USERNAME: Int = 79

const val SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH: Int = 80

const val SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD: Int = 81

const val DTLS_CTRL_GET_TIMEOUT: Int = 73

const val DTLS_CTRL_HANDLE_TIMEOUT: Int = 74

const val SSL_CTRL_GET_RI_SUPPORT: Int = 76

const val SSL_CTRL_CLEAR_MODE: Int = 78

const val SSL_CTRL_SET_NOT_RESUMABLE_SESS_CB: Int = 79

const val SSL_CTRL_GET_EXTRA_CHAIN_CERTS: Int = 82

const val SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS: Int = 83

const val SSL_CTRL_CHAIN: Int = 88

const val SSL_CTRL_CHAIN_CERT: Int = 89

const val SSL_CTRL_GET_GROUPS: Int = 90

const val SSL_CTRL_SET_GROUPS: Int = 91

const val SSL_CTRL_SET_GROUPS_LIST: Int = 92

const val SSL_CTRL_GET_SHARED_GROUP: Int = 93

const val SSL_CTRL_SET_SIGALGS: Int = 97

const val SSL_CTRL_SET_SIGALGS_LIST: Int = 98

const val SSL_CTRL_CERT_FLAGS: Int = 99

const val SSL_CTRL_CLEAR_CERT_FLAGS: Int = 100

const val SSL_CTRL_SET_CLIENT_SIGALGS: Int = 101

const val SSL_CTRL_SET_CLIENT_SIGALGS_LIST: Int = 102

const val SSL_CTRL_GET_CLIENT_CERT_TYPES: Int = 103

const val SSL_CTRL_SET_CLIENT_CERT_TYPES: Int = 104

const val SSL_CTRL_BUILD_CERT_CHAIN: Int = 105

const val SSL_CTRL_SET_VERIFY_CERT_STORE: Int = 106

const val SSL_CTRL_SET_CHAIN_CERT_STORE: Int = 107

const val SSL_CTRL_GET_PEER_SIGNATURE_NID: Int = 108

const val SSL_CTRL_GET_PEER_TMP_KEY: Int = 109

const val SSL_CTRL_GET_RAW_CIPHERLIST: Int = 110

const val SSL_CTRL_GET_EC_POINT_FORMATS: Int = 111

const val SSL_CTRL_GET_CHAIN_CERTS: Int = 115

const val SSL_CTRL_SELECT_CURRENT_CERT: Int = 116

const val SSL_CTRL_SET_CURRENT_CERT: Int = 117

const val SSL_CTRL_SET_DH_AUTO: Int = 118

const val DTLS_CTRL_SET_LINK_MTU: Int = 120

const val DTLS_CTRL_GET_LINK_MIN_MTU: Int = 121

const val SSL_CTRL_GET_EXTMS_SUPPORT: Int = 122

const val SSL_CTRL_SET_MIN_PROTO_VERSION: Int = 123

const val SSL_CTRL_SET_MAX_PROTO_VERSION: Int = 124

const val SSL_CTRL_SET_SPLIT_SEND_FRAGMENT: Int = 125

const val SSL_CTRL_SET_MAX_PIPELINES: Int = 126

const val SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE: Int = 127

const val SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB: Int = 128

const val SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB_ARG: Int = 129

const val SSL_CTRL_GET_MIN_PROTO_VERSION: Int = 130

const val SSL_CTRL_GET_MAX_PROTO_VERSION: Int = 131

const val SSL_CTRL_GET_SIGNATURE_NID: Int = 132

const val SSL_CTRL_GET_TMP_KEY: Int = 133

const val SSL_CERT_SET_FIRST: Int = 1

const val SSL_CERT_SET_NEXT: Int = 2

const val SSL_CERT_SET_SERVER: Int = 3

const val SSL_CTRL_GET_SERVER_TMP_KEY: Int = 109

const val SSL_CTRL_GET_CURVES: Int = 90

const val SSL_CTRL_SET_CURVES: Int = 91

const val SSL_CTRL_SET_CURVES_LIST: Int = 92

const val SSL_CTRL_GET_SHARED_CURVE: Int = 93

const val SSL_SERVERINFOV1: Int = 1

const val SSL_SERVERINFOV2: Int = 2

const val SSL_CLIENT_HELLO_SUCCESS: Int = 1

const val SSL_CLIENT_HELLO_ERROR: Int = 0

const val SSL_CLIENT_HELLO_RETRY: Int = -1

const val SSL_READ_EARLY_DATA_ERROR: Int = 0

const val SSL_READ_EARLY_DATA_SUCCESS: Int = 1

const val SSL_READ_EARLY_DATA_FINISH: Int = 2

const val SSL_EARLY_DATA_NOT_SENT: Int = 0

const val SSL_EARLY_DATA_REJECTED: Int = 1

const val SSL_EARLY_DATA_ACCEPTED: Int = 2

const val SSL_SECOP_OTHER_TYPE: UInt = 4294901760u

const val SSL_SECOP_OTHER_NONE: Int = 0

const val SSL_SECOP_OTHER_CIPHER: Int = 65536

const val SSL_SECOP_OTHER_CURVE: Int = 131072

const val SSL_SECOP_OTHER_DH: Int = 196608

const val SSL_SECOP_OTHER_PKEY: Int = 262144

const val SSL_SECOP_OTHER_SIGALG: Int = 327680

const val SSL_SECOP_OTHER_CERT: Int = 393216

const val SSL_SECOP_PEER: Int = 4096

const val SSL_SECOP_CIPHER_SUPPORTED: Int = 65537

const val SSL_SECOP_CIPHER_SHARED: Int = 65538

const val SSL_SECOP_CIPHER_CHECK: Int = 65539

const val SSL_SECOP_CURVE_SUPPORTED: Int = 131076

const val SSL_SECOP_CURVE_SHARED: Int = 131077

const val SSL_SECOP_CURVE_CHECK: Int = 131078

const val SSL_SECOP_TMP_DH: Int = 262151

const val SSL_SECOP_VERSION: Int = 9

const val SSL_SECOP_TICKET: Int = 10

const val SSL_SECOP_SIGALG_SUPPORTED: Int = 327691

const val SSL_SECOP_SIGALG_SHARED: Int = 327692

const val SSL_SECOP_SIGALG_CHECK: Int = 327693

const val SSL_SECOP_SIGALG_MASK: Int = 327694

const val SSL_SECOP_COMPRESSION: Int = 15

const val SSL_SECOP_EE_KEY: Int = 393232

const val SSL_SECOP_CA_KEY: Int = 393233

const val SSL_SECOP_CA_MD: Int = 393234

const val SSL_SECOP_PEER_EE_KEY: Int = 397328

const val SSL_SECOP_PEER_CA_KEY: Int = 397329

const val SSL_SECOP_PEER_CA_MD: Int = 397330

const val OPENSSL_INIT_NO_LOAD_SSL_STRINGS: Long = 1048576

const val OPENSSL_INIT_LOAD_SSL_STRINGS: Long = 2097152

const val OPENSSL_INIT_SSL_DEFAULT: Long = 2097154

const val SSL_TICKET_FATAL_ERR_MALLOC: Int = 0

const val SSL_TICKET_FATAL_ERR_OTHER: Int = 1

const val SSL_TICKET_NONE: Int = 2

const val SSL_TICKET_EMPTY: Int = 3

const val SSL_TICKET_NO_DECRYPT: Int = 4

const val SSL_TICKET_SUCCESS: Int = 5

const val SSL_TICKET_SUCCESS_RENEW: Int = 6

const val SSL_TICKET_RETURN_ABORT: Int = 0

const val SSL_TICKET_RETURN_IGNORE: Int = 1

const val SSL_TICKET_RETURN_IGNORE_RENEW: Int = 2

const val SSL_TICKET_RETURN_USE: Int = 3

const val SSL_TICKET_RETURN_USE_RENEW: Int = 4

const val ERR_TXT_MALLOCED: Int = 1

const val ERR_TXT_STRING: Int = 2

const val ERR_FLAG_MARK: Int = 1

const val ERR_FLAG_CLEAR: Int = 2

const val ERR_NUM_ERRORS: Int = 16

const val ERR_LIB_NONE: Int = 1

const val ERR_LIB_SYS: Int = 2

const val ERR_LIB_BN: Int = 3

const val ERR_LIB_RSA: Int = 4

const val ERR_LIB_DH: Int = 5

const val ERR_LIB_EVP: Int = 6

const val ERR_LIB_BUF: Int = 7

const val ERR_LIB_OBJ: Int = 8

const val ERR_LIB_PEM: Int = 9

const val ERR_LIB_DSA: Int = 10

const val ERR_LIB_X509: Int = 11

const val ERR_LIB_ASN1: Int = 13

const val ERR_LIB_CONF: Int = 14

const val ERR_LIB_CRYPTO: Int = 15

const val ERR_LIB_EC: Int = 16

const val ERR_LIB_SSL: Int = 20

const val ERR_LIB_BIO: Int = 32

const val ERR_LIB_PKCS7: Int = 33

const val ERR_LIB_X509V3: Int = 34

const val ERR_LIB_PKCS12: Int = 35

const val ERR_LIB_RAND: Int = 36

const val ERR_LIB_DSO: Int = 37

const val ERR_LIB_ENGINE: Int = 38

const val ERR_LIB_OCSP: Int = 39

const val ERR_LIB_UI: Int = 40

const val ERR_LIB_COMP: Int = 41

const val ERR_LIB_ECDSA: Int = 42

const val ERR_LIB_ECDH: Int = 43

const val ERR_LIB_OSSL_STORE: Int = 44

const val ERR_LIB_FIPS: Int = 45

const val ERR_LIB_CMS: Int = 46

const val ERR_LIB_TS: Int = 47

const val ERR_LIB_HMAC: Int = 48

const val ERR_LIB_CT: Int = 50

const val ERR_LIB_ASYNC: Int = 51

const val ERR_LIB_KDF: Int = 52

const val ERR_LIB_SM2: Int = 53

const val ERR_LIB_USER: Int = 128

const val SYS_F_FOPEN: Int = 1

const val SYS_F_CONNECT: Int = 2

const val SYS_F_GETSERVBYNAME: Int = 3

const val SYS_F_SOCKET: Int = 4

const val SYS_F_IOCTLSOCKET: Int = 5

const val SYS_F_BIND: Int = 6

const val SYS_F_LISTEN: Int = 7

const val SYS_F_ACCEPT: Int = 8

const val SYS_F_WSASTARTUP: Int = 9

const val SYS_F_OPENDIR: Int = 10

const val SYS_F_FREAD: Int = 11

const val SYS_F_GETADDRINFO: Int = 12

const val SYS_F_GETNAMEINFO: Int = 13

const val SYS_F_SETSOCKOPT: Int = 14

const val SYS_F_GETSOCKOPT: Int = 15

const val SYS_F_GETSOCKNAME: Int = 16

const val SYS_F_GETHOSTBYNAME: Int = 17

const val SYS_F_FFLUSH: Int = 18

const val SYS_F_OPEN: Int = 19

const val SYS_F_CLOSE: Int = 20

const val SYS_F_IOCTL: Int = 21

const val SYS_F_STAT: Int = 22

const val SYS_F_FCNTL: Int = 23

const val SYS_F_FSTAT: Int = 24

const val ERR_R_SYS_LIB: Int = 2

const val ERR_R_BN_LIB: Int = 3

const val ERR_R_RSA_LIB: Int = 4

const val ERR_R_DH_LIB: Int = 5

const val ERR_R_EVP_LIB: Int = 6

const val ERR_R_BUF_LIB: Int = 7

const val ERR_R_OBJ_LIB: Int = 8

const val ERR_R_PEM_LIB: Int = 9

const val ERR_R_DSA_LIB: Int = 10

const val ERR_R_X509_LIB: Int = 11

const val ERR_R_ASN1_LIB: Int = 13

const val ERR_R_EC_LIB: Int = 16

const val ERR_R_BIO_LIB: Int = 32

const val ERR_R_PKCS7_LIB: Int = 33

const val ERR_R_X509V3_LIB: Int = 34

const val ERR_R_ENGINE_LIB: Int = 38

const val ERR_R_UI_LIB: Int = 40

const val ERR_R_ECDSA_LIB: Int = 42

const val ERR_R_OSSL_STORE_LIB: Int = 44

const val ERR_R_NESTED_ASN1_ERROR: Int = 58

const val ERR_R_MISSING_ASN1_EOS: Int = 63

const val ERR_R_FATAL: Int = 64

const val ERR_R_MALLOC_FAILURE: Int = 65

const val ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED: Int = 66

const val ERR_R_PASSED_NULL_PARAMETER: Int = 67

const val ERR_R_INTERNAL_ERROR: Int = 68

const val ERR_R_DISABLED: Int = 69

const val ERR_R_INIT_FAIL: Int = 70

const val ERR_R_PASSED_INVALID_ARGUMENT: Int = 7

const val ERR_R_OPERATION_FAIL: Int = 72

const val PKCS12_F_OPENSSL_ASC2UNI: Int = 121

const val PKCS12_F_OPENSSL_UNI2ASC: Int = 124

const val PKCS12_F_OPENSSL_UNI2UTF8: Int = 127

const val PKCS12_F_OPENSSL_UTF82UNI: Int = 129

const val PKCS12_F_PKCS12_CREATE: Int = 105

const val PKCS12_F_PKCS12_GEN_MAC: Int = 107

const val PKCS12_F_PKCS12_INIT: Int = 109

const val PKCS12_F_PKCS12_ITEM_DECRYPT_D2I: Int = 106

const val PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT: Int = 108

const val PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG: Int = 117

const val PKCS12_F_PKCS12_KEY_GEN_ASC: Int = 110

const val PKCS12_F_PKCS12_KEY_GEN_UNI: Int = 111

const val PKCS12_F_PKCS12_KEY_GEN_UTF8: Int = 116

const val PKCS12_F_PKCS12_NEWPASS: Int = 128

const val PKCS12_F_PKCS12_PACK_P7DATA: Int = 114

const val PKCS12_F_PKCS12_PACK_P7ENCDATA: Int = 115

const val PKCS12_F_PKCS12_PARSE: Int = 118

const val PKCS12_F_PKCS12_PBE_CRYPT: Int = 119

const val PKCS12_F_PKCS12_PBE_KEYIVGEN: Int = 120

const val PKCS12_F_PKCS12_SAFEBAG_CREATE0_P8INF: Int = 112

const val PKCS12_F_PKCS12_SAFEBAG_CREATE0_PKCS8: Int = 113

const val PKCS12_F_PKCS12_SAFEBAG_CREATE_PKCS8_ENCRYPT: Int = 133

const val PKCS12_F_PKCS12_SETUP_MAC: Int = 122

const val PKCS12_F_PKCS12_SET_MAC: Int = 123

const val PKCS12_F_PKCS12_UNPACK_AUTHSAFES: Int = 130

const val PKCS12_F_PKCS12_UNPACK_P7DATA: Int = 131

const val PKCS12_F_PKCS12_VERIFY_MAC: Int = 126

const val PKCS12_F_PKCS8_ENCRYPT: Int = 125

const val PKCS12_F_PKCS8_SET0_PBE: Int = 132

const val PKCS12_R_CANT_PACK_STRUCTURE: Int = 100

const val PKCS12_R_CONTENT_TYPE_NOT_DATA: Int = 121

const val PKCS12_R_DECODE_ERROR: Int = 101

const val PKCS12_R_ENCODE_ERROR: Int = 102

const val PKCS12_R_ENCRYPT_ERROR: Int = 103

const val PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE: Int = 120

const val PKCS12_R_INVALID_NULL_ARGUMENT: Int = 104

const val PKCS12_R_INVALID_NULL_PKCS12_POINTER: Int = 105

const val PKCS12_R_IV_GEN_ERROR: Int = 106

const val PKCS12_R_KEY_GEN_ERROR: Int = 107

const val PKCS12_R_MAC_ABSENT: Int = 108

const val PKCS12_R_MAC_GENERATION_ERROR: Int = 109

const val PKCS12_R_MAC_SETUP_ERROR: Int = 110

const val PKCS12_R_MAC_STRING_SET_ERROR: Int = 111

const val PKCS12_R_MAC_VERIFY_FAILURE: Int = 113

const val PKCS12_R_PARSE_ERROR: Int = 114

const val PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR: Int = 115

const val PKCS12_R_PKCS12_CIPHERFINAL_ERROR: Int = 116

const val PKCS12_R_PKCS12_PBE_CRYPT_ERROR: Int = 117

const val PKCS12_R_UNKNOWN_DIGEST_ALGORITHM: Int = 118

const val PKCS12_R_UNSUPPORTED_PKCS12_MODE: Int = 119

const val PKCS12_KEY_ID: Int = 1

const val PKCS12_IV_ID: Int = 2

const val PKCS12_MAC_ID: Int = 3

const val PKCS12_DEFAULT_ITER: Int = 2048

const val PKCS12_MAC_KEY_LENGTH: Int = 20

const val PKCS12_SALT_LEN: Int = 8

const val KEY_EX: Int = 16

const val KEY_SIG: Int = 128

const val PKCS12_ERROR: Int = 0

const val PKCS12_OK: Int = 1

val sk_num: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Int>>(kniBridge76())

val sk_value: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, Int) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, Int) -> COpaquePointer?>>(kniBridge77())

val sk_set: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, Int, COpaquePointer?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, Int, COpaquePointer?) -> COpaquePointer?>>(
        kniBridge78()
    )

val sk_new: CPointer<CFunction<(OPENSSL_sk_compfunc?) -> CPointer<OPENSSL_STACK>?>>?
    get() = interpretCPointer<CFunction<(OPENSSL_sk_compfunc?) -> CPointer<OPENSSL_STACK>?>>(kniBridge79())

val sk_new_null: CPointer<CFunction<() -> CPointer<OPENSSL_STACK>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<OPENSSL_STACK>?>>(kniBridge80())

val sk_free: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Unit>>(kniBridge81())

val sk_pop_free: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, CPointer<CFunction<(COpaquePointer?) -> Unit>>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, CPointer<CFunction<(COpaquePointer?) -> Unit>>?) -> Unit>>(
        kniBridge82()
    )

val sk_deep_copy: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, OPENSSL_sk_copyfunc?, OPENSSL_sk_freefunc?) -> CPointer<OPENSSL_STACK>?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, OPENSSL_sk_copyfunc?, OPENSSL_sk_freefunc?) -> CPointer<OPENSSL_STACK>?>>(
        kniBridge83()
    )

val sk_insert: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?, Int) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?, Int) -> Int>>(kniBridge84())

val sk_delete: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, Int) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, Int) -> COpaquePointer?>>(kniBridge85())

val sk_delete_ptr: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> COpaquePointer?>>(kniBridge86())

val sk_find: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>(kniBridge87())

val sk_find_ex: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>(kniBridge88())

val sk_push: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>(kniBridge89())

val sk_unshift: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, COpaquePointer?) -> Int>>(kniBridge90())

val sk_shift: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> COpaquePointer?>>(kniBridge91())

val sk_pop: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> COpaquePointer?>>(kniBridge92())

val sk_zero: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Unit>>(kniBridge93())

val sk_set_cmp_func: CPointer<CFunction<(CPointer<OPENSSL_STACK>?, OPENSSL_sk_compfunc?) -> OPENSSL_sk_compfunc?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?, OPENSSL_sk_compfunc?) -> OPENSSL_sk_compfunc?>>(
        kniBridge94()
    )

val sk_dup: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> CPointer<OPENSSL_STACK>?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> CPointer<OPENSSL_STACK>?>>(kniBridge95())

val sk_sort: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Unit>>(kniBridge96())

val sk_is_sorted: CPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_STACK>?) -> Int>>(kniBridge97())

val SSLeay: CPointer<CFunction<() -> ULong>>?
    get() = interpretCPointer<CFunction<() -> ULong>>(kniBridge98())

val SSLeay_version: CPointer<CFunction<(Int) -> CPointer<ByteVar>?>>?
    get() = interpretCPointer<CFunction<(Int) -> CPointer<ByteVar>?>>(kniBridge99())

val get_rfc2409_prime_768: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge100())

val get_rfc2409_prime_1024: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge101())

val get_rfc3526_prime_1536: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge102())

val get_rfc3526_prime_2048: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge103())

val get_rfc3526_prime_3072: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge104())

val get_rfc3526_prime_4096: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge105())

val get_rfc3526_prime_6144: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge106())

val get_rfc3526_prime_8192: CPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>?
    get() = interpretCPointer<CFunction<(CPointer<BIGNUM>?) -> CPointer<BIGNUM>?>>(kniBridge107())

val EVP_des_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge108())

val EVP_des_ede_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge109())

val EVP_des_ede3_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge110())

val EVP_rc2_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge111())

val EVP_bf_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge112())

val EVP_cast5_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge113())

val EVP_aes_128_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge114())

val EVP_aes_192_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge115())

val EVP_aes_256_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge116())

val EVP_aria_128_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge117())

val EVP_aria_192_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge118())

val EVP_aria_256_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge119())

val EVP_camellia_128_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge120())

val EVP_camellia_192_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge121())

val EVP_camellia_256_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge122())

val EVP_seed_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge123())

val EVP_sm4_cfb: CPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<EVP_CIPHER>?>>(kniBridge124())

val lh_error: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?) -> Int>>(kniBridge125())

val lh_new: CPointer<CFunction<(OPENSSL_LH_HASHFUNC?, OPENSSL_LH_COMPFUNC?) -> CPointer<OPENSSL_LHASH>?>>?
    get() = interpretCPointer<CFunction<(OPENSSL_LH_HASHFUNC?, OPENSSL_LH_COMPFUNC?) -> CPointer<OPENSSL_LHASH>?>>(
        kniBridge126()
    )

val lh_free: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?) -> Unit>>(kniBridge127())

val lh_insert: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, COpaquePointer?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, COpaquePointer?) -> COpaquePointer?>>(kniBridge128())

val lh_delete: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, COpaquePointer?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, COpaquePointer?) -> COpaquePointer?>>(kniBridge129())

val lh_retrieve: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, COpaquePointer?) -> COpaquePointer?>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, COpaquePointer?) -> COpaquePointer?>>(kniBridge130())

val lh_doall: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, OPENSSL_LH_DOALL_FUNC?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, OPENSSL_LH_DOALL_FUNC?) -> Unit>>(kniBridge131())

val lh_doall_arg: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, OPENSSL_LH_DOALL_FUNCARG?, COpaquePointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, OPENSSL_LH_DOALL_FUNCARG?, COpaquePointer?) -> Unit>>(
        kniBridge132()
    )

val lh_strhash: CPointer<CFunction<(CPointer<ByteVar>?) -> ULong>>?
    get() = interpretCPointer<CFunction<(CPointer<ByteVar>?) -> ULong>>(kniBridge133())

val lh_num_items: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?) -> ULong>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?) -> ULong>>(kniBridge134())

val lh_stats: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<FILE>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<FILE>?) -> Unit>>(kniBridge135())

val lh_node_stats: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<FILE>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<FILE>?) -> Unit>>(kniBridge136())

val lh_node_usage_stats: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<FILE>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<FILE>?) -> Unit>>(kniBridge137())

val lh_stats_bio: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<BIO>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<BIO>?) -> Unit>>(kniBridge138())

val lh_node_stats_bio: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<BIO>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<BIO>?) -> Unit>>(kniBridge139())

val lh_node_usage_stats_bio: CPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<BIO>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<OPENSSL_LHASH>?, CPointer<BIO>?) -> Unit>>(kniBridge140())

val X509_STORE_CTX_get_chain: CPointer<CFunction<(CPointer<X509_STORE_CTX>?) -> CPointer<stack_st_X509>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?) -> CPointer<stack_st_X509>?>>(kniBridge141())

val X509_STORE_CTX_set_chain: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<stack_st_X509>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<stack_st_X509>?) -> Unit>>(kniBridge142())

val X509_STORE_CTX_trusted_stack: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<stack_st_X509>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<stack_st_X509>?) -> Unit>>(kniBridge143())

val X509_STORE_get_by_subject: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, X509_LOOKUP_TYPE, CPointer<X509_NAME>?, CPointer<X509_OBJECT>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, X509_LOOKUP_TYPE, CPointer<X509_NAME>?, CPointer<X509_OBJECT>?) -> Int>>(
        kniBridge144()
    )

val X509_STORE_get1_certs: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509>?>>(
        kniBridge145()
    )

val X509_STORE_get1_crls: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509_CRL>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509_CRL>?>>(
        kniBridge146()
    )

val X509_STORE_get1_cert: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509>?>>(
        kniBridge147()
    )

val X509_STORE_get1_crl: CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509_CRL>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509_CRL>?>>(
        kniBridge148()
    )

val X509_get_notBefore: CPointer<CFunction<(CPointer<X509>?) -> CPointer<ASN1_TIME>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509>?) -> CPointer<ASN1_TIME>?>>(kniBridge149())

val X509_get_notAfter: CPointer<CFunction<(CPointer<X509>?) -> CPointer<ASN1_TIME>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509>?) -> CPointer<ASN1_TIME>?>>(kniBridge150())

val X509_set_notBefore: CPointer<CFunction<(CPointer<X509>?, CPointer<ASN1_TIME>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<X509>?, CPointer<ASN1_TIME>?) -> Int>>(kniBridge151())

val X509_set_notAfter: CPointer<CFunction<(CPointer<X509>?, CPointer<ASN1_TIME>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<X509>?, CPointer<ASN1_TIME>?) -> Int>>(kniBridge152())

val X509_CRL_set_lastUpdate: CPointer<CFunction<(CPointer<X509_CRL>?, CPointer<ASN1_TIME>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_CRL>?, CPointer<ASN1_TIME>?) -> Int>>(kniBridge153())

val X509_CRL_set_nextUpdate: CPointer<CFunction<(CPointer<X509_CRL>?, CPointer<ASN1_TIME>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_CRL>?, CPointer<ASN1_TIME>?) -> Int>>(kniBridge154())

val SSL_CTX_set_npn_advertised_cb: CPointer<CFunction<(CPointer<SSL_CTX>?, SSL_CTX_npn_advertised_cb_func?, COpaquePointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<SSL_CTX>?, SSL_CTX_npn_advertised_cb_func?, COpaquePointer?) -> Unit>>(
        kniBridge155()
    )

val SSL_CTX_set_npn_select_cb: CPointer<CFunction<(CPointer<SSL_CTX>?, SSL_CTX_npn_select_cb_func?, COpaquePointer?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<SSL_CTX>?, SSL_CTX_npn_select_cb_func?, COpaquePointer?) -> Unit>>(
        kniBridge156()
    )

val SSL_get0_npn_negotiated: CPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<UByteVar>>?, CPointer<UIntVar>?) -> Unit>>?
    get() = interpretCPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<UByteVar>>?, CPointer<UIntVar>?) -> Unit>>(
        kniBridge157()
    )

val SSLv23_method: CPointer<CFunction<() -> CPointer<SSL_METHOD>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<SSL_METHOD>?>>(kniBridge158())

val SSLv23_server_method: CPointer<CFunction<() -> CPointer<SSL_METHOD>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<SSL_METHOD>?>>(kniBridge159())

val SSLv23_client_method: CPointer<CFunction<() -> CPointer<SSL_METHOD>?>>?
    get() = interpretCPointer<CFunction<() -> CPointer<SSL_METHOD>?>>(kniBridge160())

val SSL_get0_session: CPointer<CFunction<(CPointer<SSL>?) -> CPointer<SSL_SESSION>?>>?
    get() = interpretCPointer<CFunction<(CPointer<SSL>?) -> CPointer<SSL_SESSION>?>>(kniBridge161())

val PKCS12_key_gen: CPointer<CFunction<(CPointer<ByteVar>?, Int, CPointer<UByteVar>?, Int, Int, Int, Int, CPointer<UByteVar>?, CPointer<EVP_MD>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<ByteVar>?, Int, CPointer<UByteVar>?, Int, Int, Int, Int, CPointer<UByteVar>?, CPointer<EVP_MD>?) -> Int>>(
        kniBridge162()
    )

val PKCS12_add_friendlyname: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?, CPointer<ByteVar>?, Int) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?, CPointer<ByteVar>?, Int) -> Int>>(kniBridge163())

val M_PKCS12_bag_type: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>(kniBridge164())

val M_PKCS12_cert_bag_type: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>(kniBridge165())

val M_PKCS12_crl_bag_type: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>(kniBridge166())

val PKCS12_certbag2x509: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> CPointer<X509>?>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> CPointer<X509>?>>(kniBridge167())

val PKCS12_certbag2scrl: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> CPointer<X509_CRL>?>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> CPointer<X509_CRL>?>>(kniBridge168())

val PKCS12_bag_type: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>(kniBridge169())

val PKCS12_cert_bag_type: CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Int>>(kniBridge170())

val PKCS12_x5092certbag: CPointer<CFunction<(CPointer<X509>?) -> CPointer<PKCS12_SAFEBAG>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509>?) -> CPointer<PKCS12_SAFEBAG>?>>(kniBridge171())

val PKCS12_x509crl2certbag: CPointer<CFunction<(CPointer<X509_CRL>?) -> CPointer<PKCS12_SAFEBAG>?>>?
    get() = interpretCPointer<CFunction<(CPointer<X509_CRL>?) -> CPointer<PKCS12_SAFEBAG>?>>(kniBridge172())

val PKCS12_MAKE_KEYBAG: CPointer<CFunction<(CPointer<PKCS8_PRIV_KEY_INFO>?) -> CPointer<PKCS12_SAFEBAG>?>>?
    get() = interpretCPointer<CFunction<(CPointer<PKCS8_PRIV_KEY_INFO>?) -> CPointer<PKCS12_SAFEBAG>?>>(kniBridge173())

val PKCS12_MAKE_SHKEYBAG: CPointer<CFunction<(Int, CPointer<ByteVar>?, Int, CPointer<UByteVar>?, Int, Int, CPointer<PKCS8_PRIV_KEY_INFO>?) -> CPointer<PKCS12_SAFEBAG>?>>?
    get() = interpretCPointer<CFunction<(Int, CPointer<ByteVar>?, Int, CPointer<UByteVar>?, Int, Int, CPointer<PKCS8_PRIV_KEY_INFO>?) -> CPointer<PKCS12_SAFEBAG>?>>(
        kniBridge174()
    )

typealias OPENSSL_STACK = stack_st

typealias OPENSSL_sk_compfuncVar = CPointerVarOf<OPENSSL_sk_compfunc>

typealias OPENSSL_sk_compfunc = CPointer<CFunction<(COpaquePointer?, COpaquePointer?) -> Int>>

typealias OPENSSL_sk_freefuncVar = CPointerVarOf<OPENSSL_sk_freefunc>

typealias OPENSSL_sk_freefunc = CPointer<CFunction<(COpaquePointer?) -> Unit>>

typealias OPENSSL_sk_copyfuncVar = CPointerVarOf<OPENSSL_sk_copyfunc>

typealias OPENSSL_sk_copyfunc = CPointer<CFunction<(COpaquePointer?) -> COpaquePointer?>>

typealias OPENSSL_STRINGVar = CPointerVarOf<OPENSSL_STRING>

typealias OPENSSL_STRING = CPointer<ByteVar>

typealias OPENSSL_CSTRINGVar = CPointerVarOf<OPENSSL_CSTRING>

typealias OPENSSL_CSTRING = CPointer<ByteVar>

typealias sk_OPENSSL_STRING_compfuncVar = CPointerVarOf<sk_OPENSSL_STRING_compfunc>

typealias sk_OPENSSL_STRING_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<ByteVar>>?) -> Int>>

typealias sk_OPENSSL_STRING_freefuncVar = CPointerVarOf<sk_OPENSSL_STRING_freefunc>

typealias sk_OPENSSL_STRING_freefunc = CPointer<CFunction<(CPointer<ByteVar>?) -> Unit>>

typealias sk_OPENSSL_STRING_copyfuncVar = CPointerVarOf<sk_OPENSSL_STRING_copyfunc>

typealias sk_OPENSSL_STRING_copyfunc = CPointer<CFunction<(CPointer<ByteVar>?) -> CPointer<ByteVar>?>>

typealias sk_OPENSSL_CSTRING_compfuncVar = CPointerVarOf<sk_OPENSSL_CSTRING_compfunc>

typealias sk_OPENSSL_CSTRING_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ByteVar>>?, CPointer<CPointerVar<ByteVar>>?) -> Int>>

typealias sk_OPENSSL_CSTRING_freefuncVar = CPointerVarOf<sk_OPENSSL_CSTRING_freefunc>

typealias sk_OPENSSL_CSTRING_freefunc = CPointer<CFunction<(CPointer<ByteVar>?) -> Unit>>

typealias sk_OPENSSL_CSTRING_copyfuncVar = CPointerVarOf<sk_OPENSSL_CSTRING_copyfunc>

typealias sk_OPENSSL_CSTRING_copyfunc = CPointer<CFunction<(CPointer<ByteVar>?) -> CPointer<ByteVar>?>>

typealias OPENSSL_BLOCKVar = CPointerVarOf<OPENSSL_BLOCK>

typealias OPENSSL_BLOCK = COpaquePointer

typealias sk_OPENSSL_BLOCK_compfuncVar = CPointerVarOf<sk_OPENSSL_BLOCK_compfunc>

typealias sk_OPENSSL_BLOCK_compfunc = CPointer<CFunction<(CPointer<COpaquePointerVar>?, CPointer<COpaquePointerVar>?) -> Int>>

typealias sk_OPENSSL_BLOCK_freefuncVar = CPointerVarOf<sk_OPENSSL_BLOCK_freefunc>

typealias sk_OPENSSL_BLOCK_freefunc = CPointer<CFunction<(COpaquePointer?) -> Unit>>

typealias sk_OPENSSL_BLOCK_copyfuncVar = CPointerVarOf<sk_OPENSSL_BLOCK_copyfunc>

typealias sk_OPENSSL_BLOCK_copyfunc = CPointer<CFunction<(COpaquePointer?) -> COpaquePointer?>>

typealias ASN1_INTEGER = asn1_string_st

typealias ASN1_ENUMERATED = asn1_string_st

typealias ASN1_BIT_STRING = asn1_string_st

typealias ASN1_OCTET_STRING = asn1_string_st

typealias ASN1_PRINTABLESTRING = asn1_string_st

typealias ASN1_T61STRING = asn1_string_st

typealias ASN1_IA5STRING = asn1_string_st

typealias ASN1_GENERALSTRING = asn1_string_st

typealias ASN1_UNIVERSALSTRING = asn1_string_st

typealias ASN1_BMPSTRING = asn1_string_st

typealias ASN1_UTCTIME = asn1_string_st

typealias ASN1_TIME = asn1_string_st

typealias ASN1_GENERALIZEDTIME = asn1_string_st

typealias ASN1_VISIBLESTRING = asn1_string_st

typealias ASN1_UTF8STRING = asn1_string_st

typealias ASN1_STRING = asn1_string_st

typealias ASN1_BOOLEANVar = IntVarOf<ASN1_BOOLEAN>

typealias ASN1_BOOLEAN = Int

typealias ASN1_NULLVar = IntVarOf<ASN1_NULL>

typealias ASN1_NULL = Int

typealias ASN1_OBJECT = asn1_object_st

typealias ASN1_ITEM = ASN1_ITEM_st

typealias ASN1_PCTX = asn1_pctx_st

typealias ASN1_SCTX = asn1_sctx_st

typealias BIO = bio_st

typealias BIGNUM = bignum_st

typealias BN_CTX = bignum_ctx

typealias BN_BLINDING = bn_blinding_st

typealias BN_MONT_CTX = bn_mont_ctx_st

typealias BN_RECP_CTX = bn_recp_ctx_st

typealias BN_GENCB = bn_gencb_st

typealias BUF_MEM = buf_mem_st

typealias EVP_CIPHER = evp_cipher_st

typealias EVP_CIPHER_CTX = evp_cipher_ctx_st

typealias EVP_MD = evp_md_st

typealias EVP_MD_CTX = evp_md_ctx_st

typealias EVP_PKEY = evp_pkey_st

typealias EVP_PKEY_ASN1_METHOD = evp_pkey_asn1_method_st

typealias EVP_PKEY_METHOD = evp_pkey_method_st

typealias EVP_PKEY_CTX = evp_pkey_ctx_st

typealias EVP_ENCODE_CTX = evp_Encode_Ctx_st

typealias HMAC_CTX = hmac_ctx_st

typealias DH = dh_st

typealias DH_METHOD = dh_method

typealias DSA = dsa_st

typealias DSA_METHOD = dsa_method

typealias RSA = rsa_st

typealias RSA_METHOD = rsa_meth_st

typealias EC_KEY = ec_key_st

typealias EC_KEY_METHOD = ec_key_method_st

typealias RAND_METHOD = rand_meth_st

typealias RAND_DRBG = rand_drbg_st

typealias SSL_DANE = ssl_dane_st

typealias X509 = x509_st

typealias ASN1_VALUE = ASN1_VALUE_st

typealias ASN1_TYPE = asn1_type_st

typealias X509_ALGOR = X509_algor_st

typealias X509_CRL = X509_crl_st

typealias X509_CRL_METHOD = x509_crl_method_st

typealias X509_REVOKED = x509_revoked_st

typealias X509_NAME = X509_name_st

typealias X509_PUBKEY = X509_pubkey_st

typealias X509_STORE = x509_store_st

typealias X509_STORE_CTX = x509_store_ctx_st

typealias X509_OBJECT = x509_object_st

typealias X509_LOOKUP = x509_lookup_st

typealias X509_LOOKUP_METHOD = x509_lookup_method_st

typealias X509_VERIFY_PARAM = X509_VERIFY_PARAM_st

typealias X509_SIG_INFO = x509_sig_info_st

typealias PKCS8_PRIV_KEY_INFO = pkcs8_priv_key_info_st

typealias X509V3_CTX = v3_ext_ctx

typealias CONF = conf_st

typealias OPENSSL_INIT_SETTINGS = ossl_init_settings_st

typealias UI = ui_st

typealias UI_METHOD = ui_method_st

typealias ENGINE = engine_st

typealias SSL = ssl_st

typealias SSL_CTX = ssl_ctx_st

typealias COMP_CTX = comp_ctx_st

typealias COMP_METHOD = comp_method_st

typealias X509_POLICY_NODE = X509_POLICY_NODE_st

typealias X509_POLICY_LEVEL = X509_POLICY_LEVEL_st

typealias X509_POLICY_TREE = X509_POLICY_TREE_st

typealias X509_POLICY_CACHE = X509_POLICY_CACHE_st

typealias AUTHORITY_KEYID = AUTHORITY_KEYID_st

typealias DIST_POINT = DIST_POINT_st

typealias ISSUING_DIST_POINT = ISSUING_DIST_POINT_st

typealias NAME_CONSTRAINTS = NAME_CONSTRAINTS_st

typealias CRYPTO_EX_DATA = crypto_ex_data_st

typealias OCSP_REQ_CTX = ocsp_req_ctx_st

typealias OCSP_RESPONSE = ocsp_response_st

typealias OCSP_RESPID = ocsp_responder_id_st

typealias SCT = sct_st

typealias SCT_CTX = sct_ctx_st

typealias CTLOG = ctlog_st

typealias CTLOG_STORE = ctlog_store_st

typealias CT_POLICY_EVAL_CTX = ct_policy_eval_ctx_st

typealias OSSL_STORE_INFO = ossl_store_info_st

typealias OSSL_STORE_SEARCH = ossl_store_search_st

typealias ossl_intmax_tVar = LongVarOf<ossl_intmax_t>

typealias ossl_intmax_t = intmax_t

typealias ossl_uintmax_tVar = ULongVarOf<ossl_uintmax_t>

typealias ossl_uintmax_t = uintmax_t

typealias sk_void_compfuncVar = CPointerVarOf<sk_void_compfunc>

typealias sk_void_compfunc = CPointer<CFunction<(CPointer<COpaquePointerVar>?, CPointer<COpaquePointerVar>?) -> Int>>

typealias sk_void_freefuncVar = CPointerVarOf<sk_void_freefunc>

typealias sk_void_freefunc = CPointer<CFunction<(COpaquePointer?) -> Unit>>

typealias sk_void_copyfuncVar = CPointerVarOf<sk_void_copyfunc>

typealias sk_void_copyfunc = CPointer<CFunction<(COpaquePointer?) -> COpaquePointer?>>

typealias CRYPTO_EX_new = CFunction<(COpaquePointer?, COpaquePointer?, CPointer<CRYPTO_EX_DATA>?, Int, Long, COpaquePointer?) -> Unit>

typealias CRYPTO_EX_free = CFunction<(COpaquePointer?, COpaquePointer?, CPointer<CRYPTO_EX_DATA>?, Int, Long, COpaquePointer?) -> Unit>

typealias CRYPTO_EX_dup = CFunction<(CPointer<CRYPTO_EX_DATA>?, CPointer<CRYPTO_EX_DATA>?, COpaquePointer?, Int, Long, COpaquePointer?) -> Int>

typealias CRYPTO_THREADID = crypto_threadid_st

typealias CRYPTO_ONCEVar = IntVarOf<CRYPTO_ONCE>

typealias CRYPTO_ONCE = pthread_once_t

typealias CRYPTO_THREAD_LOCALVar = UIntVarOf<CRYPTO_THREAD_LOCAL>

typealias CRYPTO_THREAD_LOCAL = pthread_key_t

typealias CRYPTO_THREAD_IDVar = ULongVarOf<CRYPTO_THREAD_ID>

typealias CRYPTO_THREAD_ID = pthread_t

typealias BIO_ADDR = bio_addr_st

typealias BIO_ADDRINFO = bio_addrinfo_st

typealias BIO_callback_fnVar = CPointerVarOf<BIO_callback_fn>

typealias BIO_callback_fn = CPointer<CFunction<(CPointer<BIO>?, Int, CPointer<ByteVar>?, Int, Long, Long) -> Long>>

typealias BIO_callback_fn_exVar = CPointerVarOf<BIO_callback_fn_ex>

typealias BIO_callback_fn_ex = CPointer<CFunction<(CPointer<BIO>?, Int, CPointer<ByteVar>?, size_t, Int, Long, Int, CPointer<size_tVar>?) -> Long>>

typealias BIO_METHOD = bio_method_st

typealias BIO_info_cb = CFunction<(CPointer<BIO>?, Int, Int) -> Int>

typealias bio_info_cb = BIO_info_cb

typealias sk_BIO_compfuncVar = CPointerVarOf<sk_BIO_compfunc>

typealias sk_BIO_compfunc = CPointer<CFunction<(CPointer<CPointerVar<BIO>>?, CPointer<CPointerVar<BIO>>?) -> Int>>

typealias sk_BIO_freefuncVar = CPointerVarOf<sk_BIO_freefunc>

typealias sk_BIO_freefunc = CPointer<CFunction<(CPointer<BIO>?) -> Unit>>

typealias sk_BIO_copyfuncVar = CPointerVarOf<sk_BIO_copyfunc>

typealias sk_BIO_copyfunc = CPointer<CFunction<(CPointer<BIO>?) -> CPointer<BIO>?>>

typealias asn1_ps_func = CFunction<(CPointer<BIO>?, CPointer<CPointerVar<UByteVar>>?, CPointer<IntVar>?, COpaquePointer?) -> Int>

typealias sk_X509_ALGOR_compfuncVar = CPointerVarOf<sk_X509_ALGOR_compfunc>

typealias sk_X509_ALGOR_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_ALGOR>>?, CPointer<CPointerVar<X509_ALGOR>>?) -> Int>>

typealias sk_X509_ALGOR_freefuncVar = CPointerVarOf<sk_X509_ALGOR_freefunc>

typealias sk_X509_ALGOR_freefunc = CPointer<CFunction<(CPointer<X509_ALGOR>?) -> Unit>>

typealias sk_X509_ALGOR_copyfuncVar = CPointerVarOf<sk_X509_ALGOR_copyfunc>

typealias sk_X509_ALGOR_copyfunc = CPointer<CFunction<(CPointer<X509_ALGOR>?) -> CPointer<X509_ALGOR>?>>

typealias ASN1_ENCODING = ASN1_ENCODING_st

typealias ASN1_STRING_TABLE = asn1_string_table_st

typealias sk_ASN1_STRING_TABLE_compfuncVar = CPointerVarOf<sk_ASN1_STRING_TABLE_compfunc>

typealias sk_ASN1_STRING_TABLE_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ASN1_STRING_TABLE>>?, CPointer<CPointerVar<ASN1_STRING_TABLE>>?) -> Int>>

typealias sk_ASN1_STRING_TABLE_freefuncVar = CPointerVarOf<sk_ASN1_STRING_TABLE_freefunc>

typealias sk_ASN1_STRING_TABLE_freefunc = CPointer<CFunction<(CPointer<ASN1_STRING_TABLE>?) -> Unit>>

typealias sk_ASN1_STRING_TABLE_copyfuncVar = CPointerVarOf<sk_ASN1_STRING_TABLE_copyfunc>

typealias sk_ASN1_STRING_TABLE_copyfunc = CPointer<CFunction<(CPointer<ASN1_STRING_TABLE>?) -> CPointer<ASN1_STRING_TABLE>?>>

typealias ASN1_TEMPLATE = ASN1_TEMPLATE_st

typealias ASN1_TLC = ASN1_TLC_st

typealias d2i_of_void = CFunction<(CPointer<COpaquePointerVar>?, CPointer<CPointerVar<UByteVar>>?, Long) -> COpaquePointer?>

typealias i2d_of_void = CFunction<(COpaquePointer?, CPointer<CPointerVar<UByteVar>>?) -> Int>

typealias ASN1_ITEM_EXP = ASN1_ITEM

typealias sk_ASN1_INTEGER_compfuncVar = CPointerVarOf<sk_ASN1_INTEGER_compfunc>

typealias sk_ASN1_INTEGER_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ASN1_INTEGER>>?, CPointer<CPointerVar<ASN1_INTEGER>>?) -> Int>>

typealias sk_ASN1_INTEGER_freefuncVar = CPointerVarOf<sk_ASN1_INTEGER_freefunc>

typealias sk_ASN1_INTEGER_freefunc = CPointer<CFunction<(CPointer<ASN1_INTEGER>?) -> Unit>>

typealias sk_ASN1_INTEGER_copyfuncVar = CPointerVarOf<sk_ASN1_INTEGER_copyfunc>

typealias sk_ASN1_INTEGER_copyfunc = CPointer<CFunction<(CPointer<ASN1_INTEGER>?) -> CPointer<ASN1_INTEGER>?>>

typealias sk_ASN1_GENERALSTRING_compfuncVar = CPointerVarOf<sk_ASN1_GENERALSTRING_compfunc>

typealias sk_ASN1_GENERALSTRING_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ASN1_GENERALSTRING>>?, CPointer<CPointerVar<ASN1_GENERALSTRING>>?) -> Int>>

typealias sk_ASN1_GENERALSTRING_freefuncVar = CPointerVarOf<sk_ASN1_GENERALSTRING_freefunc>

typealias sk_ASN1_GENERALSTRING_freefunc = CPointer<CFunction<(CPointer<ASN1_GENERALSTRING>?) -> Unit>>

typealias sk_ASN1_GENERALSTRING_copyfuncVar = CPointerVarOf<sk_ASN1_GENERALSTRING_copyfunc>

typealias sk_ASN1_GENERALSTRING_copyfunc = CPointer<CFunction<(CPointer<ASN1_GENERALSTRING>?) -> CPointer<ASN1_GENERALSTRING>?>>

typealias sk_ASN1_UTF8STRING_compfuncVar = CPointerVarOf<sk_ASN1_UTF8STRING_compfunc>

typealias sk_ASN1_UTF8STRING_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ASN1_UTF8STRING>>?, CPointer<CPointerVar<ASN1_UTF8STRING>>?) -> Int>>

typealias sk_ASN1_UTF8STRING_freefuncVar = CPointerVarOf<sk_ASN1_UTF8STRING_freefunc>

typealias sk_ASN1_UTF8STRING_freefunc = CPointer<CFunction<(CPointer<ASN1_UTF8STRING>?) -> Unit>>

typealias sk_ASN1_UTF8STRING_copyfuncVar = CPointerVarOf<sk_ASN1_UTF8STRING_copyfunc>

typealias sk_ASN1_UTF8STRING_copyfunc = CPointer<CFunction<(CPointer<ASN1_UTF8STRING>?) -> CPointer<ASN1_UTF8STRING>?>>

typealias sk_ASN1_TYPE_compfuncVar = CPointerVarOf<sk_ASN1_TYPE_compfunc>

typealias sk_ASN1_TYPE_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ASN1_TYPE>>?, CPointer<CPointerVar<ASN1_TYPE>>?) -> Int>>

typealias sk_ASN1_TYPE_freefuncVar = CPointerVarOf<sk_ASN1_TYPE_freefunc>

typealias sk_ASN1_TYPE_freefunc = CPointer<CFunction<(CPointer<ASN1_TYPE>?) -> Unit>>

typealias sk_ASN1_TYPE_copyfuncVar = CPointerVarOf<sk_ASN1_TYPE_copyfunc>

typealias sk_ASN1_TYPE_copyfunc = CPointer<CFunction<(CPointer<ASN1_TYPE>?) -> CPointer<ASN1_TYPE>?>>

typealias ASN1_SEQUENCE_ANY = stack_st_ASN1_TYPE

typealias BIT_STRING_BITNAME = BIT_STRING_BITNAME_st

typealias sk_ASN1_OBJECT_compfuncVar = CPointerVarOf<sk_ASN1_OBJECT_compfunc>

typealias sk_ASN1_OBJECT_compfunc = CPointer<CFunction<(CPointer<CPointerVar<ASN1_OBJECT>>?, CPointer<CPointerVar<ASN1_OBJECT>>?) -> Int>>

typealias sk_ASN1_OBJECT_freefuncVar = CPointerVarOf<sk_ASN1_OBJECT_freefunc>

typealias sk_ASN1_OBJECT_freefunc = CPointer<CFunction<(CPointer<ASN1_OBJECT>?) -> Unit>>

typealias sk_ASN1_OBJECT_copyfuncVar = CPointerVarOf<sk_ASN1_OBJECT_copyfunc>

typealias sk_ASN1_OBJECT_copyfunc = CPointer<CFunction<(CPointer<ASN1_OBJECT>?) -> CPointer<ASN1_OBJECT>?>>

typealias OBJ_NAME = obj_name_st

typealias EVP_CIPHER_INFO = evp_cipher_info_st

typealias EVP_PBE_KEYGEN = CFunction<(CPointer<EVP_CIPHER_CTX>?, CPointer<ByteVar>?, Int, CPointer<ASN1_TYPE>?, CPointer<EVP_CIPHER>?, CPointer<EVP_MD>?, Int) -> Int>

typealias EVP_PKEY_gen_cb = CFunction<(CPointer<EVP_PKEY_CTX>?) -> Int>

typealias EC_METHOD = ec_method_st

typealias EC_GROUP = ec_group_st

typealias EC_POINT = ec_point_st

typealias ECPKPARAMETERS = ecpk_parameters_st

typealias ECPARAMETERS = ec_parameters_st

typealias ECDSA_SIG = ECDSA_SIG_st

typealias RSA_PSS_PARAMS = rsa_pss_params_st

typealias RSA_OAEP_PARAMS = rsa_oaep_params_st

typealias DSA_SIG = DSA_SIG_st

typealias SHA_CTX = SHAstate_st

typealias SHA256_CTX = SHA256state_st

typealias SHA512_CTX = SHA512state_st

typealias X509_ALGORS = stack_st_X509_ALGOR

typealias X509_VAL = X509_val_st

typealias X509_SIG = X509_sig_st

typealias X509_NAME_ENTRY = X509_name_entry_st

typealias sk_X509_NAME_ENTRY_compfuncVar = CPointerVarOf<sk_X509_NAME_ENTRY_compfunc>

typealias sk_X509_NAME_ENTRY_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_NAME_ENTRY>>?, CPointer<CPointerVar<X509_NAME_ENTRY>>?) -> Int>>

typealias sk_X509_NAME_ENTRY_freefuncVar = CPointerVarOf<sk_X509_NAME_ENTRY_freefunc>

typealias sk_X509_NAME_ENTRY_freefunc = CPointer<CFunction<(CPointer<X509_NAME_ENTRY>?) -> Unit>>

typealias sk_X509_NAME_ENTRY_copyfuncVar = CPointerVarOf<sk_X509_NAME_ENTRY_copyfunc>

typealias sk_X509_NAME_ENTRY_copyfunc = CPointer<CFunction<(CPointer<X509_NAME_ENTRY>?) -> CPointer<X509_NAME_ENTRY>?>>

typealias sk_X509_NAME_compfuncVar = CPointerVarOf<sk_X509_NAME_compfunc>

typealias sk_X509_NAME_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_NAME>>?, CPointer<CPointerVar<X509_NAME>>?) -> Int>>

typealias sk_X509_NAME_freefuncVar = CPointerVarOf<sk_X509_NAME_freefunc>

typealias sk_X509_NAME_freefunc = CPointer<CFunction<(CPointer<X509_NAME>?) -> Unit>>

typealias sk_X509_NAME_copyfuncVar = CPointerVarOf<sk_X509_NAME_copyfunc>

typealias sk_X509_NAME_copyfunc = CPointer<CFunction<(CPointer<X509_NAME>?) -> CPointer<X509_NAME>?>>

typealias X509_EXTENSION = X509_extension_st

typealias X509_EXTENSIONS = stack_st_X509_EXTENSION

typealias sk_X509_EXTENSION_compfuncVar = CPointerVarOf<sk_X509_EXTENSION_compfunc>

typealias sk_X509_EXTENSION_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_EXTENSION>>?, CPointer<CPointerVar<X509_EXTENSION>>?) -> Int>>

typealias sk_X509_EXTENSION_freefuncVar = CPointerVarOf<sk_X509_EXTENSION_freefunc>

typealias sk_X509_EXTENSION_freefunc = CPointer<CFunction<(CPointer<X509_EXTENSION>?) -> Unit>>

typealias sk_X509_EXTENSION_copyfuncVar = CPointerVarOf<sk_X509_EXTENSION_copyfunc>

typealias sk_X509_EXTENSION_copyfunc = CPointer<CFunction<(CPointer<X509_EXTENSION>?) -> CPointer<X509_EXTENSION>?>>

typealias X509_ATTRIBUTE = x509_attributes_st

typealias sk_X509_ATTRIBUTE_compfuncVar = CPointerVarOf<sk_X509_ATTRIBUTE_compfunc>

typealias sk_X509_ATTRIBUTE_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_ATTRIBUTE>>?, CPointer<CPointerVar<X509_ATTRIBUTE>>?) -> Int>>

typealias sk_X509_ATTRIBUTE_freefuncVar = CPointerVarOf<sk_X509_ATTRIBUTE_freefunc>

typealias sk_X509_ATTRIBUTE_freefunc = CPointer<CFunction<(CPointer<X509_ATTRIBUTE>?) -> Unit>>

typealias sk_X509_ATTRIBUTE_copyfuncVar = CPointerVarOf<sk_X509_ATTRIBUTE_copyfunc>

typealias sk_X509_ATTRIBUTE_copyfunc = CPointer<CFunction<(CPointer<X509_ATTRIBUTE>?) -> CPointer<X509_ATTRIBUTE>?>>

typealias X509_REQ_INFO = X509_req_info_st

typealias X509_REQ = X509_req_st

typealias X509_CERT_AUX = x509_cert_aux_st

typealias X509_CINF = x509_cinf_st

typealias sk_X509_compfuncVar = CPointerVarOf<sk_X509_compfunc>

typealias sk_X509_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509>>?, CPointer<CPointerVar<X509>>?) -> Int>>

typealias sk_X509_freefuncVar = CPointerVarOf<sk_X509_freefunc>

typealias sk_X509_freefunc = CPointer<CFunction<(CPointer<X509>?) -> Unit>>

typealias sk_X509_copyfuncVar = CPointerVarOf<sk_X509_copyfunc>

typealias sk_X509_copyfunc = CPointer<CFunction<(CPointer<X509>?) -> CPointer<X509>?>>

typealias X509_TRUST = x509_trust_st

typealias sk_X509_TRUST_compfuncVar = CPointerVarOf<sk_X509_TRUST_compfunc>

typealias sk_X509_TRUST_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_TRUST>>?, CPointer<CPointerVar<X509_TRUST>>?) -> Int>>

typealias sk_X509_TRUST_freefuncVar = CPointerVarOf<sk_X509_TRUST_freefunc>

typealias sk_X509_TRUST_freefunc = CPointer<CFunction<(CPointer<X509_TRUST>?) -> Unit>>

typealias sk_X509_TRUST_copyfuncVar = CPointerVarOf<sk_X509_TRUST_copyfunc>

typealias sk_X509_TRUST_copyfunc = CPointer<CFunction<(CPointer<X509_TRUST>?) -> CPointer<X509_TRUST>?>>

typealias sk_X509_REVOKED_compfuncVar = CPointerVarOf<sk_X509_REVOKED_compfunc>

typealias sk_X509_REVOKED_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_REVOKED>>?, CPointer<CPointerVar<X509_REVOKED>>?) -> Int>>

typealias sk_X509_REVOKED_freefuncVar = CPointerVarOf<sk_X509_REVOKED_freefunc>

typealias sk_X509_REVOKED_freefunc = CPointer<CFunction<(CPointer<X509_REVOKED>?) -> Unit>>

typealias sk_X509_REVOKED_copyfuncVar = CPointerVarOf<sk_X509_REVOKED_copyfunc>

typealias sk_X509_REVOKED_copyfunc = CPointer<CFunction<(CPointer<X509_REVOKED>?) -> CPointer<X509_REVOKED>?>>

typealias X509_CRL_INFO = X509_crl_info_st

typealias sk_X509_CRL_compfuncVar = CPointerVarOf<sk_X509_CRL_compfunc>

typealias sk_X509_CRL_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_CRL>>?, CPointer<CPointerVar<X509_CRL>>?) -> Int>>

typealias sk_X509_CRL_freefuncVar = CPointerVarOf<sk_X509_CRL_freefunc>

typealias sk_X509_CRL_freefunc = CPointer<CFunction<(CPointer<X509_CRL>?) -> Unit>>

typealias sk_X509_CRL_copyfuncVar = CPointerVarOf<sk_X509_CRL_copyfunc>

typealias sk_X509_CRL_copyfunc = CPointer<CFunction<(CPointer<X509_CRL>?) -> CPointer<X509_CRL>?>>

typealias X509_PKEY = private_key_st

typealias X509_INFO = X509_info_st

typealias sk_X509_INFO_compfuncVar = CPointerVarOf<sk_X509_INFO_compfunc>

typealias sk_X509_INFO_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_INFO>>?, CPointer<CPointerVar<X509_INFO>>?) -> Int>>

typealias sk_X509_INFO_freefuncVar = CPointerVarOf<sk_X509_INFO_freefunc>

typealias sk_X509_INFO_freefunc = CPointer<CFunction<(CPointer<X509_INFO>?) -> Unit>>

typealias sk_X509_INFO_copyfuncVar = CPointerVarOf<sk_X509_INFO_copyfunc>

typealias sk_X509_INFO_copyfunc = CPointer<CFunction<(CPointer<X509_INFO>?) -> CPointer<X509_INFO>?>>

typealias NETSCAPE_SPKAC = Netscape_spkac_st

typealias NETSCAPE_SPKI = Netscape_spki_st

typealias NETSCAPE_CERT_SEQUENCE = Netscape_certificate_sequence

typealias PBEPARAM = PBEPARAM_st

typealias PBE2PARAM = PBE2PARAM_st

typealias PBKDF2PARAM = PBKDF2PARAM_st

typealias SCRYPT_PARAMS = SCRYPT_PARAMS_st

typealias OPENSSL_LH_NODE = lhash_node_st

typealias OPENSSL_LH_COMPFUNCVar = CPointerVarOf<OPENSSL_LH_COMPFUNC>

typealias OPENSSL_LH_COMPFUNC = CPointer<CFunction<(COpaquePointer?, COpaquePointer?) -> Int>>

typealias OPENSSL_LH_HASHFUNCVar = CPointerVarOf<OPENSSL_LH_HASHFUNC>

typealias OPENSSL_LH_HASHFUNC = CPointer<CFunction<(COpaquePointer?) -> ULong>>

typealias OPENSSL_LH_DOALL_FUNCVar = CPointerVarOf<OPENSSL_LH_DOALL_FUNC>

typealias OPENSSL_LH_DOALL_FUNC = CPointer<CFunction<(COpaquePointer?) -> Unit>>

typealias OPENSSL_LH_DOALL_FUNCARGVar = CPointerVarOf<OPENSSL_LH_DOALL_FUNCARG>

typealias OPENSSL_LH_DOALL_FUNCARG = CPointer<CFunction<(COpaquePointer?, COpaquePointer?) -> Unit>>

typealias OPENSSL_LHASH = lhash_st

typealias sk_X509_LOOKUP_compfuncVar = CPointerVarOf<sk_X509_LOOKUP_compfunc>

typealias sk_X509_LOOKUP_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_LOOKUP>>?, CPointer<CPointerVar<X509_LOOKUP>>?) -> Int>>

typealias sk_X509_LOOKUP_freefuncVar = CPointerVarOf<sk_X509_LOOKUP_freefunc>

typealias sk_X509_LOOKUP_freefunc = CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> Unit>>

typealias sk_X509_LOOKUP_copyfuncVar = CPointerVarOf<sk_X509_LOOKUP_copyfunc>

typealias sk_X509_LOOKUP_copyfunc = CPointer<CFunction<(CPointer<X509_LOOKUP>?) -> CPointer<X509_LOOKUP>?>>

typealias sk_X509_OBJECT_compfuncVar = CPointerVarOf<sk_X509_OBJECT_compfunc>

typealias sk_X509_OBJECT_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_OBJECT>>?, CPointer<CPointerVar<X509_OBJECT>>?) -> Int>>

typealias sk_X509_OBJECT_freefuncVar = CPointerVarOf<sk_X509_OBJECT_freefunc>

typealias sk_X509_OBJECT_freefunc = CPointer<CFunction<(CPointer<X509_OBJECT>?) -> Unit>>

typealias sk_X509_OBJECT_copyfuncVar = CPointerVarOf<sk_X509_OBJECT_copyfunc>

typealias sk_X509_OBJECT_copyfunc = CPointer<CFunction<(CPointer<X509_OBJECT>?) -> CPointer<X509_OBJECT>?>>

typealias sk_X509_VERIFY_PARAM_compfuncVar = CPointerVarOf<sk_X509_VERIFY_PARAM_compfunc>

typealias sk_X509_VERIFY_PARAM_compfunc = CPointer<CFunction<(CPointer<CPointerVar<X509_VERIFY_PARAM>>?, CPointer<CPointerVar<X509_VERIFY_PARAM>>?) -> Int>>

typealias sk_X509_VERIFY_PARAM_freefuncVar = CPointerVarOf<sk_X509_VERIFY_PARAM_freefunc>

typealias sk_X509_VERIFY_PARAM_freefunc = CPointer<CFunction<(CPointer<X509_VERIFY_PARAM>?) -> Unit>>

typealias sk_X509_VERIFY_PARAM_copyfuncVar = CPointerVarOf<sk_X509_VERIFY_PARAM_copyfunc>

typealias sk_X509_VERIFY_PARAM_copyfunc = CPointer<CFunction<(CPointer<X509_VERIFY_PARAM>?) -> CPointer<X509_VERIFY_PARAM>?>>

typealias X509_STORE_CTX_verify_cbVar = CPointerVarOf<X509_STORE_CTX_verify_cb>

typealias X509_STORE_CTX_verify_cb = CPointer<CFunction<(Int, CPointer<X509_STORE_CTX>?) -> Int>>

typealias X509_STORE_CTX_verify_fnVar = CPointerVarOf<X509_STORE_CTX_verify_fn>

typealias X509_STORE_CTX_verify_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?) -> Int>>

typealias X509_STORE_CTX_get_issuer_fnVar = CPointerVarOf<X509_STORE_CTX_get_issuer_fn>

typealias X509_STORE_CTX_get_issuer_fn = CPointer<CFunction<(CPointer<CPointerVar<X509>>?, CPointer<X509_STORE_CTX>?, CPointer<X509>?) -> Int>>

typealias X509_STORE_CTX_check_issued_fnVar = CPointerVarOf<X509_STORE_CTX_check_issued_fn>

typealias X509_STORE_CTX_check_issued_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509>?, CPointer<X509>?) -> Int>>

typealias X509_STORE_CTX_check_revocation_fnVar = CPointerVarOf<X509_STORE_CTX_check_revocation_fn>

typealias X509_STORE_CTX_check_revocation_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?) -> Int>>

typealias X509_STORE_CTX_get_crl_fnVar = CPointerVarOf<X509_STORE_CTX_get_crl_fn>

typealias X509_STORE_CTX_get_crl_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<CPointerVar<X509_CRL>>?, CPointer<X509>?) -> Int>>

typealias X509_STORE_CTX_check_crl_fnVar = CPointerVarOf<X509_STORE_CTX_check_crl_fn>

typealias X509_STORE_CTX_check_crl_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_CRL>?) -> Int>>

typealias X509_STORE_CTX_cert_crl_fnVar = CPointerVarOf<X509_STORE_CTX_cert_crl_fn>

typealias X509_STORE_CTX_cert_crl_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_CRL>?, CPointer<X509>?) -> Int>>

typealias X509_STORE_CTX_check_policy_fnVar = CPointerVarOf<X509_STORE_CTX_check_policy_fn>

typealias X509_STORE_CTX_check_policy_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?) -> Int>>

typealias X509_STORE_CTX_lookup_certs_fnVar = CPointerVarOf<X509_STORE_CTX_lookup_certs_fn>

typealias X509_STORE_CTX_lookup_certs_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509>?>>

typealias X509_STORE_CTX_lookup_crls_fnVar = CPointerVarOf<X509_STORE_CTX_lookup_crls_fn>

typealias X509_STORE_CTX_lookup_crls_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?, CPointer<X509_NAME>?) -> CPointer<stack_st_X509_CRL>?>>

typealias X509_STORE_CTX_cleanup_fnVar = CPointerVarOf<X509_STORE_CTX_cleanup_fn>

typealias X509_STORE_CTX_cleanup_fn = CPointer<CFunction<(CPointer<X509_STORE_CTX>?) -> Int>>

typealias X509_LOOKUP_ctrl_fnVar = CPointerVarOf<X509_LOOKUP_ctrl_fn>

typealias X509_LOOKUP_ctrl_fn = CPointer<CFunction<(CPointer<X509_LOOKUP>?, Int, CPointer<ByteVar>?, Long, CPointer<CPointerVar<ByteVar>>?) -> Int>>

typealias X509_LOOKUP_get_by_subject_fnVar = CPointerVarOf<X509_LOOKUP_get_by_subject_fn>

typealias X509_LOOKUP_get_by_subject_fn = CPointer<CFunction<(CPointer<X509_LOOKUP>?, X509_LOOKUP_TYPE, CPointer<X509_NAME>?, CPointer<X509_OBJECT>?) -> Int>>

typealias X509_LOOKUP_get_by_issuer_serial_fnVar = CPointerVarOf<X509_LOOKUP_get_by_issuer_serial_fn>

typealias X509_LOOKUP_get_by_issuer_serial_fn = CPointer<CFunction<(CPointer<X509_LOOKUP>?, X509_LOOKUP_TYPE, CPointer<X509_NAME>?, CPointer<ASN1_INTEGER>?, CPointer<X509_OBJECT>?) -> Int>>

typealias X509_LOOKUP_get_by_fingerprint_fnVar = CPointerVarOf<X509_LOOKUP_get_by_fingerprint_fn>

typealias X509_LOOKUP_get_by_fingerprint_fn = CPointer<CFunction<(CPointer<X509_LOOKUP>?, X509_LOOKUP_TYPE, CPointer<UByteVar>?, Int, CPointer<X509_OBJECT>?) -> Int>>

typealias X509_LOOKUP_get_by_alias_fnVar = CPointerVarOf<X509_LOOKUP_get_by_alias_fn>

typealias X509_LOOKUP_get_by_alias_fn = CPointer<CFunction<(CPointer<X509_LOOKUP>?, X509_LOOKUP_TYPE, CPointer<ByteVar>?, Int, CPointer<X509_OBJECT>?) -> Int>>

typealias PKCS7_ISSUER_AND_SERIAL = pkcs7_issuer_and_serial_st

typealias PKCS7_SIGNER_INFO = pkcs7_signer_info_st

typealias sk_PKCS7_SIGNER_INFO_compfuncVar = CPointerVarOf<sk_PKCS7_SIGNER_INFO_compfunc>

typealias sk_PKCS7_SIGNER_INFO_compfunc = CPointer<CFunction<(CPointer<CPointerVar<PKCS7_SIGNER_INFO>>?, CPointer<CPointerVar<PKCS7_SIGNER_INFO>>?) -> Int>>

typealias sk_PKCS7_SIGNER_INFO_freefuncVar = CPointerVarOf<sk_PKCS7_SIGNER_INFO_freefunc>

typealias sk_PKCS7_SIGNER_INFO_freefunc = CPointer<CFunction<(CPointer<PKCS7_SIGNER_INFO>?) -> Unit>>

typealias sk_PKCS7_SIGNER_INFO_copyfuncVar = CPointerVarOf<sk_PKCS7_SIGNER_INFO_copyfunc>

typealias sk_PKCS7_SIGNER_INFO_copyfunc = CPointer<CFunction<(CPointer<PKCS7_SIGNER_INFO>?) -> CPointer<PKCS7_SIGNER_INFO>?>>

typealias PKCS7_RECIP_INFO = pkcs7_recip_info_st

typealias sk_PKCS7_RECIP_INFO_compfuncVar = CPointerVarOf<sk_PKCS7_RECIP_INFO_compfunc>

typealias sk_PKCS7_RECIP_INFO_compfunc = CPointer<CFunction<(CPointer<CPointerVar<PKCS7_RECIP_INFO>>?, CPointer<CPointerVar<PKCS7_RECIP_INFO>>?) -> Int>>

typealias sk_PKCS7_RECIP_INFO_freefuncVar = CPointerVarOf<sk_PKCS7_RECIP_INFO_freefunc>

typealias sk_PKCS7_RECIP_INFO_freefunc = CPointer<CFunction<(CPointer<PKCS7_RECIP_INFO>?) -> Unit>>

typealias sk_PKCS7_RECIP_INFO_copyfuncVar = CPointerVarOf<sk_PKCS7_RECIP_INFO_copyfunc>

typealias sk_PKCS7_RECIP_INFO_copyfunc = CPointer<CFunction<(CPointer<PKCS7_RECIP_INFO>?) -> CPointer<PKCS7_RECIP_INFO>?>>

typealias PKCS7_SIGNED = pkcs7_signed_st

typealias PKCS7_ENC_CONTENT = pkcs7_enc_content_st

typealias PKCS7_ENVELOPE = pkcs7_enveloped_st

typealias PKCS7_SIGN_ENVELOPE = pkcs7_signedandenveloped_st

typealias PKCS7_DIGEST = pkcs7_digest_st

typealias PKCS7_ENCRYPT = pkcs7_encrypted_st

typealias PKCS7 = pkcs7_st

typealias sk_PKCS7_compfuncVar = CPointerVarOf<sk_PKCS7_compfunc>

typealias sk_PKCS7_compfunc = CPointer<CFunction<(CPointer<CPointerVar<PKCS7>>?, CPointer<CPointerVar<PKCS7>>?) -> Int>>

typealias sk_PKCS7_freefuncVar = CPointerVarOf<sk_PKCS7_freefunc>

typealias sk_PKCS7_freefunc = CPointer<CFunction<(CPointer<PKCS7>?) -> Unit>>

typealias sk_PKCS7_copyfuncVar = CPointerVarOf<sk_PKCS7_copyfunc>

typealias sk_PKCS7_copyfunc = CPointer<CFunction<(CPointer<PKCS7>?) -> CPointer<PKCS7>?>>

typealias pem_password_cb = CFunction<(CPointer<ByteVar>?, Int, Int, COpaquePointer?) -> Int>

typealias ASYNC_JOB = async_job_st

typealias ASYNC_WAIT_CTX = async_wait_ctx_st

typealias sk_SCT_compfuncVar = CPointerVarOf<sk_SCT_compfunc>

typealias sk_SCT_compfunc = CPointer<CFunction<(CPointer<CPointerVar<SCT>>?, CPointer<CPointerVar<SCT>>?) -> Int>>

typealias sk_SCT_freefuncVar = CPointerVarOf<sk_SCT_freefunc>

typealias sk_SCT_freefunc = CPointer<CFunction<(CPointer<SCT>?) -> Unit>>

typealias sk_SCT_copyfuncVar = CPointerVarOf<sk_SCT_copyfunc>

typealias sk_SCT_copyfunc = CPointer<CFunction<(CPointer<SCT>?) -> CPointer<SCT>?>>

typealias sk_CTLOG_compfuncVar = CPointerVarOf<sk_CTLOG_compfunc>

typealias sk_CTLOG_compfunc = CPointer<CFunction<(CPointer<CPointerVar<CTLOG>>?, CPointer<CPointerVar<CTLOG>>?) -> Int>>

typealias sk_CTLOG_freefuncVar = CPointerVarOf<sk_CTLOG_freefunc>

typealias sk_CTLOG_freefunc = CPointer<CFunction<(CPointer<CTLOG>?) -> Unit>>

typealias sk_CTLOG_copyfuncVar = CPointerVarOf<sk_CTLOG_copyfunc>

typealias sk_CTLOG_copyfunc = CPointer<CFunction<(CPointer<CTLOG>?) -> CPointer<CTLOG>?>>

typealias ssl_crock_stVar = CPointerVarOf<ssl_crock_st>

typealias ssl_crock_st = CPointer<ssl_st>

typealias TLS_SESSION_TICKET_EXT = tls_session_ticket_ext_st

typealias SSL_METHOD = ssl_method_st

typealias SSL_CIPHER = ssl_cipher_st

typealias SSL_SESSION = ssl_session_st

typealias TLS_SIGALGS = tls_sigalgs_st

typealias SSL_CONF_CTX = ssl_conf_ctx_st

typealias SSL_COMP = ssl_comp_st

typealias SRTP_PROTECTION_PROFILE = srtp_protection_profile_st

typealias sk_SRTP_PROTECTION_PROFILE_compfuncVar = CPointerVarOf<sk_SRTP_PROTECTION_PROFILE_compfunc>

typealias sk_SRTP_PROTECTION_PROFILE_compfunc = CPointer<CFunction<(CPointer<CPointerVar<SRTP_PROTECTION_PROFILE>>?, CPointer<CPointerVar<SRTP_PROTECTION_PROFILE>>?) -> Int>>

typealias sk_SRTP_PROTECTION_PROFILE_freefuncVar = CPointerVarOf<sk_SRTP_PROTECTION_PROFILE_freefunc>

typealias sk_SRTP_PROTECTION_PROFILE_freefunc = CPointer<CFunction<(CPointer<SRTP_PROTECTION_PROFILE>?) -> Unit>>

typealias sk_SRTP_PROTECTION_PROFILE_copyfuncVar = CPointerVarOf<sk_SRTP_PROTECTION_PROFILE_copyfunc>

typealias sk_SRTP_PROTECTION_PROFILE_copyfunc = CPointer<CFunction<(CPointer<SRTP_PROTECTION_PROFILE>?) -> CPointer<SRTP_PROTECTION_PROFILE>?>>

typealias tls_session_ticket_ext_cb_fnVar = CPointerVarOf<tls_session_ticket_ext_cb_fn>

typealias tls_session_ticket_ext_cb_fn = CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, Int, COpaquePointer?) -> Int>>

typealias tls_session_secret_cb_fnVar = CPointerVarOf<tls_session_secret_cb_fn>

typealias tls_session_secret_cb_fn = CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?, CPointer<IntVar>?, CPointer<stack_st_SSL_CIPHER>?, CPointer<CPointerVar<SSL_CIPHER>>?, COpaquePointer?) -> Int>>

typealias custom_ext_add_cbVar = CPointerVarOf<custom_ext_add_cb>

typealias custom_ext_add_cb = CPointer<CFunction<(CPointer<SSL>?, UInt, CPointer<CPointerVar<UByteVar>>?, CPointer<size_tVar>?, CPointer<IntVar>?, COpaquePointer?) -> Int>>

typealias custom_ext_free_cbVar = CPointerVarOf<custom_ext_free_cb>

typealias custom_ext_free_cb = CPointer<CFunction<(CPointer<SSL>?, UInt, CPointer<UByteVar>?, COpaquePointer?) -> Unit>>

typealias custom_ext_parse_cbVar = CPointerVarOf<custom_ext_parse_cb>

typealias custom_ext_parse_cb = CPointer<CFunction<(CPointer<SSL>?, UInt, CPointer<UByteVar>?, size_t, CPointer<IntVar>?, COpaquePointer?) -> Int>>

typealias SSL_custom_ext_add_cb_exVar = CPointerVarOf<SSL_custom_ext_add_cb_ex>

typealias SSL_custom_ext_add_cb_ex = CPointer<CFunction<(CPointer<SSL>?, UInt, UInt, CPointer<CPointerVar<UByteVar>>?, CPointer<size_tVar>?, CPointer<X509>?, size_t, CPointer<IntVar>?, COpaquePointer?) -> Int>>

typealias SSL_custom_ext_free_cb_exVar = CPointerVarOf<SSL_custom_ext_free_cb_ex>

typealias SSL_custom_ext_free_cb_ex = CPointer<CFunction<(CPointer<SSL>?, UInt, UInt, CPointer<UByteVar>?, COpaquePointer?) -> Unit>>

typealias SSL_custom_ext_parse_cb_exVar = CPointerVarOf<SSL_custom_ext_parse_cb_ex>

typealias SSL_custom_ext_parse_cb_ex = CPointer<CFunction<(CPointer<SSL>?, UInt, UInt, CPointer<UByteVar>?, size_t, CPointer<X509>?, size_t, CPointer<IntVar>?, COpaquePointer?) -> Int>>

typealias SSL_verify_cbVar = CPointerVarOf<SSL_verify_cb>

typealias SSL_verify_cb = CPointer<CFunction<(Int, CPointer<X509_STORE_CTX>?) -> Int>>

typealias GEN_SESSION_CBVar = CPointerVarOf<GEN_SESSION_CB>

typealias GEN_SESSION_CB = CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, CPointer<UIntVar>?) -> Int>>

typealias SSL_CTX_npn_advertised_cb_funcVar = CPointerVarOf<SSL_CTX_npn_advertised_cb_func>

typealias SSL_CTX_npn_advertised_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<UByteVar>>?, CPointer<UIntVar>?, COpaquePointer?) -> Int>>

typealias SSL_CTX_npn_select_cb_funcVar = CPointerVarOf<SSL_CTX_npn_select_cb_func>

typealias SSL_CTX_npn_select_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<UByteVar>>?, CPointer<UByteVar>?, CPointer<UByteVar>?, UInt, COpaquePointer?) -> Int>>

typealias SSL_CTX_alpn_select_cb_funcVar = CPointerVarOf<SSL_CTX_alpn_select_cb_func>

typealias SSL_CTX_alpn_select_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<CPointerVar<UByteVar>>?, CPointer<UByteVar>?, CPointer<UByteVar>?, UInt, COpaquePointer?) -> Int>>

typealias SSL_psk_client_cb_funcVar = CPointerVarOf<SSL_psk_client_cb_func>

typealias SSL_psk_client_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<ByteVar>?, CPointer<ByteVar>?, UInt, CPointer<UByteVar>?, UInt) -> UInt>>

typealias SSL_psk_server_cb_funcVar = CPointerVarOf<SSL_psk_server_cb_func>

typealias SSL_psk_server_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<ByteVar>?, CPointer<UByteVar>?, UInt) -> UInt>>

typealias SSL_psk_find_session_cb_funcVar = CPointerVarOf<SSL_psk_find_session_cb_func>

typealias SSL_psk_find_session_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<UByteVar>?, size_t, CPointer<CPointerVar<SSL_SESSION>>?) -> Int>>

typealias SSL_psk_use_session_cb_funcVar = CPointerVarOf<SSL_psk_use_session_cb_func>

typealias SSL_psk_use_session_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<EVP_MD>?, CPointer<CPointerVar<UByteVar>>?, CPointer<size_tVar>?, CPointer<CPointerVar<SSL_SESSION>>?) -> Int>>

typealias SSL_CTX_keylog_cb_funcVar = CPointerVarOf<SSL_CTX_keylog_cb_func>

typealias SSL_CTX_keylog_cb_func = CPointer<CFunction<(CPointer<SSL>?, CPointer<ByteVar>?) -> Unit>>

typealias sk_SSL_CIPHER_compfuncVar = CPointerVarOf<sk_SSL_CIPHER_compfunc>

typealias sk_SSL_CIPHER_compfunc = CPointer<CFunction<(CPointer<CPointerVar<SSL_CIPHER>>?, CPointer<CPointerVar<SSL_CIPHER>>?) -> Int>>

typealias sk_SSL_CIPHER_freefuncVar = CPointerVarOf<sk_SSL_CIPHER_freefunc>

typealias sk_SSL_CIPHER_freefunc = CPointer<CFunction<(CPointer<SSL_CIPHER>?) -> Unit>>

typealias sk_SSL_CIPHER_copyfuncVar = CPointerVarOf<sk_SSL_CIPHER_copyfunc>

typealias sk_SSL_CIPHER_copyfunc = CPointer<CFunction<(CPointer<SSL_CIPHER>?) -> CPointer<SSL_CIPHER>?>>

typealias sk_SSL_COMP_compfuncVar = CPointerVarOf<sk_SSL_COMP_compfunc>

typealias sk_SSL_COMP_compfunc = CPointer<CFunction<(CPointer<CPointerVar<SSL_COMP>>?, CPointer<CPointerVar<SSL_COMP>>?) -> Int>>

typealias sk_SSL_COMP_freefuncVar = CPointerVarOf<sk_SSL_COMP_freefunc>

typealias sk_SSL_COMP_freefunc = CPointer<CFunction<(CPointer<SSL_COMP>?) -> Unit>>

typealias sk_SSL_COMP_copyfuncVar = CPointerVarOf<sk_SSL_COMP_copyfunc>

typealias sk_SSL_COMP_copyfunc = CPointer<CFunction<(CPointer<SSL_COMP>?) -> CPointer<SSL_COMP>?>>

typealias SSL_client_hello_cb_fnVar = CPointerVarOf<SSL_client_hello_cb_fn>

typealias SSL_client_hello_cb_fn = CPointer<CFunction<(CPointer<SSL>?, CPointer<IntVar>?, COpaquePointer?) -> Int>>

typealias ssl_ct_validation_cbVar = CPointerVarOf<ssl_ct_validation_cb>

typealias ssl_ct_validation_cb = CPointer<CFunction<(CPointer<CT_POLICY_EVAL_CTX>?, CPointer<stack_st_SCT>?, COpaquePointer?) -> Int>>

typealias SSL_TICKET_STATUSVar = IntVarOf<SSL_TICKET_STATUS>

typealias SSL_TICKET_STATUS = Int

typealias SSL_TICKET_RETURNVar = IntVarOf<SSL_TICKET_RETURN>

typealias SSL_TICKET_RETURN = Int

typealias SSL_CTX_generate_session_ticket_fnVar = CPointerVarOf<SSL_CTX_generate_session_ticket_fn>

typealias SSL_CTX_generate_session_ticket_fn = CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?) -> Int>>

typealias SSL_CTX_decrypt_session_ticket_fnVar = CPointerVarOf<SSL_CTX_decrypt_session_ticket_fn>

typealias SSL_CTX_decrypt_session_ticket_fn = CPointer<CFunction<(CPointer<SSL>?, CPointer<SSL_SESSION>?, CPointer<UByteVar>?, size_t, SSL_TICKET_STATUS, COpaquePointer?) -> SSL_TICKET_RETURN>>

typealias DTLS_timer_cbVar = CPointerVarOf<DTLS_timer_cb>

typealias DTLS_timer_cb = CPointer<CFunction<(CPointer<SSL>?, UInt) -> UInt>>

typealias SSL_allow_early_data_cb_fnVar = CPointerVarOf<SSL_allow_early_data_cb_fn>

typealias SSL_allow_early_data_cb_fn = CPointer<CFunction<(CPointer<SSL>?, COpaquePointer?) -> Int>>

typealias ERR_STATE = err_state_st

typealias ERR_STRING_DATA = ERR_string_data_st

typealias PKCS12_MAC_DATA = PKCS12_MAC_DATA_st

typealias PKCS12 = PKCS12_st

typealias PKCS12_SAFEBAG = PKCS12_SAFEBAG_st

typealias sk_PKCS12_SAFEBAG_compfuncVar = CPointerVarOf<sk_PKCS12_SAFEBAG_compfunc>

typealias sk_PKCS12_SAFEBAG_compfunc = CPointer<CFunction<(CPointer<CPointerVar<PKCS12_SAFEBAG>>?, CPointer<CPointerVar<PKCS12_SAFEBAG>>?) -> Int>>

typealias sk_PKCS12_SAFEBAG_freefuncVar = CPointerVarOf<sk_PKCS12_SAFEBAG_freefunc>

typealias sk_PKCS12_SAFEBAG_freefunc = CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> Unit>>

typealias sk_PKCS12_SAFEBAG_copyfuncVar = CPointerVarOf<sk_PKCS12_SAFEBAG_copyfunc>

typealias sk_PKCS12_SAFEBAG_copyfunc = CPointer<CFunction<(CPointer<PKCS12_SAFEBAG>?) -> CPointer<PKCS12_SAFEBAG>?>>

typealias PKCS12_BAGS = pkcs12_bag_st


val POINT_CONVERSION_COMPRESSED: point_conversion_form_t get() = 2u

val POINT_CONVERSION_UNCOMPRESSED: point_conversion_form_t get() = 4u

val POINT_CONVERSION_HYBRID: point_conversion_form_t get() = 6u

typealias point_conversion_form_tVar = UIntVarOf<point_conversion_form_t>

typealias point_conversion_form_t = UInt


val X509_LU_NONE: X509_LOOKUP_TYPE get() = 0u

val X509_LU_X509: X509_LOOKUP_TYPE get() = 1u

val X509_LU_CRL: X509_LOOKUP_TYPE get() = 2u

typealias X509_LOOKUP_TYPEVar = UIntVarOf<X509_LOOKUP_TYPE>

typealias X509_LOOKUP_TYPE = UInt


val CT_LOG_ENTRY_TYPE_NOT_SET: ct_log_entry_type_t get() = -1

val CT_LOG_ENTRY_TYPE_X509: ct_log_entry_type_t get() = 0

val CT_LOG_ENTRY_TYPE_PRECERT: ct_log_entry_type_t get() = 1

typealias ct_log_entry_type_tVar = IntVarOf<ct_log_entry_type_t>

typealias ct_log_entry_type_t = Int


val SCT_VERSION_NOT_SET: sct_version_t get() = -1

val SCT_VERSION_V1: sct_version_t get() = 0

typealias sct_version_tVar = IntVarOf<sct_version_t>

typealias sct_version_t = Int

// enum (anonymous at /tmp/linuxX64/openssl-1.1.1d/include/openssl/ssl.h:2211:1):

val SSL_CT_VALIDATION_PERMISSIVE: UInt get() = 0u

val SSL_CT_VALIDATION_STRICT: UInt get() = 1u
@SymbolName("openssl_kniBridge0")
private external fun kniBridge0(): NativePtr

@SymbolName("openssl_kniBridge1")
private external fun kniBridge1(): NativePtr

@SymbolName("openssl_kniBridge2")
private external fun kniBridge2(): NativePtr

@SymbolName("openssl_kniBridge3")
private external fun kniBridge3(): NativePtr

@SymbolName("openssl_kniBridge4")
private external fun kniBridge4(): NativePtr

@SymbolName("openssl_kniBridge5")
private external fun kniBridge5(): NativePtr

@SymbolName("openssl_kniBridge6")
private external fun kniBridge6(): NativePtr

@SymbolName("openssl_kniBridge7")
private external fun kniBridge7(): NativePtr

@SymbolName("openssl_kniBridge8")
private external fun kniBridge8(): NativePtr

@SymbolName("openssl_kniBridge9")
private external fun kniBridge9(): NativePtr

@SymbolName("openssl_kniBridge10")
private external fun kniBridge10(): NativePtr

@SymbolName("openssl_kniBridge11")
private external fun kniBridge11(): NativePtr

@SymbolName("openssl_kniBridge12")
private external fun kniBridge12(): NativePtr

@SymbolName("openssl_kniBridge13")
private external fun kniBridge13(): NativePtr

@SymbolName("openssl_kniBridge14")
private external fun kniBridge14(): NativePtr

@SymbolName("openssl_kniBridge15")
private external fun kniBridge15(): NativePtr

@SymbolName("openssl_kniBridge16")
private external fun kniBridge16(): NativePtr

@SymbolName("openssl_kniBridge17")
private external fun kniBridge17(): NativePtr

@SymbolName("openssl_kniBridge18")
private external fun kniBridge18(): NativePtr

@SymbolName("openssl_kniBridge19")
private external fun kniBridge19(): NativePtr

@SymbolName("openssl_kniBridge20")
private external fun kniBridge20(): NativePtr

@SymbolName("openssl_kniBridge21")
private external fun kniBridge21(): NativePtr

@SymbolName("openssl_kniBridge22")
private external fun kniBridge22(): NativePtr

@SymbolName("openssl_kniBridge23")
private external fun kniBridge23(): NativePtr

@SymbolName("openssl_kniBridge24")
private external fun kniBridge24(): NativePtr

@SymbolName("openssl_kniBridge25")
private external fun kniBridge25(): NativePtr

@SymbolName("openssl_kniBridge26")
private external fun kniBridge26(): NativePtr

@SymbolName("openssl_kniBridge27")
private external fun kniBridge27(): NativePtr

@SymbolName("openssl_kniBridge28")
private external fun kniBridge28(): NativePtr

@SymbolName("openssl_kniBridge29")
private external fun kniBridge29(): NativePtr

@SymbolName("openssl_kniBridge30")
private external fun kniBridge30(): NativePtr

@SymbolName("openssl_kniBridge31")
private external fun kniBridge31(): NativePtr

@SymbolName("openssl_kniBridge32")
private external fun kniBridge32(): NativePtr

@SymbolName("openssl_kniBridge33")
private external fun kniBridge33(): NativePtr

@SymbolName("openssl_kniBridge34")
private external fun kniBridge34(): NativePtr

@SymbolName("openssl_kniBridge35")
private external fun kniBridge35(): NativePtr

@SymbolName("openssl_kniBridge36")
private external fun kniBridge36(): NativePtr

@SymbolName("openssl_kniBridge37")
private external fun kniBridge37(): NativePtr

@SymbolName("openssl_kniBridge38")
private external fun kniBridge38(): NativePtr

@SymbolName("openssl_kniBridge39")
private external fun kniBridge39(): NativePtr

@SymbolName("openssl_kniBridge40")
private external fun kniBridge40(): NativePtr

@SymbolName("openssl_kniBridge41")
private external fun kniBridge41(): NativePtr

@SymbolName("openssl_kniBridge42")
private external fun kniBridge42(): NativePtr

@SymbolName("openssl_kniBridge43")
private external fun kniBridge43(): NativePtr

@SymbolName("openssl_kniBridge44")
private external fun kniBridge44(): NativePtr

@SymbolName("openssl_kniBridge45")
private external fun kniBridge45(): NativePtr

@SymbolName("openssl_kniBridge46")
private external fun kniBridge46(): NativePtr

@SymbolName("openssl_kniBridge47")
private external fun kniBridge47(): NativePtr

@SymbolName("openssl_kniBridge48")
private external fun kniBridge48(): NativePtr

@SymbolName("openssl_kniBridge49")
private external fun kniBridge49(): NativePtr

@SymbolName("openssl_kniBridge50")
private external fun kniBridge50(): NativePtr

@SymbolName("openssl_kniBridge51")
private external fun kniBridge51(): NativePtr

@SymbolName("openssl_kniBridge52")
private external fun kniBridge52(): NativePtr

@SymbolName("openssl_kniBridge53")
private external fun kniBridge53(): NativePtr

@SymbolName("openssl_kniBridge54")
private external fun kniBridge54(): NativePtr

@SymbolName("openssl_kniBridge55")
private external fun kniBridge55(): NativePtr

@SymbolName("openssl_kniBridge56")
private external fun kniBridge56(): NativePtr

@SymbolName("openssl_kniBridge57")
private external fun kniBridge57(): NativePtr

@SymbolName("openssl_kniBridge58")
private external fun kniBridge58(): NativePtr

@SymbolName("openssl_kniBridge59")
private external fun kniBridge59(): NativePtr

@SymbolName("openssl_kniBridge60")
private external fun kniBridge60(): NativePtr

@SymbolName("openssl_kniBridge61")
private external fun kniBridge61(): NativePtr

@SymbolName("openssl_kniBridge62")
private external fun kniBridge62(): NativePtr

@SymbolName("openssl_kniBridge63")
private external fun kniBridge63(): NativePtr

@SymbolName("openssl_kniBridge64")
private external fun kniBridge64(): NativePtr

@SymbolName("openssl_kniBridge65")
private external fun kniBridge65(): NativePtr

@SymbolName("openssl_kniBridge66")
private external fun kniBridge66(): NativePtr

@SymbolName("openssl_kniBridge67")
private external fun kniBridge67(): NativePtr

@SymbolName("openssl_kniBridge68")
private external fun kniBridge68(): NativePtr

@SymbolName("openssl_kniBridge69")
private external fun kniBridge69(): NativePtr

@SymbolName("openssl_kniBridge70")
private external fun kniBridge70(): NativePtr

@SymbolName("openssl_kniBridge71")
private external fun kniBridge71(): NativePtr

@SymbolName("openssl_kniBridge72")
private external fun kniBridge72(): NativePtr

@SymbolName("openssl_kniBridge73")
private external fun kniBridge73(): NativePtr

@SymbolName("openssl_kniBridge74")
private external fun kniBridge74(): NativePtr

@SymbolName("openssl_kniBridge75")
private external fun kniBridge75(): NativePtr

@SymbolName("openssl_kniBridge76")
private external fun kniBridge76(): NativePtr

@SymbolName("openssl_kniBridge77")
private external fun kniBridge77(): NativePtr

@SymbolName("openssl_kniBridge78")
private external fun kniBridge78(): NativePtr

@SymbolName("openssl_kniBridge79")
private external fun kniBridge79(): NativePtr

@SymbolName("openssl_kniBridge80")
private external fun kniBridge80(): NativePtr

@SymbolName("openssl_kniBridge81")
private external fun kniBridge81(): NativePtr

@SymbolName("openssl_kniBridge82")
private external fun kniBridge82(): NativePtr

@SymbolName("openssl_kniBridge83")
private external fun kniBridge83(): NativePtr

@SymbolName("openssl_kniBridge84")
private external fun kniBridge84(): NativePtr

@SymbolName("openssl_kniBridge85")
private external fun kniBridge85(): NativePtr

@SymbolName("openssl_kniBridge86")
private external fun kniBridge86(): NativePtr

@SymbolName("openssl_kniBridge87")
private external fun kniBridge87(): NativePtr

@SymbolName("openssl_kniBridge88")
private external fun kniBridge88(): NativePtr

@SymbolName("openssl_kniBridge89")
private external fun kniBridge89(): NativePtr

@SymbolName("openssl_kniBridge90")
private external fun kniBridge90(): NativePtr

@SymbolName("openssl_kniBridge91")
private external fun kniBridge91(): NativePtr

@SymbolName("openssl_kniBridge92")
private external fun kniBridge92(): NativePtr

@SymbolName("openssl_kniBridge93")
private external fun kniBridge93(): NativePtr

@SymbolName("openssl_kniBridge94")
private external fun kniBridge94(): NativePtr

@SymbolName("openssl_kniBridge95")
private external fun kniBridge95(): NativePtr

@SymbolName("openssl_kniBridge96")
private external fun kniBridge96(): NativePtr

@SymbolName("openssl_kniBridge97")
private external fun kniBridge97(): NativePtr

@SymbolName("openssl_kniBridge98")
private external fun kniBridge98(): NativePtr

@SymbolName("openssl_kniBridge99")
private external fun kniBridge99(): NativePtr

@SymbolName("openssl_kniBridge100")
private external fun kniBridge100(): NativePtr

@SymbolName("openssl_kniBridge101")
private external fun kniBridge101(): NativePtr

@SymbolName("openssl_kniBridge102")
private external fun kniBridge102(): NativePtr

@SymbolName("openssl_kniBridge103")
private external fun kniBridge103(): NativePtr

@SymbolName("openssl_kniBridge104")
private external fun kniBridge104(): NativePtr

@SymbolName("openssl_kniBridge105")
private external fun kniBridge105(): NativePtr

@SymbolName("openssl_kniBridge106")
private external fun kniBridge106(): NativePtr

@SymbolName("openssl_kniBridge107")
private external fun kniBridge107(): NativePtr

@SymbolName("openssl_kniBridge108")
private external fun kniBridge108(): NativePtr

@SymbolName("openssl_kniBridge109")
private external fun kniBridge109(): NativePtr

@SymbolName("openssl_kniBridge110")
private external fun kniBridge110(): NativePtr

@SymbolName("openssl_kniBridge111")
private external fun kniBridge111(): NativePtr

@SymbolName("openssl_kniBridge112")
private external fun kniBridge112(): NativePtr

@SymbolName("openssl_kniBridge113")
private external fun kniBridge113(): NativePtr

@SymbolName("openssl_kniBridge114")
private external fun kniBridge114(): NativePtr

@SymbolName("openssl_kniBridge115")
private external fun kniBridge115(): NativePtr

@SymbolName("openssl_kniBridge116")
private external fun kniBridge116(): NativePtr

@SymbolName("openssl_kniBridge117")
private external fun kniBridge117(): NativePtr

@SymbolName("openssl_kniBridge118")
private external fun kniBridge118(): NativePtr

@SymbolName("openssl_kniBridge119")
private external fun kniBridge119(): NativePtr

@SymbolName("openssl_kniBridge120")
private external fun kniBridge120(): NativePtr

@SymbolName("openssl_kniBridge121")
private external fun kniBridge121(): NativePtr

@SymbolName("openssl_kniBridge122")
private external fun kniBridge122(): NativePtr

@SymbolName("openssl_kniBridge123")
private external fun kniBridge123(): NativePtr

@SymbolName("openssl_kniBridge124")
private external fun kniBridge124(): NativePtr

@SymbolName("openssl_kniBridge125")
private external fun kniBridge125(): NativePtr

@SymbolName("openssl_kniBridge126")
private external fun kniBridge126(): NativePtr

@SymbolName("openssl_kniBridge127")
private external fun kniBridge127(): NativePtr

@SymbolName("openssl_kniBridge128")
private external fun kniBridge128(): NativePtr

@SymbolName("openssl_kniBridge129")
private external fun kniBridge129(): NativePtr

@SymbolName("openssl_kniBridge130")
private external fun kniBridge130(): NativePtr

@SymbolName("openssl_kniBridge131")
private external fun kniBridge131(): NativePtr

@SymbolName("openssl_kniBridge132")
private external fun kniBridge132(): NativePtr

@SymbolName("openssl_kniBridge133")
private external fun kniBridge133(): NativePtr

@SymbolName("openssl_kniBridge134")
private external fun kniBridge134(): NativePtr

@SymbolName("openssl_kniBridge135")
private external fun kniBridge135(): NativePtr

@SymbolName("openssl_kniBridge136")
private external fun kniBridge136(): NativePtr

@SymbolName("openssl_kniBridge137")
private external fun kniBridge137(): NativePtr

@SymbolName("openssl_kniBridge138")
private external fun kniBridge138(): NativePtr

@SymbolName("openssl_kniBridge139")
private external fun kniBridge139(): NativePtr

@SymbolName("openssl_kniBridge140")
private external fun kniBridge140(): NativePtr

@SymbolName("openssl_kniBridge141")
private external fun kniBridge141(): NativePtr

@SymbolName("openssl_kniBridge142")
private external fun kniBridge142(): NativePtr

@SymbolName("openssl_kniBridge143")
private external fun kniBridge143(): NativePtr

@SymbolName("openssl_kniBridge144")
private external fun kniBridge144(): NativePtr

@SymbolName("openssl_kniBridge145")
private external fun kniBridge145(): NativePtr

@SymbolName("openssl_kniBridge146")
private external fun kniBridge146(): NativePtr

@SymbolName("openssl_kniBridge147")
private external fun kniBridge147(): NativePtr

@SymbolName("openssl_kniBridge148")
private external fun kniBridge148(): NativePtr

@SymbolName("openssl_kniBridge149")
private external fun kniBridge149(): NativePtr

@SymbolName("openssl_kniBridge150")
private external fun kniBridge150(): NativePtr

@SymbolName("openssl_kniBridge151")
private external fun kniBridge151(): NativePtr

@SymbolName("openssl_kniBridge152")
private external fun kniBridge152(): NativePtr

@SymbolName("openssl_kniBridge153")
private external fun kniBridge153(): NativePtr

@SymbolName("openssl_kniBridge154")
private external fun kniBridge154(): NativePtr

@SymbolName("openssl_kniBridge155")
private external fun kniBridge155(): NativePtr

@SymbolName("openssl_kniBridge156")
private external fun kniBridge156(): NativePtr

@SymbolName("openssl_kniBridge157")
private external fun kniBridge157(): NativePtr

@SymbolName("openssl_kniBridge158")
private external fun kniBridge158(): NativePtr

@SymbolName("openssl_kniBridge159")
private external fun kniBridge159(): NativePtr

@SymbolName("openssl_kniBridge160")
private external fun kniBridge160(): NativePtr

@SymbolName("openssl_kniBridge161")
private external fun kniBridge161(): NativePtr

@SymbolName("openssl_kniBridge162")
private external fun kniBridge162(): NativePtr

@SymbolName("openssl_kniBridge163")
private external fun kniBridge163(): NativePtr

@SymbolName("openssl_kniBridge164")
private external fun kniBridge164(): NativePtr

@SymbolName("openssl_kniBridge165")
private external fun kniBridge165(): NativePtr

@SymbolName("openssl_kniBridge166")
private external fun kniBridge166(): NativePtr

@SymbolName("openssl_kniBridge167")
private external fun kniBridge167(): NativePtr

@SymbolName("openssl_kniBridge168")
private external fun kniBridge168(): NativePtr

@SymbolName("openssl_kniBridge169")
private external fun kniBridge169(): NativePtr

@SymbolName("openssl_kniBridge170")
private external fun kniBridge170(): NativePtr

@SymbolName("openssl_kniBridge171")
private external fun kniBridge171(): NativePtr

@SymbolName("openssl_kniBridge172")
private external fun kniBridge172(): NativePtr

@SymbolName("openssl_kniBridge173")
private external fun kniBridge173(): NativePtr

@SymbolName("openssl_kniBridge174")
private external fun kniBridge174(): NativePtr
